{"version":3,"file":"static/js/main.40cb3728.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom-client.production.js","../node_modules/react/index.js","../node_modules/react/cjs/react.production.js","../node_modules/react-dom/client.js","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","logo.svg","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nvar REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nSymbol.for(\"react.debug_trace_mode\");\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  assign = Object.assign,\n  prefix,\n  suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$0) {\n                control = x$0;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$1) {\n              control = x$1;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return (fiber = describeNativeComponentFrame(fiber.type, !1)), fiber;\n    case 11:\n      return (\n        (fiber = describeNativeComponentFrame(fiber.type.render, !1)), fiber\n      );\n    case 1:\n      return (fiber = describeNativeComponentFrame(fiber.type, !0)), fiber;\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$2 = parentA.child; child$2; ) {\n        if (child$2 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$2 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$2 = child$2.sibling;\n      }\n      if (!didFindChild) {\n        for (child$2 = parentB.child; child$2; ) {\n          if (child$2 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$2 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$2 = child$2.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  fiber = nextRootInstance.nodeType;\n  switch (fiber) {\n    case 9:\n    case 11:\n      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)\n        ? (nextRootInstance = nextRootInstance.namespaceURI)\n          ? getOwnHostContext(nextRootInstance)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),\n        (nextRootInstance = fiber.tagName),\n        (fiber = fiber.namespaceURI))\n      )\n        (fiber = getOwnHostContext(fiber)),\n          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));\n      else\n        switch (nextRootInstance) {\n          case \"svg\":\n            nextRootInstance = 1;\n            break;\n          case \"math\":\n            nextRootInstance = 2;\n            break;\n          default:\n            nextRootInstance = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, nextRootInstance);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction onCommitRoot(root) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n    try {\n      injectedHook.onCommitFiberRoot(\n        rendererID,\n        root,\n        void 0,\n        128 === (root.current.flags & 128)\n      );\n    } catch (err) {}\n}\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 128,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194176;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes,\n    warmLanes = root.warmLanes;\n  root = 0 !== root.finishedLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : root ||\n              ((warmLanes = nonIdlePendingLanes & ~warmLanes),\n              0 !== warmLanes &&\n                (nextLanes = getHighestPriorityLanes(warmLanes)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : root ||\n            ((warmLanes = pendingLanes & ~warmLanes),\n            0 !== warmLanes &&\n              (nextLanes = getHighestPriorityLanes(warmLanes))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (warmLanes = wipLanes & -wipLanes),\n        suspendedLanes >= warmLanes ||\n          (32 === suspendedLanes && 0 !== (warmLanes & 4194176)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 64:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$7 = 31 - clz32(remainingLanes),\n      lane = 1 << index$7;\n    entanglements[index$7] = 0;\n    expirationTimes[index$7] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$7];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$7] = null, index$7 = 0;\n        index$7 < hiddenUpdatesForLane.length;\n        index$7++\n      ) {\n        var update = hiddenUpdatesForLane[index$7];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194218);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$8 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$8;\n    (lane & entangledLanes) | (root[index$8] & entangledLanes) &&\n      (root[index$8] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$10 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$10 && \"aria-\" !== prefix$10) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$283;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_418 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_418) {\n      var element$jscomp$inline_419 = document.createElement(\"div\");\n      element$jscomp$inline_419.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_418 =\n        \"function\" === typeof element$jscomp$inline_419.oninput;\n    }\n    JSCompiler_inline_result$jscomp$283 = isSupported$jscomp$inline_418;\n  } else JSCompiler_inline_result$jscomp$283 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$283 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nfunction restoreSelection(priorSelectionInformation, containerInfo) {\n  var curFocusedElem = getActiveElementDeep(containerInfo);\n  containerInfo = priorSelectionInformation.focusedElem;\n  var priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (\n    curFocusedElem !== containerInfo &&\n    containerInfo &&\n    containerInfo.ownerDocument &&\n    containsNode(containerInfo.ownerDocument.documentElement, containerInfo)\n  ) {\n    if (null !== priorSelectionRange && hasSelectionCapabilities(containerInfo))\n      if (\n        ((priorSelectionInformation = priorSelectionRange.start),\n        (curFocusedElem = priorSelectionRange.end),\n        void 0 === curFocusedElem &&\n          (curFocusedElem = priorSelectionInformation),\n        \"selectionStart\" in containerInfo)\n      )\n        (containerInfo.selectionStart = priorSelectionInformation),\n          (containerInfo.selectionEnd = Math.min(\n            curFocusedElem,\n            containerInfo.value.length\n          ));\n      else if (\n        ((curFocusedElem =\n          ((priorSelectionInformation =\n            containerInfo.ownerDocument || document) &&\n            priorSelectionInformation.defaultView) ||\n          window),\n        curFocusedElem.getSelection)\n      ) {\n        curFocusedElem = curFocusedElem.getSelection();\n        var length = containerInfo.textContent.length,\n          start = Math.min(priorSelectionRange.start, length);\n        priorSelectionRange =\n          void 0 === priorSelectionRange.end\n            ? start\n            : Math.min(priorSelectionRange.end, length);\n        !curFocusedElem.extend &&\n          start > priorSelectionRange &&\n          ((length = priorSelectionRange),\n          (priorSelectionRange = start),\n          (start = length));\n        length = getNodeForCharacterOffset(containerInfo, start);\n        var endMarker = getNodeForCharacterOffset(\n          containerInfo,\n          priorSelectionRange\n        );\n        length &&\n          endMarker &&\n          (1 !== curFocusedElem.rangeCount ||\n            curFocusedElem.anchorNode !== length.node ||\n            curFocusedElem.anchorOffset !== length.offset ||\n            curFocusedElem.focusNode !== endMarker.node ||\n            curFocusedElem.focusOffset !== endMarker.offset) &&\n          ((priorSelectionInformation =\n            priorSelectionInformation.createRange()),\n          priorSelectionInformation.setStart(length.node, length.offset),\n          curFocusedElem.removeAllRanges(),\n          start > priorSelectionRange\n            ? (curFocusedElem.addRange(priorSelectionInformation),\n              curFocusedElem.extend(endMarker.node, endMarker.offset))\n            : (priorSelectionInformation.setEnd(\n                endMarker.node,\n                endMarker.offset\n              ),\n              curFocusedElem.addRange(priorSelectionInformation)));\n      }\n    priorSelectionInformation = [];\n    for (\n      curFocusedElem = containerInfo;\n      (curFocusedElem = curFocusedElem.parentNode);\n\n    )\n      1 === curFocusedElem.nodeType &&\n        priorSelectionInformation.push({\n          element: curFocusedElem,\n          left: curFocusedElem.scrollLeft,\n          top: curFocusedElem.scrollTop\n        });\n    \"function\" === typeof containerInfo.focus && containerInfo.focus();\n    for (\n      containerInfo = 0;\n      containerInfo < priorSelectionInformation.length;\n      containerInfo++\n    )\n      (curFocusedElem = priorSelectionInformation[containerInfo]),\n        (curFocusedElem.element.scrollLeft = curFocusedElem.left),\n        (curFocusedElem.element.scrollTop = curFocusedElem.top);\n  }\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  isHidden &&\n    null !== update &&\n    3 === sourceFiber.tag &&\n    ((parent = sourceFiber.stateNode),\n    (isHidden = 31 - clz32(lane)),\n    (parent = parent.hiddenUpdates),\n    (sourceFiber = parent[isHidden]),\n    null === sourceFiber\n      ? (parent[isHidden] = [update])\n      : sourceFiber.push(update),\n    (update.lane = lane | 536870912));\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {},\n  CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 3:\n      case 27:\n        rootOrSingletonContext = !0;\n        return;\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var shouldClear = !1,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {\n    if ((JSCompiler_temp = 5 === fiber.tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && (shouldClear = !0);\n  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === fiber.tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (shouldClear = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === shouldClear) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            shouldClear--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              shouldClear++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratable(fiber.stateNode.nextSibling)\n      : null;\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      thenableState = thenable.reason;\n      if (thenableState === SuspenseException)\n        throw Error(formatProdErrorMessage(483));\n      throw thenableState;\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          thenableState = thenable.reason;\n          if (thenableState === SuspenseException)\n            throw Error(formatProdErrorMessage(483));\n          throw thenableState;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar thenableState$1 = null,\n  thenableIndexCounter$1 = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  return trackUsedThenable(thenableState$1, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 33554434), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 33554434;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 33554434);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter$1 = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState$1 = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state || \"$?\" === state.data || \"$!\" === state.data)\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber$1 = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter = 0,\n  thenableState = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter = 0;\n  thenableState = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber$1 = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);\n    thenableIndexCounter = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber$1.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter = localIdCounter = 0;\n  thenableState = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber$1.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber$1.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber$1.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nvar createFunctionComponentUpdateQueue;\ncreateFunctionComponentUpdateQueue = function () {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n};\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  thenable = trackUsedThenable(thenableState, thenable, index);\n  index = currentlyRenderingFiber$1;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber$1.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber$1.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber$1.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$54 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$54 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$54 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber$1.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber$1.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$54 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [\n    subscribe\n  ]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushEffect(\n      9,\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      { destroy: void 0 },\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 60) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber$1.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber$1.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$60) {\n      onActionError(actionQueue, node, error$60);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber$1;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  currentStateHook =\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n      ? useThenable(currentStateHook)\n      : currentStateHook;\n  var actionQueueHook = updateWorkInProgressHook(),\n    actionQueue = actionQueueHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== actionQueueHook.memoizedState &&\n    ((currentlyRenderingFiber$1.flags |= 2048),\n    pushEffect(\n      9,\n      actionStateActionEffect.bind(null, actionQueue, action),\n      { destroy: void 0 },\n      null\n    ));\n  return [currentStateHook, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushEffect(tag, create, inst, deps) {\n  tag = { tag: tag, create: create, inst: inst, deps: deps, next: null };\n  create = currentlyRenderingFiber$1.updateQueue;\n  null === create &&\n    ((create = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber$1.updateQueue = create));\n  inst = create.lastEffect;\n  null === inst\n    ? (create.lastEffect = tag.next = tag)\n    : ((deps = inst.next),\n      (inst.next = tag),\n      (tag.next = deps),\n      (create.lastEffect = tag));\n  return tag;\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    1 | hookFlags,\n    create,\n    { destroy: void 0 },\n    void 0 === deps ? null : deps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushEffect(hookFlags, create, inst, deps))\n    : ((currentlyRenderingFiber$1.flags |= fiberFlags),\n      (hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps)));\n}\nfunction mountEffect(create, deps) {\n  mountEffectImpl(8390656, 8, create, deps);\n}\nfunction updateEffect(create, deps) {\n  updateEffectImpl(2048, 8, create, deps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber$1.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber$1.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$63 = enqueueUpdate(provider, fiber, lane);\n        null !== root$63 &&\n          (scheduleUpdateOnFiber(root$63, provider, lane),\n          entangleTransitions(root$63, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber$1 ||\n    (null !== alternate && alternate === currentlyRenderingFiber$1)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194176)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  use: use,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError\n};\nContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;\nContextOnlyDispatcher.useMemoCache = throwInvalidHookError;\nContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;\nContextOnlyDispatcher.useFormState = throwInvalidHookError;\nContextOnlyDispatcher.useActionState = throwInvalidHookError;\nContextOnlyDispatcher.useOptimistic = throwInvalidHookError;\nvar HooksDispatcherOnMount = {\n  readContext: readContext,\n  use: use,\n  useCallback: function (callback, deps) {\n    mountWorkInProgressHook().memoizedState = [\n      callback,\n      void 0 === deps ? null : deps\n    ];\n    return callback;\n  },\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: function (ref, create, deps) {\n    deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n    mountEffectImpl(\n      4194308,\n      4,\n      imperativeHandleEffect.bind(null, create, ref),\n      deps\n    );\n  },\n  useLayoutEffect: function (create, deps) {\n    return mountEffectImpl(4194308, 4, create, deps);\n  },\n  useInsertionEffect: function (create, deps) {\n    mountEffectImpl(4, 2, create, deps);\n  },\n  useMemo: function (nextCreate, deps) {\n    var hook = mountWorkInProgressHook();\n    deps = void 0 === deps ? null : deps;\n    var nextValue = nextCreate();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        nextCreate();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n    hook.memoizedState = [nextValue, deps];\n    return nextValue;\n  },\n  useReducer: function (reducer, initialArg, init) {\n    var hook = mountWorkInProgressHook();\n    if (void 0 !== init) {\n      var initialState = init(initialArg);\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          init(initialArg);\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n    } else initialState = initialArg;\n    hook.memoizedState = hook.baseState = initialState;\n    reducer = {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: reducer,\n      lastRenderedState: initialState\n    };\n    hook.queue = reducer;\n    reducer = reducer.dispatch = dispatchReducerAction.bind(\n      null,\n      currentlyRenderingFiber$1,\n      reducer\n    );\n    return [hook.memoizedState, reducer];\n  },\n  useRef: function (initialValue) {\n    var hook = mountWorkInProgressHook();\n    initialValue = { current: initialValue };\n    return (hook.memoizedState = initialValue);\n  },\n  useState: function (initialState) {\n    initialState = mountStateImpl(initialState);\n    var queue = initialState.queue,\n      dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n    queue.dispatch = dispatch;\n    return [initialState.memoizedState, dispatch];\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = mountWorkInProgressHook();\n    return mountDeferredValueImpl(hook, value, initialValue);\n  },\n  useTransition: function () {\n    var stateHook = mountStateImpl(!1);\n    stateHook = startTransition.bind(\n      null,\n      currentlyRenderingFiber$1,\n      stateHook.queue,\n      !0,\n      !1\n    );\n    mountWorkInProgressHook().memoizedState = stateHook;\n    return [!1, stateHook];\n  },\n  useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n    var fiber = currentlyRenderingFiber$1,\n      hook = mountWorkInProgressHook();\n    if (isHydrating) {\n      if (void 0 === getServerSnapshot)\n        throw Error(formatProdErrorMessage(407));\n      getServerSnapshot = getServerSnapshot();\n    } else {\n      getServerSnapshot = getSnapshot();\n      if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n      0 !== (workInProgressRootRenderLanes & 60) ||\n        pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n    }\n    hook.memoizedState = getServerSnapshot;\n    var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n    hook.queue = inst;\n    mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n      subscribe\n    ]);\n    fiber.flags |= 2048;\n    pushEffect(\n      9,\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        inst,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      { destroy: void 0 },\n      null\n    );\n    return getServerSnapshot;\n  },\n  useId: function () {\n    var hook = mountWorkInProgressHook(),\n      identifierPrefix = workInProgressRoot.identifierPrefix;\n    if (isHydrating) {\n      var JSCompiler_inline_result = treeContextOverflow;\n      var idWithLeadingBit = treeContextId;\n      JSCompiler_inline_result =\n        (\n          idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n        ).toString(32) + JSCompiler_inline_result;\n      identifierPrefix =\n        \":\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n      JSCompiler_inline_result = localIdCounter++;\n      0 < JSCompiler_inline_result &&\n        (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n      identifierPrefix += \":\";\n    } else\n      (JSCompiler_inline_result = globalClientIdCounter++),\n        (identifierPrefix =\n          \":\" +\n          identifierPrefix +\n          \"r\" +\n          JSCompiler_inline_result.toString(32) +\n          \":\");\n    return (hook.memoizedState = identifierPrefix);\n  },\n  useCacheRefresh: function () {\n    return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n      null,\n      currentlyRenderingFiber$1\n    ));\n  }\n};\nHooksDispatcherOnMount.useMemoCache = useMemoCache;\nHooksDispatcherOnMount.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnMount.useFormState = mountActionState;\nHooksDispatcherOnMount.useActionState = mountActionState;\nHooksDispatcherOnMount.useOptimistic = function (passthrough) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = hook.baseState = passthrough;\n  var queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: null,\n    lastRenderedState: null\n  };\n  hook.queue = queue;\n  hook = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    !0,\n    queue\n  );\n  queue.dispatch = hook;\n  return [passthrough, hook];\n};\nvar HooksDispatcherOnUpdate = {\n  readContext: readContext,\n  use: use,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: function () {\n    return updateReducer(basicStateReducer);\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = updateWorkInProgressHook();\n    return updateDeferredValueImpl(\n      hook,\n      currentHook.memoizedState,\n      value,\n      initialValue\n    );\n  },\n  useTransition: function () {\n    var booleanOrThenable = updateReducer(basicStateReducer)[0],\n      start = updateWorkInProgressHook().memoizedState;\n    return [\n      \"boolean\" === typeof booleanOrThenable\n        ? booleanOrThenable\n        : useThenable(booleanOrThenable),\n      start\n    ];\n  },\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId\n};\nHooksDispatcherOnUpdate.useCacheRefresh = updateRefresh;\nHooksDispatcherOnUpdate.useMemoCache = useMemoCache;\nHooksDispatcherOnUpdate.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnUpdate.useFormState = updateActionState;\nHooksDispatcherOnUpdate.useActionState = updateActionState;\nHooksDispatcherOnUpdate.useOptimistic = function (passthrough, reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n};\nvar HooksDispatcherOnRerender = {\n  readContext: readContext,\n  use: use,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: function () {\n    return rerenderReducer(basicStateReducer);\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = updateWorkInProgressHook();\n    return null === currentHook\n      ? mountDeferredValueImpl(hook, value, initialValue)\n      : updateDeferredValueImpl(\n          hook,\n          currentHook.memoizedState,\n          value,\n          initialValue\n        );\n  },\n  useTransition: function () {\n    var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n      start = updateWorkInProgressHook().memoizedState;\n    return [\n      \"boolean\" === typeof booleanOrThenable\n        ? booleanOrThenable\n        : useThenable(booleanOrThenable),\n      start\n    ];\n  },\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId\n};\nHooksDispatcherOnRerender.useCacheRefresh = updateRefresh;\nHooksDispatcherOnRerender.useMemoCache = useMemoCache;\nHooksDispatcherOnRerender.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnRerender.useFormState = rerenderActionState;\nHooksDispatcherOnRerender.useActionState = rerenderActionState;\nHooksDispatcherOnRerender.useOptimistic = function (passthrough, reducer) {\n  var hook = updateWorkInProgressHook();\n  if (null !== currentHook)\n    return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n  hook.baseState = passthrough;\n  return [passthrough, hook.queue.dispatch];\n};\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  isMounted: function (component) {\n    return (component = component._reactInternals)\n      ? getNearestMountedFiber(component) === component\n      : !1;\n  },\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$67 in Component)\n      void 0 === newProps[propName$67] &&\n        (newProps[propName$67] = Component[propName$67]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$68) {\n    setTimeout(function () {\n      throw e$68;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$69) {\n    setTimeout(function () {\n      throw e$69;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & 2),\n    prevState = null !== current ? current.memoizedState : null;\n  markRef(current, workInProgress);\n  if (\"hidden\" === nextProps.mode || nextIsDetached) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (nextIsDetached = 0; null !== nextChildren; )\n          (nextIsDetached =\n            nextIsDetached | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = nextIsDetached & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 2097664);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 2097664;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = { dehydrated: null, treeContext: null, retryLane: 0 };\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          \"$!\" === nextInstance.data\n            ? (workInProgress.lanes = 16)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      \"$!\" === nextInstance.data)\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (null !== JSCompiler_temp) {\n        nextProps = renderLanes & -renderLanes;\n        if (0 !== (nextProps & 42)) nextProps = 1;\n        else\n          switch (nextProps) {\n            case 2:\n              nextProps = 1;\n              break;\n            case 8:\n              nextProps = 4;\n              break;\n            case 32:\n              nextProps = 16;\n              break;\n            case 128:\n            case 256:\n            case 512:\n            case 1024:\n            case 2048:\n            case 4096:\n            case 8192:\n            case 16384:\n            case 32768:\n            case 65536:\n            case 131072:\n            case 262144:\n            case 524288:\n            case 1048576:\n            case 2097152:\n            case 4194304:\n            case 8388608:\n            case 16777216:\n            case 33554432:\n              nextProps = 64;\n              break;\n            case 268435456:\n              nextProps = 134217728;\n              break;\n            default:\n              nextProps = 0;\n          }\n        nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps;\n        if (0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n          throw (\n            ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n            enqueueConcurrentRenderForLane(current, nextProps),\n            scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n            SelectiveHydrationException)\n          );\n      }\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 128),\n          (workInProgress.child = current.child),\n          (workInProgress = retryDehydratedSuspenseBoundary.bind(\n            null,\n            current\n          )),\n          (nextInstance._reactRetry = workInProgress),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 31457280),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  return createFiberFromOffscreen(offscreenProps, mode, 0, null);\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        var nextProps = workInProgress.pendingProps;\n        init = workInProgress.memoizedState;\n        lazyComponent = init.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        nextProps = nextState.cache;\n        pushProvider(workInProgress, CacheContext, nextProps);\n        nextProps !== init.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        nextProps = nextState.element;\n        if (init.isDehydrated)\n          if (\n            ((init = {\n              element: nextProps,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = init),\n            (workInProgress.memoizedState = init),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              nextProps,\n              renderLanes\n            );\n            break a;\n          } else if (nextProps !== lazyComponent) {\n            lazyComponent = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(lazyComponent);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              nextProps,\n              renderLanes\n            );\n            break a;\n          } else\n            for (\n              nextHydratableInstance = getNextHydratable(\n                workInProgress.stateNode.containerInfo.firstChild\n              ),\n                hydrationParentFiber = workInProgress,\n                isHydrating = !0,\n                hydrationErrors = null,\n                rootOrSingletonContext = !0,\n                renderLanes = mountChildFibers(\n                  workInProgress,\n                  null,\n                  nextProps,\n                  renderLanes\n                ),\n                workInProgress.child = renderLanes;\n              renderLanes;\n\n            )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n        else {\n          resetHydrationState();\n          if (nextProps === lazyComponent) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(current, workInProgress, nextProps, renderLanes);\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (nextHydratableInstance = getNextHydratable(\n            lazyComponent.firstChild\n          ))),\n        (lazyComponent = workInProgress.pendingProps.children),\n        null !== current || isHydrating\n          ? reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            )\n          : (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            )),\n        markRef(current, workInProgress),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      nextProps = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = nextProps.children;\n      shouldSetTextContent(init, nextProps)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (nextProps = createCache()),\n              (init.pooledCache = nextProps),\n              nextProps.refCount++,\n              null !== nextProps && (init.pooledCacheLanes |= renderLanes),\n              (init = nextProps)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (nextProps = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = nextProps.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;\n            try {\n              destroy();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      var instance = current.stateNode;\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = instance;\n          break;\n        default:\n          instanceToUse = instance;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$112) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$112);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    27 === fiber.tag ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag &&\n      6 !== fiber.tag &&\n      27 !== fiber.tag &&\n      18 !== fiber.tag;\n\n    ) {\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? 8 === parent.nodeType\n          ? parent.parentNode.insertBefore(node, before)\n          : parent.insertBefore(node, before)\n        : (8 === parent.nodeType\n            ? ((before = parent.parentNode), before.insertBefore(node, parent))\n            : ((before = parent), before.appendChild(node)),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null,\n  shouldFireAfterActiveInstanceBlur = !1;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1028) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n  resolvedPrevProps = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = !1;\n  return resolvedPrevProps;\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$111) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$111\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 64 && ((flags = finishedWork.updateQueue), null !== flags)) {\n        finishedRoot = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              finishedRoot = finishedWork.child.stateNode;\n              break;\n            case 1:\n              finishedRoot = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(flags, finishedRoot);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 26:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 27:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      break;\n    case 22:\n      prevProps =\n        null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!prevProps) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n          prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = prevProps;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      flags & 512 &&\n        (\"manual\" === finishedWork.memoizedProps.mode\n          ? safelyAttachRef(finishedWork, finishedWork.return)\n          : safelyDetachRef(finishedWork, finishedWork.return));\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber = deletedFiber.stateNode;\n      for (\n        nearestMountedAncestor = deletedFiber.attributes;\n        nearestMountedAncestor.length;\n\n      )\n        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);\n      detachDeletedInstance(deletedFiber);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParentIsContainer = hostParent;\n      var prevHostParentIsContainer$119 = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParentIsContainer;\n      hostParentIsContainer = prevHostParentIsContainer$119;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (finishedRoot = hostParent),\n              (prevHostParent = deletedFiber.stateNode),\n              8 === finishedRoot.nodeType\n                ? finishedRoot.parentNode.removeChild(prevHostParent)\n                : finishedRoot.removeChild(prevHostParent);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((nearestMountedAncestor = hostParent),\n            (deletedFiber = deletedFiber.stateNode),\n            8 === nearestMountedAncestor.nodeType\n              ? clearSuspenseBoundary(\n                  nearestMountedAncestor.parentNode,\n                  deletedFiber\n                )\n              : 1 === nearestMountedAncestor.nodeType &&\n                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),\n            retryIfBlockedOn(nearestMountedAncestor))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href ? null : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      if (flags & 4 && null === finishedWork.alternate) {\n        hoistableRoot = finishedWork.stateNode;\n        currentResource = finishedWork.memoizedProps;\n        try {\n          for (var node = hoistableRoot.firstChild; node; ) {\n            var nextNode = node.nextSibling,\n              nodeName = node.nodeName;\n            node[internalHoistableMarker] ||\n              \"HEAD\" === nodeName ||\n              \"BODY\" === nodeName ||\n              \"SCRIPT\" === nodeName ||\n              \"STYLE\" === nodeName ||\n              (\"LINK\" === nodeName &&\n                \"stylesheet\" === node.rel.toLowerCase()) ||\n              hoistableRoot.removeChild(node);\n            node = nextNode;\n          }\n          for (\n            var type = finishedWork.type, attributes = hoistableRoot.attributes;\n            attributes.length;\n\n          )\n            hoistableRoot.removeAttributeNode(attributes[0]);\n          setInitialProperties(hoistableRoot, type, currentResource);\n          hoistableRoot[internalInstanceKey] = finishedWork;\n          hoistableRoot[internalPropsKey] = currentResource;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      node = null !== finishedWork.memoizedState;\n      nextNode = null !== current && null !== current.memoizedState;\n      nodeName = offscreenSubtreeIsHidden;\n      type = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = nodeName || node;\n      offscreenSubtreeWasHidden = type || nextNode;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = type;\n      offscreenSubtreeIsHidden = nodeName;\n      commitReconciliationEffects(finishedWork);\n      root = finishedWork.stateNode;\n      root._current = finishedWork;\n      root._visibility &= -3;\n      root._visibility |= root._pendingVisibility & 2;\n      if (\n        flags & 8192 &&\n        ((root._visibility = node\n          ? root._visibility & -2\n          : root._visibility | 1),\n        node &&\n          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),\n          null === current ||\n            nextNode ||\n            root ||\n            recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n        null === finishedWork.memoizedProps ||\n          \"manual\" !== finishedWork.memoizedProps.mode)\n      )\n        a: for (current = null, root = finishedWork; ; ) {\n          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {\n            if (null === current) {\n              nextNode = current = root;\n              try {\n                if (((hoistableRoot = nextNode.stateNode), node))\n                  (currentResource = hoistableRoot.style),\n                    \"function\" === typeof currentResource.setProperty\n                      ? currentResource.setProperty(\n                          \"display\",\n                          \"none\",\n                          \"important\"\n                        )\n                      : (currentResource.display = \"none\");\n                else {\n                  maybeNodes = nextNode.stateNode;\n                  i = nextNode.memoizedProps.style;\n                  var display =\n                    void 0 !== i && null !== i && i.hasOwnProperty(\"display\")\n                      ? i.display\n                      : null;\n                  maybeNodes.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(nextNode, nextNode.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              nextNode = root;\n              try {\n                nextNode.stateNode.nodeValue = node\n                  ? \"\"\n                  : nextNode.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(nextNode, nextNode.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      if (27 !== finishedWork.tag) {\n        a: {\n          for (var parent = finishedWork.return; null !== parent; ) {\n            if (isHostParent(parent)) {\n              var JSCompiler_inline_result = parent;\n              break a;\n            }\n            parent = parent.return;\n          }\n          throw Error(formatProdErrorMessage(160));\n        }\n        switch (JSCompiler_inline_result.tag) {\n          case 27:\n            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,\n              before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);\n            break;\n          case 5:\n            var parent$113 = JSCompiler_inline_result.stateNode;\n            JSCompiler_inline_result.flags & 32 &&\n              (setTextContent(parent$113, \"\"),\n              (JSCompiler_inline_result.flags &= -33));\n            var before$114 = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before$114, parent$113);\n            break;\n          case 3:\n          case 4:\n            var parent$115 = JSCompiler_inline_result.stateNode.containerInfo,\n              before$116 = getHostSibling(finishedWork);\n            insertOrAppendPlacementNodeIntoContainer(\n              finishedWork,\n              before$116,\n              parent$115\n            );\n            break;\n          default:\n            throw Error(formatProdErrorMessage(161));\n        }\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 4\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 4\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 4),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 &&\n        commitOffscreenPassiveMountEffects(\n          finishedWork.alternate,\n          finishedWork\n        );\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 4\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 4),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 4 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -5),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 4 &&\n          ((i._visibility &= -5),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 31457280;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 31457282;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  pendingProps = createFiberImplClass(22, pendingProps, key, mode);\n  pendingProps.elementType = REACT_OFFSCREEN_TYPE;\n  pendingProps.lanes = lanes;\n  var primaryChildInstance = {\n    _visibility: 1,\n    _pendingVisibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null,\n    _current: null,\n    detach: function () {\n      var fiber = primaryChildInstance._current;\n      if (null === fiber) throw Error(formatProdErrorMessage(456));\n      if (0 === (primaryChildInstance._pendingVisibility & 2)) {\n        var root = enqueueConcurrentRenderForLane(fiber, 2);\n        null !== root &&\n          ((primaryChildInstance._pendingVisibility |= 2),\n          scheduleUpdateOnFiber(root, fiber, 2));\n      }\n    },\n    attach: function () {\n      var fiber = primaryChildInstance._current;\n      if (null === fiber) throw Error(formatProdErrorMessage(456));\n      if (0 !== (primaryChildInstance._pendingVisibility & 2)) {\n        var root = enqueueConcurrentRenderForLane(fiber, 2);\n        null !== root &&\n          ((primaryChildInstance._pendingVisibility &= -3),\n          scheduleUpdateOnFiber(root, fiber, 2));\n      }\n    }\n  };\n  pendingProps.stateNode = primaryChildInstance;\n  return pendingProps;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194176) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$131 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$131 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$131\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$131.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$132 = completedWork.child; null !== child$132; )\n      (newChildLanes |= child$132.lanes | child$132.childLanes),\n        (subtreeFlags |= child$132.subtreeFlags & 31457280),\n        (subtreeFlags |= child$132.flags & 31457280),\n        (child$132.return = completedWork),\n        (child$132 = child$132.sibling);\n  else\n    for (child$132 = completedWork.child; null !== child$132; )\n      (newChildLanes |= child$132.lanes | child$132.childLanes),\n        (subtreeFlags |= child$132.subtreeFlags),\n        (subtreeFlags |= child$132.flags),\n        (child$132.return = completedWork),\n        (child$132 = child$132.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            null !== hydrationErrors &&\n              (queueRecoverableErrors(hydrationErrors),\n              (hydrationErrors = null)));\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          null !== hydrationErrors &&\n            (queueRecoverableErrors(hydrationErrors), (hydrationErrors = null)),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$144 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$144 = newProps.memoizedState.cachePool.pool);\n        cache$144 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$144 = type.rendering;\n      if (null === cache$144)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$144 = findFirstSuspended(current);\n              if (null !== cache$144) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$144.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$144)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$144.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$144.sibling = workInProgress.child),\n            (workInProgress.child = cache$144))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$144)\n              : (workInProgress.child = cache$144),\n            (type.last = cache$144));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  rootDoesHavePassiveEffects = !1,\n  rootWithPendingPassiveEffects = null,\n  pendingPassiveEffectsLanes = 0,\n  pendingPassiveEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot && 2 === workInProgressSuspendedReason) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 60) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else if (6 === exitStatus)\n      markRootSuspended(\n        root$jscomp$0,\n        lanes,\n        0,\n        !workInProgressRootDidSkipSuspendedSiblings\n      );\n    else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                queueRecoverableErrors(renderWasConcurrent);\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        switch (exitStatus) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194176) === lanes) {\n              markRootSuspended(\n                shouldTimeSlice,\n                lanes,\n                workInProgressDeferredLane,\n                !workInProgressRootDidSkipSuspendedSiblings\n              );\n              break a;\n            }\n            break;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        shouldTimeSlice.finishedWork = forceSync;\n        shouldTimeSlice.finishedLanes = lanes;\n        if (\n          (lanes & 62914560) === lanes &&\n          ((renderWasConcurrent = globalMostRecentFallbackTime + 300 - now()),\n          10 < renderWasConcurrent)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              2,\n              -0,\n              0\n            ),\n            renderWasConcurrent\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction queueRecoverableErrors(errors) {\n  null === workInProgressRootRecoverableErrors\n    ? (workInProgressRootRecoverableErrors = errors)\n    : workInProgressRootRecoverableErrors.push.apply(\n        workInProgressRootRecoverableErrors,\n        errors\n      );\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  var subtreeFlags = finishedWork.subtreeFlags;\n  if (subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408))\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (finishedWork = waitForCommitToBeReady()),\n      null !== finishedWork)\n    ) {\n      root.cancelPendingCommit = finishedWork(\n        commitRoot.bind(\n          null,\n          root,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes,\n    suspendedCommitReason,\n    completedRenderStartTime,\n    completedRenderEndTime\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$6 = 31 - clz32(lanes),\n      lane = 1 << index$6;\n    didAttemptEntireTree[index$6] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState$1 = null),\n        (thenableIndexCounter$1 = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = 0;\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$4 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$4;\n      lanes |= root[index$4];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194176) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$164) {\n      handleThrow(root, thrownValue$164);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              2 === workInProgressSuspendedReason &&\n                workInProgressRoot === root &&\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue$166) {\n      handleThrow(root, thrownValue$166);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrent() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState$1 = null;\n  thenableIndexCounter$1 = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason || 3 === suspendedReason || 6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  var prevTransition = ReactSharedInternals.T,\n    previousUpdateLanePriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      (ReactSharedInternals.T = null),\n      commitRootImpl(\n        root,\n        recoverableErrors,\n        transitions,\n        didIncludeRenderPhaseUpdate,\n        previousUpdateLanePriority,\n        spawnedLane,\n        updatedLanes,\n        suspendedRetryLanes,\n        suspendedCommitReason,\n        completedRenderStartTime,\n        completedRenderEndTime\n      );\n  } finally {\n    (ReactSharedInternals.T = prevTransition),\n      (ReactDOMSharedInternals.p = previousUpdateLanePriority);\n  }\n}\nfunction commitRootImpl(\n  root,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  renderPriorityLevel,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  do flushPassiveEffects();\n  while (null !== rootWithPendingPassiveEffects);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var finishedWork = root.finishedWork;\n  didIncludeRenderPhaseUpdate = root.finishedLanes;\n  if (null === finishedWork) return null;\n  root.finishedWork = null;\n  root.finishedLanes = 0;\n  if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n  root.callbackNode = null;\n  root.callbackPriority = 0;\n  root.cancelPendingCommit = null;\n  var remainingLanes = finishedWork.lanes | finishedWork.childLanes;\n  remainingLanes |= concurrentlyUpdatedLanes;\n  markRootFinished(\n    root,\n    didIncludeRenderPhaseUpdate,\n    remainingLanes,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n  root === workInProgressRoot &&\n    ((workInProgress = workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0));\n  (0 === (finishedWork.subtreeFlags & 10256) &&\n    0 === (finishedWork.flags & 10256)) ||\n    rootDoesHavePassiveEffects ||\n    ((rootDoesHavePassiveEffects = !0),\n    (pendingPassiveEffectsRemainingLanes = remainingLanes),\n    (pendingPassiveTransitions = transitions),\n    scheduleCallback$1(NormalPriority$1, function () {\n      flushPassiveEffects(!0);\n      return null;\n    }));\n  transitions = 0 !== (finishedWork.flags & 15990);\n  0 !== (finishedWork.subtreeFlags & 15990) || transitions\n    ? ((transitions = ReactSharedInternals.T),\n      (ReactSharedInternals.T = null),\n      (spawnedLane = ReactDOMSharedInternals.p),\n      (ReactDOMSharedInternals.p = 2),\n      (updatedLanes = executionContext),\n      (executionContext |= 4),\n      commitBeforeMutationEffects(root, finishedWork),\n      commitMutationEffectsOnFiber(finishedWork, root),\n      restoreSelection(selectionInformation, root.containerInfo),\n      (_enabled = !!eventsEnabled),\n      (selectionInformation = eventsEnabled = null),\n      (root.current = finishedWork),\n      commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork),\n      requestPaint(),\n      (executionContext = updatedLanes),\n      (ReactDOMSharedInternals.p = spawnedLane),\n      (ReactSharedInternals.T = transitions))\n    : (root.current = finishedWork);\n  rootDoesHavePassiveEffects\n    ? ((rootDoesHavePassiveEffects = !1),\n      (rootWithPendingPassiveEffects = root),\n      (pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate))\n    : releaseRootPooledCache(root, remainingLanes);\n  remainingLanes = root.pendingLanes;\n  0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n  ensureRootIsScheduled(root);\n  if (null !== recoverableErrors)\n    for (\n      renderPriorityLevel = root.onRecoverableError, finishedWork = 0;\n      finishedWork < recoverableErrors.length;\n      finishedWork++\n    )\n      (remainingLanes = recoverableErrors[finishedWork]),\n        renderPriorityLevel(remainingLanes.value, {\n          componentStack: remainingLanes.stack\n        });\n  0 !== (pendingPassiveEffectsLanes & 3) && flushPassiveEffects();\n  remainingLanes = root.pendingLanes;\n  0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42)\n    ? root === rootWithNestedUpdates\n      ? nestedUpdateCount++\n      : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n    : (nestedUpdateCount = 0);\n  flushSyncWorkAcrossRoots_impl(0, !1);\n  return null;\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPassiveEffects() {\n  if (null !== rootWithPendingPassiveEffects) {\n    var root$170 = rootWithPendingPassiveEffects,\n      remainingLanes = pendingPassiveEffectsRemainingLanes;\n    pendingPassiveEffectsRemainingLanes = 0;\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes),\n      prevTransition = ReactSharedInternals.T,\n      previousPriority = ReactDOMSharedInternals.p;\n    try {\n      ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n      ReactSharedInternals.T = null;\n      if (null === rootWithPendingPassiveEffects)\n        var JSCompiler_inline_result = !1;\n      else {\n        renderPriority = pendingPassiveTransitions;\n        pendingPassiveTransitions = null;\n        var root = rootWithPendingPassiveEffects,\n          lanes = pendingPassiveEffectsLanes;\n        rootWithPendingPassiveEffects = null;\n        pendingPassiveEffectsLanes = 0;\n        if (0 !== (executionContext & 6))\n          throw Error(formatProdErrorMessage(331));\n        var prevExecutionContext = executionContext;\n        executionContext |= 4;\n        commitPassiveUnmountOnFiber(root.current);\n        commitPassiveMountOnFiber(root, root.current, lanes, renderPriority);\n        executionContext = prevExecutionContext;\n        flushSyncWorkAcrossRoots_impl(0, !1);\n        if (\n          injectedHook &&\n          \"function\" === typeof injectedHook.onPostCommitFiberRoot\n        )\n          try {\n            injectedHook.onPostCommitFiberRoot(rendererID, root);\n          } catch (err) {}\n        JSCompiler_inline_result = !0;\n      }\n      return JSCompiler_inline_result;\n    } finally {\n      (ReactDOMSharedInternals.p = previousPriority),\n        (ReactSharedInternals.T = prevTransition),\n        releaseRootPooledCache(root$170, remainingLanes);\n    }\n  }\n  return !1;\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0),\n    scheduleImmediateTask(processRootScheduleInMicrotask));\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$172 = firstScheduledRoot; null !== root$172; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$172.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$172.suspendedLanes,\n                pingedLanes = root$172.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326677\n                  ? (JSCompiler_inline_result & 201326677) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$172, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$172,\n                root$172 === workInProgressRoot ? JSCompiler_inline_result : 0\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$172, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$172, JSCompiler_inline_result));\n        root$172 = root$172.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$5 = 31 - clz32(lanes),\n      lane = 1 << index$5,\n      expirationTime = expirationTimes[index$5];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$5] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime && 2 === workInProgressSuspendedReason) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  var originalCallbackNode = root.callbackNode;\n  if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPassiveEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateTask(cb) {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(ImmediatePriority, cb)\n      : cb();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1439 = 0;\n  i$jscomp$inline_1439 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1439++\n) {\n  var eventName$jscomp$inline_1440 =\n      simpleEventPluginEvents[i$jscomp$inline_1439],\n    domEventName$jscomp$inline_1441 =\n      eventName$jscomp$inline_1440.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1442 =\n      eventName$jscomp$inline_1440[0].toUpperCase() +\n      eventName$jscomp$inline_1440.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1441,\n    \"on\" + capitalizedEvent$jscomp$inline_1442\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (\n          container === targetContainer ||\n          (8 === container.nodeType && container.parentNode === targetContainer)\n        )\n          break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (3 === grandTag || 4 === grandTag)\n              if (\n                ((grandTag = nodeTag.stateNode.containerInfo),\n                grandTag === targetContainer ||\n                  (8 === grandTag.nodeType &&\n                    grandTag.parentNode === targetContainer))\n              )\n                return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    targetFiber = targetFiber.return;\n  }\n  return listeners;\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$186 = props[hasSrc];\n          if (null != propValue$186)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$186;\n                break;\n              case \"type\":\n                propValue = propValue$186;\n                break;\n              case \"checked\":\n                checked = propValue$186;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$186;\n                break;\n              case \"value\":\n                propKey = propValue$186;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$186;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$186)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$186, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$186 in props)\n          props.hasOwnProperty(propValue$186) &&\n            ((hasSrc = props[propValue$186]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$186,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$203 in nextProps) {\n        var propKey = nextProps[propKey$203];\n        lastProp = lastProps[propKey$203];\n        if (\n          nextProps.hasOwnProperty(propKey$203) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$203) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$203,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$203 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$203 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$203\n        ? updateOptions(domElement, !!lastProps, propKey$203, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$203 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$203 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$203, propKey);\n      return;\n    case \"option\":\n      for (var propKey$219 in lastProps)\n        if (\n          ((propKey$203 = lastProps[propKey$219]),\n          lastProps.hasOwnProperty(propKey$219) &&\n            null != propKey$203 &&\n            !nextProps.hasOwnProperty(propKey$219))\n        )\n          switch (propKey$219) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$219,\n                null,\n                nextProps,\n                propKey$203\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$203 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$203 !== propKey &&\n            (null != propKey$203 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$203 &&\n                \"function\" !== typeof propKey$203 &&\n                \"symbol\" !== typeof propKey$203;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$224 in lastProps)\n        (propKey$203 = lastProps[propKey$224]),\n          lastProps.hasOwnProperty(propKey$224) &&\n            null != propKey$203 &&\n            !nextProps.hasOwnProperty(propKey$224) &&\n            setProp(domElement, tag, propKey$224, null, nextProps, propKey$203);\n      for (checked in nextProps)\n        if (\n          ((propKey$203 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$203 !== propKey &&\n            (null != propKey$203 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$203)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$229 in lastProps)\n          (propKey$203 = lastProps[propKey$229]),\n            lastProps.hasOwnProperty(propKey$229) &&\n              void 0 !== propKey$203 &&\n              !nextProps.hasOwnProperty(propKey$229) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$229,\n                void 0,\n                nextProps,\n                propKey$203\n              );\n        for (defaultChecked in nextProps)\n          (propKey$203 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$203 === propKey ||\n              (void 0 === propKey$203 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$234 in lastProps)\n    (propKey$203 = lastProps[propKey$234]),\n      lastProps.hasOwnProperty(propKey$234) &&\n        null != propKey$203 &&\n        !nextProps.hasOwnProperty(propKey$234) &&\n        setProp(domElement, tag, propKey$234, null, nextProps, propKey$203);\n  for (lastProp in nextProps)\n    (propKey$203 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$203 === propKey ||\n        (null == propKey$203 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$203, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else (\"$\" !== node && \"$?\" !== node && \"$!\" !== node) || depth++;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href ? null : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$242 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$243 = styles$242.get(type);\n        resource$243 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$243 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$242.set(type, resource$243),\n          (styles$242 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$242._p &&\n            ((resource$243.instance = styles$242),\n            (resource$243.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$242 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$243.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$243;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$248 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$248)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$248),\n            markNodeAsHoistable(instance$248),\n            instance$248\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$248 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$248);\n        var linkInstance = instance$248;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$248, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$248, props.precedence, hoistableRoot);\n        return (resource.instance = instance$248);\n      case \"script\":\n        instance$248 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$248)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$248)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.finishedWork =\n    this.pingCache =\n    this.current =\n    this.pendingChildren =\n      null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.finishedLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane(),\n                root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      0 === root.tag && flushPassiveEffects();\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1686 = React.version;\nif (\n  \"19.0.0\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1686\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1686,\n      \"19.0.0\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2165 = {\n  bundleType: 0,\n  version: \"19.0.0\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  reconcilerVersion: \"19.0.0\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2166 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2166.isDisabled &&\n    hook$jscomp$inline_2166.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2166.inject(\n        internals$jscomp$inline_2165\n      )),\n        (injectedHook = hook$jscomp$inline_2166);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(\n    8 === container.nodeType ? container.parentNode : container\n  );\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  initialChildren.current.lanes = isStrictMode;\n  markRootUpdated$1(initialChildren, isStrictMode);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.0.0\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0), requestHostCallback();\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return exports.unstable_now() - startTime < frameInterval ? !1 : !0;\n}\nfunction performWorkUntilDeadline() {\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostCallback() {\n  isMessageLoopRunning ||\n    ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n}\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_continueExecution = function () {\n  isHostCallbackScheduled ||\n    isPerformingWork ||\n    ((isHostCallbackScheduled = !0), requestHostCallback());\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_getFirstCallbackNode = function () {\n  return peek(taskQueue);\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_pauseExecution = function () {};\nexports.unstable_requestPaint = function () {};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0), requestHostCallback()));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"352b0e8d\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"propmgmt:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/propmgmt/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpropmgmt\"] = self[\"webpackChunkpropmgmt\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from\"react\";function SvgLogo(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({xmlns:\"http://www.w3.org/2000/svg\",width:\"1024px\",height:\"1024px\",style:{shapeRendering:\"geometricPrecision\",textRendering:\"geometricPrecision\",imageRendering:\"optimizeQuality\",fillRule:\"evenodd\",clipRule:\"evenodd\"},xmlnsXlink:\"http://www.w3.org/1999/xlink\",ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9deafc\",d:\"M -0.5,-0.5 C 327.5,-0.5 655.5,-0.5 983.5,-0.5C 982.826,1.02449 981.826,2.35782 980.5,3.5C 982.333,6.2904 983.333,5.95707 983.5,2.5C 986.394,2.04229 988.894,2.70896 991,4.5C 992.087,2.06837 992.587,2.4017 992.5,5.5C 994.929,5.58499 996.929,6.58499 998.5,8.5C 1001.11,9.31844 1003.77,9.81844 1006.5,10C 1007.25,11.7337 1007.75,13.567 1008,15.5C 1009.33,15.5 1010.67,15.5 1012,15.5C 1013.04,19.5328 1012.37,23.1995 1010,26.5C 1009.09,25.6721 1008.42,24.6721 1008,23.5C 1008.05,26.1906 1006.89,28.0239 1004.5,29C 1005.93,29.4652 1007.1,30.2986 1008,31.5C 1008.85,28.3876 1010.02,28.0542 1011.5,30.5C 1010.05,33.2976 1009.05,36.2976 1008.5,39.5C 1005.55,38.6426 1002.55,38.6426 999.5,39.5C 999.5,40.5 999.5,41.5 999.5,42.5C 1002.17,42.5 1004.83,42.5 1007.5,42.5C 1008.79,50.8278 1008.79,59.1612 1007.5,67.5C 1008.17,70.1667 1008.83,72.8333 1009.5,75.5C 1008.19,79.4068 1007.52,83.4068 1007.5,87.5C 1011.5,88.1667 1011.5,88.8333 1007.5,89.5C 1007.64,91.1238 1006.97,92.2904 1005.5,93C 1007.26,93.2022 1008.92,93.7022 1010.5,94.5C 1008.61,99.9383 1007.95,105.605 1008.5,111.5C 1010.17,111.5 1011.83,111.5 1013.5,111.5C 1013.4,115.742 1012.73,119.909 1011.5,124C 1011.34,126.47 1012.01,128.636 1013.5,130.5C 1010.96,131.937 1010.96,133.437 1013.5,135C 1012.57,136.395 1012.57,137.895 1013.5,139.5C 1013.19,142.492 1011.52,143.825 1008.5,143.5C 1007.92,150.909 1007.76,158.242 1008,165.5C 1005.51,164.238 1005.17,164.571 1007,166.5C 1007.35,170.354 1007.85,174.188 1008.5,178C 1008.23,179.607 1007.4,180.774 1006,181.5C 1004.67,178.581 1003.17,175.748 1001.5,173C 1002.78,171.703 1002.62,170.536 1001,169.5C 1000.62,170.942 999.79,171.942 998.5,172.5C 995.167,167.167 990.833,162.833 985.5,159.5C 985.815,155.629 985.482,151.962 984.5,148.5C 980.702,147.517 976.702,147.183 972.5,147.5C 972.83,130.991 972.496,114.658 971.5,98.5C 971.167,98.5 970.833,98.5 970.5,98.5C 965.651,93.489 960.317,88.989 954.5,85C 953.207,84.51 951.873,84.3433 950.5,84.5C 952.223,83.193 954.057,83.193 956,84.5C 958.543,83.1236 958.709,81.957 956.5,81C 958.464,80.376 960.131,80.876 961.5,82.5C 962.308,82.1924 962.975,81.6924 963.5,81C 961.941,80.0201 960.274,79.1867 958.5,78.5C 959.364,75.5494 959.364,72.8827 958.5,70.5C 958.5,68.5 958.5,66.5 958.5,64.5C 954.461,63.6597 951.461,64.993 949.5,68.5C 948.828,67.0508 948.161,65.7175 947.5,64.5C 944.435,63.1816 941.269,63.1816 938,64.5C 937.349,66.235 937.515,67.9017 938.5,69.5C 937.948,71.3334 937.115,73.0001 936,74.5C 935.667,73.8333 935.333,73.1667 935,72.5C 934.003,74.1656 932.503,75.6656 930.5,77C 931.76,78.113 932.927,78.2797 934,77.5C 935.101,82.6769 937.767,84.0103 942,81.5C 943.054,82.4824 943.554,83.6491 943.5,85C 940.079,84.8786 937.412,86.2119 935.5,89C 933.975,90.0086 932.308,90.5086 930.5,90.5C 931.045,87.0024 930.212,84.0024 928,81.5C 926.983,84.028 925.816,84.028 924.5,81.5C 921.711,83.8432 919.044,86.3432 916.5,89C 917.423,91.0408 917.756,93.2075 917.5,95.5C 916.167,95.5 914.833,95.5 913.5,95.5C 913.75,92.4955 912.417,90.6622 909.5,90C 910.864,86.8874 909.864,84.7207 906.5,83.5C 905.969,86.0985 905.802,88.7652 906,91.5C 905.082,93.6324 903.749,94.299 902,93.5C 902.097,88.4472 901.93,83.4472 901.5,78.5C 901.855,77.4777 902.522,76.811 903.5,76.5C 903.586,74.323 904.253,72.323 905.5,70.5C 903.696,69.2319 901.696,68.5652 899.5,68.5C 899.657,69.8734 899.49,71.2068 899,72.5C 898.333,73.8333 897.667,73.8333 897,72.5C 896.536,73.0944 896.369,73.7611 896.5,74.5C 892.265,73.564 887.931,73.2307 883.5,73.5C 882.596,74.209 882.263,75.209 882.5,76.5C 885.898,76.1796 889.232,76.513 892.5,77.5C 888.488,78.6977 884.488,78.6977 880.5,77.5C 878.701,73.7557 876.034,72.7557 872.5,74.5C 860.203,85.628 848.036,96.9614 836,108.5C 835.415,109.998 835.915,110.998 837.5,111.5C 839.265,112.461 841.265,112.795 843.5,112.5C 843.5,124.167 843.5,135.833 843.5,147.5C 839.833,147.5 836.167,147.5 832.5,147.5C 832.827,137.985 832.494,128.652 831.5,119.5C 829.712,118.378 827.712,118.211 825.5,119C 813.451,123.99 804.451,132.156 798.5,143.5C 796.896,144.287 796.229,145.62 796.5,147.5C 788.833,147.5 781.167,147.5 773.5,147.5C 773.5,135.833 773.5,124.167 773.5,112.5C 774.531,111.751 775.698,111.085 777,110.5C 773.523,104.842 769.023,99.8419 763.5,95.5C 763.167,95.5 762.833,95.5 762.5,95.5C 762.666,88.1591 762.5,80.8258 762,73.5C 761.329,72.7476 760.496,72.4142 759.5,72.5C 757.052,71.5269 754.385,71.1936 751.5,71.5C 751.5,72.5 751.5,73.5 751.5,74.5C 753.857,74.3367 756.19,74.5034 758.5,75C 754.828,77.1177 750.828,78.2843 746.5,78.5C 745.021,73.5437 742.021,72.377 737.5,75C 725.635,86.0335 713.968,97.2002 702.5,108.5C 700.974,109.105 699.974,110.271 699.5,112C 702.146,112.497 704.813,112.664 707.5,112.5C 707.5,124.167 707.5,135.833 707.5,147.5C 702.5,147.5 697.5,147.5 692.5,147.5C 692.829,134.989 692.495,122.655 691.5,110.5C 686.472,110.84 681.805,112.34 677.5,115C 670.646,119.692 664.646,125.192 659.5,131.5C 651.723,121.709 641.723,115.709 629.5,113.5C 628.505,124.654 628.172,135.988 628.5,147.5C 625.5,147.5 622.5,147.5 619.5,147.5C 619.167,147.5 618.833,147.5 618.5,147.5C 618.5,131.5 618.5,115.5 618.5,99.5C 618.833,98.8333 619.167,98.1667 619.5,97.5C 619.833,97.5 620.167,97.5 620.5,97.5C 623.076,97.2782 623.91,95.9449 623,93.5C 616.969,87.1345 610.636,81.1345 604,75.5C 603.805,66.7557 603.305,58.089 602.5,49.5C 593.652,48.7196 584.652,48.053 575.5,47.5C 569.67,41.8377 563.67,36.3377 557.5,31C 555.5,30.3333 553.5,30.3333 551.5,31C 528.856,51.2542 506.69,72.0876 485,93.5C 484.316,94.7839 484.483,95.9505 485.5,97C 487.81,97.4966 490.143,97.6633 492.5,97.5C 493.93,97.5792 495.264,97.2458 496.5,96.5C 497.298,96.9569 497.631,97.6236 497.5,98.5C 497.5,114.833 497.5,131.167 497.5,147.5C 495.5,147.5 493.5,147.5 491.5,147.5C 491.485,139.145 488.485,132.145 482.5,126.5C 474.12,117.642 464.12,111.308 452.5,107.5C 452.5,121.167 452.5,134.833 452.5,148.5C 449.833,148.5 447.167,148.5 444.5,148.5C 444.5,147.5 444.5,146.5 444.5,145.5C 445.186,141.713 444.186,138.546 441.5,136C 427.458,125.105 412.791,115.272 397.5,106.5C 402.246,105.476 406.246,106.976 409.5,111C 411.765,112.118 414.099,112.951 416.5,113.5C 416.615,108.672 414.448,107.339 410,109.5C 410.019,107.893 410.185,106.226 410.5,104.5C 412.696,104.435 414.696,103.768 416.5,102.5C 415.584,100.216 416.584,99.0488 419.5,99C 418.552,98.5172 417.552,98.3505 416.5,98.5C 419.846,97.4847 422.513,95.4847 424.5,92.5C 426.94,89.9566 428.606,86.9566 429.5,83.5C 429.762,82.0222 429.429,80.6888 428.5,79.5C 426.382,81.6417 424.048,83.3083 421.5,84.5C 416.438,84.7257 411.438,84.3924 406.5,83.5C 398.754,78.6149 396.088,71.6149 398.5,62.5C 400.475,59.1951 402.809,56.1951 405.5,53.5C 408.899,53.3915 411.566,52.0582 413.5,49.5C 411.696,48.838 409.696,48.5046 407.5,48.5C 404.473,48.2865 401.807,48.9532 399.5,50.5C 391.33,53.3388 386.33,59.0055 384.5,67.5C 383.359,70.6399 383.192,73.9733 384,77.5C 384.374,79.4913 385.207,81.158 386.5,82.5C 388.533,86.1924 391.2,89.1924 394.5,91.5C 394.833,92.1667 395.167,92.8333 395.5,93.5C 394.167,93.5 392.833,93.5 391.5,93.5C 392.417,96.418 394.417,98.418 397.5,99.5C 395.851,100.988 393.851,101.988 391.5,102.5C 390.098,103.842 390.431,104.676 392.5,105C 388.489,105.166 387.989,106 391,107.5C 392.699,106.594 394.533,106.261 396.5,106.5C 392.112,110.221 387.445,113.555 382.5,116.5C 377.654,119.423 372.654,122.09 367.5,124.5C 366.504,124.414 365.671,124.748 365,125.5C 364.5,132.826 364.334,140.159 364.5,147.5C 359.833,147.5 355.167,147.5 350.5,147.5C 350.19,136.419 350.523,125.419 351.5,114.5C 355.32,113.428 356.32,111.094 354.5,107.5C 346.324,99.5932 337.991,91.9266 329.5,84.5C 330.817,84.821 332.151,85.1543 333.5,85.5C 335.606,84.5705 337.606,83.4038 339.5,82C 343.977,82.0412 347.144,84.2079 349,88.5C 349.862,97.7665 351.028,97.7665 352.5,88.5C 354.042,87.2532 355.542,87.2532 357,88.5C 357.667,85.1667 357.667,81.8333 357,78.5C 355.333,80.2685 353.667,81.9352 352,83.5C 349.23,81.8652 346.397,80.3652 343.5,79C 345.321,77.2567 347.321,75.7567 349.5,74.5C 348.754,73.2638 348.421,71.9305 348.5,70.5C 347.325,70.281 346.325,70.6143 345.5,71.5C 343.649,73.7759 341.982,76.1093 340.5,78.5C 337.035,77.5664 336.702,76.0664 339.5,74C 338.748,73.3292 338.414,72.4959 338.5,71.5C 347.687,68.7773 348.687,64.2773 341.5,58C 338.035,59.1123 335.369,61.4457 333.5,65C 335.351,66.683 337.017,68.5163 338.5,70.5C 337.25,70.5774 336.417,71.244 336,72.5C 335.138,70.913 334.471,69.2464 334,67.5C 333.692,68.3081 333.192,68.9747 332.5,69.5C 332.083,63.3977 329.083,61.3977 323.5,63.5C 323.668,68.5324 322.668,68.6991 320.5,64C 318.833,63.3333 317.167,63.3333 315.5,64C 316.563,65.1882 317.897,65.6882 319.5,65.5C 319.509,67.3084 319.009,68.9751 318,70.5C 316.984,69.3659 316.317,69.6992 316,71.5C 313.599,70.3977 311.099,70.231 308.5,71C 308.693,72.6453 308.86,74.4787 309,76.5C 309.5,76 310,75.5 310.5,75C 314.302,73.9426 317.968,73.4426 321.5,73.5C 322.95,74.8498 323.617,76.5165 323.5,78.5C 321.211,76.9941 318.877,75.8274 316.5,75C 305.363,84.3032 294.696,94.1365 284.5,104.5C 283.833,87.8333 283.167,71.1667 282.5,54.5C 280.345,47.4964 275.678,44.3297 268.5,45C 257.238,54.9314 245.405,64.0981 233,72.5C 232.501,77.4889 232.334,82.4889 232.5,87.5C 227.271,86.3704 222.437,84.3704 218,81.5C 214.532,83.1435 211.365,85.1435 208.5,87.5C 199.529,93.6567 190.529,99.8234 181.5,106C 177.641,109.032 173.974,112.198 170.5,115.5C 168.738,116.262 167.738,117.596 167.5,119.5C 166.506,128.652 166.173,137.985 166.5,147.5C 160.5,147.5 154.5,147.5 148.5,147.5C 148.831,120.995 148.498,94.6614 147.5,68.5C 146.791,67.596 145.791,67.2627 144.5,67.5C 137.845,60.8475 130.845,54.5142 123.5,48.5C 116.672,53.1617 111.006,58.995 106.5,66C 98.9885,66.1712 91.6552,66.6712 84.5,67.5C 83.5093,73.979 83.176,80.6457 83.5,87.5C 81.4352,87.4828 79.4352,87.1495 77.5,86.5C 74.6339,83.8958 71.3005,82.7292 67.5,83C 60.0506,87.9518 53.0506,93.4518 46.5,99.5C 43.8697,101.628 41.3697,103.961 39,106.5C 38.5014,110.152 38.3347,113.818 38.5,117.5C 36.8007,117.527 35.4674,118.194 34.5,119.5C 36.2842,115.791 35.7842,112.458 33,109.5C 32.6667,111.5 32.3333,113.5 32,115.5C 31.4236,118.124 30.0902,118.791 28,117.5C 25.8471,119.444 23.3471,119.944 20.5,119C 17.0295,112.789 15.5295,113.289 16,120.5C 16.6667,121.833 17.3333,121.833 18,120.5C 18.1667,121 18.3333,121.5 18.5,122C 15.6118,125.279 13.9451,129.112 13.5,133.5C 11.5,133.5 9.5,133.5 7.5,133.5C 7.35055,134.552 7.51722,135.552 8,136.5C 9.69946,135.594 11.5328,135.261 13.5,135.5C 13.6495,136.552 13.4828,137.552 13,138.5C 10.5033,140.328 8.16996,142.328 6,144.5C 5.50335,146.81 5.33669,149.143 5.5,151.5C 6.83333,151.5 8.16667,151.5 9.5,151.5C 9.5,154.167 9.5,156.833 9.5,159.5C 11.1033,159.312 12.4366,159.812 13.5,161C 8.30589,162.672 8.30589,164.505 13.5,166.5C 12.3112,167.429 10.9778,167.762 9.5,167.5C 9.5,170.167 9.5,172.833 9.5,175.5C 7.05815,175.119 6.39149,175.786 7.5,177.5C 6.16667,178.5 4.83333,179.5 3.5,180.5C 5.00087,181.752 6.66754,182.752 8.5,183.5C 9.83333,186.167 9.83333,188.833 8.5,191.5C 7.35728,187.875 6.02394,187.709 4.5,191C 6.09106,194.275 5.75773,197.275 3.5,200C 5.60548,203.401 7.27215,203.234 8.5,199.5C 9.83333,202.167 9.83333,204.833 8.5,207.5C 7.83333,206.833 7.16667,206.167 6.5,205.5C 4.98019,212.951 5.31352,220.284 7.5,227.5C 5.96559,231.338 5.13225,235.338 5,239.5C 3.55575,237.845 1.72241,237.178 -0.5,237.5C -0.5,158.167 -0.5,78.8333 -0.5,-0.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#28243d\",d:\"M 699.5,59.5 C 697.5,59.5 696.5,58.5 696.5,56.5C 697.959,56.5674 699.292,56.2341 700.5,55.5C 703.959,53.7427 706.626,51.076 708.5,47.5C 707.812,46.1451 706.812,45.1451 705.5,44.5C 703.833,42.1667 701.833,40.1667 699.5,38.5C 699.103,37.475 698.437,37.3083 697.5,38C 694.669,40.0007 692.003,42.1673 689.5,44.5C 689.5,43.8333 689.167,43.5 688.5,43.5C 691.218,39.7799 694.552,36.7799 698.5,34.5C 703.767,38.0967 708.433,42.43 712.5,47.5C 708.746,52.1961 704.412,56.1961 699.5,59.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9d9d5\",d:\"M 699.5,38.5 C 697.222,41.2956 695.556,44.4622 694.5,48C 695.28,50.4041 696.947,51.9041 699.5,52.5C 700.127,53.4168 700.461,54.4168 700.5,55.5C 699.292,56.2341 697.959,56.5674 696.5,56.5C 694.713,52.3747 691.713,49.708 687.5,48.5C 687.527,46.8007 688.194,45.4674 689.5,44.5C 692.003,42.1673 694.669,40.0007 697.5,38C 698.437,37.3083 699.103,37.475 699.5,38.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#21364b\",d:\"M 688.5,43.5 C 689.167,43.5 689.5,43.8333 689.5,44.5C 688.194,45.4674 687.527,46.8007 687.5,48.5C 691.713,49.708 694.713,52.3747 696.5,56.5C 696.5,58.5 697.5,59.5 699.5,59.5C 698.749,60.5735 697.749,60.7401 696.5,60C 692.667,56.1667 688.833,52.3333 685,48.5C 685.077,46.2285 686.243,44.5618 688.5,43.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c769f\",d:\"M 413.5,49.5 C 408.797,49.4372 404.13,49.7705 399.5,50.5C 401.807,48.9532 404.473,48.2865 407.5,48.5C 409.696,48.5046 411.696,48.838 413.5,49.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#84b7d1\",d:\"M 575.5,47.5 C 584.652,48.053 593.652,48.7196 602.5,49.5C 594.444,49.1981 586.444,49.5315 578.5,50.5C 577.145,49.8118 576.145,48.8118 575.5,47.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#232c49\",d:\"M 834.5,55.5 C 834.663,53.1432 834.497,50.8098 834,48.5C 833.802,50.3817 833.302,52.0484 832.5,53.5C 832.662,51.4727 832.495,49.4727 832,47.5C 831.617,46.944 831.117,46.6107 830.5,46.5C 829.399,45.4017 828.066,45.235 826.5,46C 820.221,49.946 814.221,54.2794 808.5,59C 806.393,60.2635 805.393,62.0968 805.5,64.5C 804.833,64.5 804.167,64.5 803.5,64.5C 803.737,63.209 803.404,62.209 802.5,61.5C 797.321,56.8423 791.654,52.6756 785.5,49C 782.975,48.1041 780.808,48.6041 779,50.5C 777.57,57.5612 779.736,63.2278 785.5,67.5C 786.5,67.8333 787.167,68.5 787.5,69.5C 782.951,73.4722 782.284,78.1389 785.5,83.5C 786.5,84.8333 787.5,86.1667 788.5,87.5C 788.918,88.2216 789.584,88.7216 790.5,89C 793.146,89.4974 795.813,89.6641 798.5,89.5C 795.713,90.4767 792.713,90.81 789.5,90.5C 785.027,88.6859 782.36,85.3526 781.5,80.5C 781.457,77.1326 781.79,73.7992 782.5,70.5C 782.66,68.6455 781.993,67.3121 780.5,66.5C 777.993,62.4861 776.326,58.1528 775.5,53.5C 776.581,47.9254 779.914,45.7587 785.5,47C 792.224,50.3988 798.39,54.5655 804,59.5C 810.421,55.0336 816.588,50.2003 822.5,45C 827.413,42.4135 831.58,43.2468 835,47.5C 835.801,50.367 835.634,53.0336 834.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e36063\",d:\"M 699.5,38.5 C 701.833,40.1667 703.833,42.1667 705.5,44.5C 706.812,45.1451 707.812,46.1451 708.5,47.5C 706.626,51.076 703.959,53.7427 700.5,55.5C 700.461,54.4168 700.127,53.4168 699.5,52.5C 696.947,51.9041 695.28,50.4041 694.5,48C 695.556,44.4622 697.222,41.2956 699.5,38.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fd5245\",d:\"M 705.5,44.5 C 705.5,46.1667 705.5,47.8333 705.5,49.5C 703.143,49.6633 700.81,49.4966 698.5,49C 698.943,47.4815 698.276,46.3148 696.5,45.5C 696.833,44.5 697.5,43.8333 698.5,43.5C 700.747,44.3742 703.08,44.7076 705.5,44.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eafdfc\",d:\"M 743.5,49.5 C 749.488,49.664 750.821,52.164 747.5,57C 744.402,58.0673 742.402,57.0673 741.5,54C 741.519,52.167 742.185,50.667 743.5,49.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e2d25\",d:\"M 52.5,52.5 C 60.8284,56.3207 61.3284,60.9874 54,66.5C 51.8333,64.3333 49.6667,62.1667 47.5,60C 49.3994,57.6108 51.0661,55.1108 52.5,52.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfc7be\",d:\"M 401.5,52.5 C 403.55,53.3218 403.217,54.3218 400.5,55.5C 400.167,55.5 399.833,55.5 399.5,55.5C 399.44,54.9569 399.107,54.6236 398.5,54.5C 397.378,55.6302 396.044,56.2969 394.5,56.5C 396.121,54.058 398.454,52.7247 401.5,52.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a396b\",d:\"M 144.5,67.5 C 142.833,67.5 141.167,67.5 139.5,67.5C 139.672,66.5084 139.338,65.8417 138.5,65.5C 138.167,64.5 137.5,63.8333 136.5,63.5C 136.167,63.5 135.833,63.5 135.5,63.5C 133.719,59.93 131.052,57.2633 127.5,55.5C 126.294,52.8609 124.294,52.0276 121.5,53C 119.585,55.3996 117.919,57.8996 116.5,60.5C 114.166,62.1757 113.166,64.509 113.5,67.5C 103.833,67.5 94.1667,67.5 84.5,67.5C 91.6552,66.6712 98.9885,66.1712 106.5,66C 111.006,58.995 116.672,53.1617 123.5,48.5C 130.845,54.5142 137.845,60.8475 144.5,67.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fad68d\",d:\"M 399.5,55.5 C 399.167,56.5 398.5,57.1667 397.5,57.5C 395.246,58.4151 393.246,59.7484 391.5,61.5C 392.075,59.5887 393.075,57.922 394.5,56.5C 396.044,56.2969 397.378,55.6302 398.5,54.5C 399.107,54.6236 399.44,54.9569 399.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ce9ba1\",d:\"M 479.5,53.5 C 483.662,54.1538 484.996,56.4872 483.5,60.5C 482.311,61.4287 480.978,61.762 479.5,61.5C 479.5,58.8333 479.5,56.1667 479.5,53.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f57b71\",d:\"M 214.5,56.5 C 210.833,60.5 207.167,64.5 203.5,68.5C 202.5,68.5 201.5,68.5 200.5,68.5C 200.67,67.1779 200.337,66.0113 199.5,65C 200.582,63.6703 201.249,62.1703 201.5,60.5C 202.5,58.8333 203.833,57.5 205.5,56.5C 206.5,56.5 207.5,56.5 208.5,56.5C 208.062,52.0917 210.062,50.4251 214.5,51.5C 214.5,53.1667 214.5,54.8333 214.5,56.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9c4a9\",d:\"M 394.5,56.5 C 393.075,57.922 392.075,59.5887 391.5,61.5C 390.043,63.2418 388.876,65.2418 388,67.5C 387.502,70.8168 387.335,74.1501 387.5,77.5C 385.439,70.6782 386.605,64.3449 391,58.5C 391.816,57.1772 392.983,56.5106 394.5,56.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#102745\",d:\"M 575.5,47.5 C 576.145,48.8118 577.145,49.8118 578.5,50.5C 586.444,49.5315 594.444,49.1981 602.5,49.5C 603.305,58.089 603.805,66.7557 604,75.5C 610.636,81.1345 616.969,87.1345 623,93.5C 623.91,95.9449 623.076,97.2782 620.5,97.5C 620.167,96.8333 619.833,96.1667 619.5,95.5C 620.239,95.631 620.906,95.4643 621.5,95C 613.853,86.8446 605.853,79.3446 597.5,72.5C 598.492,72.6716 599.158,72.3382 599.5,71.5C 600.491,65.021 600.824,58.3543 600.5,51.5C 594.167,51.5 587.833,51.5 581.5,51.5C 581.232,53.099 581.566,54.4324 582.5,55.5C 582.5,56.1667 582.833,56.5 583.5,56.5C 584.234,57.7079 584.567,59.0413 584.5,60.5C 575.5,50.8333 566.167,41.5 556.5,32.5C 554.806,31.314 553.139,31.4807 551.5,33C 530.636,53.5317 509.469,73.6983 488,93.5C 487.833,93.8333 487.667,94.1667 487.5,94.5C 488.689,95.4287 490.022,95.762 491.5,95.5C 494.925,95.3668 495.258,96.0335 492.5,97.5C 490.143,97.6633 487.81,97.4966 485.5,97C 484.483,95.9505 484.316,94.7839 485,93.5C 506.69,72.0876 528.856,51.2542 551.5,31C 553.5,30.3333 555.5,30.3333 557.5,31C 563.67,36.3377 569.67,41.8377 575.5,47.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#866734\",d:\"M 549.5,47.5 C 541.78,55.2238 533.78,62.5572 525.5,69.5C 527.833,66.8333 530.167,64.1667 532.5,61.5C 532.833,60.5 533.5,59.8333 534.5,59.5C 539.387,55.2404 544.387,51.2404 549.5,47.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9eb9c0\",d:\"M 599.5,54.5 C 599.5,55.1667 599.167,55.5 598.5,55.5C 594.434,55.307 590.434,55.6403 586.5,56.5C 585.5,56.5 584.5,56.5 583.5,56.5C 582.833,56.5 582.5,56.1667 582.5,55.5C 588.121,54.6463 593.788,54.313 599.5,54.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5b7686\",d:\"M 550.5,40.5 C 547.437,44.5658 543.771,47.8991 539.5,50.5C 542.563,46.4342 546.229,43.1009 550.5,40.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cce4e9\",d:\"M 556.5,32.5 C 554.959,35.3931 552.959,38.0597 550.5,40.5C 546.229,43.1009 542.563,46.4342 539.5,50.5C 522.897,64.767 506.897,79.767 491.5,95.5C 490.022,95.762 488.689,95.4287 487.5,94.5C 487.667,94.1667 487.833,93.8333 488,93.5C 509.469,73.6983 530.636,53.5317 551.5,33C 553.139,31.4807 554.806,31.314 556.5,32.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6b310e\",d:\"M 559.5,45.5 C 562.167,46.1667 563.833,47.8333 564.5,50.5C 562.5,49.1667 560.833,47.5 559.5,45.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e2036\",d:\"M 557.5,40.5 C 555.495,41.0388 553.495,41.7055 551.5,42.5C 550.147,43.5237 549.48,44.857 549.5,46.5C 549.5,46.8333 549.5,47.1667 549.5,47.5C 544.387,51.2404 539.387,55.2404 534.5,59.5C 536.006,56.4085 537.672,53.4085 539.5,50.5C 543.771,47.8991 547.437,44.5658 550.5,40.5C 552.716,39.7974 554.549,38.4641 556,36.5C 556.41,37.9007 556.91,39.234 557.5,40.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a47033\",d:\"M 559.5,45.5 C 559.167,45.5 558.833,45.5 558.5,45.5C 558.167,45.5 557.833,45.5 557.5,45.5C 557.083,44.8761 556.416,44.5427 555.5,44.5C 553.244,45.1143 551.244,46.1143 549.5,47.5C 549.5,47.1667 549.5,46.8333 549.5,46.5C 551.129,44.6802 553.129,43.3469 555.5,42.5C 557.417,42.7538 558.751,43.7538 559.5,45.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#301b1b\",d:\"M 557.5,40.5 C 559.679,43.277 562.346,45.6103 565.5,47.5C 566.386,48.325 566.719,49.325 566.5,50.5C 565.833,50.5 565.167,50.5 564.5,50.5C 563.833,47.8333 562.167,46.1667 559.5,45.5C 558.751,43.7538 557.417,42.7538 555.5,42.5C 553.129,43.3469 551.129,44.6802 549.5,46.5C 549.48,44.857 550.147,43.5237 551.5,42.5C 553.495,41.7055 555.495,41.0388 557.5,40.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#424f7a\",d:\"M 556.5,32.5 C 566.167,41.5 575.5,50.8333 584.5,60.5C 585.5,61.5 586.5,62.5 587.5,63.5C 587.5,64.5 587.5,65.5 587.5,66.5C 586.167,66.5 584.833,66.5 583.5,66.5C 584.171,65.1529 584.171,63.9862 583.5,63C 581.137,60.8199 578.47,59.1532 575.5,58C 573.457,56.292 571.79,54.292 570.5,52C 569.255,51.2086 567.922,50.7086 566.5,50.5C 566.719,49.325 566.386,48.325 565.5,47.5C 562.346,45.6103 559.679,43.277 557.5,40.5C 556.91,39.234 556.41,37.9007 556,36.5C 554.549,38.4641 552.716,39.7974 550.5,40.5C 552.959,38.0597 554.959,35.3931 556.5,32.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebdfe2\",d:\"M 830.5,46.5 C 827.265,48.0607 824.598,50.3941 822.5,53.5C 816.959,56.4365 811.959,60.1031 807.5,64.5C 807.167,64.5 806.833,64.5 806.5,64.5C 806.167,64.5 805.833,64.5 805.5,64.5C 805.393,62.0968 806.393,60.2635 808.5,59C 814.221,54.2794 820.221,49.946 826.5,46C 828.066,45.235 829.399,45.4017 830.5,46.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eecfd0\",d:\"M 802.5,61.5 C 802.737,62.791 802.404,63.791 801.5,64.5C 801.167,64.5 800.833,64.5 800.5,64.5C 797.884,60.5167 794.217,58.1834 789.5,57.5C 788.489,53.3151 785.989,51.9817 782,53.5C 781.333,55.5 781.333,57.5 782,59.5C 783.481,62.11 784.648,64.7766 785.5,67.5C 779.736,63.2278 777.57,57.5612 779,50.5C 780.808,48.6041 782.975,48.1041 785.5,49C 791.654,52.6756 797.321,56.8423 802.5,61.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c3a540\",d:\"M 52.5,55.5 C 57.47,57.4433 57.8033,60.11 53.5,63.5C 51.2322,61.0898 50.8989,58.4231 52.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#152841\",d:\"M 196.5,63.5 C 195.791,64.404 194.791,64.7373 193.5,64.5C 192.527,64.0133 191.527,63.5133 190.5,63C 187.066,58.8104 183.4,54.8104 179.5,51C 175.338,50.4523 173.838,52.2857 175,56.5C 180.397,61.7286 185.564,67.062 190.5,72.5C 191.911,74.539 193.911,75.539 196.5,75.5C 196.842,76.3382 197.508,76.6716 198.5,76.5C 196.372,77.6291 194.039,77.7958 191.5,77C 186.895,71.3063 181.728,66.1397 176,61.5C 173.861,59.194 172.361,56.5273 171.5,53.5C 172.602,49.2327 175.269,47.7327 179.5,49C 184.842,53.0429 189.509,57.7095 193.5,63C 194.448,63.4828 195.448,63.6495 196.5,63.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eaeff4\",d:\"M 193.5,64.5 C 193.328,65.4916 193.662,66.1583 194.5,66.5C 197.607,71.6321 196.273,73.6321 190.5,72.5C 185.564,67.062 180.397,61.7286 175,56.5C 173.838,52.2857 175.338,50.4523 179.5,51C 183.4,54.8104 187.066,58.8104 190.5,63C 191.527,63.5133 192.527,64.0133 193.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#91692e\",d:\"M 399.5,55.5 C 399.833,55.5 400.167,55.5 400.5,55.5C 399.92,57.7488 398.587,59.4154 396.5,60.5C 396.557,59.391 396.89,58.391 397.5,57.5C 398.5,57.1667 399.167,56.5 399.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f64f52\",d:\"M 830.5,50.5 C 830.649,53.6074 830.149,56.6074 829,59.5C 827,60.1667 825.667,61.5 825,63.5C 824.667,69.8333 824.333,76.1667 824,82.5C 822.008,83.3281 820.508,84.6614 819.5,86.5C 818.167,86.5 816.833,86.5 815.5,86.5C 815.321,84.0459 815.987,81.8792 817.5,80C 817.265,79.1268 816.931,78.2935 816.5,77.5C 818.437,76.2557 820.104,74.7557 821.5,73C 820.923,69.9442 820.257,66.9442 819.5,64C 820.815,62.6054 820.481,61.6054 818.5,61C 821.514,56.3334 825.514,52.8334 830.5,50.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a2720\",d:\"M 338.5,71.5 C 338.5,71.1667 338.5,70.8333 338.5,70.5C 337.017,68.5163 335.351,66.683 333.5,65C 335.369,61.4457 338.035,59.1123 341.5,58C 348.687,64.2773 347.687,68.7773 338.5,71.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c2b4e\",d:\"M 413.5,49.5 C 411.566,52.0582 408.899,53.3915 405.5,53.5C 404.844,52.7222 404.011,52.0556 403,51.5C 402.235,51.5699 401.735,51.9033 401.5,52.5C 398.454,52.7247 396.121,54.058 394.5,56.5C 392.983,56.5106 391.816,57.1772 391,58.5C 386.605,64.3449 385.439,70.6782 387.5,77.5C 387.75,79.674 388.75,81.3406 390.5,82.5C 390.5,83.1667 390.5,83.8333 390.5,84.5C 391.806,86.8162 393.139,89.1495 394.5,91.5C 391.2,89.1924 388.533,86.1924 386.5,82.5C 384.959,77.6362 384.292,72.6362 384.5,67.5C 386.33,59.0055 391.33,53.3388 399.5,50.5C 404.13,49.7705 408.797,49.4372 413.5,49.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5665e\",d:\"M 800.5,64.5 C 800.576,66.9229 799.576,68.7562 797.5,70C 798.587,73.1866 798.42,76.3533 797,79.5C 796.329,80.2524 795.496,80.5858 794.5,80.5C 798.363,72.5274 796.029,68.8607 787.5,69.5C 787.167,68.5 786.5,67.8333 785.5,67.5C 784.648,64.7766 783.481,62.11 782,59.5C 781.333,57.5 781.333,55.5 782,53.5C 785.989,51.9817 788.489,53.3151 789.5,57.5C 794.217,58.1834 797.884,60.5167 800.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#372438\",d:\"M 217.5,57.5 C 213.102,60.8947 209.436,64.8947 206.5,69.5C 204.045,72.0775 201.378,74.4108 198.5,76.5C 197.508,76.6716 196.842,76.3382 196.5,75.5C 199.091,73.5756 201.425,71.2422 203.5,68.5C 207.167,64.5 210.833,60.5 214.5,56.5C 217.517,53.2113 216.85,50.8779 212.5,49.5C 208.609,50.285 206.276,52.6183 205.5,56.5C 203.833,57.5 202.5,58.8333 201.5,60.5C 199.786,63.2128 197.453,65.2128 194.5,66.5C 193.662,66.1583 193.328,65.4916 193.5,64.5C 194.791,64.7373 195.791,64.404 196.5,63.5C 200.265,58.5594 204.265,53.726 208.5,49C 216.033,47.3691 219.033,50.2024 217.5,57.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bc6571\",d:\"M 214.5,56.5 C 214.5,54.8333 214.5,53.1667 214.5,51.5C 210.062,50.4251 208.062,52.0917 208.5,56.5C 207.5,56.5 206.5,56.5 205.5,56.5C 206.276,52.6183 208.609,50.285 212.5,49.5C 216.85,50.8779 217.517,53.2113 214.5,56.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#263e50\",d:\"M 583.5,56.5 C 584.5,56.5 585.5,56.5 586.5,56.5C 586.703,58.0443 587.37,59.3777 588.5,60.5C 590.846,61.8546 592.846,63.5213 594.5,65.5C 595.92,67.7089 597.587,69.7089 599.5,71.5C 599.158,72.3382 598.492,72.6716 597.5,72.5C 595.947,70.615 593.947,69.615 591.5,69.5C 591.5,68.1667 591.5,66.8333 591.5,65.5C 589.801,65.4729 588.467,64.8062 587.5,63.5C 586.5,62.5 585.5,61.5 584.5,60.5C 584.567,59.0413 584.234,57.7079 583.5,56.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4e818a\",d:\"M 598.5,55.5 C 598.425,58.2062 598.092,60.8728 597.5,63.5C 595.821,63.2852 594.821,63.9519 594.5,65.5C 592.846,63.5213 590.846,61.8546 588.5,60.5C 587.37,59.3777 586.703,58.0443 586.5,56.5C 590.434,55.6403 594.434,55.307 598.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ad3d46\",d:\"M 830.5,46.5 C 831.117,46.6107 831.617,46.944 832,47.5C 832.495,49.4727 832.662,51.4727 832.5,53.5C 831.706,57.3628 829.872,60.6961 827,63.5C 826.795,70.2464 826.295,76.9131 825.5,83.5C 823.704,84.7927 822.037,86.2927 820.5,88C 817.183,88.4983 813.85,88.665 810.5,88.5C 808.132,86.0443 807.132,83.0443 807.5,79.5C 808.662,81.9862 809.996,84.4862 811.5,87C 814.367,87.8007 817.034,87.6341 819.5,86.5C 820.508,84.6614 822.008,83.3281 824,82.5C 824.333,76.1667 824.667,69.8333 825,63.5C 825.667,61.5 827,60.1667 829,59.5C 830.149,56.6074 830.649,53.6074 830.5,50.5C 829.749,49.4265 828.749,49.2599 827.5,50C 826.211,51.8022 824.544,52.9688 822.5,53.5C 824.598,50.3941 827.265,48.0607 830.5,46.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ab0e1\",d:\"M 127.5,55.5 C 125.598,58.3373 124.931,61.6707 125.5,65.5C 129.649,66.0803 133.316,65.4136 136.5,63.5C 137.5,63.8333 138.167,64.5 138.5,65.5C 131.345,66.6552 124.012,66.8218 116.5,66C 115.464,64.2245 115.464,62.3911 116.5,60.5C 117.919,57.8996 119.585,55.3996 121.5,53C 124.294,52.0276 126.294,52.8609 127.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5cbbe1\",d:\"M 127.5,55.5 C 131.052,57.2633 133.719,59.93 135.5,63.5C 134.167,63.5 132.833,63.5 131.5,63.5C 131.657,62.1266 131.49,60.7932 131,59.5C 129.373,58.4677 128.207,57.1344 127.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e2f4b\",d:\"M 566.5,50.5 C 567.922,50.7086 569.255,51.2086 570.5,52C 571.79,54.292 573.457,56.292 575.5,58C 578.47,59.1532 581.137,60.8199 583.5,63C 584.171,63.9862 584.171,65.1529 583.5,66.5C 580.998,64.8304 578.998,62.6637 577.5,60C 574.017,58.0085 570.684,55.8418 567.5,53.5C 566.89,52.609 566.557,51.609 566.5,50.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6cf0fd\",d:\"M 127.5,55.5 C 128.207,57.1344 129.373,58.4677 131,59.5C 131.49,60.7932 131.657,62.1266 131.5,63.5C 132.833,63.5 134.167,63.5 135.5,63.5C 135.833,63.5 136.167,63.5 136.5,63.5C 133.316,65.4136 129.649,66.0803 125.5,65.5C 124.931,61.6707 125.598,58.3373 127.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9a541\",d:\"M 339.5,60.5 C 343.317,61.5335 344.317,63.8668 342.5,67.5C 339.5,69.2257 337.834,68.3923 337.5,65C 337.519,63.167 338.185,61.667 339.5,60.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5e778e\",d:\"M 599.5,71.5 C 597.587,69.7089 595.92,67.7089 594.5,65.5C 594.821,63.9519 595.821,63.2852 597.5,63.5C 598.092,60.8728 598.425,58.2062 598.5,55.5C 599.167,55.5 599.5,55.1667 599.5,54.5C 594.265,52.55 588.598,51.8833 582.5,52.5C 582.5,53.5 582.5,54.5 582.5,55.5C 581.566,54.4324 581.232,53.099 581.5,51.5C 587.833,51.5 594.167,51.5 600.5,51.5C 600.824,58.3543 600.491,65.021 599.5,71.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#edfcfe\",d:\"M 599.5,54.5 C 593.788,54.313 588.121,54.6463 582.5,55.5C 582.5,54.5 582.5,53.5 582.5,52.5C 588.598,51.8833 594.265,52.55 599.5,54.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c708e\",d:\"M 669.5,66.5 C 666.43,66.3677 663.43,66.701 660.5,67.5C 660.611,66.8826 660.944,66.3826 661.5,66C 664.367,65.1993 667.034,65.3659 669.5,66.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#216daa\",d:\"M 116.5,60.5 C 115.464,62.3911 115.464,64.2245 116.5,66C 124.012,66.8218 131.345,66.6552 138.5,65.5C 139.338,65.8417 139.672,66.5084 139.5,67.5C 130.833,67.5 122.167,67.5 113.5,67.5C 113.166,64.509 114.166,62.1757 116.5,60.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fa6464\",d:\"M 830.5,50.5 C 825.514,52.8334 821.514,56.3334 818.5,61C 820.481,61.6054 820.815,62.6054 819.5,64C 820.257,66.9442 820.923,69.9442 821.5,73C 820.104,74.7557 818.437,76.2557 816.5,77.5C 816.931,78.2935 817.265,79.1268 817.5,80C 815.987,81.8792 815.321,84.0459 815.5,86.5C 816.833,86.5 818.167,86.5 819.5,86.5C 817.034,87.6341 814.367,87.8007 811.5,87C 809.996,84.4862 808.662,81.9862 807.5,79.5C 807.5,74.5 807.5,69.5 807.5,64.5C 811.959,60.1031 816.959,56.4365 822.5,53.5C 824.544,52.9688 826.211,51.8022 827.5,50C 828.749,49.2599 829.749,49.4265 830.5,50.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f2946\",d:\"M 84.5,67.5 C 94.1667,67.5 103.833,67.5 113.5,67.5C 122.167,67.5 130.833,67.5 139.5,67.5C 141.167,67.5 142.833,67.5 144.5,67.5C 145.791,67.2627 146.791,67.596 147.5,68.5C 147.5,94.8333 147.5,121.167 147.5,147.5C 146.833,135.5 146.167,123.5 145.5,111.5C 145.5,106.167 145.5,100.833 145.5,95.5C 145.5,94.8333 145.5,94.1667 145.5,93.5C 145.826,85.3159 145.492,77.3159 144.5,69.5C 138.833,69.5 133.167,69.5 127.5,69.5C 126.566,70.5676 126.232,71.901 126.5,73.5C 126.5,79.8333 126.5,86.1667 126.5,92.5C 126.5,92.8333 126.5,93.1667 126.5,93.5C 125.833,93.5 125.167,93.5 124.5,93.5C 124.5,93.1667 124.5,92.8333 124.5,92.5C 124.5,86.1667 124.5,79.8333 124.5,73.5C 124.5,72.1667 124.5,70.8333 124.5,69.5C 111.656,69.1713 98.989,69.5046 86.5,70.5C 86.5,95.1667 86.5,119.833 86.5,144.5C 86.1667,144.5 85.8333,144.5 85.5,144.5C 85.6666,129.163 85.4999,113.83 85,98.5C 84.6174,97.944 84.1174,97.6107 83.5,97.5C 83.5,96.8333 83.5,96.1667 83.5,95.5C 83.5,93.8333 83.5,92.1667 83.5,90.5C 84.4657,82.9196 84.799,75.253 84.5,67.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7b9fb2\",d:\"M 217.5,57.5 C 214.564,62.1053 210.898,66.1053 206.5,69.5C 209.436,64.8947 213.102,60.8947 217.5,57.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#68d0f0\",d:\"M 947.5,64.5 C 948.161,65.7175 948.828,67.0508 949.5,68.5C 951.461,64.993 954.461,63.6597 958.5,64.5C 958.5,66.5 958.5,68.5 958.5,70.5C 952.833,70.5 947.167,70.5 941.5,70.5C 941.5,68.5 941.5,66.5 941.5,64.5C 943.5,64.5 945.5,64.5 947.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dc888c\",d:\"M 201.5,60.5 C 201.249,62.1703 200.582,63.6703 199.5,65C 200.337,66.0113 200.67,67.1779 200.5,68.5C 201.5,68.5 202.5,68.5 203.5,68.5C 201.425,71.2422 199.091,73.5756 196.5,75.5C 193.911,75.539 191.911,74.539 190.5,72.5C 196.273,73.6321 197.607,71.6321 194.5,66.5C 197.453,65.2128 199.786,63.2128 201.5,60.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7bb3cf\",d:\"M 282.5,54.5 C 283.167,71.1667 283.833,87.8333 284.5,104.5C 284.44,105.043 284.107,105.376 283.5,105.5C 282.501,88.5131 282.167,71.5131 282.5,54.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d69317\",d:\"M 557.5,45.5 C 543.671,56.6502 530.671,68.9836 518.5,82.5C 514.532,85.176 510.865,88.3426 507.5,92C 506.184,92.5281 505.517,92.0281 505.5,90.5C 509.183,87.8151 512.183,84.4818 514.5,80.5C 517.86,76.4729 521.527,72.8062 525.5,69.5C 533.78,62.5572 541.78,55.2238 549.5,47.5C 551.244,46.1143 553.244,45.1143 555.5,44.5C 556.416,44.5427 557.083,44.8761 557.5,45.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6294c2\",d:\"M 780.5,66.5 C 781.993,67.3121 782.66,68.6455 782.5,70.5C 781.79,73.7992 781.457,77.1326 781.5,80.5C 780.968,75.9418 780.635,71.2751 780.5,66.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a796a0\",d:\"M 86.5,70.5 C 98.989,69.5046 111.656,69.1713 124.5,69.5C 124.5,70.8333 124.5,72.1667 124.5,73.5C 124.167,73.5 123.833,73.5 123.5,73.5C 123.5,72.5 123.5,71.5 123.5,70.5C 111.167,70.5 98.8333,70.5 86.5,70.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#21191e\",d:\"M 834.5,55.5 C 832.56,59.2797 830.393,62.9464 828,66.5C 828.393,71.1324 828.393,75.7991 828,80.5C 827.626,82.4913 826.793,84.158 825.5,85.5C 825.5,84.8333 825.5,84.1667 825.5,83.5C 826.295,76.9131 826.795,70.2464 827,63.5C 829.872,60.6961 831.706,57.3628 832.5,53.5C 833.302,52.0484 833.802,50.3817 834,48.5C 834.497,50.8098 834.663,53.1432 834.5,55.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8e5e6\",d:\"M 86.5,70.5 C 98.8333,70.5 111.167,70.5 123.5,70.5C 123.5,71.5 123.5,72.5 123.5,73.5C 112.167,73.5 100.833,73.5 89.5,73.5C 88.6678,98.3359 88.0011,123.336 87.5,148.5C 87.1667,148.5 86.8333,148.5 86.5,148.5C 86.5,147.167 86.5,145.833 86.5,144.5C 86.5,119.833 86.5,95.1667 86.5,70.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#def8fc\",d:\"M 127.5,69.5 C 133.167,69.5 138.833,69.5 144.5,69.5C 144.5,70.1667 144.5,70.8333 144.5,71.5C 138.925,72.4524 133.259,72.7857 127.5,72.5C 127.5,71.5 127.5,70.5 127.5,69.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9aeefa\",d:\"M 338.5,70.5 C 338.5,70.8333 338.5,71.1667 338.5,71.5C 338.414,72.4959 338.748,73.3292 339.5,74C 336.702,76.0664 337.035,77.5664 340.5,78.5C 341.982,76.1093 343.649,73.7759 345.5,71.5C 346.325,70.6143 347.325,70.281 348.5,70.5C 348.421,71.9305 348.754,73.2638 349.5,74.5C 347.321,75.7567 345.321,77.2567 343.5,79C 346.397,80.3652 349.23,81.8652 352,83.5C 353.667,81.9352 355.333,80.2685 357,78.5C 357.667,81.8333 357.667,85.1667 357,88.5C 355.542,87.2532 354.042,87.2532 352.5,88.5C 351.028,97.7665 349.862,97.7665 349,88.5C 347.144,84.2079 343.977,82.0412 339.5,82C 337.606,83.4038 335.606,84.5705 333.5,85.5C 332.151,85.1543 330.817,84.821 329.5,84.5C 327.833,83.1667 326.167,81.8333 324.5,80.5C 324.167,79.8333 323.833,79.1667 323.5,78.5C 323.617,76.5165 322.95,74.8498 321.5,73.5C 317.968,73.4426 314.302,73.9426 310.5,75C 310,75.5 309.5,76 309,76.5C 308.86,74.4787 308.693,72.6453 308.5,71C 311.099,70.231 313.599,70.3977 316,71.5C 316.317,69.6992 316.984,69.3659 318,70.5C 319.009,68.9751 319.509,67.3084 319.5,65.5C 317.897,65.6882 316.563,65.1882 315.5,64C 317.167,63.3333 318.833,63.3333 320.5,64C 322.668,68.6991 323.668,68.5324 323.5,63.5C 329.083,61.3977 332.083,63.3977 332.5,69.5C 333.192,68.9747 333.692,68.3081 334,67.5C 334.471,69.2464 335.138,70.913 336,72.5C 336.417,71.244 337.25,70.5774 338.5,70.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a8dc3\",d:\"M 384.5,67.5 C 384.292,72.6362 384.959,77.6362 386.5,82.5C 385.207,81.158 384.374,79.4913 384,77.5C 383.192,73.9733 383.359,70.6399 384.5,67.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4aa0f\",d:\"M 558.5,45.5 C 558.833,45.5 559.167,45.5 559.5,45.5C 560.833,47.5 562.5,49.1667 564.5,50.5C 565.167,50.5 565.833,50.5 566.5,50.5C 566.557,51.609 566.89,52.609 567.5,53.5C 573.473,58.8063 579.14,64.4729 584.5,70.5C 586.087,75.9218 589.587,79.5885 595,81.5C 596.009,83.0249 596.509,84.6916 596.5,86.5C 595.5,86.5 594.5,86.5 593.5,86.5C 591.401,85.6303 591.068,84.297 592.5,82.5C 584.893,78.2269 578.893,72.2269 574.5,64.5C 573.305,66.297 571.638,67.297 569.5,67.5C 569.297,65.6096 569.963,64.1096 571.5,63C 565.832,58.1643 561.499,52.331 558.5,45.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#462410\",d:\"M 567.5,53.5 C 570.684,55.8418 574.017,58.0085 577.5,60C 578.998,62.6637 580.998,64.8304 583.5,66.5C 589.542,72.1757 595.542,77.8424 601.5,83.5C 602.5,84.8333 603.5,86.1667 604.5,87.5C 597.493,82.3157 590.826,76.649 584.5,70.5C 579.14,64.4729 573.473,58.8063 567.5,53.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8bc8db\",d:\"M 127.5,69.5 C 127.5,70.5 127.5,71.5 127.5,72.5C 133.259,72.7857 138.925,72.4524 144.5,71.5C 144.5,72.1667 144.5,72.8333 144.5,73.5C 138.5,73.5 132.5,73.5 126.5,73.5C 126.232,71.901 126.566,70.5676 127.5,69.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#251f1c\",d:\"M 401.5,52.5 C 401.735,51.9033 402.235,51.5699 403,51.5C 404.011,52.0556 404.844,52.7222 405.5,53.5C 402.809,56.1951 400.475,59.1951 398.5,62.5C 396.088,71.6149 398.754,78.6149 406.5,83.5C 406.611,84.1174 406.944,84.6174 407.5,85C 411.486,85.4988 415.486,85.6655 419.5,85.5C 420.968,86.7791 421.635,88.4458 421.5,90.5C 420.71,91.4013 419.71,92.0679 418.5,92.5C 417.5,92.5 416.5,92.5 415.5,92.5C 418.259,92.0667 419.592,90.4 419.5,87.5C 416.833,87.5 414.167,87.5 411.5,87.5C 399.222,84.4177 393.889,76.4177 395.5,63.5C 396.11,62.609 396.443,61.609 396.5,60.5C 398.587,59.4154 399.92,57.7488 400.5,55.5C 403.217,54.3218 403.55,53.3218 401.5,52.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7cec9\",d:\"M 794.5,80.5 C 793.209,80.7373 792.209,80.404 791.5,79.5C 791.162,76.8431 791.829,74.5098 793.5,72.5C 792.965,70.8987 791.965,70.3987 790.5,71C 789.884,73.1785 788.717,75.0118 787,76.5C 786.814,79.0356 786.314,81.369 785.5,83.5C 782.284,78.1389 782.951,73.4722 787.5,69.5C 796.029,68.8607 798.363,72.5274 794.5,80.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#222037\",d:\"M 669.5,66.5 C 681.374,70.2722 684.541,77.9389 679,89.5C 669.612,99.2932 661.112,98.6266 653.5,87.5C 652.246,83.1516 652.246,78.8183 653.5,74.5C 655.123,71.5091 657.457,69.1757 660.5,67.5C 663.43,66.701 666.43,66.3677 669.5,66.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5b8c0\",d:\"M 673.5,71.5 C 672.833,71.5 672.167,71.5 671.5,71.5C 668.313,70.1944 664.98,70.1944 661.5,71.5C 658.463,75.0434 656.463,79.0434 655.5,83.5C 653.291,77.1319 655.291,72.2986 661.5,69C 666.226,66.7112 670.226,67.5446 673.5,71.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e67677\",d:\"M 791.5,79.5 C 790.21,78.9423 789.377,77.9423 789,76.5C 788.13,77.1079 787.63,77.9412 787.5,79C 788.987,81.2908 789.987,83.7908 790.5,86.5C 790.5,86.8333 790.5,87.1667 790.5,87.5C 789.833,87.5 789.167,87.5 788.5,87.5C 787.5,86.1667 786.5,84.8333 785.5,83.5C 786.314,81.369 786.814,79.0356 787,76.5C 788.717,75.0118 789.884,73.1785 790.5,71C 791.965,70.3987 792.965,70.8987 793.5,72.5C 791.829,74.5098 791.162,76.8431 791.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1d561\",d:\"M 391.5,61.5 C 391.529,66.129 390.863,70.629 389.5,75C 389.725,77.5281 390.058,80.0281 390.5,82.5C 388.75,81.3406 387.75,79.674 387.5,77.5C 387.335,74.1501 387.502,70.8168 388,67.5C 388.876,65.2418 390.043,63.2418 391.5,61.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9c521\",d:\"M 397.5,57.5 C 396.89,58.391 396.557,59.391 396.5,60.5C 396.443,61.609 396.11,62.609 395.5,63.5C 393.49,66.4436 391.823,69.7769 390.5,73.5C 393.815,77.4007 396.981,81.4007 400,85.5C 400.914,84.3463 401.747,84.513 402.5,86C 400.75,87.3186 398.75,87.8186 396.5,87.5C 395.833,87.5 395.167,87.5 394.5,87.5C 393.167,86.5 391.833,85.5 390.5,84.5C 390.5,83.8333 390.5,83.1667 390.5,82.5C 390.058,80.0281 389.725,77.5281 389.5,75C 390.863,70.629 391.529,66.129 391.5,61.5C 393.246,59.7484 395.246,58.4151 397.5,57.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d3254\",d:\"M 282.5,54.5 C 282.167,71.5131 282.501,88.5131 283.5,105.5C 284.107,105.376 284.44,105.043 284.5,104.5C 294.696,94.1365 305.363,84.3032 316.5,75C 318.877,75.8274 321.211,76.9941 323.5,78.5C 323.833,79.1667 324.167,79.8333 324.5,80.5C 323.167,80.1667 321.833,79.8333 320.5,79.5C 320.167,79.5 319.833,79.5 319.5,79.5C 319.189,78.5222 318.522,77.8555 317.5,77.5C 305.157,87.8464 293.157,98.5131 281.5,109.5C 281.667,91.4969 281.5,73.4969 281,55.5C 280.722,54.5842 280.222,53.9175 279.5,53.5C 279.5,52.8333 279.167,52.5 278.5,52.5C 278.672,51.5084 278.338,50.8417 277.5,50.5C 276.833,49.1667 275.833,48.1667 274.5,47.5C 268.277,48.376 263.277,51.376 259.5,56.5C 258.549,57.9187 258.216,59.5853 258.5,61.5C 257.833,63.5 257.167,65.5 256.5,67.5C 256.84,64.0275 256.507,61.3609 255.5,59.5C 253.608,60.7017 251.774,62.035 250,63.5C 249.09,65.9449 249.924,67.2782 252.5,67.5C 253.263,68.2679 254.263,68.7679 255.5,69C 253.866,69.4935 252.199,69.6602 250.5,69.5C 249.007,68.5549 247.507,67.5549 246,66.5C 242.38,68.2965 239.213,70.6298 236.5,73.5C 235.506,83.6532 235.172,93.9865 235.5,104.5C 235.5,112.167 235.5,119.833 235.5,127.5C 235.5,134.167 235.5,140.833 235.5,147.5C 234.668,123.003 234.168,98.3367 234,73.5C 233.5,80.1583 233.334,86.825 233.5,93.5C 231.901,93.7678 230.568,93.4345 229.5,92.5C 231.942,92.6463 232.609,91.813 231.5,90C 226.886,88.3533 222.386,86.5199 218,84.5C 215.738,85.7125 213.571,87.0459 211.5,88.5C 210.791,87.596 209.791,87.2627 208.5,87.5C 211.365,85.1435 214.532,83.1435 218,81.5C 222.437,84.3704 227.271,86.3704 232.5,87.5C 232.334,82.4889 232.501,77.4889 233,72.5C 245.405,64.0981 257.238,54.9314 268.5,45C 275.678,44.3297 280.345,47.4964 282.5,54.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e2f9fc\",d:\"M 250.5,69.5 C 251.919,70.4511 253.585,70.7845 255.5,70.5C 255.5,71.8333 255.5,73.1667 255.5,74.5C 250.167,74.5 244.833,74.5 239.5,74.5C 238.504,74.4142 237.671,74.7476 237,75.5C 236.536,74.9056 236.369,74.2389 236.5,73.5C 239.213,70.6298 242.38,68.2965 246,66.5C 247.507,67.5549 249.007,68.5549 250.5,69.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#47d6fa\",d:\"M 274.5,47.5 C 275.833,48.1667 276.833,49.1667 277.5,50.5C 277.5,60.5 277.5,70.5 277.5,80.5C 276.883,80.6107 276.383,80.944 276,81.5C 275.87,85.9508 275.204,90.2841 274,94.5C 273.671,90.3271 272.504,86.6604 270.5,83.5C 269.5,83.5 268.5,83.5 267.5,83.5C 265.879,83.2131 264.879,82.2131 264.5,80.5C 266.167,78.5 267.833,76.5 269.5,74.5C 267.383,73.5307 265.383,73.864 263.5,75.5C 262.988,71.6421 262.322,67.8088 261.5,64C 261.833,62.5 262.167,61 262.5,59.5C 266.27,55.0633 270.27,51.0633 274.5,47.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cce7f2\",d:\"M 255.5,59.5 C 255.5,62.1667 255.5,64.8333 255.5,67.5C 254.5,67.5 253.5,67.5 252.5,67.5C 249.924,67.2782 249.09,65.9449 250,63.5C 251.774,62.035 253.608,60.7017 255.5,59.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bff3fa\",d:\"M 274.5,47.5 C 270.27,51.0633 266.27,55.0633 262.5,59.5C 262.167,61 261.833,62.5 261.5,64C 262.322,67.8088 262.988,71.6421 263.5,75.5C 262.937,79.2226 261.603,79.8893 259.5,77.5C 259.5,70.5 259.5,63.5 259.5,56.5C 263.277,51.376 268.277,48.376 274.5,47.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d2033\",d:\"M 462.5,95.5 C 463.5,94.8333 464.5,94.1667 465.5,93.5C 466.5,93.1667 467.167,92.5 467.5,91.5C 467.5,91.1667 467.5,90.8333 467.5,90.5C 469.377,89.3409 469.877,87.6742 469,85.5C 467.549,83.5359 465.716,82.2026 463.5,81.5C 462.833,81.5 462.167,81.5 461.5,81.5C 462.406,79.0863 464.072,78.253 466.5,79C 468.694,81.6947 470.694,84.528 472.5,87.5C 470.733,90.7698 468.4,93.6032 465.5,96C 464.251,96.7401 463.251,96.5735 462.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc409\",d:\"M 557.5,45.5 C 557.833,45.5 558.167,45.5 558.5,45.5C 561.499,52.331 565.832,58.1643 571.5,63C 569.963,64.1096 569.297,65.6096 569.5,67.5C 571.638,67.297 573.305,66.297 574.5,64.5C 578.893,72.2269 584.893,78.2269 592.5,82.5C 591.068,84.297 591.401,85.6303 593.5,86.5C 593.5,86.8333 593.5,87.1667 593.5,87.5C 593.5,90.8333 593.5,94.1667 593.5,97.5C 590.5,97.5 587.5,97.5 584.5,97.5C 583.833,97.5 583.5,97.1667 583.5,96.5C 583.795,94.2646 583.461,92.2646 582.5,90.5C 581.458,89.2089 580.292,89.2089 579,90.5C 578.502,93.8168 578.335,97.1501 578.5,100.5C 577.522,100.811 576.855,101.478 576.5,102.5C 577.309,104.071 577.643,105.738 577.5,107.5C 574.67,107.694 572.004,108.361 569.5,109.5C 570.319,121.159 570.485,132.826 570,144.5C 568.961,145.244 568.461,146.244 568.5,147.5C 567.505,135.011 567.171,122.344 567.5,109.5C 567.196,108.85 566.863,108.183 566.5,107.5C 557.521,106.468 548.521,105.635 539.5,105C 540.793,104.51 542.127,104.343 543.5,104.5C 543.5,103.5 543.5,102.5 543.5,101.5C 540.439,101.444 538.272,102.778 537,105.5C 536.333,104.167 535.333,103.167 534,102.5C 533.508,101.451 533.674,100.451 534.5,99.5C 538.713,98.4728 539.213,96.8061 536,94.5C 534.75,86.5668 533.25,86.5668 531.5,94.5C 531.833,95.1667 532.167,95.8333 532.5,96.5C 527.952,96.8575 526.618,99.0242 528.5,103C 529.996,103.507 531.163,103.007 532,101.5C 532.167,102 532.333,102.5 532.5,103C 531.125,105.315 530.125,107.815 529.5,110.5C 528.675,111.386 527.675,111.719 526.5,111.5C 526.5,114.167 526.5,116.833 526.5,119.5C 524.167,119.5 521.833,119.5 519.5,119.5C 519.5,122.167 519.5,124.833 519.5,127.5C 516.455,127.296 513.621,127.296 511,127.5C 510.5,120 510,112.5 509.5,105C 508.421,98.5244 510.588,93.6911 516,90.5C 517.207,88.5601 517.374,86.7267 516.5,85C 517.756,84.5831 518.423,83.7498 518.5,82.5C 530.671,68.9836 543.671,56.6502 557.5,45.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eeca37\",d:\"M 565.5,75.5 C 563.37,73.8729 561.37,72.0396 559.5,70C 548.328,66.4088 542.661,70.4088 542.5,82C 543.077,84.137 543.41,86.3037 543.5,88.5C 542.883,88.3893 542.383,88.056 542,87.5C 541.042,82.1607 541.542,76.994 543.5,72C 543.095,71.0546 542.428,70.3879 541.5,70C 547.579,67.6584 553.912,66.9918 560.5,68C 562.415,70.3996 564.081,72.8996 565.5,75.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#507d94\",d:\"M 653.5,74.5 C 652.246,78.8183 652.246,83.1516 653.5,87.5C 651.983,85.5379 651.316,83.2046 651.5,80.5C 651.667,78.8333 651.833,77.1667 652,75.5C 652.383,74.944 652.883,74.6107 653.5,74.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fa6b5c\",d:\"M 671.5,71.5 C 672.167,71.5 672.833,71.5 673.5,71.5C 673.833,71.5 674.167,71.5 674.5,71.5C 674.848,73.7128 675.681,75.7128 677,77.5C 677.759,83.2235 675.926,87.8901 671.5,91.5C 671.5,91.8333 671.5,92.1667 671.5,92.5C 668.482,92.6646 665.482,92.498 662.5,92C 661.391,89.1171 659.724,86.6171 657.5,84.5C 657.723,75.2744 662.39,70.9411 671.5,71.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6a0710\",d:\"M 665.5,77.5 C 666.5,77.5 667.5,77.5 668.5,77.5C 668.454,81.2349 666.787,82.5683 663.5,81.5C 664.63,80.3777 665.297,79.0443 665.5,77.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d2643\",d:\"M 872.5,74.5 C 873.873,74.3433 875.207,74.51 876.5,75C 875.263,75.2321 874.263,75.7321 873.5,76.5C 861.867,86.4643 850.534,96.7977 839.5,107.5C 838.596,108.209 838.263,109.209 838.5,110.5C 843.5,111.003 843.167,111.336 837.5,111.5C 835.915,110.998 835.415,109.998 836,108.5C 848.036,96.9614 860.203,85.628 872.5,74.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#616178\",d:\"M 876.5,76.5 C 878.884,79.2885 880.718,82.2885 882,85.5C 880.67,84.4178 879.17,83.7512 877.5,83.5C 875.345,83.372 873.345,83.872 871.5,85C 867.606,88.4044 863.606,91.5711 859.5,94.5C 864.206,88.6273 869.706,83.6273 876,79.5C 876.483,78.552 876.649,77.552 876.5,76.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb6655\",d:\"M 122.5,79.5 C 122.5,83.5 122.5,87.5 122.5,91.5C 117.305,91.1795 112.305,91.5128 107.5,92.5C 106.833,92.5 106.167,92.5 105.5,92.5C 104.833,92.5 104.167,92.5 103.5,92.5C 99.7292,93.2263 97.0626,91.893 95.5,88.5C 96.7052,86.8791 96.5385,85.5458 95,84.5C 94.6667,84.8333 94.3333,85.1667 94,85.5C 91.9218,99.4178 91.0885,113.418 91.5,127.5C 90.5033,110.008 90.1699,92.3412 90.5,74.5C 101.167,74.5 111.833,74.5 122.5,74.5C 122.5,76.1667 122.5,77.8333 122.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#351c12\",d:\"M 532.5,61.5 C 530.167,64.1667 527.833,66.8333 525.5,69.5C 521.527,72.8062 517.86,76.4729 514.5,80.5C 509.869,83.4642 505.869,87.1308 502.5,91.5C 502.433,90.0413 502.766,88.7079 503.5,87.5C 509.658,81.8421 515.658,76.0087 521.5,70C 525.061,66.9274 528.728,64.0941 532.5,61.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f65252\",d:\"M 800.5,64.5 C 800.833,64.5 801.167,64.5 801.5,64.5C 801.666,71.175 801.5,77.8417 801,84.5C 800.5,85 800,85.5 799.5,86C 796.518,86.498 793.518,86.6646 790.5,86.5C 789.987,83.7908 788.987,81.2908 787.5,79C 787.63,77.9412 788.13,77.1079 789,76.5C 789.377,77.9423 790.21,78.9423 791.5,79.5C 792.209,80.404 793.209,80.7373 794.5,80.5C 795.496,80.5858 796.329,80.2524 797,79.5C 798.42,76.3533 798.587,73.1866 797.5,70C 799.576,68.7562 800.576,66.9229 800.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#31a7df\",d:\"M 126.5,73.5 C 132.5,73.5 138.5,73.5 144.5,73.5C 144.821,79.0262 144.488,84.3595 143.5,89.5C 143.806,86.6146 143.473,83.9479 142.5,81.5C 142.167,81.5 141.833,81.5 141.5,81.5C 138.107,77.6973 133.773,76.0306 128.5,76.5C 128.5,81.1667 128.5,85.8333 128.5,90.5C 133.5,90.5 138.5,90.5 143.5,90.5C 137.934,91.2073 132.268,91.8739 126.5,92.5C 126.5,86.1667 126.5,79.8333 126.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#375d91\",d:\"M 743.5,78.5 C 744.391,79.1098 745.391,79.4431 746.5,79.5C 748.142,81.0808 750.142,81.7475 752.5,81.5C 752.5,83.5 752.5,85.5 752.5,87.5C 749.315,86.0087 746.315,84.3421 743.5,82.5C 743.5,81.5 743.5,80.5 743.5,79.5C 743.5,79.1667 743.5,78.8333 743.5,78.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#261019\",d:\"M 803.5,64.5 C 804.167,64.5 804.833,64.5 805.5,64.5C 805.833,64.5 806.167,64.5 806.5,64.5C 806.5,71.5 806.5,78.5 806.5,85.5C 805.167,85.5 803.833,85.5 802.5,85.5C 803.462,78.5878 803.795,71.5878 803.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e47875\",d:\"M 671.5,71.5 C 662.39,70.9411 657.723,75.2744 657.5,84.5C 659.724,86.6171 661.391,89.1171 662.5,92C 665.482,92.498 668.482,92.6646 671.5,92.5C 662.853,95.5371 657.52,92.5371 655.5,83.5C 656.463,79.0434 658.463,75.0434 661.5,71.5C 664.98,70.1944 668.313,70.1944 671.5,71.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#756a75\",d:\"M 739.5,80.5 C 738.522,83.4778 736.522,85.4778 733.5,86.5C 735.118,84.215 737.118,82.215 739.5,80.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b86a7d\",d:\"M 806.5,64.5 C 806.833,64.5 807.167,64.5 807.5,64.5C 807.5,69.5 807.5,74.5 807.5,79.5C 807.132,83.0443 808.132,86.0443 810.5,88.5C 810.5,88.8333 810.5,89.1667 810.5,89.5C 810.44,90.0431 810.107,90.3764 809.5,90.5C 808.304,88.8554 807.304,87.1887 806.5,85.5C 806.5,78.5 806.5,71.5 806.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7096a8\",d:\"M 406.5,83.5 C 411.438,84.3924 416.438,84.7257 421.5,84.5C 421.158,85.3382 420.492,85.6716 419.5,85.5C 415.486,85.6655 411.486,85.4988 407.5,85C 406.944,84.6174 406.611,84.1174 406.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3b495b\",d:\"M 539.5,50.5 C 537.672,53.4085 536.006,56.4085 534.5,59.5C 533.5,59.8333 532.833,60.5 532.5,61.5C 528.728,64.0941 525.061,66.9274 521.5,70C 515.658,76.0087 509.658,81.8421 503.5,87.5C 501.058,87.3537 500.391,88.187 501.5,90C 500.213,91.4095 499.046,92.9095 498,94.5C 497.107,93.2888 496.274,93.2888 495.5,94.5C 496.325,95.3857 497.325,95.719 498.5,95.5C 498.5,96.5 498.5,97.5 498.5,98.5C 498.167,98.5 497.833,98.5 497.5,98.5C 497.631,97.6236 497.298,96.9569 496.5,96.5C 495.264,97.2458 493.93,97.5792 492.5,97.5C 495.258,96.0335 494.925,95.3668 491.5,95.5C 506.897,79.767 522.897,64.767 539.5,50.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42516a\",d:\"M 587.5,63.5 C 588.467,64.8062 589.801,65.4729 591.5,65.5C 591.5,66.8333 591.5,68.1667 591.5,69.5C 593.947,69.615 595.947,70.615 597.5,72.5C 605.853,79.3446 613.853,86.8446 621.5,95C 620.906,95.4643 620.239,95.631 619.5,95.5C 614.694,94.5798 611.028,91.9131 608.5,87.5C 606.132,86.1111 603.799,84.7778 601.5,83.5C 595.542,77.8424 589.542,72.1757 583.5,66.5C 584.833,66.5 586.167,66.5 587.5,66.5C 587.5,65.5 587.5,64.5 587.5,63.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffc5b0\",d:\"M 110.5,83.5 C 111.833,83.5 113.167,83.5 114.5,83.5C 114.5,84.5 114.5,85.5 114.5,86.5C 113.167,86.5 111.833,86.5 110.5,86.5C 110.5,85.5 110.5,84.5 110.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a2438\",d:\"M 429.5,83.5 C 427.217,86.3026 424.55,88.6359 421.5,90.5C 421.635,88.4458 420.968,86.7791 419.5,85.5C 420.492,85.6716 421.158,85.3382 421.5,84.5C 424.048,83.3083 426.382,81.6417 428.5,79.5C 429.429,80.6888 429.762,82.0222 429.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c96163\",d:\"M 674.5,71.5 C 678.303,73.3049 679.969,76.3049 679.5,80.5C 679.384,83.9316 678.217,86.9316 676,89.5C 674.67,90.5822 673.17,91.2488 671.5,91.5C 675.926,87.8901 677.759,83.2235 677,77.5C 675.681,75.7128 674.848,73.7128 674.5,71.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d7dce3\",d:\"M 743.5,78.5 C 743.5,78.8333 743.5,79.1667 743.5,79.5C 741.901,79.2322 740.568,79.5655 739.5,80.5C 737.118,82.215 735.118,84.215 733.5,86.5C 726.228,92.1027 719.562,98.436 713.5,105.5C 711.436,105.762 710.103,106.929 709.5,109C 708.833,109.167 708.167,109.333 707.5,109.5C 706.068,109.267 705.568,108.6 706,107.5C 717.353,96.48 729.02,85.8133 741,75.5C 742.31,76.1301 743.144,77.1301 743.5,78.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a7393\",d:\"M 759.5,72.5 C 750.167,72.8333 750.167,73.1667 759.5,73.5C 759.146,78.3947 759.146,83.3947 759.5,88.5C 757.883,89.038 756.216,89.3713 754.5,89.5C 753.5,89.1667 752.833,88.5 752.5,87.5C 752.5,85.5 752.5,83.5 752.5,81.5C 750.142,81.7475 748.142,81.0808 746.5,79.5C 746.5,79.1667 746.5,78.8333 746.5,78.5C 750.828,78.2843 754.828,77.1177 758.5,75C 756.19,74.5034 753.857,74.3367 751.5,74.5C 751.5,73.5 751.5,72.5 751.5,71.5C 754.385,71.1936 757.052,71.5269 759.5,72.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecfcfe\",d:\"M 360.5,80.5 C 368.58,81.4698 369.58,84.8032 363.5,90.5C 359.709,88.0044 358.709,84.6711 360.5,80.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebc9c7\",d:\"M 463.5,82.5 C 463.5,82.8333 463.5,83.1667 463.5,83.5C 463.346,85.9699 462.346,87.9699 460.5,89.5C 458.775,89.1575 458.275,88.1575 459,86.5C 460.694,85.3012 462.194,83.9678 463.5,82.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b85164\",d:\"M 463.5,81.5 C 465.716,82.2026 467.549,83.5359 469,85.5C 469.877,87.6742 469.377,89.3409 467.5,90.5C 468.32,86.7779 466.987,84.4446 463.5,83.5C 463.5,83.1667 463.5,82.8333 463.5,82.5C 463.5,82.1667 463.5,81.8333 463.5,81.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c13e55\",d:\"M 802.5,61.5 C 803.404,62.209 803.737,63.209 803.5,64.5C 803.795,71.5878 803.462,78.5878 802.5,85.5C 799.017,88.6664 795.017,89.3331 790.5,87.5C 790.5,87.1667 790.5,86.8333 790.5,86.5C 793.518,86.6646 796.518,86.498 799.5,86C 800,85.5 800.5,85 801,84.5C 801.5,77.8417 801.666,71.175 801.5,64.5C 802.404,63.791 802.737,62.791 802.5,61.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3b120\",d:\"M 395.5,63.5 C 393.889,76.4177 399.222,84.4177 411.5,87.5C 412.058,88.7899 413.058,89.6232 414.5,90C 409.516,91.9206 404.516,91.9206 399.5,90C 398.058,89.6232 397.058,88.7899 396.5,87.5C 398.75,87.8186 400.75,87.3186 402.5,86C 401.747,84.513 400.914,84.3463 400,85.5C 396.981,81.4007 393.815,77.4007 390.5,73.5C 391.823,69.7769 393.49,66.4436 395.5,63.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#23476c\",d:\"M 84.5,67.5 C 84.799,75.253 84.4657,82.9196 83.5,90.5C 80.2154,90.0719 77.2154,89.0719 74.5,87.5C 75.791,87.7373 76.791,87.404 77.5,86.5C 79.4352,87.1495 81.4352,87.4828 83.5,87.5C 83.176,80.6457 83.5093,73.979 84.5,67.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c2a54\",d:\"M 461.5,81.5 C 462.167,81.5 462.833,81.5 463.5,81.5C 463.5,81.8333 463.5,82.1667 463.5,82.5C 462.194,83.9678 460.694,85.3012 459,86.5C 458.275,88.1575 458.775,89.1575 460.5,89.5C 460.833,90.1667 461.167,90.8333 461.5,91.5C 462.287,93.1042 463.62,93.7709 465.5,93.5C 464.5,94.1667 463.5,94.8333 462.5,95.5C 459.236,93.9059 456.569,91.5725 454.5,88.5C 455.855,85.1447 458.189,82.8114 461.5,81.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c89247\",d:\"M 514.5,80.5 C 512.183,84.4818 509.183,87.8151 505.5,90.5C 504.596,91.209 504.263,92.209 504.5,93.5C 503.833,93.8333 503.167,94.1667 502.5,94.5C 502.5,93.5 502.5,92.5 502.5,91.5C 505.869,87.1308 509.869,83.4642 514.5,80.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#de981e\",d:\"M 584.5,70.5 C 590.826,76.649 597.493,82.3157 604.5,87.5C 605.338,87.8417 605.672,88.5084 605.5,89.5C 605.5,109.167 605.5,128.833 605.5,148.5C 602.833,148.5 600.167,148.5 597.5,148.5C 597.83,128.326 597.497,108.326 596.5,88.5C 595.791,87.596 594.791,87.2627 593.5,87.5C 593.5,87.1667 593.5,86.8333 593.5,86.5C 594.5,86.5 595.5,86.5 596.5,86.5C 596.509,84.6916 596.009,83.0249 595,81.5C 589.587,79.5885 586.087,75.9218 584.5,70.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#232333\",d:\"M 601.5,83.5 C 603.799,84.7778 606.132,86.1111 608.5,87.5C 611.028,91.9131 614.694,94.5798 619.5,95.5C 619.833,96.1667 620.167,96.8333 620.5,97.5C 620.167,97.5 619.833,97.5 619.5,97.5C 616.028,97.8738 613.028,96.8738 610.5,94.5C 609.893,94.6236 609.56,94.9569 609.5,95.5C 608.503,112.992 608.17,130.659 608.5,148.5C 610.655,148.372 612.655,148.872 614.5,150C 608.651,150.818 602.985,150.652 597.5,149.5C 600.833,149.5 604.167,149.5 607.5,149.5C 608.155,129.139 607.488,109.139 605.5,89.5C 605.672,88.5084 605.338,87.8417 604.5,87.5C 603.5,86.1667 602.5,84.8333 601.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#70264e\",d:\"M 802.5,85.5 C 802.267,87.0618 801.6,88.3951 800.5,89.5C 799.833,89.5 799.167,89.5 798.5,89.5C 795.813,89.6641 793.146,89.4974 790.5,89C 789.584,88.7216 788.918,88.2216 788.5,87.5C 789.167,87.5 789.833,87.5 790.5,87.5C 795.017,89.3331 799.017,88.6664 802.5,85.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#da9e23\",d:\"M 879.5,87.5 C 880.5,88.8333 881.5,90.1667 882.5,91.5C 878.676,89.8195 874.676,89.3195 870.5,90C 868.578,92.4295 866.245,94.2628 863.5,95.5C 866.285,91.8844 869.619,88.7177 873.5,86C 875.716,85.6066 877.716,86.1066 879.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#46d7fa\",d:\"M 141.5,81.5 C 137.5,81.5 133.5,81.5 129.5,81.5C 129.5,84.1667 129.5,86.8333 129.5,89.5C 133.833,89.5 138.167,89.5 142.5,89.5C 142.5,86.8333 142.5,84.1667 142.5,81.5C 143.473,83.9479 143.806,86.6146 143.5,89.5C 143.5,89.8333 143.5,90.1667 143.5,90.5C 138.5,90.5 133.5,90.5 128.5,90.5C 128.5,85.8333 128.5,81.1667 128.5,76.5C 133.773,76.0306 138.107,77.6973 141.5,81.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#83f6fc\",d:\"M 141.5,81.5 C 141.833,81.5 142.167,81.5 142.5,81.5C 142.5,84.1667 142.5,86.8333 142.5,89.5C 138.167,89.5 133.833,89.5 129.5,89.5C 129.5,86.8333 129.5,84.1667 129.5,81.5C 133.5,81.5 137.5,81.5 141.5,81.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e8746c\",d:\"M 319.5,79.5 C 319.833,79.5 320.167,79.5 320.5,79.5C 330.211,89.7104 340.711,99.0438 352,107.5C 352.64,109.265 352.473,110.932 351.5,112.5C 350.325,112.719 349.325,112.386 348.5,111.5C 346.467,109.493 344.467,107.493 342.5,105.5C 333.889,98.1808 325.222,90.8475 316.5,83.5C 317.789,82.3634 318.789,81.0301 319.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f47667\",d:\"M 463.5,83.5 C 466.987,84.4446 468.32,86.7779 467.5,90.5C 467.5,90.8333 467.5,91.1667 467.5,91.5C 465.5,92.8333 463.5,92.8333 461.5,91.5C 461.167,90.8333 460.833,90.1667 460.5,89.5C 462.346,87.9699 463.346,85.9699 463.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#444255\",d:\"M 743.5,82.5 C 746.315,84.3421 749.315,86.0087 752.5,87.5C 752.833,88.5 753.5,89.1667 754.5,89.5C 755.681,94.3544 758.681,97.021 763.5,97.5C 767.631,101.13 771.631,104.963 775.5,109C 774.365,109.749 773.365,109.583 772.5,108.5C 770.146,105.312 767.312,102.645 764,100.5C 764.897,102.904 766.063,105.237 767.5,107.5C 765.5,106.167 763.833,104.5 762.5,102.5C 757.521,96.8543 752.188,91.521 746.5,86.5C 745.5,85.1667 744.5,83.8333 743.5,82.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#331028\",d:\"M 825.5,83.5 C 825.5,84.1667 825.5,84.8333 825.5,85.5C 824.109,87.8903 822.109,89.5569 819.5,90.5C 816.391,90.7359 813.391,90.4025 810.5,89.5C 810.5,89.1667 810.5,88.8333 810.5,88.5C 813.85,88.665 817.183,88.4983 820.5,88C 822.037,86.2927 823.704,84.7927 825.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7e0eb\",d:\"M 873.5,76.5 C 874.5,76.5 875.5,76.5 876.5,76.5C 876.649,77.552 876.483,78.552 876,79.5C 869.706,83.6273 864.206,88.6273 859.5,94.5C 856.236,96.0941 853.569,98.4275 851.5,101.5C 848.434,104.732 844.934,107.399 841,109.5C 839.97,109.164 839.47,108.497 839.5,107.5C 850.534,96.7977 861.867,86.4643 873.5,76.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ececed\",d:\"M 74.5,87.5 C 77.2154,89.0719 80.2154,90.0719 83.5,90.5C 83.5,92.1667 83.5,93.8333 83.5,95.5C 76.9775,91.7608 70.3109,91.5942 63.5,95C 62.6195,95.7083 61.9528,96.5416 61.5,97.5C 56.7073,96.0704 56.374,93.9037 60.5,91C 63.5,88.8333 66.5,86.6667 69.5,84.5C 70.9397,85.9524 72.6064,86.9524 74.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e111c\",d:\"M 390.5,84.5 C 391.833,85.5 393.167,86.5 394.5,87.5C 396.033,90.2762 398.366,92.1096 401.5,93C 406.194,93.5639 410.86,93.3973 415.5,92.5C 415.389,93.1174 415.056,93.6174 414.5,94C 407.478,95.1941 400.811,94.3608 394.5,91.5C 393.139,89.1495 391.806,86.8162 390.5,84.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42769c\",d:\"M 429.5,83.5 C 428.606,86.9566 426.94,89.9566 424.5,92.5C 421.892,92.4003 419.558,93.0669 417.5,94.5C 417.833,93.8333 418.167,93.1667 418.5,92.5C 419.71,92.0679 420.71,91.4013 421.5,90.5C 424.55,88.6359 427.217,86.3026 429.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6a61b\",d:\"M 744.5,86.5 C 747.256,89.5153 749.923,92.5153 752.5,95.5C 750.138,93.228 747.304,91.5613 744,90.5C 742.054,94.0496 739.554,94.3829 736.5,91.5C 735.289,92.2739 735.289,93.1072 736.5,94C 735.584,94.2784 734.918,94.7784 734.5,95.5C 732.801,95.3398 731.134,95.5065 729.5,96C 726.603,98.41 723.603,100.577 720.5,102.5C 725.938,97.5639 731.271,92.3972 736.5,87C 738.067,85.9242 739.734,85.0909 741.5,84.5C 743.038,84.4534 744.038,85.1201 744.5,86.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b86469\",d:\"M 123.5,73.5 C 123.833,73.5 124.167,73.5 124.5,73.5C 124.5,79.8333 124.5,86.1667 124.5,92.5C 118.833,92.5 113.167,92.5 107.5,92.5C 112.305,91.5128 117.305,91.1795 122.5,91.5C 122.5,87.5 122.5,83.5 122.5,79.5C 123.461,77.7354 123.795,75.7354 123.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4eff5\",d:\"M 229.5,92.5 C 225.689,91.3547 221.689,91.1881 217.5,92C 213.937,93.6984 210.437,95.5317 207,97.5C 205.697,97.0217 204.531,96.355 203.5,95.5C 205.477,92.5318 208.144,90.1984 211.5,88.5C 213.571,87.0459 215.738,85.7125 218,84.5C 222.386,86.5199 226.886,88.3533 231.5,90C 232.609,91.813 231.942,92.6463 229.5,92.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f1c2c\",d:\"M 320.5,79.5 C 321.833,79.8333 323.167,80.1667 324.5,80.5C 326.167,81.8333 327.833,83.1667 329.5,84.5C 337.991,91.9266 346.324,99.5932 354.5,107.5C 356.32,111.094 355.32,113.428 351.5,114.5C 350.167,114.5 349.5,115.167 349.5,116.5C 349.167,116.5 348.833,116.5 348.5,116.5C 348.5,115.5 348.5,114.5 348.5,113.5C 349.791,113.737 350.791,113.404 351.5,112.5C 352.473,110.932 352.64,109.265 352,107.5C 340.711,99.0438 330.211,89.7104 320.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bf842c\",d:\"M 394.5,87.5 C 395.167,87.5 395.833,87.5 396.5,87.5C 397.058,88.7899 398.058,89.6232 399.5,90C 404.516,91.9206 409.516,91.9206 414.5,90C 413.058,89.6232 412.058,88.7899 411.5,87.5C 414.167,87.5 416.833,87.5 419.5,87.5C 419.592,90.4 418.259,92.0667 415.5,92.5C 410.86,93.3973 406.194,93.5639 401.5,93C 398.366,92.1096 396.033,90.2762 394.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6d9ac3\",d:\"M 798.5,89.5 C 799.167,89.5 799.833,89.5 800.5,89.5C 798.856,91.4807 797.19,93.4807 795.5,95.5C 796.7,96.2916 798.033,96.2916 799.5,95.5C 798.365,97.2132 796.698,97.8799 794.5,97.5C 794.983,93.4872 793.316,91.1539 789.5,90.5C 792.713,90.81 795.713,90.4767 798.5,89.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#131e3d\",d:\"M 802.5,85.5 C 803.833,85.5 805.167,85.5 806.5,85.5C 807.304,87.1887 808.304,88.8554 809.5,90.5C 810.107,90.3764 810.44,90.0431 810.5,89.5C 813.391,90.4025 816.391,90.7359 819.5,90.5C 816.972,91.1657 814.306,91.8324 811.5,92.5C 812.145,93.646 812.978,94.646 814,95.5C 814.749,96.635 814.583,97.635 813.5,98.5C 809.813,95.6469 806.647,92.3135 804,88.5C 802.25,90.7343 800.75,93.0676 799.5,95.5C 798.033,96.2916 796.7,96.2916 795.5,95.5C 797.19,93.4807 798.856,91.4807 800.5,89.5C 801.6,88.3951 802.267,87.0618 802.5,85.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#45270b\",d:\"M 879.5,87.5 C 883.5,88.6556 886.5,91.1556 888.5,95C 889.094,95.4643 889.761,95.631 890.5,95.5C 891.167,96.8333 891.833,98.1667 892.5,99.5C 888.897,97.2369 885.564,94.5703 882.5,91.5C 881.5,90.1667 880.5,88.8333 879.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#226cb9\",d:\"M 144.5,69.5 C 145.492,77.3159 145.826,85.3159 145.5,93.5C 139.167,93.5 132.833,93.5 126.5,93.5C 126.5,93.1667 126.5,92.8333 126.5,92.5C 132.268,91.8739 137.934,91.2073 143.5,90.5C 143.5,90.1667 143.5,89.8333 143.5,89.5C 144.488,84.3595 144.821,79.0262 144.5,73.5C 144.5,72.8333 144.5,72.1667 144.5,71.5C 144.5,70.8333 144.5,70.1667 144.5,69.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#954c6e\",d:\"M 461.5,91.5 C 463.5,92.8333 465.5,92.8333 467.5,91.5C 467.167,92.5 466.5,93.1667 465.5,93.5C 463.62,93.7709 462.287,93.1042 461.5,91.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf8c4\",d:\"M 565.5,75.5 C 567.836,82.6573 565.836,88.4907 559.5,93C 552.679,96.1341 547.346,94.6341 543.5,88.5C 543.41,86.3037 543.077,84.137 542.5,82C 542.661,70.4088 548.328,66.4088 559.5,70C 561.37,72.0396 563.37,73.8729 565.5,75.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7ca23\",d:\"M 546.5,82.5 C 551.5,82.5 556.5,82.5 561.5,82.5C 561.5,83.5 561.5,84.5 561.5,85.5C 558.805,90.0151 554.805,91.5151 549.5,90C 546.959,88.1516 545.959,85.6516 546.5,82.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4f08d\",d:\"M 561.5,77.5 C 562.833,80.1667 562.833,82.8333 561.5,85.5C 561.5,84.5 561.5,83.5 561.5,82.5C 556.5,82.5 551.5,82.5 546.5,82.5C 550.442,82.1254 554.109,81.1254 557.5,79.5C 559.483,79.8432 560.817,79.1765 561.5,77.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4c623\",d:\"M 561.5,77.5 C 560.817,79.1765 559.483,79.8432 557.5,79.5C 553.774,79.8226 550.107,79.4892 546.5,78.5C 548.102,72.2776 552.102,70.1109 558.5,72C 559.758,73.7409 560.758,75.5742 561.5,77.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#260d00\",d:\"M 596.5,88.5 C 596.666,92.8461 596.499,97.1794 596,101.5C 595.79,99.9419 595.29,98.6085 594.5,97.5C 593.945,93.9878 594.612,90.9878 596.5,88.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#18314c\",d:\"M 759.5,72.5 C 760.496,72.4142 761.329,72.7476 762,73.5C 762.5,80.8258 762.666,88.1591 762.5,95.5C 760.917,93.4922 759.917,91.1589 759.5,88.5C 759.146,83.3947 759.146,78.3947 759.5,73.5C 750.167,73.1667 750.167,72.8333 759.5,72.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3f1c0e\",d:\"M 877.5,83.5 C 878.6,84.6049 879.267,85.9382 879.5,87.5C 877.716,86.1066 875.716,85.6066 873.5,86C 869.619,88.7177 866.285,91.8844 863.5,95.5C 861.29,95.894 859.957,97.2273 859.5,99.5C 858.391,99.5569 857.391,99.8902 856.5,100.5C 858.317,98.9878 859.317,96.9878 859.5,94.5C 863.606,91.5711 867.606,88.4044 871.5,85C 873.345,83.872 875.345,83.372 877.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0f2c66\",d:\"M 394.5,91.5 C 400.811,94.3608 407.478,95.1941 414.5,94C 415.056,93.6174 415.389,93.1174 415.5,92.5C 416.5,92.5 417.5,92.5 418.5,92.5C 418.167,93.1667 417.833,93.8333 417.5,94.5C 412.993,96.1126 408.327,96.7793 403.5,96.5C 400.72,95.8049 398.053,94.8049 395.5,93.5C 395.167,92.8333 394.833,92.1667 394.5,91.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f2b0b\",d:\"M 744.5,86.5 C 745.167,86.5 745.833,86.5 746.5,86.5C 752.188,91.521 757.521,96.8543 762.5,102.5C 762.167,102.5 761.833,102.5 761.5,102.5C 758.767,99.7606 755.767,97.4273 752.5,95.5C 749.923,92.5153 747.256,89.5153 744.5,86.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a3718\",d:\"M 582.5,90.5 C 583.461,92.2646 583.795,94.2646 583.5,96.5C 582.503,96.4701 581.836,96.9701 581.5,98C 582.425,103.116 582.758,108.283 582.5,113.5C 581.676,109.688 581.176,105.688 581,101.5C 580.5,117.163 580.333,132.83 580.5,148.5C 580.167,148.5 579.833,148.5 579.5,148.5C 579.333,129.497 579.5,110.497 580,91.5C 580.671,90.7476 581.504,90.4142 582.5,90.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#45221d\",d:\"M 743.5,79.5 C 743.5,80.5 743.5,81.5 743.5,82.5C 744.5,83.8333 745.5,85.1667 746.5,86.5C 745.833,86.5 745.167,86.5 744.5,86.5C 744.038,85.1201 743.038,84.4534 741.5,84.5C 739.734,85.0909 738.067,85.9242 736.5,87C 731.271,92.3972 725.938,97.5639 720.5,102.5C 718.194,104.139 716.194,106.139 714.5,108.5C 714.167,108.5 713.833,108.5 713.5,108.5C 712.167,107.5 712.167,106.5 713.5,105.5C 719.562,98.436 726.228,92.1027 733.5,86.5C 736.522,85.4778 738.522,83.4778 739.5,80.5C 740.568,79.5655 741.901,79.2322 743.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3f4676\",d:\"M 759.5,88.5 C 759.917,91.1589 760.917,93.4922 762.5,95.5C 762.833,95.5 763.167,95.5 763.5,95.5C 763.5,96.1667 763.5,96.8333 763.5,97.5C 758.681,97.021 755.681,94.3544 754.5,89.5C 756.216,89.3713 757.883,89.038 759.5,88.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9aeef9\",d:\"M 947.5,64.5 C 945.5,64.5 943.5,64.5 941.5,64.5C 941.5,66.5 941.5,68.5 941.5,70.5C 947.167,70.5 952.833,70.5 958.5,70.5C 959.364,72.8827 959.364,75.5494 958.5,78.5C 960.274,79.1867 961.941,80.0201 963.5,81C 962.975,81.6924 962.308,82.1924 961.5,82.5C 960.131,80.876 958.464,80.376 956.5,81C 958.709,81.957 958.543,83.1236 956,84.5C 954.057,83.193 952.223,83.193 950.5,84.5C 945.5,88.5 940.5,92.5 935.5,96.5C 934.504,96.4142 933.671,96.7476 933,97.5C 932.502,100.482 932.335,103.482 932.5,106.5C 924.5,106.5 916.5,106.5 908.5,106.5C 904.869,103.371 901.369,100.037 898,96.5C 897.829,88.9885 897.329,81.6552 896.5,74.5C 896.369,73.7611 896.536,73.0944 897,72.5C 897.667,73.8333 898.333,73.8333 899,72.5C 899.49,71.2068 899.657,69.8734 899.5,68.5C 901.696,68.5652 903.696,69.2319 905.5,70.5C 904.253,72.323 903.586,74.323 903.5,76.5C 902.522,76.811 901.855,77.4777 901.5,78.5C 901.93,83.4472 902.097,88.4472 902,93.5C 903.749,94.299 905.082,93.6324 906,91.5C 905.802,88.7652 905.969,86.0985 906.5,83.5C 909.864,84.7207 910.864,86.8874 909.5,90C 912.417,90.6622 913.75,92.4955 913.5,95.5C 914.833,95.5 916.167,95.5 917.5,95.5C 917.756,93.2075 917.423,91.0408 916.5,89C 919.044,86.3432 921.711,83.8432 924.5,81.5C 925.816,84.028 926.983,84.028 928,81.5C 930.212,84.0024 931.045,87.0024 930.5,90.5C 932.308,90.5086 933.975,90.0086 935.5,89C 937.412,86.2119 940.079,84.8786 943.5,85C 943.554,83.6491 943.054,82.4824 942,81.5C 937.767,84.0103 935.101,82.6769 934,77.5C 932.927,78.2797 931.76,78.113 930.5,77C 932.503,75.6656 934.003,74.1656 935,72.5C 935.333,73.1667 935.667,73.8333 936,74.5C 937.115,73.0001 937.948,71.3334 938.5,69.5C 937.515,67.9017 937.349,66.235 938,64.5C 941.269,63.1816 944.435,63.1816 947.5,64.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5e512c\",d:\"M 917.5,79.5 C 916.902,82.8211 915.235,83.8211 912.5,82.5C 914.027,82.573 915.027,81.9063 915.5,80.5C 916.167,80.1667 916.833,79.8333 917.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#19232c\",d:\"M 911.5,84.5 C 911.5,83.8333 911.5,83.1667 911.5,82.5C 911.833,82.5 912.167,82.5 912.5,82.5C 915.235,83.8211 916.902,82.8211 917.5,79.5C 919.248,76.0018 918.248,73.3352 914.5,71.5C 913.261,71.9424 912.261,72.6091 911.5,73.5C 911.5,73.8333 911.5,74.1667 911.5,74.5C 909.787,75.6354 909.12,77.302 909.5,79.5C 907.744,78.4479 907.077,76.7812 907.5,74.5C 909.575,72.2812 911.909,70.2812 914.5,68.5C 918.512,70.9703 921.012,74.3036 922,78.5C 919.5,81 917,83.5 914.5,86C 913.002,86.5847 912.002,86.0847 911.5,84.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfae6b\",d:\"M 911.5,79.5 C 912.708,80.2341 914.041,80.5674 915.5,80.5C 915.027,81.9063 914.027,82.573 912.5,82.5C 912.167,82.5 911.833,82.5 911.5,82.5C 911.5,81.5 911.5,80.5 911.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3c428\",d:\"M 911.5,73.5 C 915.833,73.1667 917.833,75.1667 917.5,79.5C 916.833,79.8333 916.167,80.1667 915.5,80.5C 914.041,80.5674 912.708,80.2341 911.5,79.5C 911.5,77.8333 911.5,76.1667 911.5,74.5C 911.5,74.1667 911.5,73.8333 911.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecdba6\",d:\"M 911.5,74.5 C 911.5,76.1667 911.5,77.8333 911.5,79.5C 910.833,79.5 910.167,79.5 909.5,79.5C 909.12,77.302 909.787,75.6354 911.5,74.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#112647\",d:\"M 907.5,74.5 C 907.077,76.7812 907.744,78.4479 909.5,79.5C 910.167,79.5 910.833,79.5 911.5,79.5C 911.5,80.5 911.5,81.5 911.5,82.5C 911.5,83.1667 911.5,83.8333 911.5,84.5C 908.425,82.0914 905.758,79.4247 903.5,76.5C 904.605,75.3995 905.938,74.7329 907.5,74.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9e7b3e\",d:\"M 917.5,79.5 C 917.833,75.1667 915.833,73.1667 911.5,73.5C 912.261,72.6091 913.261,71.9424 914.5,71.5C 918.248,73.3352 919.248,76.0018 917.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#302236\",d:\"M 950.5,84.5 C 951.873,84.3433 953.207,84.51 954.5,85C 960.317,88.989 965.651,93.489 970.5,98.5C 970.826,107.349 970.493,116.016 969.5,124.5C 969.5,120.167 969.5,115.833 969.5,111.5C 969.5,109.833 969.5,108.167 969.5,106.5C 969.802,103.941 969.468,101.607 968.5,99.5C 960.167,99.5 951.833,99.5 943.5,99.5C 950.167,98.8333 956.833,98.1667 963.5,97.5C 965.793,96.6987 965.46,96.032 962.5,95.5C 959.792,92.7915 956.792,90.4581 953.5,88.5C 952.749,87.4265 951.749,87.2599 950.5,88C 946.249,90.9454 942.249,94.112 938.5,97.5C 937.833,98.1667 937.167,98.8333 936.5,99.5C 935.532,101.607 935.198,103.941 935.5,106.5C 934.833,106.5 934.5,106.833 934.5,107.5C 934.167,107.5 933.833,107.5 933.5,107.5C 933.01,103.513 933.676,99.8462 935.5,96.5C 940.5,92.5 945.5,88.5 950.5,84.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e96c75\",d:\"M 953.5,88.5 C 956.792,90.4581 959.792,92.7915 962.5,95.5C 956.69,96.4896 950.69,96.8229 944.5,96.5C 947.464,95.7422 950.13,94.2422 952.5,92C 953.337,90.9887 953.67,89.8221 953.5,88.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2d5da\",d:\"M 953.5,88.5 C 953.67,89.8221 953.337,90.9887 952.5,92C 950.13,94.2422 947.464,95.7422 944.5,96.5C 943.833,96.5 943.5,96.8333 943.5,97.5C 941.833,97.5 940.167,97.5 938.5,97.5C 942.249,94.112 946.249,90.9454 950.5,88C 951.749,87.2599 952.749,87.4265 953.5,88.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a23c54\",d:\"M 962.5,95.5 C 965.46,96.032 965.793,96.6987 963.5,97.5C 956.833,97.5 950.167,97.5 943.5,97.5C 943.5,96.8333 943.833,96.5 944.5,96.5C 950.69,96.8229 956.69,96.4896 962.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#61bfee\",d:\"M 424.5,92.5 C 422.513,95.4847 419.846,97.4847 416.5,98.5C 413.531,99.3287 410.531,99.4954 407.5,99C 408.833,98.6667 410.167,98.3333 411.5,98C 408.635,97.8171 405.969,97.3171 403.5,96.5C 408.327,96.7793 412.993,96.1126 417.5,94.5C 419.558,93.0669 421.892,92.4003 424.5,92.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdeb7c\",d:\"M 584.5,97.5 C 587.5,97.5 590.5,97.5 593.5,97.5C 593.5,98.5 593.5,99.5 593.5,100.5C 590.665,99.2138 587.832,99.2138 585,100.5C 584.628,104.798 584.461,108.798 584.5,112.5C 583.249,107.631 583.249,102.631 584.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#410c1e\",d:\"M 938.5,97.5 C 940.167,97.5 941.833,97.5 943.5,97.5C 950.167,97.5 956.833,97.5 963.5,97.5C 956.833,98.1667 950.167,98.8333 943.5,99.5C 941.167,99.5 938.833,99.5 936.5,99.5C 937.167,98.8333 937.833,98.1667 938.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#453237\",d:\"M 890.5,95.5 C 895.653,97.3269 898.653,100.994 899.5,106.5C 898.167,105.5 896.833,104.5 895.5,103.5C 894.5,102.167 893.5,100.833 892.5,99.5C 891.833,98.1667 891.167,96.8333 890.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#304761\",d:\"M 872.5,74.5 C 876.034,72.7557 878.701,73.7557 880.5,77.5C 880.611,78.1174 880.944,78.6174 881.5,79C 884.167,79.3333 886.833,79.6667 889.5,80C 887.685,80.7568 886.019,81.5902 884.5,82.5C 886.208,84.216 887.542,86.216 888.5,88.5C 889.524,89.8532 890.857,90.5198 892.5,90.5C 892.5,87.8333 892.5,85.1667 892.5,82.5C 892.993,80.1944 893.326,77.861 893.5,75.5C 889.671,76.069 886.337,75.4023 883.5,73.5C 887.931,73.2307 892.265,73.564 896.5,74.5C 897.329,81.6552 897.829,88.9885 898,96.5C 901.369,100.037 904.869,103.371 908.5,106.5C 916.65,107.493 924.983,107.826 933.5,107.5C 924.297,108.217 914.963,108.884 905.5,109.5C 903.784,107.975 901.784,106.975 899.5,106.5C 898.653,100.994 895.653,97.3269 890.5,95.5C 889.761,95.631 889.094,95.4643 888.5,95C 886.5,91.1556 883.5,88.6556 879.5,87.5C 879.267,85.9382 878.6,84.6049 877.5,83.5C 879.17,83.7512 880.67,84.4178 882,85.5C 880.718,82.2885 878.884,79.2885 876.5,76.5C 875.5,76.5 874.5,76.5 873.5,76.5C 874.263,75.7321 875.263,75.2321 876.5,75C 875.207,74.51 873.873,74.3433 872.5,74.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4b6d99\",d:\"M 884.5,82.5 C 887.167,82.5 889.833,82.5 892.5,82.5C 892.5,85.1667 892.5,87.8333 892.5,90.5C 890.857,90.5198 889.524,89.8532 888.5,88.5C 887.542,86.216 886.208,84.216 884.5,82.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#688aa2\",d:\"M 883.5,73.5 C 886.337,75.4023 889.671,76.069 893.5,75.5C 893.326,77.861 892.993,80.1944 892.5,82.5C 889.833,82.5 887.167,82.5 884.5,82.5C 886.019,81.5902 887.685,80.7568 889.5,80C 886.833,79.6667 884.167,79.3333 881.5,79C 880.944,78.6174 880.611,78.1174 880.5,77.5C 884.488,78.6977 888.488,78.6977 892.5,77.5C 889.232,76.513 885.898,76.1796 882.5,76.5C 882.263,75.209 882.596,74.209 883.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#911c22\",d:\"M 316.5,83.5 C 325.222,90.8475 333.889,98.1808 342.5,105.5C 340.666,104.506 338.999,104.506 337.5,105.5C 331.145,99.9768 324.645,94.6435 318,89.5C 311.736,93.2654 305.903,97.5987 300.5,102.5C 299.957,102.44 299.624,102.107 299.5,101.5C 301.297,100.305 302.297,98.6382 302.5,96.5C 306.539,91.46 311.206,87.1266 316.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9c50e\",d:\"M 752.5,95.5 C 755.767,97.4273 758.767,99.7606 761.5,102.5C 763.046,104.882 763.713,107.549 763.5,110.5C 761.821,110.285 760.821,110.952 760.5,112.5C 759.391,112.557 758.391,112.89 757.5,113.5C 754.5,113.5 751.5,113.5 748.5,113.5C 748.5,114.833 748.5,116.167 748.5,117.5C 743.5,117.5 738.5,117.5 733.5,117.5C 737.565,116.807 741.732,116.14 746,115.5C 746.309,114.234 746.809,113.067 747.5,112C 746.09,111.632 745.09,110.799 744.5,109.5C 745.544,107.232 745.711,104.899 745,102.5C 744.329,101.748 743.496,101.414 742.5,101.5C 738.097,99.4534 734.93,100.787 733,105.5C 732.502,102.518 732.335,99.5184 732.5,96.5C 734.401,96.7535 735.067,96.4202 734.5,95.5C 734.918,94.7784 735.584,94.2784 736.5,94C 735.289,93.1072 735.289,92.2739 736.5,91.5C 739.554,94.3829 742.054,94.0496 744,90.5C 747.304,91.5613 750.138,93.228 752.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#79eefb\",d:\"M 119.5,96.5 C 120.256,100.63 121.256,104.63 122.5,108.5C 117.527,107.836 112.527,107.503 107.5,107.5C 107.5,103.833 107.5,100.167 107.5,96.5C 111.5,96.5 115.5,96.5 119.5,96.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c3f2f7\",d:\"M 202.5,95.5 C 203.167,96.5 203.833,97.5 204.5,98.5C 202.712,98.2148 201.045,98.5481 199.5,99.5C 196.11,102.895 192.444,105.895 188.5,108.5C 188.5,107.167 188.5,105.833 188.5,104.5C 192.675,100.643 197.342,97.6432 202.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#452b32\",d:\"M 859.5,94.5 C 859.317,96.9878 858.317,98.9878 856.5,100.5C 854.167,103.167 851.833,105.833 849.5,108.5C 849.167,108.5 848.833,108.5 848.5,108.5C 848.5,107.833 848.5,107.167 848.5,106.5C 849.925,105.078 850.925,103.411 851.5,101.5C 853.569,98.4275 856.236,96.0941 859.5,94.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8df1fc\",d:\"M 395.5,93.5 C 398.053,94.8049 400.72,95.8049 403.5,96.5C 405.969,97.3171 408.635,97.8171 411.5,98C 410.167,98.3333 408.833,98.6667 407.5,99C 410.531,99.4954 413.531,99.3287 416.5,98.5C 417.552,98.3505 418.552,98.5172 419.5,99C 416.584,99.0488 415.584,100.216 416.5,102.5C 414.696,103.768 412.696,104.435 410.5,104.5C 410.185,106.226 410.019,107.893 410,109.5C 414.448,107.339 416.615,108.672 416.5,113.5C 414.099,112.951 411.765,112.118 409.5,111C 406.246,106.976 402.246,105.476 397.5,106.5C 397.167,106.5 396.833,106.5 396.5,106.5C 394.533,106.261 392.699,106.594 391,107.5C 387.989,106 388.489,105.166 392.5,105C 390.431,104.676 390.098,103.842 391.5,102.5C 393.851,101.988 395.851,100.988 397.5,99.5C 394.417,98.418 392.417,96.418 391.5,93.5C 392.833,93.5 394.167,93.5 395.5,93.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#367aa7\",d:\"M 108.5,94.5 C 110.833,94.5 113.167,94.5 115.5,94.5C 116.833,95.1667 118.167,95.8333 119.5,96.5C 115.5,96.5 111.5,96.5 107.5,96.5C 107.5,100.167 107.5,103.833 107.5,107.5C 107.5,108.5 107.5,109.5 107.5,110.5C 112.833,110.5 118.167,110.5 123.5,110.5C 123.5,110.833 123.5,111.167 123.5,111.5C 117.833,111.5 112.167,111.5 106.5,111.5C 106.5,106.167 106.5,100.833 106.5,95.5C 107.167,95.1667 107.833,94.8333 108.5,94.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e78c4\",d:\"M 115.5,94.5 C 118.5,94.5 121.5,94.5 124.5,94.5C 124.822,100.358 124.489,106.025 123.5,111.5C 123.5,111.167 123.5,110.833 123.5,110.5C 123.167,105.833 122.833,101.167 122.5,96.5C 121.5,96.5 120.5,96.5 119.5,96.5C 118.167,95.8333 116.833,95.1667 115.5,94.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c6b681\",d:\"M 583.5,96.5 C 583.5,97.1667 583.833,97.5 584.5,97.5C 583.249,102.631 583.249,107.631 584.5,112.5C 584.5,112.833 584.5,113.167 584.5,113.5C 584.167,113.5 583.833,113.5 583.5,113.5C 583.167,113.5 582.833,113.5 582.5,113.5C 582.758,108.283 582.425,103.116 581.5,98C 581.836,96.9701 582.503,96.4701 583.5,96.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9f353e\",d:\"M 302.5,96.5 C 302.297,98.6382 301.297,100.305 299.5,101.5C 299.624,102.107 299.957,102.44 300.5,102.5C 298.5,104.833 296.5,107.167 294.5,109.5C 292.596,109.738 291.262,110.738 290.5,112.5C 290.167,112.5 289.833,112.5 289.5,112.5C 289.631,111.761 289.464,111.094 289,110.5C 288.329,111.252 287.496,111.586 286.5,111.5C 286.511,109.983 287.177,108.816 288.5,108C 293.04,103.954 297.707,100.121 302.5,96.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#432612\",d:\"M 605.5,89.5 C 607.488,109.139 608.155,129.139 607.5,149.5C 604.167,149.5 600.833,149.5 597.5,149.5C 597.5,149.167 597.5,148.833 597.5,148.5C 600.167,148.5 602.833,148.5 605.5,148.5C 605.5,128.833 605.5,109.167 605.5,89.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c28d30\",d:\"M 859.5,99.5 C 856.769,103.234 853.436,106.234 849.5,108.5C 851.833,105.833 854.167,103.167 856.5,100.5C 857.391,99.8902 858.391,99.5569 859.5,99.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fabf91\",d:\"M 961.5,101.5 C 955.5,102.833 949.5,104.167 943.5,105.5C 941.219,105.077 939.552,105.744 938.5,107.5C 938.167,107.5 937.833,107.5 937.5,107.5C 937.421,106.07 937.754,104.736 938.5,103.5C 940.756,102.898 941.922,101.898 942,100.5C 948.453,101.442 954.953,101.775 961.5,101.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#baf0f8\",d:\"M 57.5,97.5 C 58.1157,98.7978 58.1157,99.7978 57.5,100.5C 54.2085,102.458 51.2085,104.791 48.5,107.5C 47.1667,109.167 45.8333,110.833 44.5,112.5C 42.8587,117.251 41.8587,122.251 41.5,127.5C 41.5,124.833 41.5,122.167 41.5,119.5C 41.034,114.57 41.7006,109.903 43.5,105.5C 44.8333,103.833 46.1667,102.167 47.5,100.5C 50.1492,98.86 52.8159,97.1933 55.5,95.5C 56.5223,95.8555 57.189,96.5222 57.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eccdcf\",d:\"M 936.5,99.5 C 938.833,99.5 941.167,99.5 943.5,99.5C 951.833,99.5 960.167,99.5 968.5,99.5C 968.179,101.048 967.179,101.715 965.5,101.5C 964.167,101.5 962.833,101.5 961.5,101.5C 954.953,101.775 948.453,101.442 942,100.5C 941.922,101.898 940.756,102.898 938.5,103.5C 937.754,104.736 937.421,106.07 937.5,107.5C 937.5,108.167 937.167,108.5 936.5,108.5C 935.662,108.158 935.328,107.492 935.5,106.5C 935.198,103.941 935.532,101.607 936.5,99.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9955f\",d:\"M 961.5,101.5 C 962.833,101.5 964.167,101.5 965.5,101.5C 966.234,102.708 966.567,104.041 966.5,105.5C 958.833,105.5 951.167,105.5 943.5,105.5C 949.5,104.167 955.5,102.833 961.5,101.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#de6e62\",d:\"M 968.5,99.5 C 969.468,101.607 969.802,103.941 969.5,106.5C 959.249,107.475 948.915,107.808 938.5,107.5C 939.552,105.744 941.219,105.077 943.5,105.5C 951.167,105.5 958.833,105.5 966.5,105.5C 966.567,104.041 966.234,102.708 965.5,101.5C 967.179,101.715 968.179,101.048 968.5,99.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b273c\",d:\"M 208.5,87.5 C 209.791,87.2627 210.791,87.596 211.5,88.5C 208.144,90.1984 205.477,92.5318 203.5,95.5C 203.167,95.5 202.833,95.5 202.5,95.5C 197.342,97.6432 192.675,100.643 188.5,104.5C 187.504,118.99 187.171,133.657 187.5,148.5C 187.389,149.117 187.056,149.617 186.5,150C 182.137,150.29 177.804,150.79 173.5,151.5C 171.583,151.246 170.249,150.246 169.5,148.5C 170.167,148.5 170.833,148.5 171.5,148.5C 176.234,149.824 181.067,149.824 186,148.5C 186.824,138.991 186.658,129.657 185.5,120.5C 185.5,116.167 185.5,111.833 185.5,107.5C 184.209,107.263 183.209,107.596 182.5,108.5C 178.656,110.922 174.99,113.589 171.5,116.5C 171.5,115.833 171.167,115.5 170.5,115.5C 173.974,112.198 177.641,109.032 181.5,106C 190.529,99.8234 199.529,93.6567 208.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3c11b\",d:\"M 593.5,100.5 C 593.706,104.898 593.373,109.232 592.5,113.5C 589.833,113.5 587.167,113.5 584.5,113.5C 584.5,113.167 584.5,112.833 584.5,112.5C 584.461,108.798 584.628,104.798 585,100.5C 587.832,99.2138 590.665,99.2138 593.5,100.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#78bedd\",d:\"M 935.5,96.5 C 933.676,99.8462 933.01,103.513 933.5,107.5C 924.983,107.826 916.65,107.493 908.5,106.5C 916.5,106.5 924.5,106.5 932.5,106.5C 932.335,103.482 932.502,100.482 933,97.5C 933.671,96.7476 934.504,96.4142 935.5,96.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#edd2d9\",d:\"M 319.5,79.5 C 318.789,81.0301 317.789,82.3634 316.5,83.5C 311.206,87.1266 306.539,91.46 302.5,96.5C 297.707,100.121 293.04,103.954 288.5,108C 287.177,108.816 286.511,109.983 286.5,111.5C 285.221,112.968 283.554,113.635 281.5,113.5C 281.5,112.167 281.5,110.833 281.5,109.5C 293.157,98.5131 305.157,87.8464 317.5,77.5C 318.522,77.8555 319.189,78.5222 319.5,79.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#471f12\",d:\"M 899.5,106.5 C 901.784,106.975 903.784,107.975 905.5,109.5C 905.5,110.167 905.5,110.833 905.5,111.5C 905.167,111.5 904.833,111.5 904.5,111.5C 902.527,110.194 900.861,108.527 899.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6ba7b2\",d:\"M 971.5,98.5 C 972.496,114.658 972.83,130.991 972.5,147.5C 976.702,147.183 980.702,147.517 984.5,148.5C 980.167,148.5 975.833,148.5 971.5,148.5C 971.5,146.833 971.5,145.167 971.5,143.5C 971.5,128.5 971.5,113.5 971.5,98.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#072262\",d:\"M 933.5,107.5 C 933.833,107.5 934.167,107.5 934.5,107.5C 934.5,109.167 934.5,110.833 934.5,112.5C 926.101,110.575 917.434,109.908 908.5,110.5C 908.5,116.167 908.5,121.833 908.5,127.5C 917.234,128.135 925.567,127.468 933.5,125.5C 933.833,125.5 934.167,125.5 934.5,125.5C 934.5,126.833 934.5,128.167 934.5,129.5C 925.983,129.174 917.65,129.507 909.5,130.5C 909.167,130.5 908.833,130.5 908.5,130.5C 907.833,124.167 907.167,117.833 906.5,111.5C 906.167,111.5 905.833,111.5 905.5,111.5C 905.5,110.833 905.5,110.167 905.5,109.5C 914.963,108.884 924.297,108.217 933.5,107.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#481e23\",d:\"M 969.5,106.5 C 969.5,108.167 969.5,109.833 969.5,111.5C 969.167,111.5 968.833,111.5 968.5,111.5C 959.014,110.506 949.348,110.173 939.5,110.5C 938.5,110.5 937.5,110.5 936.5,110.5C 936.5,109.833 936.5,109.167 936.5,108.5C 937.167,108.5 937.5,108.167 937.5,107.5C 937.833,107.5 938.167,107.5 938.5,107.5C 948.915,107.808 959.249,107.475 969.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#461d2f\",d:\"M 105.5,92.5 C 106.167,92.5 106.833,92.5 107.5,92.5C 113.167,92.5 118.833,92.5 124.5,92.5C 124.5,92.8333 124.5,93.1667 124.5,93.5C 118.974,93.1786 113.64,93.5119 108.5,94.5C 107.833,94.8333 107.167,95.1667 106.5,95.5C 105.668,112.995 105.168,130.662 105,148.5C 104.5,149 104,149.5 103.5,150C 97.7507,150.785 92.084,150.618 86.5,149.5C 86.5,149.167 86.5,148.833 86.5,148.5C 86.8333,148.5 87.1667,148.5 87.5,148.5C 87.8333,148.5 88.1667,148.5 88.5,148.5C 93.7616,148.805 98.9283,148.471 104,147.5C 104.816,142.316 104.65,137.316 103.5,132.5C 103.5,131.5 103.5,130.5 103.5,129.5C 104.185,117.265 104.852,104.932 105.5,92.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5bd5fc\",d:\"M 119.5,96.5 C 120.5,96.5 121.5,96.5 122.5,96.5C 122.833,101.167 123.167,105.833 123.5,110.5C 118.167,110.5 112.833,110.5 107.5,110.5C 107.5,109.5 107.5,108.5 107.5,107.5C 112.527,107.503 117.527,107.836 122.5,108.5C 121.256,104.63 120.256,100.63 119.5,96.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41576f\",d:\"M 851.5,101.5 C 850.925,103.411 849.925,105.078 848.5,106.5C 847.279,107.028 846.113,107.695 845,108.5C 844.5,121.829 844.333,135.163 844.5,148.5C 844.167,148.5 843.833,148.5 843.5,148.5C 843.5,148.167 843.5,147.833 843.5,147.5C 843.5,135.833 843.5,124.167 843.5,112.5C 841.265,112.795 839.265,112.461 837.5,111.5C 843.167,111.336 843.5,111.003 838.5,110.5C 838.263,109.209 838.596,108.209 839.5,107.5C 839.47,108.497 839.97,109.164 841,109.5C 844.934,107.399 848.434,104.732 851.5,101.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fd6360\",d:\"M 103.5,92.5 C 103.5,92.8333 103.5,93.1667 103.5,93.5C 102.505,104.988 102.172,116.655 102.5,128.5C 98.6286,128.815 94.9619,128.482 91.5,127.5C 91.0885,113.418 91.9218,99.4178 94,85.5C 94.3333,85.1667 94.6667,84.8333 95,84.5C 96.5385,85.5458 96.7052,86.8791 95.5,88.5C 97.0626,91.893 99.7292,93.2263 103.5,92.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#489dd7\",d:\"M 145.5,95.5 C 145.5,100.833 145.5,106.167 145.5,111.5C 139.167,111.5 132.833,111.5 126.5,111.5C 126.5,106.167 126.5,100.833 126.5,95.5C 132.833,95.5 139.167,95.5 145.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48d4fb\",d:\"M 143.5,97.5 C 143.5,101.833 143.5,106.167 143.5,110.5C 137.974,110.821 132.64,110.488 127.5,109.5C 132.5,109.5 137.5,109.5 142.5,109.5C 142.364,106.65 142.031,103.817 141.5,101C 141.608,99.3189 142.275,98.1522 143.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6ae6f7\",d:\"M 143.5,97.5 C 142.275,98.1522 141.608,99.3189 141.5,101C 142.031,103.817 142.364,106.65 142.5,109.5C 137.5,109.5 132.5,109.5 127.5,109.5C 127.5,105.167 127.5,100.833 127.5,96.5C 133.026,96.1786 138.36,96.5119 143.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcb90c\",d:\"M 578.5,100.5 C 578.5,116.167 578.5,131.833 578.5,147.5C 575.167,147.5 571.833,147.5 568.5,147.5C 568.461,146.244 568.961,145.244 570,144.5C 570.485,132.826 570.319,121.159 569.5,109.5C 572.004,108.361 574.67,107.694 577.5,107.5C 577.643,105.738 577.309,104.071 576.5,102.5C 576.855,101.478 577.522,100.811 578.5,100.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3792cf\",d:\"M 934.5,112.5 C 934.5,116.833 934.5,121.167 934.5,125.5C 934.167,125.5 933.833,125.5 933.5,125.5C 925.567,127.468 917.234,128.135 908.5,127.5C 908.5,121.833 908.5,116.167 908.5,110.5C 917.434,109.908 926.101,110.575 934.5,112.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#082758\",d:\"M 279.5,53.5 C 280.222,53.9175 280.722,54.5842 281,55.5C 281.5,73.4969 281.667,91.4969 281.5,109.5C 281.5,110.833 281.5,112.167 281.5,113.5C 281.5,113.833 281.5,114.167 281.5,114.5C 281.239,126.011 280.573,137.344 279.5,148.5C 279.5,116.833 279.5,85.1667 279.5,53.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fabf0e\",d:\"M 518.5,82.5 C 518.423,83.7498 517.756,84.5831 516.5,85C 517.374,86.7267 517.207,88.5601 516,90.5C 510.588,93.6911 508.421,98.5244 509.5,105C 510,112.5 510.5,120 511,127.5C 513.621,127.296 516.455,127.296 519.5,127.5C 519.5,124.833 519.5,122.167 519.5,119.5C 521.833,119.5 524.167,119.5 526.5,119.5C 526.5,116.833 526.5,114.167 526.5,111.5C 527.675,111.719 528.675,111.386 529.5,110.5C 530.125,107.815 531.125,105.315 532.5,103C 532.333,102.5 532.167,102 532,101.5C 531.163,103.007 529.996,103.507 528.5,103C 526.618,99.0242 527.952,96.8575 532.5,96.5C 532.167,95.8333 531.833,95.1667 531.5,94.5C 533.25,86.5668 534.75,86.5668 536,94.5C 539.213,96.8061 538.713,98.4728 534.5,99.5C 533.674,100.451 533.508,101.451 534,102.5C 535.333,103.167 536.333,104.167 537,105.5C 538.272,102.778 540.439,101.444 543.5,101.5C 543.5,102.5 543.5,103.5 543.5,104.5C 542.127,104.343 540.793,104.51 539.5,105C 548.521,105.635 557.521,106.468 566.5,107.5C 566.863,108.183 567.196,108.85 567.5,109.5C 567.167,109.5 566.833,109.5 566.5,109.5C 566.167,109.5 565.833,109.5 565.5,109.5C 556.348,108.506 547.015,108.173 537.5,108.5C 537.832,120.186 537.499,131.852 536.5,143.5C 532.351,144.769 528.018,145.435 523.5,145.5C 518.963,145.457 514.463,145.124 510,144.5C 508.334,145.348 506.834,146.348 505.5,147.5C 505.167,147.5 504.833,147.5 504.5,147.5C 504.5,129.5 504.5,111.5 504.5,93.5C 504.263,92.209 504.596,91.209 505.5,90.5C 505.517,92.0281 506.184,92.5281 507.5,92C 510.865,88.3426 514.532,85.176 518.5,82.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b19334\",d:\"M 83.5,97.5 C 83.5,98.8333 83.5,100.167 83.5,101.5C 83.5,117.167 83.5,132.833 83.5,148.5C 76.5,148.5 69.5,148.5 62.5,148.5C 62.5,148.167 62.5,147.833 62.5,147.5C 62.3334,131.163 62.5001,114.83 63,98.5C 63.6708,97.7476 64.5041,97.4142 65.5,97.5C 67.0313,95.3199 69.1979,94.3199 72,94.5C 76.003,94.9588 79.8363,95.9588 83.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#103d83\",d:\"M 108.5,94.5 C 113.64,93.5119 118.974,93.1786 124.5,93.5C 125.167,93.5 125.833,93.5 126.5,93.5C 132.833,93.5 139.167,93.5 145.5,93.5C 145.5,94.1667 145.5,94.8333 145.5,95.5C 139.167,95.5 132.833,95.5 126.5,95.5C 126.5,100.833 126.5,106.167 126.5,111.5C 132.833,111.5 139.167,111.5 145.5,111.5C 145.828,123.678 145.495,135.678 144.5,147.5C 144.5,142.5 144.5,137.5 144.5,132.5C 141.833,132.5 139.167,132.5 136.5,132.5C 133.5,132.5 130.5,132.5 127.5,132.5C 127.167,132.5 126.833,132.5 126.5,132.5C 132.319,131.672 138.319,131.172 144.5,131C 140.644,130.823 136.977,130.323 133.5,129.5C 137.167,129.5 140.833,129.5 144.5,129.5C 144.5,124.5 144.5,119.5 144.5,114.5C 138.5,114.5 132.5,114.5 126.5,114.5C 126.389,113.883 126.056,113.383 125.5,113C 121.5,112.333 117.5,112.333 113.5,113C 113.167,113.333 112.833,113.667 112.5,114C 116.356,114.177 120.023,114.677 123.5,115.5C 118.167,115.5 112.833,115.5 107.5,115.5C 107.5,119.833 107.5,124.167 107.5,128.5C 111.97,129.486 116.637,129.819 121.5,129.5C 121.5,130.5 121.5,131.5 121.5,132.5C 116.833,132.5 112.167,132.5 107.5,132.5C 107.167,132.5 106.833,132.5 106.5,132.5C 106.5,125.5 106.5,118.5 106.5,111.5C 112.167,111.5 117.833,111.5 123.5,111.5C 124.489,106.025 124.822,100.358 124.5,94.5C 121.5,94.5 118.5,94.5 115.5,94.5C 113.167,94.5 110.833,94.5 108.5,94.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4b131c\",d:\"M 337.5,105.5 C 338.999,104.506 340.666,104.506 342.5,105.5C 344.467,107.493 346.467,109.493 348.5,111.5C 349.325,112.386 350.325,112.719 351.5,112.5C 350.791,113.404 349.791,113.737 348.5,113.5C 348.5,114.5 348.5,115.5 348.5,116.5C 348.5,120.167 348.5,123.833 348.5,127.5C 348.167,127.5 347.833,127.5 347.5,127.5C 347.819,122.637 347.486,117.97 346.5,113.5C 345.122,112.455 344.122,111.122 343.5,109.5C 343.217,108.711 342.717,108.044 342,107.5C 342.046,110.633 341.046,113.3 339,115.5C 338.821,111.975 338.321,108.641 337.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5790b2\",d:\"M 497.5,98.5 C 497.833,98.5 498.167,98.5 498.5,98.5C 498.5,114.167 498.5,129.833 498.5,145.5C 498.5,146.5 498.5,147.5 498.5,148.5C 495.941,148.802 493.607,148.468 491.5,147.5C 493.5,147.5 495.5,147.5 497.5,147.5C 497.5,131.167 497.5,114.833 497.5,98.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#08152d\",d:\"M 503.5,87.5 C 502.766,88.7079 502.433,90.0413 502.5,91.5C 502.5,92.5 502.5,93.5 502.5,94.5C 501.883,94.6107 501.383,94.944 501,95.5C 500.5,112.163 500.333,128.83 500.5,145.5C 499.833,145.5 499.167,145.5 498.5,145.5C 498.5,129.833 498.5,114.167 498.5,98.5C 498.5,97.5 498.5,96.5 498.5,95.5C 497.325,95.719 496.325,95.3857 495.5,94.5C 496.274,93.2888 497.107,93.2888 498,94.5C 499.046,92.9095 500.213,91.4095 501.5,90C 500.391,88.187 501.058,87.3537 503.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5dc6f8\",d:\"M 57.5,97.5 C 58.1174,97.6107 58.6174,97.944 59,98.5C 59.4999,114.83 59.6666,131.163 59.5,147.5C 58.5,147.5 57.5,147.5 56.5,147.5C 56.9175,146.778 57.5842,146.278 58.5,146C 58.8295,130.994 58.4961,115.827 57.5,100.5C 58.1157,99.7978 58.1157,98.7978 57.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e67265\",d:\"M 89.5,73.5 C 100.833,73.5 112.167,73.5 123.5,73.5C 123.795,75.7354 123.461,77.7354 122.5,79.5C 122.5,77.8333 122.5,76.1667 122.5,74.5C 111.833,74.5 101.167,74.5 90.5,74.5C 90.1699,92.3412 90.5033,110.008 91.5,127.5C 94.9619,128.482 98.6286,128.815 102.5,128.5C 102.172,116.655 102.505,104.988 103.5,93.5C 103.5,105.5 103.5,117.5 103.5,129.5C 98.8333,129.5 94.1667,129.5 89.5,129.5C 89.5,110.833 89.5,92.1667 89.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ad5359\",d:\"M 103.5,92.5 C 104.167,92.5 104.833,92.5 105.5,92.5C 104.852,104.932 104.185,117.265 103.5,129.5C 103.5,117.5 103.5,105.5 103.5,93.5C 103.5,93.1667 103.5,92.8333 103.5,92.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#063289\",d:\"M 126.5,114.5 C 126.5,119.5 126.5,124.5 126.5,129.5C 128.833,129.5 131.167,129.5 133.5,129.5C 136.977,130.323 140.644,130.823 144.5,131C 138.319,131.172 132.319,131.672 126.5,132.5C 126.5,137.5 126.5,142.5 126.5,147.5C 126.158,148.338 125.492,148.672 124.5,148.5C 124.5,147.5 124.5,146.5 124.5,145.5C 124.5,141.167 124.5,136.833 124.5,132.5C 123.5,132.5 122.5,132.5 121.5,132.5C 121.5,131.5 121.5,130.5 121.5,129.5C 122.5,129.5 123.5,129.5 124.5,129.5C 124.819,124.637 124.486,119.97 123.5,115.5C 120.023,114.677 116.356,114.177 112.5,114C 112.833,113.667 113.167,113.333 113.5,113C 117.5,112.333 121.5,112.333 125.5,113C 126.056,113.383 126.389,113.883 126.5,114.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3ebe5\",d:\"M 403.5,112.5 C 401.473,112.338 399.473,112.505 397.5,113C 396.177,113.816 395.511,114.983 395.5,116.5C 389.291,117.703 385.958,121.369 385.5,127.5C 385.167,127.5 384.833,127.5 384.5,127.5C 384.253,124.061 384.586,120.728 385.5,117.5C 388.989,114.863 392.655,112.363 396.5,110C 399.481,109.162 401.814,109.995 403.5,112.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#673d09\",d:\"M 583.5,113.5 C 583.833,113.5 584.167,113.5 584.5,113.5C 587.167,113.5 589.833,113.5 592.5,113.5C 592.672,114.492 592.338,115.158 591.5,115.5C 588.833,114.833 586.167,114.167 583.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e06d79\",d:\"M 939.5,110.5 C 949.348,110.173 959.014,110.506 968.5,111.5C 964.167,111.5 959.833,111.5 955.5,111.5C 955.5,114.167 955.5,116.833 955.5,119.5C 952.5,119.5 949.5,119.5 946.5,119.5C 946.674,117.139 947.007,114.806 947.5,112.5C 945.167,112.5 942.833,112.5 940.5,112.5C 940.806,115.385 940.473,118.052 939.5,120.5C 939.5,117.167 939.5,113.833 939.5,110.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4aa7e9\",d:\"M 126.5,114.5 C 132.5,114.5 138.5,114.5 144.5,114.5C 144.5,119.5 144.5,124.5 144.5,129.5C 140.833,129.5 137.167,129.5 133.5,129.5C 131.167,129.5 128.833,129.5 126.5,129.5C 126.5,124.5 126.5,119.5 126.5,114.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#101f3f\",d:\"M 691.5,110.5 C 691.5,123.167 691.5,135.833 691.5,148.5C 691.19,149.738 690.69,149.738 690,148.5C 689.506,146.866 689.34,145.199 689.5,143.5C 689.826,134.983 689.493,126.65 688.5,118.5C 688.5,117.167 688.5,115.833 688.5,114.5C 686.801,114.34 685.134,114.506 683.5,115C 670.726,120.267 662.393,129.434 658.5,142.5C 657.532,144.607 657.198,146.941 657.5,149.5C 656.252,148.666 655.585,147.333 655.5,145.5C 656.167,142.5 656.833,139.5 657.5,136.5C 657.489,134.955 657.156,133.622 656.5,132.5C 656.5,131.833 656.167,131.5 655.5,131.5C 654.457,128.944 652.79,126.777 650.5,125C 644.523,120.963 638.19,117.796 631.5,115.5C 630.833,125.5 630.167,135.5 629.5,145.5C 629.5,134.833 629.5,124.167 629.5,113.5C 641.723,115.709 651.723,121.709 659.5,131.5C 664.646,125.192 670.646,119.692 677.5,115C 681.805,112.34 686.472,110.84 691.5,110.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7da2c6\",d:\"M 43.5,105.5 C 41.7006,109.903 41.034,114.57 41.5,119.5C 41.1667,119.5 40.8333,119.5 40.5,119.5C 40.3345,115.486 40.5012,111.486 41,107.5C 41.7083,106.619 42.5416,105.953 43.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#24a1c6\",d:\"M 48.5,107.5 C 50.7583,107.775 51.0916,108.775 49.5,110.5C 50.7472,112.323 51.4139,114.323 51.5,116.5C 49.3867,115.744 47.3867,115.577 45.5,116C 44.6634,114.989 44.33,113.822 44.5,112.5C 45.8333,110.833 47.1667,109.167 48.5,107.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#edeedd\",d:\"M 182.5,108.5 C 183.492,108.328 184.158,108.662 184.5,109.5C 181.081,110.042 179.414,112.042 179.5,115.5C 177.62,115.229 176.287,115.896 175.5,117.5C 175.5,117.833 175.5,118.167 175.5,118.5C 174.833,118.5 174.167,118.5 173.5,118.5C 171.527,127.775 170.86,137.442 171.5,147.5C 171.5,147.833 171.5,148.167 171.5,148.5C 170.833,148.5 170.167,148.5 169.5,148.5C 169.334,138.494 169.5,128.494 170,118.5C 170.717,117.956 171.217,117.289 171.5,116.5C 174.99,113.589 178.656,110.922 182.5,108.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0d55d\",d:\"M 184.5,109.5 C 184.5,110.167 184.5,110.833 184.5,111.5C 183.566,112.568 183.232,113.901 183.5,115.5C 180.779,115.963 178.112,116.629 175.5,117.5C 176.287,115.896 177.62,115.229 179.5,115.5C 179.414,112.042 181.081,110.042 184.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#244561\",d:\"M 482.5,126.5 C 481.662,126.842 481.328,127.508 481.5,128.5C 481.167,128.5 480.833,128.5 480.5,128.5C 478.167,125.5 475.5,122.833 472.5,120.5C 467.195,117.178 461.861,113.844 456.5,110.5C 455.501,122.815 455.168,135.149 455.5,147.5C 454.669,135.674 454.169,123.674 454,111.5C 453.831,124.007 453.331,136.34 452.5,148.5C 452.5,134.833 452.5,121.167 452.5,107.5C 464.12,111.308 474.12,117.642 482.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e8ebdc\",d:\"M 504.5,93.5 C 504.5,111.5 504.5,129.5 504.5,147.5C 504.5,148.167 504.167,148.5 503.5,148.5C 502.5,148.5 501.5,148.5 500.5,148.5C 500.5,147.5 500.5,146.5 500.5,145.5C 500.333,128.83 500.5,112.163 501,95.5C 501.383,94.944 501.883,94.6107 502.5,94.5C 503.167,94.1667 503.833,93.8333 504.5,93.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#721f2a\",d:\"M 337.5,105.5 C 338.321,108.641 338.821,111.975 339,115.5C 341.046,113.3 342.046,110.633 342,107.5C 342.717,108.044 343.217,108.711 343.5,109.5C 342.505,122.323 342.171,135.323 342.5,148.5C 341.834,145.972 341.168,143.306 340.5,140.5C 339.824,141.602 339.158,142.602 338.5,143.5C 338.167,143.5 337.833,143.5 337.5,143.5C 335.167,143.5 332.833,143.5 330.5,143.5C 330.5,142.5 330.5,141.5 330.5,140.5C 332.833,140.5 335.167,140.5 337.5,140.5C 337.5,138.833 337.5,137.167 337.5,135.5C 334.833,135.5 332.167,135.5 329.5,135.5C 329.611,134.883 329.944,134.383 330.5,134C 329.244,133.583 328.577,132.75 328.5,131.5C 328.833,131.5 329.167,131.5 329.5,131.5C 332.167,131.5 334.833,131.5 337.5,131.5C 338.451,130.081 338.784,128.415 338.5,126.5C 335.5,126.5 332.5,126.5 329.5,126.5C 329.5,125.167 329.5,123.833 329.5,122.5C 332.5,122.5 335.5,122.5 338.5,122.5C 338.5,120.833 338.5,119.167 338.5,117.5C 335.5,117.5 332.5,117.5 329.5,117.5C 329.5,116.5 329.5,115.5 329.5,114.5C 332.096,113.735 334.763,113.401 337.5,113.5C 337.5,110.833 337.5,108.167 337.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a8845a\",d:\"M 593.5,87.5 C 594.791,87.2627 595.791,87.596 596.5,88.5C 594.612,90.9878 593.945,93.9878 594.5,97.5C 594.5,104.5 594.5,111.5 594.5,118.5C 594.167,118.5 593.833,118.5 593.5,118.5C 590.316,116.586 586.649,115.92 582.5,116.5C 585.287,115.523 588.287,115.19 591.5,115.5C 592.338,115.158 592.672,114.492 592.5,113.5C 593.373,109.232 593.706,104.898 593.5,100.5C 593.5,99.5 593.5,98.5 593.5,97.5C 593.5,94.1667 593.5,90.8333 593.5,87.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41e2fb\",d:\"M 204.5,98.5 C 205.706,102.907 205.706,107.574 204.5,112.5C 206.455,117.072 206.788,121.739 205.5,126.5C 201.701,125.207 198.034,125.207 194.5,126.5C 194.167,126.5 193.833,126.5 193.5,126.5C 191.251,123.622 191.584,120.788 194.5,118C 196.81,117.503 199.143,117.337 201.5,117.5C 201.5,114.833 201.5,112.167 201.5,109.5C 199.265,109.205 197.265,109.539 195.5,110.5C 195.158,111.338 194.492,111.672 193.5,111.5C 192.5,111.5 191.5,111.5 190.5,111.5C 190.923,113.781 190.256,115.448 188.5,116.5C 188.5,113.833 188.5,111.167 188.5,108.5C 192.444,105.895 196.11,102.895 199.5,99.5C 201.045,98.5481 202.712,98.2148 204.5,98.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c66157\",d:\"M 329.5,105.5 C 328.292,104.766 326.959,104.433 325.5,104.5C 325.5,118.833 325.5,133.167 325.5,147.5C 325.5,147.833 325.5,148.167 325.5,148.5C 322.833,148.5 320.167,148.5 317.5,148.5C 317.5,148.167 317.5,147.833 317.5,147.5C 318.167,147.5 318.833,147.5 319.5,147.5C 321.167,147.5 322.833,147.5 324.5,147.5C 324.5,133.167 324.5,118.833 324.5,104.5C 325.097,103.861 325.93,103.528 327,103.5C 328.376,103.684 329.209,104.351 329.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1d498\",d:\"M 582.5,116.5 C 586.649,115.92 590.316,116.586 593.5,118.5C 590.223,118.216 587.057,118.549 584,119.5C 583.502,122.817 583.335,126.15 583.5,129.5C 582.515,125.366 582.182,121.032 582.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecd9d7\",d:\"M 936.5,110.5 C 937.5,110.5 938.5,110.5 939.5,110.5C 939.5,113.833 939.5,117.167 939.5,120.5C 939.5,122.167 939.5,123.833 939.5,125.5C 939.5,125.833 939.5,126.167 939.5,126.5C 938.5,126.5 937.5,126.5 936.5,126.5C 936.5,121.167 936.5,115.833 936.5,110.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7bfb1\",d:\"M 89.5,73.5 C 89.5,92.1667 89.5,110.833 89.5,129.5C 89.5,130.5 89.5,131.5 89.5,132.5C 89.5,133.167 89.5,133.833 89.5,134.5C 88.5139,138.97 88.1805,143.637 88.5,148.5C 88.1667,148.5 87.8333,148.5 87.5,148.5C 88.0011,123.336 88.6678,98.3359 89.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#307bc3\",d:\"M 123.5,115.5 C 124.486,119.97 124.819,124.637 124.5,129.5C 123.5,129.5 122.5,129.5 121.5,129.5C 116.637,129.819 111.97,129.486 107.5,128.5C 112.833,128.5 118.167,128.5 123.5,128.5C 123.5,124.167 123.5,119.833 123.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc7bc\",d:\"M 288.5,113.5 C 288.5,112.833 288.833,112.5 289.5,112.5C 289.833,112.5 290.167,112.5 290.5,112.5C 290.5,124.5 290.5,136.5 290.5,148.5C 289.209,148.737 288.209,148.404 287.5,147.5C 288.829,142.208 289.496,136.542 289.5,130.5C 289.499,124.657 289.166,118.99 288.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fa6859\",d:\"M 337.5,105.5 C 337.5,108.167 337.5,110.833 337.5,113.5C 334.763,113.401 332.096,113.735 329.5,114.5C 329.5,111.5 329.5,108.5 329.5,105.5C 329.209,104.351 328.376,103.684 327,103.5C 325.93,103.528 325.097,103.861 324.5,104.5C 323.515,108.634 323.182,112.968 323.5,117.5C 322.127,117.343 320.793,117.51 319.5,118C 318.922,119.417 317.922,120.25 316.5,120.5C 313.813,120.336 311.146,120.503 308.5,121C 307.748,121.671 307.414,122.504 307.5,123.5C 306.883,123.611 306.383,123.944 306,124.5C 305.5,131.826 305.334,139.159 305.5,146.5C 300.93,147.441 296.263,147.774 291.5,147.5C 291.333,135.829 291.5,124.162 292,112.5C 293.045,111.627 293.878,110.627 294.5,109.5C 296.5,107.167 298.5,104.833 300.5,102.5C 305.903,97.5987 311.736,93.2654 318,89.5C 324.645,94.6435 331.145,99.9768 337.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bc2f2a\",d:\"M 314.5,103.5 C 315.833,103.5 317.167,103.5 318.5,103.5C 318.297,108.036 315.964,110.702 311.5,111.5C 311.016,108.212 312.016,105.545 314.5,103.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6b2d24\",d:\"M 329.5,105.5 C 329.5,108.5 329.5,111.5 329.5,114.5C 328.907,111.5 328.074,108.5 327,105.5C 326.831,119.673 326.331,133.673 325.5,147.5C 325.5,133.167 325.5,118.833 325.5,104.5C 326.959,104.433 328.292,104.766 329.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cbf1fa\",d:\"M 472.5,120.5 C 472.631,121.239 472.464,121.906 472,122.5C 468.533,120.404 465.033,118.404 461.5,116.5C 460.85,116.196 460.183,115.863 459.5,115.5C 458.511,119.107 458.177,122.774 458.5,126.5C 458.328,133.623 458.328,140.957 458.5,148.5C 457.209,148.737 456.209,148.404 455.5,147.5C 455.168,135.149 455.501,122.815 456.5,110.5C 461.861,113.844 467.195,117.178 472.5,120.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cf9732\",d:\"M 582.5,90.5 C 581.504,90.4142 580.671,90.7476 580,91.5C 579.5,110.497 579.333,129.497 579.5,148.5C 575.833,148.5 572.167,148.5 568.5,148.5C 568.5,148.167 568.5,147.833 568.5,147.5C 571.833,147.5 575.167,147.5 578.5,147.5C 578.5,131.833 578.5,116.167 578.5,100.5C 578.335,97.1501 578.502,93.8168 579,90.5C 580.292,89.2089 581.458,89.2089 582.5,90.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fac209\",d:\"M 882.5,91.5 C 885.564,94.5703 888.897,97.2369 892.5,99.5C 893.5,100.833 894.5,102.167 895.5,103.5C 896.171,104.847 896.171,106.014 895.5,107C 897.061,107.318 898.228,108.151 899,109.5C 899.5,121.829 899.667,134.162 899.5,146.5C 897.901,146.232 896.568,146.566 895.5,147.5C 893.833,147.5 892.167,147.5 890.5,147.5C 890.827,137.652 890.494,127.986 889.5,118.5C 882.5,118.5 875.5,118.5 868.5,118.5C 866.689,127.446 865.855,136.78 866,146.5C 860.593,147.473 855.093,147.807 849.5,147.5C 849.5,134.5 849.5,121.5 849.5,108.5C 853.436,106.234 856.769,103.234 859.5,99.5C 859.957,97.2273 861.29,95.894 863.5,95.5C 866.245,94.2628 868.578,92.4295 870.5,90C 874.676,89.3195 878.676,89.8195 882.5,91.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ef9006\",d:\"M 874.5,97.5 C 877.308,97.6933 879.975,98.36 882.5,99.5C 882.994,106.922 879.661,109.588 872.5,107.5C 870.81,103.631 871.476,100.298 874.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f86263\",d:\"M 968.5,111.5 C 968.5,116.167 968.5,120.833 968.5,125.5C 958.833,125.5 949.167,125.5 939.5,125.5C 939.5,123.833 939.5,122.167 939.5,120.5C 940.473,118.052 940.806,115.385 940.5,112.5C 942.833,112.5 945.167,112.5 947.5,112.5C 947.007,114.806 946.674,117.139 946.5,119.5C 949.5,119.5 952.5,119.5 955.5,119.5C 955.5,116.833 955.5,114.167 955.5,111.5C 959.833,111.5 964.167,111.5 968.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcd1ca\",d:\"M 949.5,115.5 C 950.833,115.5 952.167,115.5 953.5,115.5C 953.5,116.5 953.5,117.5 953.5,118.5C 951.712,118.785 950.045,118.452 948.5,117.5C 948.863,116.817 949.196,116.15 949.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#52dbfa\",d:\"M 127.5,116.5 C 132.64,115.512 137.974,115.179 143.5,115.5C 143.5,119.833 143.5,124.167 143.5,128.5C 139.176,128.073 134.842,127.739 130.5,127.5C 133.542,125.252 136.875,124.919 140.5,126.5C 140.274,123.751 140.607,121.084 141.5,118.5C 141.043,117.702 140.376,117.369 139.5,117.5C 138.833,117.5 138.167,117.5 137.5,117.5C 134.098,117.658 130.764,117.324 127.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#173f71\",d:\"M 229.5,92.5 C 230.568,93.4345 231.901,93.7678 233.5,93.5C 233.83,111.674 233.497,129.674 232.5,147.5C 232.5,146.833 232.5,146.167 232.5,145.5C 233.152,128.466 232.485,111.8 230.5,95.5C 229.5,95.5 228.5,95.5 227.5,95.5C 222.825,94.0975 218.159,94.4308 213.5,96.5C 212.504,96.4142 211.671,96.7476 211,97.5C 210.506,99.1341 210.34,100.801 210.5,102.5C 209.833,117.5 209.167,132.5 208.5,147.5C 208.83,131.325 208.496,115.325 207.5,99.5C 206.391,99.4431 205.391,99.1098 204.5,98.5C 203.833,97.5 203.167,96.5 202.5,95.5C 202.833,95.5 203.167,95.5 203.5,95.5C 204.531,96.355 205.697,97.0217 207,97.5C 210.437,95.5317 213.937,93.6984 217.5,92C 221.689,91.1881 225.689,91.3547 229.5,92.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37dcfb\",d:\"M 227.5,95.5 C 228.5,95.5 229.5,95.5 230.5,95.5C 231.476,106.085 231.809,116.752 231.5,127.5C 228.763,127.599 226.096,127.265 223.5,126.5C 224.587,124.016 225.253,121.349 225.5,118.5C 225,115.504 225,112.67 225.5,110C 225.101,108.019 224.101,106.519 222.5,105.5C 221.5,105.5 220.5,105.5 219.5,105.5C 217.564,109.715 216.897,114.381 217.5,119.5C 218.833,119.5 220.167,119.5 221.5,119.5C 221.5,121.5 221.5,123.5 221.5,125.5C 219.5,124.833 217.5,124.167 215.5,123.5C 215.5,124.833 215.5,126.167 215.5,127.5C 214.5,127.5 213.5,127.5 212.5,127.5C 213.013,121.645 213.679,115.811 214.5,110C 214.432,107.05 213.766,104.383 212.5,102C 215.13,101.155 217.464,101.655 219.5,103.5C 220.386,102.675 220.719,101.675 220.5,100.5C 218.076,100.808 215.743,100.474 213.5,99.5C 213.938,98.4937 214.604,98.4937 215.5,99.5C 216.23,98.0663 217.23,96.8996 218.5,96C 221.482,95.502 224.482,95.3354 227.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3989c1\",d:\"M 785.5,115.5 C 792.707,117.291 793.373,120.624 787.5,125.5C 781.614,123.181 780.947,119.847 785.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44cffa\",d:\"M 227.5,95.5 C 224.482,95.3354 221.482,95.502 218.5,96C 217.23,96.8996 216.23,98.0663 215.5,99.5C 214.604,98.4937 213.938,98.4937 213.5,99.5C 215.743,100.474 218.076,100.808 220.5,100.5C 220.719,101.675 220.386,102.675 219.5,103.5C 217.464,101.655 215.13,101.155 212.5,102C 213.766,104.383 214.432,107.05 214.5,110C 213.679,115.811 213.013,121.645 212.5,127.5C 213.5,127.5 214.5,127.5 215.5,127.5C 215.5,126.167 215.5,124.833 215.5,123.5C 217.5,124.167 219.5,124.833 221.5,125.5C 221.5,123.5 221.5,121.5 221.5,119.5C 220.167,119.5 218.833,119.5 217.5,119.5C 216.897,114.381 217.564,109.715 219.5,105.5C 218.305,109.787 218.305,114.12 219.5,118.5C 220.5,118.5 221.5,118.5 222.5,118.5C 222.5,114.167 222.5,109.833 222.5,105.5C 224.101,106.519 225.101,108.019 225.5,110C 225,112.67 225,115.504 225.5,118.5C 225.253,121.349 224.587,124.016 223.5,126.5C 222.167,126.5 220.833,126.5 219.5,126.5C 218.833,126.5 218.5,126.833 218.5,127.5C 217.519,129.396 216.519,131.396 215.5,133.5C 214.675,134.386 213.675,134.719 212.5,134.5C 212.784,132.585 212.451,130.919 211.5,129.5C 211.334,119.161 211.5,108.828 212,98.5C 212.717,97.9558 213.217,97.2891 213.5,96.5C 218.159,94.4308 222.825,94.0975 227.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0a407b\",d:\"M 219.5,105.5 C 220.5,105.5 221.5,105.5 222.5,105.5C 222.5,109.833 222.5,114.167 222.5,118.5C 221.5,118.5 220.5,118.5 219.5,118.5C 218.305,114.12 218.305,109.787 219.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#291609\",d:\"M 582.5,113.5 C 582.833,113.5 583.167,113.5 583.5,113.5C 586.167,114.167 588.833,114.833 591.5,115.5C 588.287,115.19 585.287,115.523 582.5,116.5C 582.182,121.032 582.515,125.366 583.5,129.5C 583.5,130.833 583.5,132.167 583.5,133.5C 582.566,134.568 582.232,135.901 582.5,137.5C 582.5,141.167 582.5,144.833 582.5,148.5C 581.833,148.5 581.167,148.5 580.5,148.5C 580.333,132.83 580.5,117.163 581,101.5C 581.176,105.688 581.676,109.688 582.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c4f0f8\",d:\"M 631.5,115.5 C 638.19,117.796 644.523,120.963 650.5,125C 652.79,126.777 654.457,128.944 655.5,131.5C 655.66,133.199 655.494,134.866 655,136.5C 651.43,129.964 646.263,125.131 639.5,122C 637.975,120.991 636.308,120.491 634.5,120.5C 634.763,124.6 634.43,128.6 633.5,132.5C 633.5,133.5 633.5,134.5 633.5,135.5C 634.089,139.971 633.423,143.971 631.5,147.5C 631.5,136.833 631.5,126.167 631.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d0d07\",d:\"M 83.5,97.5 C 84.1174,97.6107 84.6174,97.944 85,98.5C 85.4999,113.83 85.6666,129.163 85.5,144.5C 84.8176,130.737 84.1509,116.403 83.5,101.5C 83.5,100.167 83.5,98.8333 83.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6deefa\",d:\"M 123.5,115.5 C 123.5,119.833 123.5,124.167 123.5,128.5C 118.167,128.5 112.833,128.5 107.5,128.5C 107.5,124.167 107.5,119.833 107.5,115.5C 112.833,115.5 118.167,115.5 123.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#64eef9\",d:\"M 127.5,116.5 C 130.764,117.324 134.098,117.658 137.5,117.5C 136.01,119.28 134.01,119.946 131.5,119.5C 131.5,121.167 131.5,122.833 131.5,124.5C 134.167,124.5 136.833,124.5 139.5,124.5C 139.5,122.167 139.5,119.833 139.5,117.5C 140.376,117.369 141.043,117.702 141.5,118.5C 140.607,121.084 140.274,123.751 140.5,126.5C 136.875,124.919 133.542,125.252 130.5,127.5C 129.5,127.5 128.5,127.5 127.5,127.5C 127.5,123.833 127.5,120.167 127.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b3fbfb\",d:\"M 137.5,117.5 C 138.167,117.5 138.833,117.5 139.5,117.5C 139.5,119.833 139.5,122.167 139.5,124.5C 136.833,124.5 134.167,124.5 131.5,124.5C 131.5,122.833 131.5,121.167 131.5,119.5C 134.01,119.946 136.01,119.28 137.5,117.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#77746c\",d:\"M 384.5,117.5 C 384.833,117.5 385.167,117.5 385.5,117.5C 384.586,120.728 384.253,124.061 384.5,127.5C 383.167,124.167 383.167,120.833 384.5,117.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#122227\",d:\"M 970.5,98.5 C 970.833,98.5 971.167,98.5 971.5,98.5C 971.5,113.5 971.5,128.5 971.5,143.5C 970.833,138.833 970.167,134.167 969.5,129.5C 969.5,128.5 969.5,127.5 969.5,126.5C 969.5,125.833 969.5,125.167 969.5,124.5C 970.493,116.016 970.826,107.349 970.5,98.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4ce35\",d:\"M 593.5,118.5 C 593.5,122.167 593.5,125.833 593.5,129.5C 590.167,129.5 586.833,129.5 583.5,129.5C 583.335,126.15 583.502,122.817 584,119.5C 587.057,118.549 590.223,118.216 593.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ad5152\",d:\"M 968.5,111.5 C 968.833,111.5 969.167,111.5 969.5,111.5C 969.5,115.833 969.5,120.167 969.5,124.5C 969.5,125.167 969.5,125.833 969.5,126.5C 969.167,126.5 968.833,126.5 968.5,126.5C 958.833,126.5 949.167,126.5 939.5,126.5C 939.5,126.167 939.5,125.833 939.5,125.5C 949.167,125.5 958.833,125.5 968.5,125.5C 968.5,120.833 968.5,116.167 968.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5b835\",d:\"M 410.5,117.5 C 412.027,117.427 413.027,118.094 413.5,119.5C 413.5,122.167 413.5,124.833 413.5,127.5C 404.167,127.5 394.833,127.5 385.5,127.5C 385.958,121.369 389.291,117.703 395.5,116.5C 396.988,115.061 398.822,114.395 401,114.5C 404.312,115.074 407.478,116.074 410.5,117.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8b707\",d:\"M 398.5,115.5 C 403.072,115.947 407.405,117.28 411.5,119.5C 412.474,121.743 412.808,124.076 412.5,126.5C 404.16,126.666 395.827,126.5 387.5,126C 388.167,124.667 388.833,123.333 389.5,122C 392.921,120.301 395.921,118.135 398.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2f2d1\",d:\"M 418.5,122.5 C 421.81,124.482 424.81,126.815 427.5,129.5C 426.833,129.5 426.167,129.5 425.5,129.5C 423.735,128.539 421.735,128.205 419.5,128.5C 420.108,133.944 419.442,138.944 417.5,143.5C 417.175,136.313 417.509,129.313 418.5,122.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b1f2d\",d:\"M 396.5,106.5 C 396.833,106.5 397.167,106.5 397.5,106.5C 412.791,115.272 427.458,125.105 441.5,136C 444.186,138.546 445.186,141.713 444.5,145.5C 444.02,142.922 443.02,140.588 441.5,138.5C 441.167,138.5 440.833,138.5 440.5,138.5C 440.5,137.833 440.167,137.5 439.5,137.5C 435.881,134.35 431.881,131.684 427.5,129.5C 424.81,126.815 421.81,124.482 418.5,122.5C 418.44,121.957 418.107,121.624 417.5,121.5C 416.534,123.396 416.201,125.396 416.5,127.5C 415.221,128.968 413.554,129.635 411.5,129.5C 404.167,129.5 396.833,129.5 389.5,129.5C 389.5,129.167 389.5,128.833 389.5,128.5C 397.833,128.5 406.167,128.5 414.5,128.5C 414.81,125.287 414.477,122.287 413.5,119.5C 413.027,118.094 412.027,117.427 410.5,117.5C 408.469,115.478 406.135,113.811 403.5,112.5C 401.814,109.995 399.481,109.162 396.5,110C 392.655,112.363 388.989,114.863 385.5,117.5C 385.167,117.5 384.833,117.5 384.5,117.5C 384.158,116.662 383.492,116.328 382.5,116.5C 387.445,113.555 392.112,110.221 396.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4e18f\",d:\"M 403.5,112.5 C 406.135,113.811 408.469,115.478 410.5,117.5C 407.478,116.074 404.312,115.074 401,114.5C 398.822,114.395 396.988,115.061 395.5,116.5C 395.511,114.983 396.177,113.816 397.5,113C 399.473,112.505 401.473,112.338 403.5,112.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#703b3a\",d:\"M 936.5,126.5 C 937.5,126.5 938.5,126.5 939.5,126.5C 949.167,126.5 958.833,126.5 968.5,126.5C 958.624,126.843 948.957,127.843 939.5,129.5C 938.5,129.5 937.5,129.5 936.5,129.5C 936.5,128.5 936.5,127.5 936.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6dfde\",d:\"M 288.5,113.5 C 289.166,118.99 289.499,124.657 289.5,130.5C 289.496,136.542 288.829,142.208 287.5,147.5C 286.341,136.674 286.174,125.674 287,114.5C 287.383,113.944 287.883,113.611 288.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ade8f4\",d:\"M 381.5,127.5 C 378.615,127.194 375.948,127.527 373.5,128.5C 372.883,128.611 372.383,128.944 372,129.5C 371.501,135.491 371.334,141.491 371.5,147.5C 370.167,147.5 368.833,147.5 367.5,147.5C 367.334,140.825 367.5,134.158 368,127.5C 372.251,124.958 376.418,122.291 380.5,119.5C 381.48,122.086 381.813,124.753 381.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7c6c33\",d:\"M 413.5,119.5 C 414.477,122.287 414.81,125.287 414.5,128.5C 406.167,128.5 397.833,128.5 389.5,128.5C 387.585,128.784 385.919,128.451 384.5,127.5C 384.833,127.5 385.167,127.5 385.5,127.5C 394.833,127.5 404.167,127.5 413.5,127.5C 413.5,124.833 413.5,122.167 413.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#425c88\",d:\"M 619.5,97.5 C 619.167,98.1667 618.833,98.8333 618.5,99.5C 615.797,97.6867 614.13,98.3533 613.5,101.5C 615.363,103.04 616.363,105.04 616.5,107.5C 616.433,120.836 616.1,134.169 615.5,147.5C 613.5,147.5 611.5,147.5 609.5,147.5C 609.5,130.167 609.5,112.833 609.5,95.5C 609.56,94.9569 609.893,94.6236 610.5,94.5C 613.028,96.8738 616.028,97.8738 619.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5680a7\",d:\"M 629.5,113.5 C 629.5,124.167 629.5,134.833 629.5,145.5C 629.5,146.5 629.5,147.5 629.5,148.5C 625.958,148.813 622.625,148.479 619.5,147.5C 622.5,147.5 625.5,147.5 628.5,147.5C 628.172,135.988 628.505,124.654 629.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7895a8\",d:\"M 351.5,114.5 C 350.523,125.419 350.19,136.419 350.5,147.5C 349.506,137.347 349.172,127.014 349.5,116.5C 349.5,115.167 350.167,114.5 351.5,114.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#315d7b\",d:\"M 618.5,99.5 C 618.5,115.5 618.5,131.5 618.5,147.5C 617.5,147.5 616.5,147.5 615.5,147.5C 616.1,134.169 616.433,120.836 616.5,107.5C 616.363,105.04 615.363,103.04 613.5,101.5C 614.13,98.3533 615.797,97.6867 618.5,99.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f29f0e\",d:\"M 895.5,103.5 C 896.833,104.5 898.167,105.5 899.5,106.5C 900.861,108.527 902.527,110.194 904.5,111.5C 904.5,123.5 904.5,135.5 904.5,147.5C 901.5,147.5 898.5,147.5 895.5,147.5C 896.568,146.566 897.901,146.232 899.5,146.5C 899.667,134.162 899.5,121.829 899,109.5C 898.228,108.151 897.061,107.318 895.5,107C 896.171,106.014 896.171,104.847 895.5,103.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#420d12\",d:\"M 968.5,126.5 C 968.833,126.5 969.167,126.5 969.5,126.5C 969.5,127.5 969.5,128.5 969.5,129.5C 959.5,129.5 949.5,129.5 939.5,129.5C 948.957,127.843 958.624,126.843 968.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1870a3\",d:\"M 381.5,127.5 C 379.369,128.314 377.036,128.814 374.5,129C 376.058,129.21 377.391,129.71 378.5,130.5C 376.219,130.923 374.552,130.256 373.5,128.5C 375.948,127.527 378.615,127.194 381.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36a6e3\",d:\"M 688.5,121.5 C 688.665,125.182 688.499,128.848 688,132.5C 682.636,136.069 678.136,140.402 674.5,145.5C 672.112,148.076 669.112,149.076 665.5,148.5C 665.019,143.279 666.353,138.613 669.5,134.5C 673.73,130.1 678.397,126.266 683.5,123C 685.025,121.991 686.692,121.491 688.5,121.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a2035\",d:\"M 289.5,112.5 C 288.833,112.5 288.5,112.833 288.5,113.5C 287.883,113.611 287.383,113.944 287,114.5C 286.174,125.674 286.341,136.674 287.5,147.5C 288.209,148.404 289.209,148.737 290.5,148.5C 295.5,148.5 300.5,148.5 305.5,148.5C 305.5,148.833 305.5,149.167 305.5,149.5C 305.631,150.376 305.298,151.043 304.5,151.5C 296.829,150.913 289.162,150.579 281.5,150.5C 282.127,140.002 282.793,129.502 283.5,119C 283.475,117.124 282.809,115.624 281.5,114.5C 281.5,114.167 281.5,113.833 281.5,113.5C 283.554,113.635 285.221,112.968 286.5,111.5C 287.496,111.586 288.329,111.252 289,110.5C 289.464,111.094 289.631,111.761 289.5,112.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#811a28\",d:\"M 346.5,113.5 C 347.486,117.97 347.819,122.637 347.5,127.5C 348.126,134.584 347.459,141.25 345.5,147.5C 345.21,136.116 345.543,124.783 346.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#909ba8\",d:\"M 418.5,122.5 C 417.509,129.313 417.175,136.313 417.5,143.5C 417.5,145.167 417.5,146.833 417.5,148.5C 416.509,141.687 416.175,134.687 416.5,127.5C 416.201,125.396 416.534,123.396 417.5,121.5C 418.107,121.624 418.44,121.957 418.5,122.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6c56e\",d:\"M 566.5,109.5 C 566.833,109.5 567.167,109.5 567.5,109.5C 567.171,122.344 567.505,135.011 568.5,147.5C 568.5,147.833 568.5,148.167 568.5,148.5C 567.833,148.5 567.167,148.5 566.5,148.5C 566.5,148.167 566.5,147.833 566.5,147.5C 566.5,134.833 566.5,122.167 566.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#603815\",d:\"M 596.5,88.5 C 597.497,108.326 597.83,128.326 597.5,148.5C 596.167,148.5 594.833,148.5 593.5,148.5C 593.5,148.167 593.5,147.833 593.5,147.5C 593.5,144.167 593.5,140.833 593.5,137.5C 593.5,136.167 593.5,134.833 593.5,133.5C 590.742,132.033 591.075,131.367 594.5,131.5C 594.5,127.167 594.5,122.833 594.5,118.5C 594.5,111.5 594.5,104.5 594.5,97.5C 595.29,98.6085 595.79,99.9419 596,101.5C 596.499,97.1794 596.666,92.8461 596.5,88.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f49e07\",d:\"M 601.5,88.5 C 602.79,89.0577 603.623,90.0577 604,91.5C 604.5,110.164 604.667,128.83 604.5,147.5C 602.5,147.5 600.5,147.5 598.5,147.5C 598.333,135.162 598.5,122.829 599,110.5C 601.027,103.335 601.86,96.0012 601.5,88.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf6b1\",d:\"M 847.5,109.5 C 847.5,108.833 847.833,108.5 848.5,108.5C 848.833,108.5 849.167,108.5 849.5,108.5C 849.5,121.5 849.5,134.5 849.5,147.5C 849.167,147.5 848.833,147.5 848.5,147.5C 848.829,134.656 848.495,121.989 847.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#611916\",d:\"M 89.5,129.5 C 94.1667,129.5 98.8333,129.5 103.5,129.5C 103.5,130.5 103.5,131.5 103.5,132.5C 98.8333,132.5 94.1667,132.5 89.5,132.5C 89.5,131.5 89.5,130.5 89.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1777c\",d:\"M 343.5,109.5 C 344.122,111.122 345.122,112.455 346.5,113.5C 345.543,124.783 345.21,136.116 345.5,147.5C 344.791,148.404 343.791,148.737 342.5,148.5C 342.171,135.323 342.505,122.323 343.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#33201d\",d:\"M 539.5,109.5 C 548.167,109.5 556.833,109.5 565.5,109.5C 565.833,109.5 566.167,109.5 566.5,109.5C 566.5,122.167 566.5,134.833 566.5,147.5C 565.833,147.5 565.5,147.167 565.5,146.5C 565.134,134.662 564.467,122.996 563.5,111.5C 563.167,111.5 562.833,111.5 562.5,111.5C 561.5,111.5 560.5,111.5 559.5,111.5C 553.5,111.5 547.5,111.5 541.5,111.5C 541.5,123.833 541.5,136.167 541.5,148.5C 541.082,149.222 540.416,149.722 539.5,150C 533.333,150.167 527.167,150.333 521,150.5C 514.419,150.521 508.586,150.188 503.5,149.5C 515.414,149.821 527.247,149.488 539,148.5C 539.5,135.504 539.667,122.504 539.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#814811\",d:\"M 593.5,118.5 C 593.833,118.5 594.167,118.5 594.5,118.5C 594.5,122.833 594.5,127.167 594.5,131.5C 591.075,131.367 590.742,132.033 593.5,133.5C 590.167,133.5 586.833,133.5 583.5,133.5C 583.5,132.167 583.5,130.833 583.5,129.5C 586.833,129.5 590.167,129.5 593.5,129.5C 593.5,125.833 593.5,122.167 593.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7e0ef\",d:\"M 688.5,118.5 C 675.91,122.788 667.243,131.121 662.5,143.5C 661.566,144.568 661.232,145.901 661.5,147.5C 660.5,147.5 659.5,147.5 658.5,147.5C 658.5,145.833 658.5,144.167 658.5,142.5C 662.393,129.434 670.726,120.267 683.5,115C 685.134,114.506 686.801,114.34 688.5,114.5C 688.5,115.833 688.5,117.167 688.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6696ae\",d:\"M 773.5,112.5 C 773.5,124.167 773.5,135.833 773.5,147.5C 781.167,147.5 788.833,147.5 796.5,147.5C 796.229,145.62 796.896,144.287 798.5,143.5C 797.962,145.117 797.629,146.784 797.5,148.5C 789.167,148.5 780.833,148.5 772.5,148.5C 772.5,147.5 772.5,146.5 772.5,145.5C 772.172,134.321 772.505,123.321 773.5,112.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#346bac\",d:\"M 256.5,67.5 C 256.5,94.5 256.5,121.5 256.5,148.5C 249.313,148.825 242.313,148.491 235.5,147.5C 242.584,148.126 249.25,147.459 255.5,145.5C 255.5,139.167 255.5,132.833 255.5,126.5C 255.168,109.31 255.168,91.9766 255.5,74.5C 255.5,73.1667 255.5,71.8333 255.5,70.5C 253.585,70.7845 251.919,70.4511 250.5,69.5C 252.199,69.6602 253.866,69.4935 255.5,69C 254.263,68.7679 253.263,68.2679 252.5,67.5C 253.5,67.5 254.5,67.5 255.5,67.5C 255.5,64.8333 255.5,62.1667 255.5,59.5C 256.507,61.3609 256.84,64.0275 256.5,67.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#78a9c1\",d:\"M 147.5,68.5 C 148.498,94.6614 148.831,120.995 148.5,147.5C 154.5,147.5 160.5,147.5 166.5,147.5C 160.355,148.49 154.022,148.823 147.5,148.5C 147.5,148.167 147.5,147.833 147.5,147.5C 147.5,121.167 147.5,94.8333 147.5,68.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#390d11\",d:\"M 329.5,114.5 C 329.5,115.5 329.5,116.5 329.5,117.5C 329.5,119.167 329.5,120.833 329.5,122.5C 329.5,123.833 329.5,125.167 329.5,126.5C 328.549,127.919 328.216,129.585 328.5,131.5C 328.577,132.75 329.244,133.583 330.5,134C 329.944,134.383 329.611,134.883 329.5,135.5C 328.861,136.097 328.528,136.93 328.5,138C 328.684,139.376 329.351,140.209 330.5,140.5C 330.5,141.5 330.5,142.5 330.5,143.5C 328.744,144.552 328.077,146.219 328.5,148.5C 327.5,148.5 326.5,148.5 325.5,148.5C 325.5,148.167 325.5,147.833 325.5,147.5C 326.331,133.673 326.831,119.673 327,105.5C 328.074,108.5 328.907,111.5 329.5,114.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e2a722\",d:\"M 425.5,129.5 C 427.297,130.393 428.63,131.726 429.5,133.5C 430.783,138.531 430.783,143.531 429.5,148.5C 426.167,148.5 422.833,148.5 419.5,148.5C 420.458,142.256 420.791,135.923 420.5,129.5C 422.167,129.5 423.833,129.5 425.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#131933\",d:\"M 46.5,99.5 C 46.5,100.167 46.8333,100.5 47.5,100.5C 46.1667,102.167 44.8333,103.833 43.5,105.5C 42.5416,105.953 41.7083,106.619 41,107.5C 40.5012,111.486 40.3345,115.486 40.5,119.5C 40.5,129.167 40.5,138.833 40.5,148.5C 39.8333,145.5 39.1667,142.5 38.5,139.5C 38.5,135.167 38.5,130.833 38.5,126.5C 38.5,125.5 38.5,124.5 38.5,123.5C 38.5,122.5 38.5,121.5 38.5,120.5C 33.6604,122.339 29.327,125.005 25.5,128.5C 24.5093,134.979 24.176,141.646 24.5,148.5C 24.1667,148.5 23.8333,148.5 23.5,148.5C 23.5,141.5 23.5,134.5 23.5,127.5C 26.9895,124.589 30.6562,121.922 34.5,119.5C 35.4674,118.194 36.8007,117.527 38.5,117.5C 38.3347,113.818 38.5014,110.152 39,106.5C 41.3697,103.961 43.8697,101.628 46.5,99.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#766174\",d:\"M 25.5,128.5 C 24.8771,135.255 25.5437,141.588 27.5,147.5C 27.5,147.833 27.5,148.167 27.5,148.5C 26.5,148.5 25.5,148.5 24.5,148.5C 24.176,141.646 24.5093,134.979 25.5,128.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f56b6a\",d:\"M 36.5,126.5 C 36.83,133.2 36.4967,139.866 35.5,146.5C 33.2534,147.374 30.9201,147.708 28.5,147.5C 28.1712,141.794 28.5046,136.128 29.5,130.5C 31.4221,128.418 33.7555,127.084 36.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6d7dc\",d:\"M 38.5,123.5 C 37.5987,124.29 36.9321,125.29 36.5,126.5C 33.7555,127.084 31.4221,128.418 29.5,130.5C 28.5046,136.128 28.1712,141.794 28.5,147.5C 28.1667,147.5 27.8333,147.5 27.5,147.5C 25.5437,141.588 24.8771,135.255 25.5,128.5C 29.327,125.005 33.6604,122.339 38.5,120.5C 38.5,121.5 38.5,122.5 38.5,123.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2736b\",d:\"M 294.5,109.5 C 293.878,110.627 293.045,111.627 292,112.5C 291.5,124.162 291.333,135.829 291.5,147.5C 296.263,147.774 300.93,147.441 305.5,146.5C 305.5,147.167 305.5,147.833 305.5,148.5C 300.5,148.5 295.5,148.5 290.5,148.5C 290.5,136.5 290.5,124.5 290.5,112.5C 291.262,110.738 292.596,109.738 294.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b1445d\",d:\"M 38.5,123.5 C 38.5,124.5 38.5,125.5 38.5,126.5C 37.5084,133.648 37.175,140.981 37.5,148.5C 34.1667,148.5 30.8333,148.5 27.5,148.5C 27.5,148.167 27.5,147.833 27.5,147.5C 27.8333,147.5 28.1667,147.5 28.5,147.5C 30.9201,147.708 33.2534,147.374 35.5,146.5C 36.4967,139.866 36.83,133.2 36.5,126.5C 36.9321,125.29 37.5987,124.29 38.5,123.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9d7025\",d:\"M 182.5,108.5 C 183.209,107.596 184.209,107.263 185.5,107.5C 185.5,111.833 185.5,116.167 185.5,120.5C 185.827,129.682 185.493,138.682 184.5,147.5C 184.5,135.5 184.5,123.5 184.5,111.5C 184.5,110.833 184.5,110.167 184.5,109.5C 184.158,108.662 183.492,108.328 182.5,108.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0b3f85\",d:\"M 219.5,126.5 C 220.833,126.5 222.167,126.5 223.5,126.5C 223.5,131.5 223.5,136.5 223.5,141.5C 222.167,141.5 220.833,141.5 219.5,141.5C 219.5,136.5 219.5,131.5 219.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8f092\",d:\"M 425.5,129.5 C 423.833,129.5 422.167,129.5 420.5,129.5C 420.791,135.923 420.458,142.256 419.5,148.5C 418.833,148.5 418.167,148.5 417.5,148.5C 417.5,146.833 417.5,145.167 417.5,143.5C 419.442,138.944 420.108,133.944 419.5,128.5C 421.735,128.205 423.735,128.539 425.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c78f37\",d:\"M 425.5,129.5 C 426.167,129.5 426.833,129.5 427.5,129.5C 431.881,131.684 435.881,134.35 439.5,137.5C 437.883,136.962 436.216,136.629 434.5,136.5C 433.756,140.119 433.423,143.785 433.5,147.5C 435.833,147.5 438.167,147.5 440.5,147.5C 440.5,144.5 440.5,141.5 440.5,138.5C 440.833,138.5 441.167,138.5 441.5,138.5C 441.5,141.833 441.5,145.167 441.5,148.5C 438.5,148.5 435.5,148.5 432.5,148.5C 432.666,143.821 432.499,139.155 432,134.5C 431.329,133.748 430.496,133.414 429.5,133.5C 428.63,131.726 427.297,130.393 425.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbf6b8\",d:\"M 583.5,133.5 C 586.833,133.5 590.167,133.5 593.5,133.5C 593.5,134.833 593.5,136.167 593.5,137.5C 590.167,137.5 586.833,137.5 583.5,137.5C 583.167,137.5 582.833,137.5 582.5,137.5C 582.232,135.901 582.566,134.568 583.5,133.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ebfee\",d:\"M 655.5,131.5 C 656.167,131.5 656.5,131.833 656.5,132.5C 655.213,137.42 654.213,142.42 653.5,147.5C 652.448,147.649 651.448,147.483 650.5,147C 644.941,141.934 639.275,137.1 633.5,132.5C 634.43,128.6 634.763,124.6 634.5,120.5C 636.308,120.491 637.975,120.991 639.5,122C 646.263,125.131 651.43,129.964 655,136.5C 655.494,134.866 655.66,133.199 655.5,131.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cc5d5f\",d:\"M 939.5,129.5 C 949.5,129.5 959.5,129.5 969.5,129.5C 969.81,135.758 969.476,141.924 968.5,148C 958.506,148.5 948.506,148.666 938.5,148.5C 939.26,142.196 939.593,135.863 939.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb645c\",d:\"M 940.5,130.5 C 949.5,130.5 958.5,130.5 967.5,130.5C 967.785,135.897 967.451,141.23 966.5,146.5C 957.859,147.498 949.192,147.831 940.5,147.5C 940.5,141.833 940.5,136.167 940.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fde9da\",d:\"M 949.5,133.5 C 950.833,133.5 952.167,133.5 953.5,133.5C 953.5,134.833 953.5,136.167 953.5,137.5C 952.167,137.5 950.833,137.5 949.5,137.5C 949.5,136.167 949.5,134.833 949.5,133.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9beafb\",d:\"M 34.5,119.5 C 30.6562,121.922 26.9895,124.589 23.5,127.5C 23.095,134.923 22.095,142.257 20.5,149.5C 19.7784,149.918 19.2784,150.584 19,151.5C 18.3333,403.833 18.3333,656.167 19,908.5C 20.9349,911.907 21.7682,915.574 21.5,919.5C 23.6636,919.721 25.3303,920.721 26.5,922.5C 32.2209,933.221 40.5543,941.221 51.5,946.5C 51.9402,949.38 52.9402,952.046 54.5,954.5C 56.9835,959.275 60.3169,963.441 64.5,967C 67.7511,968.577 70.7511,970.577 73.5,973C 78.7627,974.815 84.096,976.315 89.5,977.5C 89.369,978.239 89.5357,978.906 90,979.5C 91.5827,979.507 93.2494,979.174 95,978.5C 217.623,980.497 340.456,981.164 463.5,980.5C 463.918,981.222 464.584,981.722 465.5,982C 464.328,982.419 463.328,983.085 462.5,984C 456.252,984.188 450.085,984.688 444,985.5C 442.719,985.619 441.552,985.119 440.5,984C 435,983.833 429.5,983.667 424,983.5C 384.685,984.512 344.351,984.512 303,983.5C 302,984.167 301,984.833 300,985.5C 280.908,984.971 260.408,984.304 238.5,983.5C 237.522,983.977 236.689,984.643 236,985.5C 225.937,985.112 215.104,984.446 203.5,983.5C 194.189,984.388 184.856,984.721 175.5,984.5C 175.5,985.5 175.5,986.5 175.5,987.5C 172.833,987.5 170.167,987.5 167.5,987.5C 167.5,986.5 167.5,985.5 167.5,984.5C 146.164,984.667 124.831,984.5 103.5,984C 98.1408,982.974 92.8075,982.808 87.5,983.5C 82.1449,981.458 76.8115,979.458 71.5,977.5C 70.286,975.931 68.6193,975.098 66.5,975C 69.0635,974.237 69.0635,973.737 66.5,973.5C 65.1374,974.198 63.9707,974.198 63,973.5C 61.7581,974.872 60.2581,975.872 58.5,976.5C 56.3516,975.242 54.1849,975.242 52,976.5C 51.5,976.333 51,976.167 50.5,976C 51.5,975 52.5,974 53.5,973C 49.0861,970.893 44.4194,969.393 39.5,968.5C 42.1071,967.682 44.7737,967.182 47.5,967C 45.0113,964.677 42.6779,962.177 40.5,959.5C 39.5344,957.604 39.2011,955.604 39.5,953.5C 36.0217,953.816 32.6883,953.316 29.5,952C 30.428,951.612 31.0946,950.945 31.5,950C 30.5909,947.177 30.4242,944.343 31,941.5C 27.8268,939.387 24.3268,938.387 20.5,938.5C 21.5,943.5 19.5,945.5 14.5,944.5C 14.5079,941.455 14.8413,938.455 15.5,935.5C 16.8333,935.5 18.1667,935.5 19.5,935.5C 18.3489,932.164 18.1822,928.831 19,925.5C 17.6667,924.833 16.3333,924.167 15,923.5C 14.2483,920.106 14.4149,916.773 15.5,913.5C 15.2907,912.914 14.9574,912.414 14.5,912C 7.59979,912.385 5.76646,909.552 9,903.5C 9.83174,895.147 9.66507,886.813 8.5,878.5C 7.57451,879.641 6.74117,879.641 6,878.5C 5.33333,876.167 5.33333,873.833 6,871.5C 7.01127,870.663 8.17793,870.33 9.5,870.5C 9.5,869.5 9.5,868.5 9.5,867.5C 8.16667,867.5 6.83333,867.5 5.5,867.5C 10.4472,855.485 10.7805,843.318 6.5,831C 7.33008,829.253 8.33008,827.587 9.5,826C 9.09464,825.055 8.42797,824.388 7.5,824C 9.74406,821.624 10.0774,818.957 8.5,816C 5.67207,816.095 2.67207,815.928 -0.5,815.5C -0.5,622.833 -0.5,430.167 -0.5,237.5C 1.72241,237.178 3.55575,237.845 5,239.5C 5.13225,235.338 5.96559,231.338 7.5,227.5C 5.31352,220.284 4.98019,212.951 6.5,205.5C 7.16667,206.167 7.83333,206.833 8.5,207.5C 9.83333,204.833 9.83333,202.167 8.5,199.5C 7.27215,203.234 5.60548,203.401 3.5,200C 5.75773,197.275 6.09106,194.275 4.5,191C 6.02394,187.709 7.35728,187.875 8.5,191.5C 9.83333,188.833 9.83333,186.167 8.5,183.5C 6.66754,182.752 5.00087,181.752 3.5,180.5C 4.83333,179.5 6.16667,178.5 7.5,177.5C 6.39149,175.786 7.05815,175.119 9.5,175.5C 9.5,172.833 9.5,170.167 9.5,167.5C 10.9778,167.762 12.3112,167.429 13.5,166.5C 8.30589,164.505 8.30589,162.672 13.5,161C 12.4366,159.812 11.1033,159.312 9.5,159.5C 9.5,156.833 9.5,154.167 9.5,151.5C 8.16667,151.5 6.83333,151.5 5.5,151.5C 5.33669,149.143 5.50335,146.81 6,144.5C 8.16996,142.328 10.5033,140.328 13,138.5C 13.4828,137.552 13.6495,136.552 13.5,135.5C 11.5328,135.261 9.69946,135.594 8,136.5C 7.51722,135.552 7.35055,134.552 7.5,133.5C 9.5,133.5 11.5,133.5 13.5,133.5C 13.9451,129.112 15.6118,125.279 18.5,122C 18.3333,121.5 18.1667,121 18,120.5C 17.3333,121.833 16.6667,121.833 16,120.5C 15.5295,113.289 17.0295,112.789 20.5,119C 23.3471,119.944 25.8471,119.444 28,117.5C 30.0902,118.791 31.4236,118.124 32,115.5C 32.3333,113.5 32.6667,111.5 33,109.5C 35.7842,112.458 36.2842,115.791 34.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6795e\",d:\"M 324.5,104.5 C 324.5,118.833 324.5,133.167 324.5,147.5C 322.833,147.5 321.167,147.5 319.5,147.5C 319.5,139.833 319.5,132.167 319.5,124.5C 318.789,122.97 317.789,121.637 316.5,120.5C 317.922,120.25 318.922,119.417 319.5,118C 320.793,117.51 322.127,117.343 323.5,117.5C 323.182,112.968 323.515,108.634 324.5,104.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7db2d3\",d:\"M 367.5,124.5 C 365.64,132.3 364.973,140.3 365.5,148.5C 360.5,148.5 355.5,148.5 350.5,148.5C 350.5,148.167 350.5,147.833 350.5,147.5C 355.167,147.5 359.833,147.5 364.5,147.5C 364.334,140.159 364.5,132.826 365,125.5C 365.671,124.748 366.504,124.414 367.5,124.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3d7eaf\",d:\"M 380.5,130.5 C 381.49,136.31 381.823,142.31 381.5,148.5C 380.833,148.5 380.167,148.5 379.5,148.5C 375.298,148.817 371.298,148.483 367.5,147.5C 368.833,147.5 370.167,147.5 371.5,147.5C 374.5,147.5 377.5,147.5 380.5,147.5C 380.5,141.833 380.5,136.167 380.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e0e3e2\",d:\"M 847.5,109.5 C 848.495,121.989 848.829,134.656 848.5,147.5C 848.5,147.833 848.5,148.167 848.5,148.5C 848.167,148.5 847.833,148.5 847.5,148.5C 847.167,148.5 846.833,148.5 846.5,148.5C 846.171,135.323 846.505,122.323 847.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a9691d\",d:\"M 904.5,111.5 C 904.833,111.5 905.167,111.5 905.5,111.5C 905.832,123.851 905.499,136.185 904.5,148.5C 899.565,149.448 894.565,149.781 889.5,149.5C 889.5,149.167 889.5,148.833 889.5,148.5C 891.735,148.795 893.735,148.461 895.5,147.5C 898.5,147.5 901.5,147.5 904.5,147.5C 904.5,135.5 904.5,123.5 904.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#262114\",d:\"M 83.5,95.5 C 83.5,96.1667 83.5,96.8333 83.5,97.5C 79.8363,95.9588 76.003,94.9588 72,94.5C 69.1979,94.3199 67.0313,95.3199 65.5,97.5C 64.5041,97.4142 63.6708,97.7476 63,98.5C 62.5001,114.83 62.3334,131.163 62.5,147.5C 61.5035,131.008 61.1702,114.342 61.5,97.5C 61.9528,96.5416 62.6195,95.7083 63.5,95C 70.3109,91.5942 76.9775,91.7608 83.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3db4f5\",d:\"M 277.5,50.5 C 278.338,50.8417 278.672,51.5084 278.5,52.5C 278.5,84.1667 278.5,115.833 278.5,147.5C 272.167,147.5 265.833,147.5 259.5,147.5C 259.5,133.5 259.5,119.5 259.5,105.5C 260.222,105.918 260.722,106.584 261,107.5C 263.379,99.7794 265.213,92.1127 266.5,84.5C 266.5,89.1667 266.5,93.8333 266.5,98.5C 267.5,98.5 268.5,98.5 269.5,98.5C 270.103,93.3814 269.436,88.7147 267.5,84.5C 267.5,84.1667 267.5,83.8333 267.5,83.5C 268.5,83.5 269.5,83.5 270.5,83.5C 270.5,88.8333 270.5,94.1667 270.5,99.5C 269.5,99.5 268.5,99.5 267.5,99.5C 267.702,101.95 267.369,104.283 266.5,106.5C 266.5,110.5 266.5,114.5 266.5,118.5C 267.833,118.5 269.167,118.5 270.5,118.5C 270.5,114.5 270.5,110.5 270.5,106.5C 272.708,107.894 274.208,109.894 275,112.5C 276.595,110.575 276.762,108.575 275.5,106.5C 277.43,98.0326 278.097,89.366 277.5,80.5C 277.5,70.5 277.5,60.5 277.5,50.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6a3203\",d:\"M 429.5,133.5 C 430.496,133.414 431.329,133.748 432,134.5C 432.499,139.155 432.666,143.821 432.5,148.5C 431.5,148.5 430.5,148.5 429.5,148.5C 430.783,143.531 430.783,138.531 429.5,133.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#182238\",d:\"M 848.5,106.5 C 848.5,107.167 848.5,107.833 848.5,108.5C 847.833,108.5 847.5,108.833 847.5,109.5C 846.505,122.323 846.171,135.323 846.5,148.5C 846.214,150.933 845.548,150.933 844.5,148.5C 844.333,135.163 844.5,121.829 845,108.5C 846.113,107.695 847.279,107.028 848.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#49260f\",d:\"M 905.5,111.5 C 905.833,111.5 906.167,111.5 906.5,111.5C 906.667,124.171 906.5,136.838 906,149.5C 900.401,150.825 894.901,150.825 889.5,149.5C 894.565,149.781 899.565,149.448 904.5,148.5C 905.499,136.185 905.832,123.851 905.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8645f\",d:\"M 89.5,132.5 C 94.1667,132.5 98.8333,132.5 103.5,132.5C 103.587,137.537 103.254,142.537 102.5,147.5C 98.1667,147.5 93.8333,147.5 89.5,147.5C 89.5,143.167 89.5,138.833 89.5,134.5C 89.5,133.833 89.5,133.167 89.5,132.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#62243e\",d:\"M 38.5,126.5 C 38.5,130.833 38.5,135.167 38.5,139.5C 38.5,142.833 38.5,146.167 38.5,149.5C 36.1667,149.5 33.8333,149.5 31.5,149.5C 29.901,149.768 28.5676,149.434 27.5,148.5C 30.8333,148.5 34.1667,148.5 37.5,148.5C 37.175,140.981 37.5084,133.648 38.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e87b9\",d:\"M 207.5,99.5 C 208.496,115.325 208.83,131.325 208.5,147.5C 201.687,148.491 194.687,148.825 187.5,148.5C 187.171,133.657 187.504,118.99 188.5,104.5C 188.5,105.833 188.5,107.167 188.5,108.5C 188.5,111.167 188.5,113.833 188.5,116.5C 188.5,126.833 188.5,137.167 188.5,147.5C 194.833,147.5 201.167,147.5 207.5,147.5C 207.5,131.5 207.5,115.5 207.5,99.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#126db5\",d:\"M 195.5,110.5 C 199.984,110.551 200.65,112.385 197.5,116C 196.207,116.49 194.873,116.657 193.5,116.5C 193.5,114.833 193.5,113.167 193.5,111.5C 194.492,111.672 195.158,111.338 195.5,110.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcb405\",d:\"M 422.5,131.5 C 424.492,131.328 426.158,131.995 427.5,133.5C 428.195,137.713 428.861,141.879 429.5,146C 427.231,146.758 425.064,146.591 423,145.5C 422.196,141.796 422.696,138.296 424.5,135C 423.027,134.29 422.36,133.124 422.5,131.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3dbe5\",d:\"M 936.5,129.5 C 937.5,129.5 938.5,129.5 939.5,129.5C 939.593,135.863 939.26,142.196 938.5,148.5C 937.833,148.5 937.167,148.5 936.5,148.5C 936.5,142.167 936.5,135.833 936.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dda22b\",d:\"M 184.5,111.5 C 184.5,123.5 184.5,135.5 184.5,147.5C 180.366,148.485 176.032,148.818 171.5,148.5C 171.5,148.167 171.5,147.833 171.5,147.5C 171.833,147.5 172.167,147.5 172.5,147.5C 176.649,148.08 180.316,147.414 183.5,145.5C 183.5,135.5 183.5,125.5 183.5,115.5C 183.232,113.901 183.566,112.568 184.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6a712\",d:\"M 439.5,137.5 C 440.167,137.5 440.5,137.833 440.5,138.5C 440.5,141.5 440.5,144.5 440.5,147.5C 438.167,147.5 435.833,147.5 433.5,147.5C 433.423,143.785 433.756,140.119 434.5,136.5C 436.216,136.629 437.883,136.962 439.5,137.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7c921\",d:\"M 583.5,137.5 C 586.833,137.5 590.167,137.5 593.5,137.5C 593.5,140.833 593.5,144.167 593.5,147.5C 590.167,147.5 586.833,147.5 583.5,147.5C 583.5,144.167 583.5,140.833 583.5,137.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#69a2bd\",d:\"M 702.5,108.5 C 702.5,109.5 702.5,110.5 702.5,111.5C 704.5,111.5 706.5,111.5 708.5,111.5C 708.5,123.833 708.5,136.167 708.5,148.5C 702.833,148.5 697.167,148.5 691.5,148.5C 691.5,135.833 691.5,123.167 691.5,110.5C 692.495,122.655 692.829,134.989 692.5,147.5C 697.5,147.5 702.5,147.5 707.5,147.5C 707.5,135.833 707.5,124.167 707.5,112.5C 704.813,112.664 702.146,112.497 699.5,112C 699.974,110.271 700.974,109.105 702.5,108.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3490dc\",d:\"M 230.5,95.5 C 232.485,111.8 233.152,128.466 232.5,145.5C 232.167,145.5 231.833,145.5 231.5,145.5C 230.194,139.599 230.194,133.599 231.5,127.5C 231.809,116.752 231.476,106.085 230.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0b2e77\",d:\"M 688.5,118.5 C 689.493,126.65 689.826,134.983 689.5,143.5C 689.167,143.5 688.833,143.5 688.5,143.5C 688.664,140.813 688.497,138.146 688,135.5C 684.298,139.37 680.464,143.037 676.5,146.5C 676.167,146.5 675.833,146.5 675.5,146.5C 674.833,146.5 674.5,146.167 674.5,145.5C 678.136,140.402 682.636,136.069 688,132.5C 688.499,128.848 688.665,125.182 688.5,121.5C 688.5,120.5 688.5,119.5 688.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30b2ef\",d:\"M 223.5,126.5 C 226.096,127.265 228.763,127.599 231.5,127.5C 230.194,133.599 230.194,139.599 231.5,145.5C 225.25,147.459 218.584,148.126 211.5,147.5C 211.5,141.5 211.5,135.5 211.5,129.5C 212.451,130.919 212.784,132.585 212.5,134.5C 213.675,134.719 214.675,134.386 215.5,133.5C 216.519,131.396 217.519,129.396 218.5,127.5C 217.866,133.145 217.532,138.811 217.5,144.5C 219.5,144.5 221.5,144.5 223.5,144.5C 223.5,143.5 223.5,142.5 223.5,141.5C 223.5,136.5 223.5,131.5 223.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d9ae9\",d:\"M 219.5,126.5 C 219.5,131.5 219.5,136.5 219.5,141.5C 220.833,141.5 222.167,141.5 223.5,141.5C 223.5,142.5 223.5,143.5 223.5,144.5C 221.5,144.5 219.5,144.5 217.5,144.5C 217.532,138.811 217.866,133.145 218.5,127.5C 218.5,126.833 218.833,126.5 219.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3f6c8c\",d:\"M 23.5,127.5 C 23.5,134.5 23.5,141.5 23.5,148.5C 23.5,149.167 23.1667,149.5 22.5,149.5C 21.8333,149.5 21.1667,149.5 20.5,149.5C 22.095,142.257 23.095,134.923 23.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#46e0fb\",d:\"M 57.5,100.5 C 58.4961,115.827 58.8295,130.994 58.5,146C 57.5842,146.278 56.9175,146.778 56.5,147.5C 51.5,147.5 46.5,147.5 41.5,147.5C 41.5,140.833 41.5,134.167 41.5,127.5C 41.8587,122.251 42.8587,117.251 44.5,112.5C 44.33,113.822 44.6634,114.989 45.5,116C 47.3867,115.577 49.3867,115.744 51.5,116.5C 51.4139,114.323 50.7472,112.323 49.5,110.5C 51.0916,108.775 50.7583,107.775 48.5,107.5C 51.2085,104.791 54.2085,102.458 57.5,100.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d5f9a\",d:\"M 47.5,126.5 C 48.5676,125.566 49.901,125.232 51.5,125.5C 51.5,131.167 51.5,136.833 51.5,142.5C 50.1667,142.5 48.8333,142.5 47.5,142.5C 47.5,137.5 47.5,132.5 47.5,127.5C 48.1665,132.017 48.8331,136.683 49.5,141.5C 50.4941,136.544 50.8275,131.544 50.5,126.5C 49.5,126.5 48.5,126.5 47.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#00215c\",d:\"M 47.5,127.5 C 47.5,127.167 47.5,126.833 47.5,126.5C 48.5,126.5 49.5,126.5 50.5,126.5C 50.8275,131.544 50.4941,136.544 49.5,141.5C 48.8331,136.683 48.1665,132.017 47.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4c411\",d:\"M 65.5,97.5 C 71.2679,96.094 76.9346,96.4274 82.5,98.5C 82.5,114.833 82.5,131.167 82.5,147.5C 76.1667,147.5 69.8333,147.5 63.5,147.5C 63.3334,131.83 63.5001,116.163 64,100.5C 65.0386,99.7562 65.5386,98.7562 65.5,97.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bd9022\",d:\"M 74.5,142.5 C 73.4324,143.434 72.099,143.768 70.5,143.5C 70.5,137.5 70.5,131.5 70.5,125.5C 72.1667,125.5 73.8333,125.5 75.5,125.5C 75.8222,131.358 75.4889,137.025 74.5,142.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3c1c00\",d:\"M 74.5,142.5 C 73.5,142.5 72.5,142.5 71.5,142.5C 71.5,137.167 71.5,131.833 71.5,126.5C 72.5,126.5 73.5,126.5 74.5,126.5C 74.5,131.833 74.5,137.167 74.5,142.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#401903\",d:\"M 71.5,105.5 C 72.5,105.5 73.5,105.5 74.5,105.5C 74.5,109.5 74.5,113.5 74.5,117.5C 73.5,117.5 72.5,117.5 71.5,117.5C 71.5,113.5 71.5,109.5 71.5,105.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#43d3fc\",d:\"M 204.5,98.5 C 205.391,99.1098 206.391,99.4431 207.5,99.5C 207.5,115.5 207.5,131.5 207.5,147.5C 201.167,147.5 194.833,147.5 188.5,147.5C 188.5,137.167 188.5,126.833 188.5,116.5C 190.256,115.448 190.923,113.781 190.5,111.5C 191.5,111.5 192.5,111.5 193.5,111.5C 193.5,113.167 193.5,114.833 193.5,116.5C 194.873,116.657 196.207,116.49 197.5,116C 200.65,112.385 199.984,110.551 195.5,110.5C 197.265,109.539 199.265,109.205 201.5,109.5C 201.5,112.167 201.5,114.833 201.5,117.5C 199.143,117.337 196.81,117.503 194.5,118C 191.584,120.788 191.251,123.622 193.5,126.5C 193.5,132.167 193.5,137.833 193.5,143.5C 195.5,143.5 197.5,143.5 199.5,143.5C 199.822,137.642 199.489,131.975 198.5,126.5C 197.5,126.5 196.5,126.5 195.5,126.5C 195.167,126.5 194.833,126.5 194.5,126.5C 198.034,125.207 201.701,125.207 205.5,126.5C 206.788,121.739 206.455,117.072 204.5,112.5C 205.706,107.574 205.706,102.907 204.5,98.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#379ade\",d:\"M 688.5,143.5 C 688.5,144.833 688.5,146.167 688.5,147.5C 684.298,147.817 680.298,147.483 676.5,146.5C 680.464,143.037 684.298,139.37 688,135.5C 688.497,138.146 688.664,140.813 688.5,143.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#57cef5\",d:\"M 373.5,128.5 C 374.552,130.256 376.219,130.923 378.5,130.5C 379.167,130.5 379.833,130.5 380.5,130.5C 380.5,136.167 380.5,141.833 380.5,147.5C 377.5,147.5 374.5,147.5 371.5,147.5C 371.334,141.491 371.501,135.491 372,129.5C 372.383,128.944 372.883,128.611 373.5,128.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d89318\",d:\"M 565.5,109.5 C 556.833,109.5 548.167,109.5 539.5,109.5C 538.505,121.989 538.171,134.656 538.5,147.5C 527.5,147.5 516.5,147.5 505.5,147.5C 506.834,146.348 508.334,145.348 510,144.5C 514.463,145.124 518.963,145.457 523.5,145.5C 528.018,145.435 532.351,144.769 536.5,143.5C 537.499,131.852 537.832,120.186 537.5,108.5C 547.015,108.173 556.348,108.506 565.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#317697\",d:\"M 40.5,119.5 C 40.8333,119.5 41.1667,119.5 41.5,119.5C 41.5,122.167 41.5,124.833 41.5,127.5C 41.5,134.167 41.5,140.833 41.5,147.5C 46.5,147.5 51.5,147.5 56.5,147.5C 57.5,147.5 58.5,147.5 59.5,147.5C 53.3554,148.49 47.0221,148.823 40.5,148.5C 40.5,138.833 40.5,129.167 40.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b8585d\",d:\"M 103.5,132.5 C 104.65,137.316 104.816,142.316 104,147.5C 98.9283,148.471 93.7616,148.805 88.5,148.5C 88.1805,143.637 88.5139,138.97 89.5,134.5C 89.5,138.833 89.5,143.167 89.5,147.5C 93.8333,147.5 98.1667,147.5 102.5,147.5C 103.254,142.537 103.587,137.537 103.5,132.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#296394\",d:\"M 213.5,96.5 C 213.217,97.2891 212.717,97.9558 212,98.5C 211.5,108.828 211.334,119.161 211.5,129.5C 211.5,135.5 211.5,141.5 211.5,147.5C 218.584,148.126 225.25,147.459 231.5,145.5C 231.833,145.5 232.167,145.5 232.5,145.5C 232.5,146.167 232.5,146.833 232.5,147.5C 230.393,148.468 228.059,148.802 225.5,148.5C 220.5,148.5 215.5,148.5 210.5,148.5C 210.5,133.167 210.5,117.833 210.5,102.5C 210.34,100.801 210.506,99.1341 211,97.5C 211.671,96.7476 212.504,96.4142 213.5,96.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f6ea2\",d:\"M 278.5,52.5 C 279.167,52.5 279.5,52.8333 279.5,53.5C 279.5,85.1667 279.5,116.833 279.5,148.5C 272.5,148.5 265.5,148.5 258.5,148.5C 258.5,119.5 258.5,90.5 258.5,61.5C 258.216,59.5853 258.549,57.9187 259.5,56.5C 259.5,63.5 259.5,70.5 259.5,77.5C 259.5,86.8333 259.5,96.1667 259.5,105.5C 259.5,119.5 259.5,133.5 259.5,147.5C 265.833,147.5 272.167,147.5 278.5,147.5C 278.5,115.833 278.5,84.1667 278.5,52.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#31a3ee\",d:\"M 265.5,125.5 C 268.144,125.16 270.477,125.827 272.5,127.5C 273.815,132.986 273.815,138.32 272.5,143.5C 269.864,144.824 267.198,144.824 264.5,143.5C 264.167,142.333 263.833,141.167 263.5,140C 264.215,135.163 264.882,130.33 265.5,125.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30c2fa\",d:\"M 272.5,143.5 C 273.815,138.32 273.815,132.986 272.5,127.5C 270.477,125.827 268.144,125.16 265.5,125.5C 263.989,126.502 262.322,127.169 260.5,127.5C 260.335,124.15 260.502,120.817 261,117.5C 261.7,119.032 262.866,120.032 264.5,120.5C 266.657,119.95 268.657,119.283 270.5,118.5C 271.151,117.909 271.818,117.243 272.5,116.5C 273.85,117.95 275.516,118.617 277.5,118.5C 276.01,126.732 275.177,135.066 275,143.5C 274.023,144.774 273.189,144.774 272.5,143.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#012b70\",d:\"M 266.5,126.5 C 267.5,126.5 268.5,126.5 269.5,126.5C 269.5,131.5 269.5,136.5 269.5,141.5C 268.5,141.5 267.5,141.5 266.5,141.5C 266.5,136.5 266.5,131.5 266.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e5392\",d:\"M 266.5,106.5 C 266.833,106.5 267.167,106.5 267.5,106.5C 268.167,121.167 268.833,121.167 269.5,106.5C 269.833,106.5 270.167,106.5 270.5,106.5C 270.5,110.5 270.5,114.5 270.5,118.5C 269.167,118.5 267.833,118.5 266.5,118.5C 266.5,114.5 266.5,110.5 266.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#001c50\",d:\"M 267.5,106.5 C 268.167,106.5 268.833,106.5 269.5,106.5C 268.833,121.167 268.167,121.167 267.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#57c6f8\",d:\"M 267.5,83.5 C 267.5,83.8333 267.5,84.1667 267.5,84.5C 267.167,84.5 266.833,84.5 266.5,84.5C 265.213,92.1127 263.379,99.7794 261,107.5C 260.722,106.584 260.222,105.918 259.5,105.5C 259.5,96.1667 259.5,86.8333 259.5,77.5C 261.603,79.8893 262.937,79.2226 263.5,75.5C 265.383,73.864 267.383,73.5307 269.5,74.5C 267.833,76.5 266.167,78.5 264.5,80.5C 264.879,82.2131 265.879,83.2131 267.5,83.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#34c3fc\",d:\"M 277.5,80.5 C 278.097,89.366 277.43,98.0326 275.5,106.5C 276.762,108.575 276.595,110.575 275,112.5C 274.208,109.894 272.708,107.894 270.5,106.5C 270.167,106.5 269.833,106.5 269.5,106.5C 268.833,106.5 268.167,106.5 267.5,106.5C 267.167,106.5 266.833,106.5 266.5,106.5C 267.369,104.283 267.702,101.95 267.5,99.5C 268.5,99.5 269.5,99.5 270.5,99.5C 270.5,94.1667 270.5,88.8333 270.5,83.5C 272.504,86.6604 273.671,90.3271 274,94.5C 275.204,90.2841 275.87,85.9508 276,81.5C 276.383,80.944 276.883,80.6107 277.5,80.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#084180\",d:\"M 266.5,84.5 C 266.833,84.5 267.167,84.5 267.5,84.5C 269.436,88.7147 270.103,93.3814 269.5,98.5C 268.5,98.5 267.5,98.5 266.5,98.5C 266.5,93.8333 266.5,89.1667 266.5,84.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d9fdc\",d:\"M 264.5,59.5 C 266.379,59.3932 266.712,59.8932 265.5,61C 267.134,61.4935 268.801,61.6602 270.5,61.5C 270.672,63.4918 270.005,65.1585 268.5,66.5C 268.709,67.086 269.043,67.586 269.5,68C 267.866,68.4935 266.199,68.6602 264.5,68.5C 264.5,65.5 264.5,62.5 264.5,59.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9c6919\",d:\"M 539.5,109.5 C 539.667,122.504 539.5,135.504 539,148.5C 527.247,149.488 515.414,149.821 503.5,149.5C 503.5,149.167 503.5,148.833 503.5,148.5C 504.167,148.5 504.5,148.167 504.5,147.5C 504.833,147.5 505.167,147.5 505.5,147.5C 516.5,147.5 527.5,147.5 538.5,147.5C 538.171,134.656 538.505,121.989 539.5,109.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#baa549\",d:\"M 582.5,137.5 C 582.833,137.5 583.167,137.5 583.5,137.5C 583.5,140.833 583.5,144.167 583.5,147.5C 586.833,147.5 590.167,147.5 593.5,147.5C 593.5,147.833 593.5,148.167 593.5,148.5C 590.167,148.5 586.833,148.5 583.5,148.5C 583.167,148.5 582.833,148.5 582.5,148.5C 582.5,144.833 582.5,141.167 582.5,137.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#34260a\",d:\"M 83.5,101.5 C 84.1509,116.403 84.8176,130.737 85.5,144.5C 85.8333,144.5 86.1667,144.5 86.5,144.5C 86.5,145.833 86.5,147.167 86.5,148.5C 86.5,148.833 86.5,149.167 86.5,149.5C 78.5,149.5 70.5,149.5 62.5,149.5C 62.5,149.167 62.5,148.833 62.5,148.5C 69.5,148.5 76.5,148.5 83.5,148.5C 83.5,132.833 83.5,117.167 83.5,101.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#18385a\",d:\"M 382.5,116.5 C 383.492,116.328 384.158,116.662 384.5,117.5C 383.167,120.833 383.167,124.167 384.5,127.5C 385.919,128.451 387.585,128.784 389.5,128.5C 389.5,128.833 389.5,129.167 389.5,129.5C 387.5,129.5 385.5,129.5 383.5,129.5C 382.833,128.833 382.167,128.167 381.5,127.5C 381.813,124.753 381.48,122.086 380.5,119.5C 376.418,122.291 372.251,124.958 368,127.5C 367.5,134.158 367.334,140.825 367.5,147.5C 371.298,148.483 375.298,148.817 379.5,148.5C 369.833,149.833 360.167,149.833 350.5,148.5C 355.5,148.5 360.5,148.5 365.5,148.5C 364.973,140.3 365.64,132.3 367.5,124.5C 372.654,122.09 377.654,119.423 382.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d2357\",d:\"M 145.5,111.5 C 146.167,123.5 146.833,135.5 147.5,147.5C 147.5,147.833 147.5,148.167 147.5,148.5C 147.082,149.222 146.416,149.722 145.5,150C 132.313,150.522 119.313,150.022 106.5,148.5C 112.5,148.5 118.5,148.5 124.5,148.5C 125.492,148.672 126.158,148.338 126.5,147.5C 132.599,148.806 138.599,148.806 144.5,147.5C 145.495,135.678 145.828,123.678 145.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e1e4e\",d:\"M 258.5,61.5 C 258.5,90.5 258.5,119.5 258.5,148.5C 265.5,148.5 272.5,148.5 279.5,148.5C 277.721,150.344 275.388,151.01 272.5,150.5C 258.414,151.492 244.414,151.825 230.5,151.5C 227.715,152.084 226.048,151.084 225.5,148.5C 228.059,148.802 230.393,148.468 232.5,147.5C 233.497,129.674 233.83,111.674 233.5,93.5C 233.334,86.825 233.5,80.1583 234,73.5C 234.168,98.3367 234.668,123.003 235.5,147.5C 242.313,148.491 249.313,148.825 256.5,148.5C 256.5,121.5 256.5,94.5 256.5,67.5C 257.167,65.5 257.833,63.5 258.5,61.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39b1ef\",d:\"M 235.5,127.5 C 236.373,131.494 237.54,131.494 239,127.5C 239.77,128.598 240.603,128.598 241.5,127.5C 241.5,133.5 241.5,139.5 241.5,145.5C 246.167,145.5 250.833,145.5 255.5,145.5C 249.25,147.459 242.584,148.126 235.5,147.5C 235.5,140.833 235.5,134.167 235.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b9ee8\",d:\"M 243.5,126.5 C 243.5,131.5 243.5,136.5 243.5,141.5C 244.5,141.5 245.5,141.5 246.5,141.5C 246.5,136.5 246.5,131.5 246.5,126.5C 247.794,127.29 248.961,128.29 250,129.5C 250.797,134.175 251.63,138.841 252.5,143.5C 253.208,137.783 253.875,132.116 254.5,126.5C 254.833,126.5 255.167,126.5 255.5,126.5C 255.5,132.833 255.5,139.167 255.5,145.5C 250.833,145.5 246.167,145.5 241.5,145.5C 241.5,139.5 241.5,133.5 241.5,127.5C 241.842,126.662 242.508,126.328 243.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#043682\",d:\"M 243.5,126.5 C 244.5,126.5 245.5,126.5 246.5,126.5C 246.5,131.5 246.5,136.5 246.5,141.5C 245.5,141.5 244.5,141.5 243.5,141.5C 243.5,136.5 243.5,131.5 243.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36c9f9\",d:\"M 241.5,102.5 C 241.5,107.5 241.5,112.5 241.5,117.5C 246.42,118.216 249.42,116.216 250.5,111.5C 251.452,113.045 251.785,114.712 251.5,116.5C 252.5,116.5 253.5,116.5 254.5,116.5C 254.5,119.833 254.5,123.167 254.5,126.5C 253.875,132.116 253.208,137.783 252.5,143.5C 251.63,138.841 250.797,134.175 250,129.5C 248.961,128.29 247.794,127.29 246.5,126.5C 245.5,126.5 244.5,126.5 243.5,126.5C 242.508,126.328 241.842,126.662 241.5,127.5C 240.603,128.598 239.77,128.598 239,127.5C 237.54,131.494 236.373,131.494 235.5,127.5C 235.5,119.833 235.5,112.167 235.5,104.5C 236.167,104.167 236.833,103.833 237.5,103.5C 238.708,102.766 240.041,102.433 241.5,102.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#35b6ef\",d:\"M 239.5,74.5 C 244.833,74.5 250.167,74.5 255.5,74.5C 255.168,91.9766 255.168,109.31 255.5,126.5C 255.167,126.5 254.833,126.5 254.5,126.5C 254.5,123.167 254.5,119.833 254.5,116.5C 253.5,116.5 252.5,116.5 251.5,116.5C 251.785,114.712 251.452,113.045 250.5,111.5C 249.42,116.216 246.42,118.216 241.5,117.5C 241.5,112.5 241.5,107.5 241.5,102.5C 241.833,102.5 242.167,102.5 242.5,102.5C 242.5,106.833 242.5,111.167 242.5,115.5C 243.833,115.5 245.167,115.5 246.5,115.5C 246.5,111.167 246.5,106.833 246.5,102.5C 247.468,104.607 247.802,106.941 247.5,109.5C 248.833,109.5 250.167,109.5 251.5,109.5C 251.5,108.5 251.5,107.5 251.5,106.5C 252.5,106.5 253.5,106.5 254.5,106.5C 254.5,96.5 254.5,86.5 254.5,76.5C 250.486,76.3345 246.486,76.5012 242.5,77C 242.335,80.3463 242.669,83.8463 243.5,87.5C 244.192,86.9747 244.692,86.3081 245,85.5C 246.031,86.7003 246.865,88.0337 247.5,89.5C 245.624,91.048 244.624,93.048 244.5,95.5C 243.167,95.5 241.833,95.5 240.5,95.5C 239.861,88.8523 239.527,82.1856 239.5,75.5C 239.5,75.1667 239.5,74.8333 239.5,74.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#083a8f\",d:\"M 242.5,102.5 C 243.833,102.5 245.167,102.5 246.5,102.5C 246.5,106.833 246.5,111.167 246.5,115.5C 245.167,115.5 243.833,115.5 242.5,115.5C 242.5,111.167 242.5,106.833 242.5,102.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b0f2fc\",d:\"M 236.5,73.5 C 236.369,74.2389 236.536,74.9056 237,75.5C 237.671,74.7476 238.504,74.4142 239.5,74.5C 239.5,74.8333 239.5,75.1667 239.5,75.5C 238.572,84.6642 237.905,93.9975 237.5,103.5C 236.833,103.833 236.167,104.167 235.5,104.5C 235.172,93.9865 235.506,83.6532 236.5,73.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3fd8fd\",d:\"M 239.5,75.5 C 239.527,82.1856 239.861,88.8523 240.5,95.5C 241.833,95.5 243.167,95.5 244.5,95.5C 244.624,93.048 245.624,91.048 247.5,89.5C 246.865,88.0337 246.031,86.7003 245,85.5C 244.692,86.3081 244.192,86.9747 243.5,87.5C 242.669,83.8463 242.335,80.3463 242.5,77C 246.486,76.5012 250.486,76.3345 254.5,76.5C 254.5,86.5 254.5,96.5 254.5,106.5C 253.5,106.5 252.5,106.5 251.5,106.5C 251.5,107.5 251.5,108.5 251.5,109.5C 250.167,109.5 248.833,109.5 247.5,109.5C 247.802,106.941 247.468,104.607 246.5,102.5C 245.167,102.5 243.833,102.5 242.5,102.5C 242.167,102.5 241.833,102.5 241.5,102.5C 240.041,102.433 238.708,102.766 237.5,103.5C 237.905,93.9975 238.572,84.6642 239.5,75.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e1c16\",d:\"M 441.5,138.5 C 443.02,140.588 444.02,142.922 444.5,145.5C 444.5,146.5 444.5,147.5 444.5,148.5C 444.5,149.167 444.167,149.5 443.5,149.5C 441.958,150.301 440.292,150.634 438.5,150.5C 431.587,149.986 424.587,149.986 417.5,150.5C 417.5,149.833 417.5,149.167 417.5,148.5C 418.167,148.5 418.833,148.5 419.5,148.5C 422.833,148.5 426.167,148.5 429.5,148.5C 430.5,148.5 431.5,148.5 432.5,148.5C 435.5,148.5 438.5,148.5 441.5,148.5C 441.5,145.167 441.5,141.833 441.5,138.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f2510\",d:\"M 583.5,148.5 C 586.833,148.5 590.167,148.5 593.5,148.5C 592.306,149.777 590.64,150.444 588.5,150.5C 586.631,150.493 584.964,150.16 583.5,149.5C 583.5,149.167 583.5,148.833 583.5,148.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a2a59\",d:\"M 688.5,118.5 C 688.5,119.5 688.5,120.5 688.5,121.5C 686.692,121.491 685.025,121.991 683.5,123C 678.397,126.266 673.73,130.1 669.5,134.5C 666.353,138.613 665.019,143.279 665.5,148.5C 669.112,149.076 672.112,148.076 674.5,145.5C 674.5,146.167 674.833,146.5 675.5,146.5C 676.152,147.725 677.319,148.392 679,148.5C 682.175,148.946 685.342,149.446 688.5,150C 679.803,150.993 671.136,151.16 662.5,150.5C 662.5,148.167 662.5,145.833 662.5,143.5C 667.243,131.121 675.91,122.788 688.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a1726\",d:\"M 969.5,129.5 C 970.167,134.167 970.833,138.833 971.5,143.5C 971.5,145.167 971.5,146.833 971.5,148.5C 971.196,149.15 970.863,149.817 970.5,150.5C 959.118,151.134 947.784,150.8 936.5,149.5C 936.5,149.167 936.5,148.833 936.5,148.5C 937.167,148.5 937.833,148.5 938.5,148.5C 948.506,148.666 958.506,148.5 968.5,148C 969.476,141.924 969.81,135.758 969.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#232c51\",d:\"M 77.5,86.5 C 76.791,87.404 75.791,87.7373 74.5,87.5C 72.6064,86.9524 70.9397,85.9524 69.5,84.5C 66.5,86.6667 63.5,88.8333 60.5,91C 56.374,93.9037 56.7073,96.0704 61.5,97.5C 61.1702,114.342 61.5035,131.008 62.5,147.5C 62.5,147.833 62.5,148.167 62.5,148.5C 62.5,148.833 62.5,149.167 62.5,149.5C 68.9874,150.328 75.654,150.828 82.5,151C 83.8333,152.333 83.8333,153.667 82.5,155C 76.4725,155.17 70.4725,155.67 64.5,156.5C 66.7628,157.65 69.0962,158.65 71.5,159.5C 67.96,161.972 64.2933,162.139 60.5,160C 61.3802,158.644 61.7135,157.144 61.5,155.5C 60.1667,155.5 58.8333,155.5 57.5,155.5C 57.5,157.167 57.5,158.833 57.5,160.5C 56.1667,160.5 54.8333,160.5 53.5,160.5C 53.5,157.5 53.5,154.5 53.5,151.5C 49.6942,151.412 46.0275,152.079 42.5,153.5C 42.7093,154.086 43.0426,154.586 43.5,155C 45.4727,155.495 47.4727,155.662 49.5,155.5C 49.0237,158.258 47.357,159.925 44.5,160.5C 42.5749,160.41 41.4083,159.41 41,157.5C 40.196,158.804 39.0293,159.471 37.5,159.5C 34.674,158.42 31.8407,157.42 29,156.5C 28.6667,157.167 28.3333,157.833 28,158.5C 25.3613,154.242 26.528,152.242 31.5,152.5C 31.5,151.5 31.5,150.5 31.5,149.5C 33.8333,149.5 36.1667,149.5 38.5,149.5C 38.5,146.167 38.5,142.833 38.5,139.5C 39.1667,142.5 39.8333,145.5 40.5,148.5C 47.0221,148.823 53.3554,148.49 59.5,147.5C 59.6666,131.163 59.4999,114.83 59,98.5C 58.6174,97.944 58.1174,97.6107 57.5,97.5C 57.189,96.5222 56.5223,95.8555 55.5,95.5C 52.8159,97.1933 50.1492,98.86 47.5,100.5C 46.8333,100.5 46.5,100.167 46.5,99.5C 53.0506,93.4518 60.0506,87.9518 67.5,83C 71.3005,82.7292 74.6339,83.8958 77.5,86.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#242b4d\",d:\"M 455.5,147.5 C 456.209,148.404 457.209,148.737 458.5,148.5C 459.167,148.5 459.833,148.5 460.5,148.5C 468.833,148.5 477.167,148.5 485.5,148.5C 485.263,147.209 485.596,146.209 486.5,145.5C 488.14,139.05 486.473,133.383 481.5,128.5C 481.328,127.508 481.662,126.842 482.5,126.5C 488.485,132.145 491.485,139.145 491.5,147.5C 493.607,148.468 495.941,148.802 498.5,148.5C 498.5,147.5 498.5,146.5 498.5,145.5C 499.167,145.5 499.833,145.5 500.5,145.5C 500.5,146.5 500.5,147.5 500.5,148.5C 501.5,148.5 502.5,148.5 503.5,148.5C 503.5,148.833 503.5,149.167 503.5,149.5C 508.586,150.188 514.419,150.521 521,150.5C 527.167,150.333 533.333,150.167 539.5,150C 540.416,149.722 541.082,149.222 541.5,148.5C 547.5,148.5 553.5,148.5 559.5,148.5C 560.833,148.5 562.167,148.5 563.5,148.5C 563.5,136.167 563.5,123.833 563.5,111.5C 564.467,122.996 565.134,134.662 565.5,146.5C 563.046,148.735 562.38,151.402 563.5,154.5C 560.624,159.122 556.957,160.455 552.5,158.5C 551.614,159.325 551.281,160.325 551.5,161.5C 543.763,158.755 535.763,156.921 527.5,156C 516.717,155.903 506.05,155.069 495.5,153.5C 495.5,154.833 495.5,156.167 495.5,157.5C 499.846,157.334 504.179,157.501 508.5,158C 507.833,158.667 507.167,159.333 506.5,160C 514.449,161.156 522.449,161.822 530.5,162C 513.848,163.019 497.182,163.686 480.5,164C 478.942,164.21 477.609,164.71 476.5,165.5C 475.711,165.217 475.044,164.717 474.5,164C 463.833,163.667 453.167,163.333 442.5,163C 443.623,161.956 444.956,161.29 446.5,161C 445.944,157.006 444.944,153.173 443.5,149.5C 444.167,149.5 444.5,149.167 444.5,148.5C 447.167,148.5 449.833,148.5 452.5,148.5C 453.331,136.34 453.831,124.007 454,111.5C 454.169,123.674 454.669,135.674 455.5,147.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e97df\",d:\"M 458.5,126.5 C 458.414,127.496 458.748,128.329 459.5,129C 469.204,131.649 477.37,136.815 484,144.5C 484.483,145.448 484.649,146.448 484.5,147.5C 476.316,147.174 468.316,147.508 460.5,148.5C 459.833,148.5 459.167,148.5 458.5,148.5C 458.328,140.957 458.328,133.623 458.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#939ca9\",d:\"M 559.5,111.5 C 554.025,112.489 548.358,112.822 542.5,112.5C 541.855,124.548 542.522,136.215 544.5,147.5C 549.5,147.5 554.5,147.5 559.5,147.5C 559.5,147.833 559.5,148.167 559.5,148.5C 553.5,148.5 547.5,148.5 541.5,148.5C 541.5,136.167 541.5,123.833 541.5,111.5C 547.5,111.5 553.5,111.5 559.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5c7aa9\",d:\"M 562.5,111.5 C 562.833,111.5 563.167,111.5 563.5,111.5C 563.5,123.833 563.5,136.167 563.5,148.5C 562.167,148.5 560.833,148.5 559.5,148.5C 559.5,148.167 559.5,147.833 559.5,147.5C 560.167,147.5 560.833,147.5 561.5,147.5C 562.494,137.347 562.828,127.014 562.5,116.5C 562.5,116.167 562.5,115.833 562.5,115.5C 562.5,114.167 562.5,112.833 562.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44a1d8\",d:\"M 480.5,128.5 C 480.833,128.5 481.167,128.5 481.5,128.5C 486.473,133.383 488.14,139.05 486.5,145.5C 483.514,140.848 479.847,136.848 475.5,133.5C 477.746,133.936 479.913,134.603 482,135.5C 482.692,134.975 483.192,134.308 483.5,133.5C 482.048,132.06 481.048,130.394 480.5,128.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9edfb\",d:\"M 562.5,115.5 C 562.5,115.833 562.5,116.167 562.5,116.5C 559.167,116.5 555.833,116.5 552.5,116.5C 551.525,124.899 554.358,131.566 561,136.5C 561.499,140.152 561.665,143.818 561.5,147.5C 560.833,147.5 560.167,147.5 559.5,147.5C 554.5,147.5 549.5,147.5 544.5,147.5C 545.027,136.913 545.027,126.246 544.5,115.5C 550.5,115.5 556.5,115.5 562.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4dd0f6\",d:\"M 461.5,116.5 C 465.033,118.404 468.533,120.404 472,122.5C 472.464,121.906 472.631,121.239 472.5,120.5C 475.5,122.833 478.167,125.5 480.5,128.5C 481.048,130.394 482.048,132.06 483.5,133.5C 483.192,134.308 482.692,134.975 482,135.5C 479.913,134.603 477.746,133.936 475.5,133.5C 472.887,132.531 470.553,131.197 468.5,129.5C 468.5,128.5 468.5,127.5 468.5,126.5C 466.058,126.881 465.391,126.214 466.5,124.5C 464.955,123.548 463.288,123.215 461.5,123.5C 461.5,121.167 461.5,118.833 461.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#123877\",d:\"M 458.5,126.5 C 461.833,127.5 465.167,128.5 468.5,129.5C 470.553,131.197 472.887,132.531 475.5,133.5C 479.847,136.848 483.514,140.848 486.5,145.5C 485.596,146.209 485.263,147.209 485.5,148.5C 477.167,148.5 468.833,148.5 460.5,148.5C 468.316,147.508 476.316,147.174 484.5,147.5C 484.649,146.448 484.483,145.448 484,144.5C 477.37,136.815 469.204,131.649 459.5,129C 458.748,128.329 458.414,127.496 458.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a5d8f3\",d:\"M 562.5,116.5 C 562.828,127.014 562.494,137.347 561.5,147.5C 561.665,143.818 561.499,140.152 561,136.5C 554.358,131.566 551.525,124.899 552.5,116.5C 555.833,116.5 559.167,116.5 562.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6f9fe\",d:\"M 559.5,111.5 C 560.5,111.5 561.5,111.5 562.5,111.5C 562.5,112.833 562.5,114.167 562.5,115.5C 556.5,115.5 550.5,115.5 544.5,115.5C 545.027,126.246 545.027,136.913 544.5,147.5C 542.522,136.215 541.855,124.548 542.5,112.5C 548.358,112.822 554.025,112.489 559.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#50baea\",d:\"M 461.5,116.5 C 461.5,118.833 461.5,121.167 461.5,123.5C 463.288,123.215 464.955,123.548 466.5,124.5C 465.391,126.214 466.058,126.881 468.5,126.5C 468.5,127.5 468.5,128.5 468.5,129.5C 465.167,128.5 461.833,127.5 458.5,126.5C 458.177,122.774 458.511,119.107 459.5,115.5C 460.183,115.863 460.85,116.196 461.5,116.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272b4f\",d:\"M 210.5,102.5 C 210.5,117.833 210.5,133.167 210.5,148.5C 215.5,148.5 220.5,148.5 225.5,148.5C 226.048,151.084 227.715,152.084 230.5,151.5C 230.33,152.822 230.663,153.989 231.5,155C 236.977,155.184 237.644,156.684 233.5,159.5C 224.962,157.788 216.296,156.955 207.5,157C 207.167,156.667 206.833,156.333 206.5,156C 212.769,154.743 219.102,154.243 225.5,154.5C 225.5,153.5 225.5,152.5 225.5,151.5C 214.311,151.231 203.311,152.064 192.5,154C 190.773,162.684 189.773,162.517 189.5,153.5C 188.167,153.5 186.833,153.5 185.5,153.5C 185.5,155.833 185.5,158.167 185.5,160.5C 184.167,160.5 182.833,160.5 181.5,160.5C 181.5,158.167 181.5,155.833 181.5,153.5C 179.712,153.215 178.045,153.548 176.5,154.5C 177.645,155.891 177.645,157.224 176.5,158.5C 173.661,156.398 170.661,154.565 167.5,153C 167.544,142.043 167.544,130.876 167.5,119.5C 167.738,117.596 168.738,116.262 170.5,115.5C 171.167,115.5 171.5,115.833 171.5,116.5C 171.217,117.289 170.717,117.956 170,118.5C 169.5,128.494 169.334,138.494 169.5,148.5C 170.249,150.246 171.583,151.246 173.5,151.5C 177.804,150.79 182.137,150.29 186.5,150C 187.056,149.617 187.389,149.117 187.5,148.5C 194.687,148.825 201.687,148.491 208.5,147.5C 209.167,132.5 209.833,117.5 210.5,102.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fab606\",d:\"M 183.5,115.5 C 183.5,125.5 183.5,135.5 183.5,145.5C 175.664,147.145 172.83,144.145 175,136.5C 176.154,138.957 177.488,138.957 179,136.5C 179.026,132.892 179.859,129.558 181.5,126.5C 180.278,124.022 178.278,123.022 175.5,123.5C 175.5,121.833 175.5,120.167 175.5,118.5C 175.5,118.167 175.5,117.833 175.5,117.5C 178.112,116.629 180.779,115.963 183.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#45300d\",d:\"M 185.5,120.5 C 186.658,129.657 186.824,138.991 186,148.5C 181.067,149.824 176.234,149.824 171.5,148.5C 176.032,148.818 180.366,148.485 184.5,147.5C 185.493,138.682 185.827,129.682 185.5,120.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4cb21\",d:\"M 173.5,118.5 C 174.167,118.5 174.833,118.5 175.5,118.5C 175.5,120.167 175.5,121.833 175.5,123.5C 178.278,123.022 180.278,124.022 181.5,126.5C 179.859,129.558 179.026,132.892 179,136.5C 177.488,138.957 176.154,138.957 175,136.5C 172.83,144.145 175.664,147.145 183.5,145.5C 180.316,147.414 176.649,148.08 172.5,147.5C 172.194,137.75 172.527,128.084 173.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#34abe9\",d:\"M 193.5,126.5 C 193.833,126.5 194.167,126.5 194.5,126.5C 194.833,126.5 195.167,126.5 195.5,126.5C 195.5,131.833 195.5,137.167 195.5,142.5C 196.5,142.5 197.5,142.5 198.5,142.5C 198.5,137.167 198.5,131.833 198.5,126.5C 199.489,131.975 199.822,137.642 199.5,143.5C 197.5,143.5 195.5,143.5 193.5,143.5C 193.5,137.833 193.5,132.167 193.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0a58a0\",d:\"M 195.5,126.5 C 196.5,126.5 197.5,126.5 198.5,126.5C 198.5,131.833 198.5,137.167 198.5,142.5C 197.5,142.5 196.5,142.5 195.5,142.5C 195.5,137.167 195.5,131.833 195.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9ea8c\",d:\"M 173.5,118.5 C 172.527,128.084 172.194,137.75 172.5,147.5C 172.167,147.5 171.833,147.5 171.5,147.5C 170.86,137.442 171.527,127.775 173.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272b4b\",d:\"M 281.5,114.5 C 282.809,115.624 283.475,117.124 283.5,119C 282.793,129.502 282.127,140.002 281.5,150.5C 289.162,150.579 296.829,150.913 304.5,151.5C 305.298,151.043 305.631,150.376 305.5,149.5C 309.5,150.833 313.5,150.833 317.5,149.5C 317.369,150.376 317.702,151.043 318.5,151.5C 321.648,150.788 324.814,150.121 328,149.5C 333.865,150.114 339.698,150.281 345.5,150C 346.025,149.308 346.692,148.808 347.5,148.5C 348.497,141.532 348.83,134.532 348.5,127.5C 348.5,123.833 348.5,120.167 348.5,116.5C 348.833,116.5 349.167,116.5 349.5,116.5C 349.172,127.014 349.506,137.347 350.5,147.5C 350.5,147.833 350.5,148.167 350.5,148.5C 360.167,149.833 369.833,149.833 379.5,148.5C 380.167,148.5 380.833,148.5 381.5,148.5C 381.461,149.583 381.127,150.583 380.5,151.5C 380.957,152.298 381.624,152.631 382.5,152.5C 382.077,153.265 381.743,154.098 381.5,155C 382.504,156.798 383.004,158.632 383,160.5C 378.918,160.689 374.751,160.356 370.5,159.5C 368.45,160.077 367.45,161.41 367.5,163.5C 362.167,163.5 356.833,163.5 351.5,163.5C 351.5,162.167 351.5,160.833 351.5,159.5C 354.187,159.664 356.854,159.497 359.5,159C 360.167,158 360.833,157 361.5,156C 360.027,155.29 359.36,154.124 359.5,152.5C 357.176,152.662 355.509,153.828 354.5,156C 352.444,156.311 350.444,156.811 348.5,157.5C 347.614,158.325 347.281,159.325 347.5,160.5C 343.445,160.176 339.445,160.509 335.5,161.5C 336.894,162.687 336.727,163.354 335,163.5C 330.404,161.818 325.57,160.984 320.5,161C 319.663,159.989 319.33,158.822 319.5,157.5C 324.891,156.795 330.224,156.795 335.5,157.5C 335.5,156.5 335.5,155.5 335.5,154.5C 327.365,152.859 320.031,154.526 313.5,159.5C 311.013,159.218 308.347,159.218 305.5,159.5C 305.719,155.473 304.552,154.806 302,157.5C 301.667,157.167 301.333,156.833 301,156.5C 300.517,157.448 300.351,158.448 300.5,159.5C 297.497,158.812 294.831,157.479 292.5,155.5C 286.855,156.285 281.355,156.285 276,155.5C 274.513,154.747 274.346,153.914 275.5,153C 274.058,152.623 273.058,151.79 272.5,150.5C 275.388,151.01 277.721,150.344 279.5,148.5C 280.573,137.344 281.239,126.011 281.5,114.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#431c31\",d:\"M 347.5,127.5 C 347.833,127.5 348.167,127.5 348.5,127.5C 348.83,134.532 348.497,141.532 347.5,148.5C 346.692,148.808 346.025,149.308 345.5,150C 339.698,150.281 333.865,150.114 328,149.5C 324.814,150.121 321.648,150.788 318.5,151.5C 317.702,151.043 317.369,150.376 317.5,149.5C 317.5,149.167 317.5,148.833 317.5,148.5C 320.167,148.5 322.833,148.5 325.5,148.5C 326.5,148.5 327.5,148.5 328.5,148.5C 331.833,148.5 335.167,148.5 338.5,148.5C 338.5,146.833 338.5,145.167 338.5,143.5C 339.158,142.602 339.824,141.602 340.5,140.5C 341.168,143.306 341.834,145.972 342.5,148.5C 343.791,148.737 344.791,148.404 345.5,147.5C 347.459,141.25 348.126,134.584 347.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f282a\",d:\"M 307.5,123.5 C 308.167,123.5 308.833,123.5 309.5,123.5C 309.5,124.167 309.5,124.833 309.5,125.5C 309.5,125.833 309.5,126.167 309.5,126.5C 309.5,133.5 309.5,140.5 309.5,147.5C 311.167,148.833 312.833,148.833 314.5,147.5C 315.165,143.849 315.499,140.015 315.5,136C 315.431,131.579 314.765,127.412 313.5,123.5C 314.833,123.5 316.167,123.5 317.5,123.5C 317.5,131.5 317.5,139.5 317.5,147.5C 317.5,147.833 317.5,148.167 317.5,148.5C 317.5,148.833 317.5,149.167 317.5,149.5C 313.5,150.833 309.5,150.833 305.5,149.5C 305.5,149.167 305.5,148.833 305.5,148.5C 307.468,140.567 308.135,132.234 307.5,123.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b35767\",d:\"M 330.5,143.5 C 329.766,144.708 329.433,146.041 329.5,147.5C 332.167,147.5 334.833,147.5 337.5,147.5C 337.5,146.167 337.5,144.833 337.5,143.5C 337.833,143.5 338.167,143.5 338.5,143.5C 338.5,145.167 338.5,146.833 338.5,148.5C 335.167,148.5 331.833,148.5 328.5,148.5C 328.077,146.219 328.744,144.552 330.5,143.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f26472\",d:\"M 330.5,143.5 C 332.833,143.5 335.167,143.5 337.5,143.5C 337.5,144.833 337.5,146.167 337.5,147.5C 334.833,147.5 332.167,147.5 329.5,147.5C 329.433,146.041 329.766,144.708 330.5,143.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#855047\",d:\"M 307.5,123.5 C 308.135,132.234 307.468,140.567 305.5,148.5C 305.5,147.833 305.5,147.167 305.5,146.5C 305.334,139.159 305.5,131.826 306,124.5C 306.383,123.944 306.883,123.611 307.5,123.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9857f\",d:\"M 329.5,135.5 C 332.167,135.5 334.833,135.5 337.5,135.5C 337.5,137.167 337.5,138.833 337.5,140.5C 335.167,140.5 332.833,140.5 330.5,140.5C 329.351,140.209 328.684,139.376 328.5,138C 328.528,136.93 328.861,136.097 329.5,135.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3f6f4\",d:\"M 309.5,126.5 C 310.833,126.5 312.167,126.5 313.5,126.5C 313.5,133.5 313.5,140.5 313.5,147.5C 312.167,147.5 310.833,147.5 309.5,147.5C 309.5,140.5 309.5,133.5 309.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a6b6b6\",d:\"M 309.5,126.5 C 309.5,126.167 309.5,125.833 309.5,125.5C 311.167,125.5 312.833,125.5 314.5,125.5C 314.5,132.833 314.5,140.167 314.5,147.5C 312.833,148.833 311.167,148.833 309.5,147.5C 310.833,147.5 312.167,147.5 313.5,147.5C 313.5,140.5 313.5,133.5 313.5,126.5C 312.167,126.5 310.833,126.5 309.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e3934\",d:\"M 309.5,123.5 C 310.833,123.5 312.167,123.5 313.5,123.5C 314.765,127.412 315.431,131.579 315.5,136C 315.499,140.015 315.165,143.849 314.5,147.5C 314.5,140.167 314.5,132.833 314.5,125.5C 312.833,125.5 311.167,125.5 309.5,125.5C 309.5,124.833 309.5,124.167 309.5,123.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#da9882\",d:\"M 317.5,123.5 C 318.167,123.833 318.833,124.167 319.5,124.5C 319.5,132.167 319.5,139.833 319.5,147.5C 318.833,147.5 318.167,147.5 317.5,147.5C 317.5,139.5 317.5,131.5 317.5,123.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b95e5c\",d:\"M 329.5,126.5 C 332.5,126.5 335.5,126.5 338.5,126.5C 338.784,128.415 338.451,130.081 337.5,131.5C 337.5,130.167 337.5,128.833 337.5,127.5C 334.833,127.5 332.167,127.5 329.5,127.5C 329.5,128.833 329.5,130.167 329.5,131.5C 329.167,131.5 328.833,131.5 328.5,131.5C 328.216,129.585 328.549,127.919 329.5,126.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efa28d\",d:\"M 337.5,131.5 C 334.833,131.5 332.167,131.5 329.5,131.5C 329.5,130.167 329.5,128.833 329.5,127.5C 332.167,127.5 334.833,127.5 337.5,127.5C 337.5,128.833 337.5,130.167 337.5,131.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec8d77\",d:\"M 329.5,117.5 C 332.5,117.5 335.5,117.5 338.5,117.5C 338.5,119.167 338.5,120.833 338.5,122.5C 335.5,122.5 332.5,122.5 329.5,122.5C 329.5,120.833 329.5,119.167 329.5,117.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0725e\",d:\"M 316.5,120.5 C 317.789,121.637 318.789,122.97 319.5,124.5C 318.833,124.167 318.167,123.833 317.5,123.5C 316.167,123.5 314.833,123.5 313.5,123.5C 312.167,123.5 310.833,123.5 309.5,123.5C 308.833,123.5 308.167,123.5 307.5,123.5C 307.414,122.504 307.748,121.671 308.5,121C 311.146,120.503 313.813,120.336 316.5,120.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a2e4e\",d:\"M 438.5,150.5 C 441.686,152.547 443.019,155.547 442.5,159.5C 440.723,159.214 439.056,158.547 437.5,157.5C 436.328,157.919 435.328,158.585 434.5,159.5C 433.14,157.019 432.14,157.352 431.5,160.5C 436.872,160.751 437.539,162.251 433.5,165C 430.854,165.497 428.187,165.664 425.5,165.5C 423.776,169.138 421.943,172.805 420,176.5C 419.833,177.833 419.667,179.167 419.5,180.5C 420.178,188.234 421.512,195.567 423.5,202.5C 426.037,204.632 426.037,206.799 423.5,209C 424.99,210.772 426.657,210.939 428.5,209.5C 429.386,210.325 429.719,211.325 429.5,212.5C 429.5,212.833 429.5,213.167 429.5,213.5C 428.167,214.167 427.167,215.167 426.5,216.5C 425.778,216.082 425.278,215.416 425,214.5C 424.667,214.833 424.333,215.167 424,215.5C 423.667,229.167 423.333,242.833 423,256.5C 421.524,245.663 421.024,234.663 421.5,223.5C 420.167,223.5 418.833,223.5 417.5,223.5C 417.832,235.186 417.499,246.852 416.5,258.5C 415.757,259.908 414.923,261.241 414,262.5C 413.5,260.5 413,258.5 412.5,256.5C 413.958,250.587 414.625,244.587 414.5,238.5C 413.5,238.5 412.5,238.5 411.5,238.5C 412.11,244.48 411.11,250.147 408.5,255.5C 409.562,258.103 409.728,260.77 409,263.5C 407.229,265.584 405.896,267.918 405,270.5C 403.833,269.333 402.667,268.167 401.5,267C 403.424,260.457 403.758,253.957 402.5,247.5C 402.5,246.5 402.5,245.5 402.5,244.5C 401.85,242.565 401.517,240.565 401.5,238.5C 402.833,238.5 404.167,238.5 405.5,238.5C 405.222,247.019 406.056,247.352 408,239.5C 411.772,237.096 413.772,233.763 414,229.5C 412.867,231.211 411.367,231.711 409.5,231C 411.884,225.932 410.384,223.432 405,223.5C 403.019,223.629 401.353,224.296 400,225.5C 398.991,224.342 397.658,223.675 396,223.5C 393.667,224.167 391.333,224.833 389,225.5C 384.623,225.065 384.456,223.899 388.5,222C 387.5,221.5 386.5,221 385.5,220.5C 369.211,221.319 352.877,221.819 336.5,222C 335.692,222.308 335.025,222.808 334.5,223.5C 321.176,224.978 308.009,224.645 295,222.5C 280.311,224.134 265.811,223.3 251.5,220C 250.476,218.633 250.976,217.8 253,217.5C 254.059,217.63 254.892,218.13 255.5,219C 271.833,219.333 288.167,219.667 304.5,220C 308.195,220.318 311.862,220.818 315.5,221.5C 316.938,221.281 318.271,220.781 319.5,220C 340.508,219.833 361.508,219.333 382.5,218.5C 377.544,217.506 372.544,217.173 367.5,217.5C 372.349,216.834 377.349,216.167 382.5,215.5C 383.624,214.141 384.958,213.141 386.5,212.5C 391.824,211.834 395.824,209.168 398.5,204.5C 400.818,201.025 402.152,197.192 402.5,193C 402.592,190.179 401.926,187.679 400.5,185.5C 399.833,184.5 399.167,183.5 398.5,182.5C 397.087,178.993 394.754,176.327 391.5,174.5C 390.158,173.207 388.491,172.374 386.5,172C 341.501,171.5 296.501,171.333 251.5,171.5C 295.331,170.667 339.331,170.167 383.5,170C 362.169,169.5 340.836,169.333 319.5,169.5C 319.5,168.167 319.5,166.833 319.5,165.5C 314.167,165.5 308.833,165.5 303.5,165.5C 303.5,164.5 303.5,163.5 303.5,162.5C 307.363,162.538 311.196,162.205 315,161.5C 316.973,161.309 318.473,161.976 319.5,163.5C 332.973,164.505 346.307,165.838 359.5,167.5C 368.962,166.135 378.295,164.135 387.5,161.5C 385.438,156.384 387.271,154.384 393,155.5C 397.778,156.843 402.611,157.343 407.5,157C 406.584,156.722 405.918,156.222 405.5,155.5C 410.65,154.536 414.983,155.87 418.5,159.5C 419.981,158.52 421.315,157.353 422.5,156C 417.565,156.584 415.898,154.751 417.5,150.5C 424.587,149.986 431.587,149.986 438.5,150.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f2651\",d:\"M 381.5,127.5 C 382.167,128.167 382.833,128.833 383.5,129.5C 383.177,136.022 383.51,142.355 384.5,148.5C 394.783,149.643 405.117,151.309 415.5,153.5C 415.592,150.6 414.259,148.933 411.5,148.5C 412.496,148.586 413.329,148.252 414,147.5C 414.667,142.167 414.667,136.833 414,131.5C 413.617,130.944 413.117,130.611 412.5,130.5C 412.167,130.5 411.833,130.5 411.5,130.5C 411.5,130.167 411.5,129.833 411.5,129.5C 413.554,129.635 415.221,128.968 416.5,127.5C 416.175,134.687 416.509,141.687 417.5,148.5C 417.5,149.167 417.5,149.833 417.5,150.5C 415.898,154.751 417.565,156.584 422.5,156C 421.315,157.353 419.981,158.52 418.5,159.5C 414.983,155.87 410.65,154.536 405.5,155.5C 399.068,154.01 392.568,152.677 386,151.5C 384.744,151.648 383.577,151.982 382.5,152.5C 381.624,152.631 380.957,152.298 380.5,151.5C 381.127,150.583 381.461,149.583 381.5,148.5C 381.823,142.31 381.49,136.31 380.5,130.5C 379.833,130.5 379.167,130.5 378.5,130.5C 377.391,129.71 376.058,129.21 374.5,129C 377.036,128.814 379.369,128.314 381.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#19334f\",d:\"M 384.5,148.5 C 393.167,148.5 401.833,148.5 410.5,148.5C 410.833,148.5 411.167,148.5 411.5,148.5C 414.259,148.933 415.592,150.6 415.5,153.5C 405.117,151.309 394.783,149.643 384.5,148.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3593b6\",d:\"M 385.5,130.5 C 385.5,136.167 385.5,141.833 385.5,147.5C 391.167,147.5 396.833,147.5 402.5,147.5C 405.167,147.5 407.833,147.5 410.5,147.5C 410.5,147.833 410.5,148.167 410.5,148.5C 401.833,148.5 393.167,148.5 384.5,148.5C 384.177,142.31 384.51,136.31 385.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#246dae\",d:\"M 412.5,130.5 C 413.117,130.611 413.617,130.944 414,131.5C 414.667,136.833 414.667,142.167 414,147.5C 413.329,148.252 412.496,148.586 411.5,148.5C 411.167,148.5 410.833,148.5 410.5,148.5C 410.5,148.167 410.5,147.833 410.5,147.5C 412.121,147.213 413.121,146.213 413.5,144.5C 412.557,139.9 412.223,135.233 412.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c547c\",d:\"M 383.5,129.5 C 385.5,129.5 387.5,129.5 389.5,129.5C 396.833,129.5 404.167,129.5 411.5,129.5C 411.5,129.833 411.5,130.167 411.5,130.5C 408.167,130.5 404.833,130.5 401.5,130.5C 396.167,130.5 390.833,130.5 385.5,130.5C 384.51,136.31 384.177,142.31 384.5,148.5C 383.51,142.355 383.177,136.022 383.5,129.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#35cdf7\",d:\"M 401.5,130.5 C 404.833,130.5 408.167,130.5 411.5,130.5C 411.833,130.5 412.167,130.5 412.5,130.5C 412.223,135.233 412.557,139.9 413.5,144.5C 413.121,146.213 412.121,147.213 410.5,147.5C 407.833,147.5 405.167,147.5 402.5,147.5C 404.698,146.835 407.031,146.168 409.5,145.5C 409.833,144.833 410.167,144.167 410.5,143.5C 409.2,141.949 407.533,140.949 405.5,140.5C 403.167,140.5 400.833,140.5 398.5,140.5C 395.937,140.926 393.603,141.926 391.5,143.5C 388.623,141.087 388.956,139.253 392.5,138C 391.62,136.644 391.286,135.144 391.5,133.5C 398.009,132.855 404.176,133.855 410,136.5C 410.781,135.056 410.614,133.723 409.5,132.5C 406.689,131.92 404.023,131.254 401.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4ddffa\",d:\"M 385.5,130.5 C 390.833,130.5 396.167,130.5 401.5,130.5C 404.023,131.254 406.689,131.92 409.5,132.5C 410.614,133.723 410.781,135.056 410,136.5C 404.176,133.855 398.009,132.855 391.5,133.5C 391.286,135.144 391.62,136.644 392.5,138C 388.956,139.253 388.623,141.087 391.5,143.5C 393.603,141.926 395.937,140.926 398.5,140.5C 398.5,141.833 398.5,143.167 398.5,144.5C 400.833,144.5 403.167,144.5 405.5,144.5C 405.5,143.167 405.5,141.833 405.5,140.5C 407.533,140.949 409.2,141.949 410.5,143.5C 410.167,144.167 409.833,144.833 409.5,145.5C 407.031,146.168 404.698,146.835 402.5,147.5C 396.833,147.5 391.167,147.5 385.5,147.5C 385.5,141.833 385.5,136.167 385.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5fefe\",d:\"M 398.5,140.5 C 400.833,140.5 403.167,140.5 405.5,140.5C 405.5,141.833 405.5,143.167 405.5,144.5C 403.167,144.5 400.833,144.5 398.5,144.5C 398.5,143.167 398.5,141.833 398.5,140.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272c43\",d:\"M 443.5,149.5 C 444.944,153.173 445.944,157.006 446.5,161C 444.956,161.29 443.623,161.956 442.5,163C 453.167,163.333 463.833,163.667 474.5,164C 475.044,164.717 475.711,165.217 476.5,165.5C 476.5,166.167 476.5,166.833 476.5,167.5C 475.662,167.842 475.328,168.508 475.5,169.5C 475.167,169.5 474.833,169.5 474.5,169.5C 474.737,168.209 474.404,167.209 473.5,166.5C 461.007,165.34 448.34,165.173 435.5,166C 431.759,167.738 428.592,170.238 426,173.5C 425.5,180.826 425.334,188.159 425.5,195.5C 424.672,189.013 424.172,182.346 424,175.5C 423.5,184.494 423.334,193.494 423.5,202.5C 421.512,195.567 420.178,188.234 419.5,180.5C 419.667,179.167 419.833,177.833 420,176.5C 421.943,172.805 423.776,169.138 425.5,165.5C 428.187,165.664 430.854,165.497 433.5,165C 437.539,162.251 436.872,160.751 431.5,160.5C 432.14,157.352 433.14,157.019 434.5,159.5C 435.328,158.585 436.328,157.919 437.5,157.5C 439.056,158.547 440.723,159.214 442.5,159.5C 443.019,155.547 441.686,152.547 438.5,150.5C 440.292,150.634 441.958,150.301 443.5,149.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#262b4c\",d:\"M 935.5,106.5 C 935.328,107.492 935.662,108.158 936.5,108.5C 936.5,109.167 936.5,109.833 936.5,110.5C 936.5,115.833 936.5,121.167 936.5,126.5C 936.5,127.5 936.5,128.5 936.5,129.5C 936.5,135.833 936.5,142.167 936.5,148.5C 936.5,148.833 936.5,149.167 936.5,149.5C 934.353,152.556 931.353,153.89 927.5,153.5C 927.67,154.822 927.337,155.989 926.5,157C 921.467,157.171 916.467,157.671 911.5,158.5C 918.803,159.497 926.137,159.831 933.5,159.5C 933.5,158.5 933.5,157.5 933.5,156.5C 937.241,155.599 939.241,156.932 939.5,160.5C 935.029,159.911 931.029,160.577 927.5,162.5C 874.159,163.166 820.826,163.5 767.5,163.5C 758.281,163.475 757.614,161.809 765.5,158.5C 770.191,158.377 774.858,158.377 779.5,158.5C 777.887,157.573 776.221,156.739 774.5,156C 773.167,155.333 773.167,154.667 774.5,154C 773.552,153.517 772.552,153.351 771.5,153.5C 770.525,150.713 770.859,148.046 772.5,145.5C 772.5,146.5 772.5,147.5 772.5,148.5C 780.833,148.5 789.167,148.5 797.5,148.5C 797.629,146.784 797.962,145.117 798.5,143.5C 804.451,132.156 813.451,123.99 825.5,119C 827.712,118.211 829.712,118.378 831.5,119.5C 831.5,129.167 831.5,138.833 831.5,148.5C 835.5,148.5 839.5,148.5 843.5,148.5C 843.833,148.5 844.167,148.5 844.5,148.5C 845.548,150.933 846.214,150.933 846.5,148.5C 846.833,148.5 847.167,148.5 847.5,148.5C 847.5,148.833 847.5,149.167 847.5,149.5C 856.085,150.579 864.752,151.246 873.5,151.5C 875.563,150.488 877.563,149.488 879.5,148.5C 881.5,148.5 883.5,148.5 885.5,148.5C 886.493,139.682 886.827,130.682 886.5,121.5C 886.843,131.045 887.843,140.378 889.5,149.5C 894.901,150.825 900.401,150.825 906,149.5C 906.5,136.838 906.667,124.171 906.5,111.5C 907.167,117.833 907.833,124.167 908.5,130.5C 908.5,136.5 908.5,142.5 908.5,148.5C 916.833,148.5 925.167,148.5 933.5,148.5C 934.49,142.355 934.823,136.022 934.5,129.5C 934.5,128.167 934.5,126.833 934.5,125.5C 934.5,121.167 934.5,116.833 934.5,112.5C 934.5,110.833 934.5,109.167 934.5,107.5C 934.5,106.833 934.833,106.5 935.5,106.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#654112\",d:\"M 868.5,119.5 C 868.5,129.5 868.5,139.5 868.5,149.5C 861.5,149.5 854.5,149.5 847.5,149.5C 847.5,149.167 847.5,148.833 847.5,148.5C 847.833,148.5 848.167,148.5 848.5,148.5C 854.833,148.5 861.167,148.5 867.5,148.5C 867.173,138.652 867.506,128.986 868.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a8dbf\",d:\"M 908.5,130.5 C 908.833,130.5 909.167,130.5 909.5,130.5C 909.5,130.833 909.5,131.167 909.5,131.5C 909.5,136.833 909.5,142.167 909.5,147.5C 916.833,147.5 924.167,147.5 931.5,147.5C 932.489,142.025 932.822,136.358 932.5,130.5C 933.49,136.31 933.823,142.31 933.5,148.5C 925.167,148.5 916.833,148.5 908.5,148.5C 908.5,142.5 908.5,136.5 908.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c58f2b\",d:\"M 868.5,118.5 C 868.5,118.833 868.5,119.167 868.5,119.5C 867.506,128.986 867.173,138.652 867.5,148.5C 861.167,148.5 854.833,148.5 848.5,148.5C 848.5,148.167 848.5,147.833 848.5,147.5C 848.833,147.5 849.167,147.5 849.5,147.5C 855.093,147.807 860.593,147.473 866,146.5C 865.855,136.78 866.689,127.446 868.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#488ec2\",d:\"M 829.5,143.5 C 829.5,145.167 829.5,146.833 829.5,148.5C 825.029,149.089 821.029,148.423 817.5,146.5C 821.103,144.237 824.436,141.57 827.5,138.5C 828.17,140.291 828.837,141.958 829.5,143.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39a1dc\",d:\"M 826.5,127.5 C 827.167,127.5 827.833,127.5 828.5,127.5C 828.813,130.247 828.48,132.914 827.5,135.5C 823.077,138.376 819.077,141.709 815.5,145.5C 810.583,148.581 805.25,149.248 799.5,147.5C 799.624,146.893 799.957,146.56 800.5,146.5C 801.568,147.434 802.901,147.768 804.5,147.5C 805.928,142.394 808.928,138.394 813.5,135.5C 815.036,137.025 816.036,139.025 816.5,141.5C 817.004,138.658 818.671,137.325 821.5,137.5C 821.34,135.801 821.506,134.134 822,132.5C 823.356,133.38 824.856,133.714 826.5,133.5C 826.5,131.5 826.5,129.5 826.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d1a42e\",d:\"M 889.5,118.5 C 890.494,127.986 890.827,137.652 890.5,147.5C 892.167,147.5 893.833,147.5 895.5,147.5C 893.735,148.461 891.735,148.795 889.5,148.5C 889.5,138.5 889.5,128.5 889.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1ebf6\",d:\"M 828.5,127.5 C 827.833,127.5 827.167,127.5 826.5,127.5C 821.366,128.899 817.033,131.565 813.5,135.5C 808.928,138.394 805.928,142.394 804.5,147.5C 802.901,147.768 801.568,147.434 800.5,146.5C 805.417,133.251 814.75,124.918 828.5,121.5C 828.5,123.5 828.5,125.5 828.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#68a0b6\",d:\"M 831.5,119.5 C 832.494,128.652 832.827,137.985 832.5,147.5C 836.167,147.5 839.833,147.5 843.5,147.5C 843.5,147.833 843.5,148.167 843.5,148.5C 839.5,148.5 835.5,148.5 831.5,148.5C 831.5,138.833 831.5,129.167 831.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#094c89\",d:\"M 909.5,130.5 C 917.65,129.507 925.983,129.174 934.5,129.5C 934.823,136.022 934.49,142.355 933.5,148.5C 933.823,142.31 933.49,136.31 932.5,130.5C 924.833,130.5 917.167,130.5 909.5,130.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3dc0f6\",d:\"M 909.5,131.5 C 909.5,131.167 909.5,130.833 909.5,130.5C 917.167,130.5 924.833,130.5 932.5,130.5C 932.822,136.358 932.489,142.025 931.5,147.5C 931.5,142.167 931.5,136.833 931.5,131.5C 924.167,131.5 916.833,131.5 909.5,131.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37dffd\",d:\"M 909.5,131.5 C 916.833,131.5 924.167,131.5 931.5,131.5C 931.5,136.833 931.5,142.167 931.5,147.5C 924.167,147.5 916.833,147.5 909.5,147.5C 909.5,142.167 909.5,136.833 909.5,131.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c9ddb\",d:\"M 919.5,136.5 C 922.167,136.5 924.833,136.5 927.5,136.5C 927.5,137.833 927.5,139.167 927.5,140.5C 924.5,140.5 921.5,140.5 918.5,140.5C 918.433,139.041 918.766,137.708 919.5,136.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d3075\",d:\"M 828.5,127.5 C 829.488,132.64 829.821,137.974 829.5,143.5C 828.837,141.958 828.17,140.291 827.5,138.5C 824.436,141.57 821.103,144.237 817.5,146.5C 817.158,145.662 816.492,145.328 815.5,145.5C 819.077,141.709 823.077,138.376 827.5,135.5C 828.48,132.914 828.813,130.247 828.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38bae6\",d:\"M 826.5,127.5 C 826.5,129.5 826.5,131.5 826.5,133.5C 824.856,133.714 823.356,133.38 822,132.5C 821.506,134.134 821.34,135.801 821.5,137.5C 818.671,137.325 817.004,138.658 816.5,141.5C 816.036,139.025 815.036,137.025 813.5,135.5C 817.033,131.565 821.366,128.899 826.5,127.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f1c21\",d:\"M 868.5,119.5 C 875.167,119.5 881.833,119.5 888.5,119.5C 888.173,129.348 888.506,139.014 889.5,148.5C 889.5,148.833 889.5,149.167 889.5,149.5C 887.843,140.378 886.843,131.045 886.5,121.5C 884.167,121.5 881.833,121.5 879.5,121.5C 878.833,121.5 878.167,121.5 877.5,121.5C 875.167,121.5 872.833,121.5 870.5,121.5C 870.5,130.5 870.5,139.5 870.5,148.5C 873.5,148.5 876.5,148.5 879.5,148.5C 877.563,149.488 875.563,150.488 873.5,151.5C 864.752,151.246 856.085,150.579 847.5,149.5C 854.5,149.5 861.5,149.5 868.5,149.5C 868.5,139.5 868.5,129.5 868.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b2cbe1\",d:\"M 877.5,121.5 C 875.782,122.224 873.948,122.891 872,123.5C 871.5,131.493 871.334,139.493 871.5,147.5C 874.167,147.5 876.833,147.5 879.5,147.5C 879.198,139.082 879.531,130.748 880.5,122.5C 882.167,122.5 883.833,122.5 885.5,122.5C 885.5,124.833 885.5,127.167 885.5,129.5C 883.833,129.5 882.167,129.5 880.5,129.5C 880.5,130.5 880.5,131.5 880.5,132.5C 882.167,132.5 883.833,132.5 885.5,132.5C 885.5,137.833 885.5,143.167 885.5,148.5C 883.5,148.5 881.5,148.5 879.5,148.5C 876.5,148.5 873.5,148.5 870.5,148.5C 870.5,139.5 870.5,130.5 870.5,121.5C 872.833,121.5 875.167,121.5 877.5,121.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#889ac2\",d:\"M 879.5,121.5 C 881.833,121.5 884.167,121.5 886.5,121.5C 886.827,130.682 886.493,139.682 885.5,148.5C 885.5,143.167 885.5,137.833 885.5,132.5C 883.833,132.5 882.167,132.5 880.5,132.5C 880.5,131.5 880.5,130.5 880.5,129.5C 882.167,129.5 883.833,129.5 885.5,129.5C 885.5,127.167 885.5,124.833 885.5,122.5C 883.833,122.5 882.167,122.5 880.5,122.5C 879.833,122.5 879.5,122.167 879.5,121.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dcf3fb\",d:\"M 877.5,121.5 C 878.167,121.5 878.833,121.5 879.5,121.5C 879.5,122.167 879.833,122.5 880.5,122.5C 879.531,130.748 879.198,139.082 879.5,147.5C 876.833,147.5 874.167,147.5 871.5,147.5C 871.334,139.493 871.5,131.493 872,123.5C 873.948,122.891 875.782,122.224 877.5,121.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#604306\",d:\"M 868.5,119.5 C 868.5,119.167 868.5,118.833 868.5,118.5C 875.5,118.5 882.5,118.5 889.5,118.5C 889.5,128.5 889.5,138.5 889.5,148.5C 888.506,139.014 888.173,129.348 888.5,119.5C 881.833,119.5 875.167,119.5 868.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42cdf5\",d:\"M 933.5,125.5 C 926.216,126.597 918.882,126.763 911.5,126C 910.944,125.617 910.611,125.117 910.5,124.5C 909.515,120.366 909.182,116.032 909.5,111.5C 917.167,111.5 924.833,111.5 932.5,111.5C 932.669,116.181 933.002,120.848 933.5,125.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5beefd\",d:\"M 910.5,124.5 C 910.5,122.833 910.5,121.167 910.5,119.5C 916.868,119.83 923.202,119.496 929.5,118.5C 927.896,116.821 927.229,114.821 927.5,112.5C 928.833,112.5 930.167,112.5 931.5,112.5C 931.5,116.5 931.5,120.5 931.5,124.5C 924.5,124.5 917.5,124.5 910.5,124.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272d50\",d:\"M 609.5,95.5 C 609.5,112.833 609.5,130.167 609.5,147.5C 611.5,147.5 613.5,147.5 615.5,147.5C 616.5,147.5 617.5,147.5 618.5,147.5C 618.833,147.5 619.167,147.5 619.5,147.5C 622.625,148.479 625.958,148.813 629.5,148.5C 629.5,147.5 629.5,146.5 629.5,145.5C 630.167,135.5 630.833,125.5 631.5,115.5C 631.5,126.167 631.5,136.833 631.5,147.5C 636.348,148.814 641.348,148.814 646.5,147.5C 642.773,142.77 638.44,138.77 633.5,135.5C 633.5,134.5 633.5,133.5 633.5,132.5C 639.275,137.1 644.941,141.934 650.5,147C 651.448,147.483 652.448,147.649 653.5,147.5C 654.213,142.42 655.213,137.42 656.5,132.5C 657.156,133.622 657.489,134.955 657.5,136.5C 656.833,139.5 656.167,142.5 655.5,145.5C 655.585,147.333 656.252,148.666 657.5,149.5C 657.785,151.288 657.452,152.955 656.5,154.5C 655.614,153.675 655.281,152.675 655.5,151.5C 654.5,151.5 653.5,151.5 652.5,151.5C 652.56,155.485 650.56,157.152 646.5,156.5C 648.153,161.312 650.653,161.645 654,157.5C 655.049,159.107 656.549,159.773 658.5,159.5C 658.147,157.365 658.98,156.032 661,155.5C 664.001,156.918 667.168,157.751 670.5,158C 671.38,159.356 671.714,160.856 671.5,162.5C 669.585,162.216 667.919,162.549 666.5,163.5C 665.883,163.389 665.383,163.056 665,162.5C 648.542,163.401 632.042,163.901 615.5,164C 616.047,163.075 616.713,162.242 617.5,161.5C 619.424,161.433 621.424,161.1 623.5,160.5C 619.518,159.022 615.518,158.688 611.5,159.5C 610.571,160.689 610.238,162.022 610.5,163.5C 600.741,163.305 591.074,163.805 581.5,165C 579.5,164.167 577.5,163.333 575.5,162.5C 579.833,161.833 584.167,161.167 588.5,160.5C 589.815,159.105 589.481,158.105 587.5,157.5C 583.871,159.033 580.204,159.367 576.5,158.5C 575.754,157.264 575.421,155.93 575.5,154.5C 572.428,154.817 569.428,154.484 566.5,153.5C 566.667,153.167 566.833,152.833 567,152.5C 570.394,151.544 573.894,151.211 577.5,151.5C 577.78,155.225 579.78,156.392 583.5,155C 581.393,153.736 580.393,151.903 580.5,149.5C 581.5,149.5 582.5,149.5 583.5,149.5C 584.964,150.16 586.631,150.493 588.5,150.5C 590.64,150.444 592.306,149.777 593.5,148.5C 594.833,148.5 596.167,148.5 597.5,148.5C 597.5,148.833 597.5,149.167 597.5,149.5C 602.985,150.652 608.651,150.818 614.5,150C 612.655,148.872 610.655,148.372 608.5,148.5C 608.17,130.659 608.503,112.992 609.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4aaedf\",d:\"M 633.5,135.5 C 638.44,138.77 642.773,142.77 646.5,147.5C 641.348,148.814 636.348,148.814 631.5,147.5C 633.423,143.971 634.089,139.971 633.5,135.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5dad9\",d:\"M 473.5,166.5 C 461.206,168.318 448.54,169.151 435.5,169C 434.058,169.377 433.058,170.21 432.5,171.5C 430.738,172.262 429.738,173.596 429.5,175.5C 428.833,184.833 428.167,194.167 427.5,203.5C 425.777,201.22 425.111,198.553 425.5,195.5C 425.334,188.159 425.5,180.826 426,173.5C 428.592,170.238 431.759,167.738 435.5,166C 448.34,165.173 461.007,165.34 473.5,166.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fabbb2\",d:\"M 473.5,166.5 C 474.404,167.209 474.737,168.209 474.5,169.5C 462.162,169.333 449.829,169.5 437.5,170C 435.846,170.608 434.179,171.108 432.5,171.5C 433.058,170.21 434.058,169.377 435.5,169C 448.54,169.151 461.206,168.318 473.5,166.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#141a36\",d:\"M 319.5,169.5 C 340.836,169.333 362.169,169.5 383.5,170C 339.331,170.167 295.331,170.667 251.5,171.5C 249.102,171.259 247.102,171.926 245.5,173.5C 244.833,173.5 244.167,173.5 243.5,173.5C 244.474,171.79 246.474,170.623 249.5,170C 272.831,169.5 296.164,169.333 319.5,169.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ca6362\",d:\"M 474.5,169.5 C 474.833,169.5 475.167,169.5 475.5,169.5C 475.829,182.011 475.495,194.345 474.5,206.5C 472.883,207.038 471.216,207.371 469.5,207.5C 470.458,206.038 471.624,204.705 473,203.5C 473.5,192.505 473.667,181.505 473.5,170.5C 461.829,170.333 450.162,170.5 438.5,171C 435.29,171.395 432.79,172.895 431,175.5C 430.333,185.833 430.333,196.167 431,206.5C 432.699,207.406 434.533,207.739 436.5,207.5C 443.5,207.5 450.5,207.5 457.5,207.5C 460.167,207.5 462.833,207.5 465.5,207.5C 454.346,208.495 443.012,208.828 431.5,208.5C 430.094,208.027 429.427,207.027 429.5,205.5C 429.5,195.5 429.5,185.5 429.5,175.5C 429.738,173.596 430.738,172.262 432.5,171.5C 434.179,171.108 435.846,170.608 437.5,170C 449.829,169.5 462.162,169.333 474.5,169.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272f4a\",d:\"M 565.5,146.5 C 565.5,147.167 565.833,147.5 566.5,147.5C 566.5,147.833 566.5,148.167 566.5,148.5C 566.611,149.117 566.944,149.617 567.5,150C 569.5,150.167 571.5,150.333 573.5,150.5C 575.952,150.461 577.952,149.794 579.5,148.5C 579.833,148.5 580.167,148.5 580.5,148.5C 581.167,148.5 581.833,148.5 582.5,148.5C 582.833,148.5 583.167,148.5 583.5,148.5C 583.5,148.833 583.5,149.167 583.5,149.5C 582.5,149.5 581.5,149.5 580.5,149.5C 580.393,151.903 581.393,153.736 583.5,155C 579.78,156.392 577.78,155.225 577.5,151.5C 573.894,151.211 570.394,151.544 567,152.5C 566.833,152.833 566.667,153.167 566.5,153.5C 569.428,154.484 572.428,154.817 575.5,154.5C 575.421,155.93 575.754,157.264 576.5,158.5C 580.204,159.367 583.871,159.033 587.5,157.5C 589.481,158.105 589.815,159.105 588.5,160.5C 584.167,161.167 579.833,161.833 575.5,162.5C 577.5,163.333 579.5,164.167 581.5,165C 591.074,163.805 600.741,163.305 610.5,163.5C 610.238,162.022 610.571,160.689 611.5,159.5C 615.518,158.688 619.518,159.022 623.5,160.5C 621.424,161.1 619.424,161.433 617.5,161.5C 616.713,162.242 616.047,163.075 615.5,164C 632.042,163.901 648.542,163.401 665,162.5C 665.383,163.056 665.883,163.389 666.5,163.5C 680.312,163.761 693.812,163.428 707,162.5C 709.316,162.934 711.316,163.934 713,165.5C 715.013,168.998 717.18,172.331 719.5,175.5C 718.662,175.842 718.328,176.508 718.5,177.5C 718.167,177.5 717.833,177.5 717.5,177.5C 715.136,170.978 710.469,167.144 703.5,166C 664.664,165.169 625.998,165.335 587.5,166.5C 583.98,167.353 581.313,169.353 579.5,172.5C 578.833,172.833 578.167,173.167 577.5,173.5C 576.778,173.918 576.278,174.584 576,175.5C 575.5,201.165 575.333,226.831 575.5,252.5C 574.732,251.737 574.232,250.737 574,249.5C 573.505,251.473 573.338,253.473 573.5,255.5C 571.076,255.808 568.743,255.474 566.5,254.5C 566.692,247.997 567.692,241.497 569.5,235C 569.589,232.287 568.922,229.787 567.5,227.5C 568.772,215.735 568.772,203.901 567.5,192C 568.91,191.632 569.91,190.799 570.5,189.5C 568.83,185.742 567.997,181.742 568,177.5C 566.35,174.894 564.85,174.894 563.5,177.5C 562.442,176.4 561.608,175.066 561,173.5C 560.617,174.056 560.117,174.389 559.5,174.5C 556.766,169.94 552.766,167.107 547.5,166C 525.503,165.5 503.503,165.333 481.5,165.5C 479.833,165.5 478.167,165.5 476.5,165.5C 477.609,164.71 478.942,164.21 480.5,164C 497.182,163.686 513.848,163.019 530.5,162C 522.449,161.822 514.449,161.156 506.5,160C 507.167,159.333 507.833,158.667 508.5,158C 504.179,157.501 499.846,157.334 495.5,157.5C 495.5,156.167 495.5,154.833 495.5,153.5C 506.05,155.069 516.717,155.903 527.5,156C 535.763,156.921 543.763,158.755 551.5,161.5C 551.281,160.325 551.614,159.325 552.5,158.5C 556.957,160.455 560.624,159.122 563.5,154.5C 562.38,151.402 563.046,148.735 565.5,146.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8599a3\",d:\"M 587.5,166.5 C 598.187,166.168 608.854,166.501 619.5,167.5C 608.007,168.167 596.674,168.833 585.5,169.5C 584.5,169.833 583.833,170.5 583.5,171.5C 582.167,171.833 580.833,172.167 579.5,172.5C 581.313,169.353 583.98,167.353 587.5,166.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#371f12\",d:\"M 566.5,148.5 C 567.167,148.5 567.833,148.5 568.5,148.5C 572.167,148.5 575.833,148.5 579.5,148.5C 577.952,149.794 575.952,150.461 573.5,150.5C 571.5,150.333 569.5,150.167 567.5,150C 566.944,149.617 566.611,149.117 566.5,148.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cee1f6\",d:\"M 251.5,171.5 C 296.501,171.333 341.501,171.5 386.5,172C 388.491,172.374 390.158,173.207 391.5,174.5C 389.5,174.5 387.5,174.5 385.5,174.5C 363.177,173.167 340.51,172.5 317.5,172.5C 293.477,172.52 269.477,172.853 245.5,173.5C 247.102,171.926 249.102,171.259 251.5,171.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb675f\",d:\"M 469.5,207.5 C 468.167,207.5 466.833,207.5 465.5,207.5C 462.833,207.5 460.167,207.5 457.5,207.5C 460.627,206.419 463.96,205.753 467.5,205.5C 467.5,204.5 467.5,203.5 467.5,202.5C 457.319,202.827 447.319,202.494 437.5,201.5C 447.167,201.5 456.833,201.5 466.5,201.5C 466.67,200.178 466.337,199.011 465.5,198C 461.514,197.501 457.514,197.334 453.5,197.5C 455.838,188.504 452.504,185.171 443.5,187.5C 443.337,189.857 443.503,192.19 444,194.5C 446.326,194.88 448.159,195.88 449.5,197.5C 445.486,197.334 441.486,197.501 437.5,198C 436.663,199.011 436.33,200.178 436.5,201.5C 434.833,201.5 433.167,201.5 431.5,201.5C 431.5,202.833 431.5,204.167 431.5,205.5C 433.553,205.402 435.22,206.069 436.5,207.5C 434.533,207.739 432.699,207.406 431,206.5C 430.333,196.167 430.333,185.833 431,175.5C 432.79,172.895 435.29,171.395 438.5,171C 450.162,170.5 461.829,170.333 473.5,170.5C 473.667,181.505 473.5,192.505 473,203.5C 471.624,204.705 470.458,206.038 469.5,207.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef67c\",d:\"M 583.5,173.5 C 594.654,172.505 605.988,172.172 617.5,172.5C 617.833,172.5 618.167,172.5 618.5,172.5C 618.5,173.167 618.5,173.833 618.5,174.5C 606.914,173.522 595.247,173.189 583.5,173.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dafdfe\",d:\"M 385.5,174.5 C 341.33,174.168 297.33,174.501 253.5,175.5C 245.407,175.296 239.907,178.962 237,186.5C 236.517,185.552 236.351,184.552 236.5,183.5C 238.029,179.632 240.363,176.299 243.5,173.5C 244.167,173.5 244.833,173.5 245.5,173.5C 269.477,172.853 293.477,172.52 317.5,172.5C 340.51,172.5 363.177,173.167 385.5,174.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3d826\",d:\"M 583.5,173.5 C 595.247,173.189 606.914,173.522 618.5,174.5C 606.618,175.289 594.618,175.622 582.5,175.5C 582.833,174.833 583.167,174.167 583.5,173.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad5fc\",d:\"M 391.5,174.5 C 394.754,176.327 397.087,178.993 398.5,182.5C 400.237,191.006 397.903,198.006 391.5,203.5C 384.397,205.551 377.064,206.051 369.5,205C 368.663,203.989 368.33,202.822 368.5,201.5C 362.854,200.912 362.521,200.246 367.5,199.5C 367.146,196.579 368.146,194.246 370.5,192.5C 368.735,190.125 367.568,187.458 367,184.5C 364.266,183.638 364.099,182.805 366.5,182C 361.914,180.588 357.247,180.588 352.5,182C 353.167,182.333 353.833,182.667 354.5,183C 352.924,183.44 351.59,184.273 350.5,185.5C 349.833,184.833 349.167,184.167 348.5,183.5C 346.87,184.898 345.036,185.898 343,186.5C 342.915,184.915 342.749,183.582 342.5,182.5C 340.954,183.684 339.287,184.684 337.5,185.5C 336.754,186.736 336.421,188.07 336.5,189.5C 335.5,189.5 334.5,189.5 333.5,189.5C 334.942,188.18 335.608,186.514 335.5,184.5C 333.61,184.297 332.11,184.963 331,186.5C 330.601,186.272 330.435,185.938 330.5,185.5C 330.694,182.67 331.361,180.004 332.5,177.5C 329.102,177.82 325.768,177.487 322.5,176.5C 345.663,175.833 368.663,175.167 391.5,174.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3cd3fd\",d:\"M 253.5,175.5 C 270.17,175.333 286.837,175.5 303.5,176C 297.659,176.047 291.992,176.714 286.5,178C 287.167,178.333 287.833,178.667 288.5,179C 287.833,180.333 287.167,181.667 286.5,183C 287.282,185.74 287.782,188.574 288,191.5C 289.413,188.334 289.913,185.168 289.5,182C 291.167,181.333 292.833,181.333 294.5,182C 294.146,183.626 294.146,185.459 294.5,187.5C 294.393,197.13 299.06,200.296 308.5,197C 309.337,195.989 309.67,194.822 309.5,193.5C 310.605,194.6 311.938,195.267 313.5,195.5C 317.719,198.419 322.553,200.419 328,201.5C 329.067,200.809 330.234,200.309 331.5,200C 330.167,199 330.167,198 331.5,197C 333.134,196.506 334.801,196.34 336.5,196.5C 336.737,195.209 336.404,194.209 335.5,193.5C 334.4,192.395 333.733,191.062 333.5,189.5C 334.5,189.5 335.5,189.5 336.5,189.5C 336.421,188.07 336.754,186.736 337.5,185.5C 339.287,184.684 340.954,183.684 342.5,182.5C 342.749,183.582 342.915,184.915 343,186.5C 345.036,185.898 346.87,184.898 348.5,183.5C 349.167,184.167 349.833,184.833 350.5,185.5C 351.59,184.273 352.924,183.44 354.5,183C 353.833,182.667 353.167,182.333 352.5,182C 357.247,180.588 361.914,180.588 366.5,182C 364.099,182.805 364.266,183.638 367,184.5C 367.568,187.458 368.735,190.125 370.5,192.5C 368.146,194.246 367.146,196.579 367.5,199.5C 362.521,200.246 362.854,200.912 368.5,201.5C 368.33,202.822 368.663,203.989 369.5,205C 377.064,206.051 384.397,205.551 391.5,203.5C 390.547,205.61 388.881,206.777 386.5,207C 340.126,207.172 293.792,207.672 247.5,208.5C 246.583,207.873 245.583,207.539 244.5,207.5C 236.896,201.061 234.229,193.061 236.5,183.5C 236.351,184.552 236.517,185.552 237,186.5C 239.907,178.962 245.407,175.296 253.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2dd76\",d:\"M 583.5,173.5 C 583.167,174.167 582.833,174.833 582.5,175.5C 581.506,185.653 581.172,195.986 581.5,206.5C 581.5,206.833 581.5,207.167 581.5,207.5C 581.167,207.5 580.833,207.5 580.5,207.5C 580.5,207.167 580.5,206.833 580.5,206.5C 580.333,195.828 580.5,185.161 581,174.5C 581.671,173.748 582.504,173.414 583.5,173.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#51ddf7\",d:\"M 253.5,175.5 C 297.33,174.501 341.33,174.168 385.5,174.5C 387.5,174.5 389.5,174.5 391.5,174.5C 368.663,175.167 345.663,175.833 322.5,176.5C 325.768,177.487 329.102,177.82 332.5,177.5C 331.361,180.004 330.694,182.67 330.5,185.5C 329.833,185.833 329.167,186.167 328.5,186.5C 327.608,184.286 325.942,183.286 323.5,183.5C 318.116,182.854 312.782,183.521 307.5,185.5C 306.504,185.414 305.671,185.748 305,186.5C 304.667,189.167 304.333,191.833 304,194.5C 302.989,193.663 301.822,193.33 300.5,193.5C 301.036,190.302 300.369,187.635 298.5,185.5C 297.167,186.167 295.833,186.833 294.5,187.5C 294.146,185.459 294.146,183.626 294.5,182C 292.833,181.333 291.167,181.333 289.5,182C 289.913,185.168 289.413,188.334 288,191.5C 287.782,188.574 287.282,185.74 286.5,183C 287.167,181.667 287.833,180.333 288.5,179C 287.833,178.667 287.167,178.333 286.5,178C 291.992,176.714 297.659,176.047 303.5,176C 286.837,175.5 270.17,175.333 253.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9f5b6\",d:\"M 583.5,171.5 C 595.012,171.172 606.346,171.505 617.5,172.5C 605.988,172.172 594.654,172.505 583.5,173.5C 582.504,173.414 581.671,173.748 581,174.5C 580.5,185.161 580.333,195.828 580.5,206.5C 579.506,196.013 579.172,185.346 579.5,174.5C 579.5,173.833 579.5,173.167 579.5,172.5C 580.833,172.167 582.167,171.833 583.5,171.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272317\",d:\"M 585.5,169.5 C 596.505,169.333 607.505,169.5 618.5,170C 620.196,171.176 621.862,172.343 623.5,173.5C 623.5,181.167 623.5,188.833 623.5,196.5C 622.778,200.391 621.944,204.391 621,208.5C 620.005,209.066 619.172,209.733 618.5,210.5C 606.087,210.187 593.753,210.521 581.5,211.5C 581.5,210.5 581.5,209.5 581.5,208.5C 593.838,208.667 606.171,208.5 618.5,208C 619.46,206.581 620.293,205.081 621,203.5C 621.667,193.833 621.667,184.167 621,174.5C 620.292,173.619 619.458,172.953 618.5,172.5C 618.167,172.5 617.833,172.5 617.5,172.5C 606.346,171.505 595.012,171.172 583.5,171.5C 583.833,170.5 584.5,169.833 585.5,169.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c6b80\",d:\"M 481.5,165.5 C 503.503,165.333 525.503,165.5 547.5,166C 552.766,167.107 556.766,169.94 559.5,174.5C 560.11,175.391 560.443,176.391 560.5,177.5C 561.462,202.474 561.795,227.474 561.5,252.5C 561.167,254.5 560.833,256.5 560.5,258.5C 559.833,258.833 559.167,259.167 558.5,259.5C 559.706,235.767 560.372,212.1 560.5,188.5C 559.803,184.529 559.303,180.529 559,176.5C 555.385,175.386 552.885,173.052 551.5,169.5C 549.018,168.103 546.352,167.269 543.5,167C 522.663,166.832 501.996,166.332 481.5,165.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1f5f8\",d:\"M 328.5,186.5 C 329.167,186.167 329.833,185.833 330.5,185.5C 330.435,185.938 330.601,186.272 331,186.5C 332.11,184.963 333.61,184.297 335.5,184.5C 335.608,186.514 334.942,188.18 333.5,189.5C 333.733,191.062 334.4,192.395 335.5,193.5C 335.631,194.376 335.298,195.043 334.5,195.5C 333.449,194.115 332.116,193.115 330.5,192.5C 326.908,195.134 322.908,195.967 318.5,195C 316.326,189.674 317.992,186.174 323.5,184.5C 325.383,184.876 326.883,185.876 328,187.5C 328.399,187.272 328.565,186.938 328.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9bf0e\",d:\"M 618.5,174.5 C 619.833,184.167 619.833,193.833 618.5,203.5C 616.821,203.892 615.154,204.392 613.5,205C 602.757,205.19 592.09,205.69 581.5,206.5C 581.172,195.986 581.506,185.653 582.5,175.5C 594.618,175.622 606.618,175.289 618.5,174.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf5ad\",d:\"M 607.5,187.5 C 607.795,189.735 607.461,191.735 606.5,193.5C 603.099,195.384 599.433,195.884 595.5,195C 594.944,194.617 594.611,194.117 594.5,193.5C 594.328,192.508 594.662,191.842 595.5,191.5C 598.944,193.09 601.944,192.424 604.5,189.5C 605.222,188.449 606.222,187.782 607.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eec124\",d:\"M 604.5,189.5 C 601.944,192.424 598.944,193.09 595.5,191.5C 594.853,183.501 597.687,181.835 604,186.5C 604.483,187.448 604.649,188.448 604.5,189.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbf285\",d:\"M 607.5,187.5 C 606.222,187.782 605.222,188.449 604.5,189.5C 604.649,188.448 604.483,187.448 604,186.5C 597.687,181.835 594.853,183.501 595.5,191.5C 594.662,191.842 594.328,192.508 594.5,193.5C 594.167,193.5 593.833,193.5 593.5,193.5C 590.397,188.742 591.064,184.575 595.5,181C 601.359,179.762 605.359,181.929 607.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6d04e\",d:\"M 593.5,193.5 C 593.833,193.5 594.167,193.5 594.5,193.5C 594.611,194.117 594.944,194.617 595.5,195C 599.433,195.884 603.099,195.384 606.5,193.5C 606.389,194.117 606.056,194.617 605.5,195C 607.066,195.608 608.4,196.442 609.5,197.5C 607.473,197.338 605.473,197.505 603.5,198C 602.663,199.011 602.33,200.178 602.5,201.5C 605.5,201.5 608.5,201.5 611.5,201.5C 608.375,202.479 605.042,202.813 601.5,202.5C 601.261,200.533 601.594,198.699 602.5,197C 599.833,196.667 597.167,196.333 594.5,196C 593.748,195.329 593.414,194.496 593.5,193.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4bd2ea\",d:\"M 328.5,186.5 C 328.565,186.938 328.399,187.272 328,187.5C 326.883,185.876 325.383,184.876 323.5,184.5C 317.992,186.174 316.326,189.674 318.5,195C 322.908,195.967 326.908,195.134 330.5,192.5C 332.116,193.115 333.449,194.115 334.5,195.5C 335.298,195.043 335.631,194.376 335.5,193.5C 336.404,194.209 336.737,195.209 336.5,196.5C 334.801,196.34 333.134,196.506 331.5,197C 330.167,198 330.167,199 331.5,200C 330.234,200.309 329.067,200.809 328,201.5C 322.553,200.419 317.719,198.419 313.5,195.5C 313.116,193.071 312.449,190.737 311.5,188.5C 312.978,188.762 314.311,188.429 315.5,187.5C 313.977,185.717 311.977,185.051 309.5,185.5C 309.5,188.167 309.5,190.833 309.5,193.5C 309.67,194.822 309.337,195.989 308.5,197C 299.06,200.296 294.393,197.13 294.5,187.5C 295.833,186.833 297.167,186.167 298.5,185.5C 298.5,188.833 298.5,192.167 298.5,195.5C 301.5,195.5 304.5,195.5 307.5,195.5C 307.5,192.167 307.5,188.833 307.5,185.5C 312.782,183.521 318.116,182.854 323.5,183.5C 325.942,183.286 327.608,184.286 328.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#befcff\",d:\"M 298.5,185.5 C 300.369,187.635 301.036,190.302 300.5,193.5C 301.822,193.33 302.989,193.663 304,194.5C 304.333,191.833 304.667,189.167 305,186.5C 305.671,185.748 306.504,185.414 307.5,185.5C 307.5,188.833 307.5,192.167 307.5,195.5C 304.5,195.5 301.5,195.5 298.5,195.5C 298.5,192.167 298.5,188.833 298.5,185.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aaf5fb\",d:\"M 313.5,195.5 C 311.938,195.267 310.605,194.6 309.5,193.5C 309.5,190.833 309.5,188.167 309.5,185.5C 311.977,185.051 313.977,185.717 315.5,187.5C 314.311,188.429 312.978,188.762 311.5,188.5C 312.449,190.737 313.116,193.071 313.5,195.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#497889\",d:\"M 587.5,166.5 C 625.998,165.335 664.664,165.169 703.5,166C 710.469,167.144 715.136,170.978 717.5,177.5C 717.5,182.167 717.5,186.833 717.5,191.5C 716.5,191.5 715.5,191.5 714.5,191.5C 714.852,194.073 714.352,196.406 713,198.5C 712.667,197.833 712.333,197.167 712,196.5C 711.667,201.167 711.333,205.833 711,210.5C 710.167,209.5 709.333,208.5 708.5,207.5C 707.505,212.792 707.172,218.125 707.5,223.5C 709.467,223.261 711.301,223.594 713,224.5C 713.226,227.095 713.726,229.595 714.5,232C 713.43,239.562 713.43,247.229 714.5,255C 712.14,258.03 710.14,261.364 708.5,265C 706.655,266.128 704.655,266.628 702.5,266.5C 702.587,263.402 702.087,263.068 701,265.5C 698.818,263.244 696.485,263.244 694,265.5C 690.872,265.088 687.872,265.088 685,265.5C 681.298,263.051 677.632,262.385 674,263.5C 672.72,263.387 671.887,262.72 671.5,261.5C 673.166,260.053 674.999,258.719 677,257.5C 677.945,257.905 678.612,258.572 679,259.5C 679.892,255.827 681.392,255.66 683.5,259C 684.5,259.667 685.5,259.667 686.5,259C 685.122,257.287 683.455,255.953 681.5,255C 682.333,254.833 683.167,254.667 684,254.5C 687.177,257.09 690.51,258.756 694,259.5C 695,258.833 696,258.167 697,257.5C 700.262,258.847 703.762,258.68 707.5,257C 707.885,253.41 708.885,250.077 710.5,247C 707.833,244.333 707.833,241.667 710.5,239C 709.552,238.517 708.552,238.351 707.5,238.5C 707.851,243.978 707.184,249.311 705.5,254.5C 704.833,254.833 704.167,255.167 703.5,255.5C 702.137,254.802 700.971,254.802 700,255.5C 698.46,253.045 698.126,250.379 699,247.5C 700.959,246.252 702.459,244.585 703.5,242.5C 702.277,241.386 700.944,241.219 699.5,242C 699.833,242.333 700.167,242.667 700.5,243C 698.527,243.495 696.527,243.662 694.5,243.5C 694.657,242.127 694.49,240.793 694,239.5C 693.333,242.167 692.667,244.833 692,247.5C 690.314,242.341 688.981,242.675 688,248.5C 686.698,247.915 685.531,247.249 684.5,246.5C 685.5,246.5 686.5,246.5 687.5,246.5C 687.67,245.178 687.337,244.011 686.5,243C 682.165,242.737 677.832,242.903 673.5,243.5C 673.5,244.5 673.5,245.5 673.5,246.5C 676.167,246.5 678.833,246.5 681.5,246.5C 679.031,247.317 676.365,247.817 673.5,248C 675.5,248.333 677.5,248.667 679.5,249C 675.495,250.098 671.995,249.265 669,246.5C 669.312,238.87 669.478,231.203 669.5,223.5C 668.5,223.5 667.5,223.5 666.5,223.5C 666.449,221.43 667.115,219.597 668.5,218C 667.713,215.901 667.38,213.734 667.5,211.5C 665.533,211.739 663.699,211.406 662,210.5C 661.667,211.167 661.333,211.833 661,212.5C 659.414,211.624 657.914,210.624 656.5,209.5C 654.835,213.34 651.835,215.173 647.5,215C 641.472,215.83 635.472,215.664 629.5,214.5C 633.388,212.621 636.721,209.955 639.5,206.5C 636.64,203.913 633.64,201.58 630.5,199.5C 631.485,197.902 631.651,196.235 631,194.5C 626.783,190.641 626.45,187.307 630,184.5C 630.667,182.167 630.667,179.833 630,177.5C 628.951,179.107 627.451,179.773 625.5,179.5C 625.946,176.99 625.28,174.99 623.5,173.5C 621.862,172.343 620.196,171.176 618.5,170C 607.505,169.5 596.505,169.333 585.5,169.5C 596.674,168.833 608.007,168.167 619.5,167.5C 608.854,166.501 598.187,166.168 587.5,166.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#82a7b4\",d:\"M 663.5,186.5 C 664.167,186.5 664.833,186.5 665.5,186.5C 666.919,187.451 668.585,187.784 670.5,187.5C 670.813,190.247 670.48,192.914 669.5,195.5C 668.012,193.851 667.012,191.851 666.5,189.5C 665.935,191.544 664.935,193.21 663.5,194.5C 663.5,191.833 663.5,189.167 663.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cce9ee\",d:\"M 663.5,186.5 C 663.5,189.167 663.5,191.833 663.5,194.5C 662.791,195.404 661.791,195.737 660.5,195.5C 660.5,194.5 660.5,193.5 660.5,192.5C 658.856,192.714 657.356,192.38 656,191.5C 653.063,195.613 649.563,196.28 645.5,193.5C 641.133,196.62 638.133,195.62 636.5,190.5C 636.756,186.217 638.756,184.883 642.5,186.5C 641.675,187.386 640.675,187.719 639.5,187.5C 639.5,189.167 639.5,190.833 639.5,192.5C 641.167,192.5 642.833,192.5 644.5,192.5C 644.112,186.721 646.778,184.221 652.5,185C 653.333,185.833 654.167,186.667 655,187.5C 658.017,185.979 659.85,186.979 660.5,190.5C 661.681,188.865 661.681,187.198 660.5,185.5C 662.052,184.202 663.052,184.535 663.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#68888e\",d:\"M 648.5,187.5 C 652.161,187.35 653.161,188.85 651.5,192C 650.056,192.781 648.723,192.614 647.5,191.5C 648.246,190.264 648.579,188.93 648.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#caedf5\",d:\"M 670.5,187.5 C 668.585,187.784 666.919,187.451 665.5,186.5C 667.279,184.656 669.612,183.99 672.5,184.5C 672.715,186.179 672.048,187.179 670.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbfabe\",d:\"M 609.5,197.5 C 611.176,198.183 611.843,199.517 611.5,201.5C 608.5,201.5 605.5,201.5 602.5,201.5C 602.33,200.178 602.663,199.011 603.5,198C 605.473,197.505 607.473,197.338 609.5,197.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e1829\",d:\"M 577.5,173.5 C 577.5,174.833 577.5,176.167 577.5,177.5C 576.502,202.661 576.169,227.995 576.5,253.5C 575.833,253.5 575.5,253.167 575.5,252.5C 575.333,226.831 575.5,201.165 576,175.5C 576.278,174.584 576.778,173.918 577.5,173.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#497887\",d:\"M 488.5,185.5 C 488.02,188.685 488.686,191.519 490.5,194C 493.695,194.181 496.695,194.681 499.5,195.5C 496.482,195.335 493.482,195.502 490.5,196C 491.949,197.117 493.616,197.784 495.5,198C 493.251,200.294 491.251,202.794 489.5,205.5C 490.934,206.23 492.1,207.23 493,208.5C 499.085,207.688 505.252,207.188 511.5,207C 512.416,206.626 513.25,206.126 514,205.5C 514.308,206.308 514.808,206.975 515.5,207.5C 516.59,206.609 516.59,205.609 515.5,204.5C 516.59,202.997 517.757,202.664 519,203.5C 519.974,201.122 520.641,201.456 521,204.5C 522.395,203.185 523.395,203.519 524,205.5C 525.71,200.391 527.21,200.724 528.5,206.5C 532.746,208.979 536.912,208.979 541,206.5C 541.333,206.833 541.667,207.167 542,207.5C 543.397,212.708 543.897,218.041 543.5,223.5C 545.492,223.328 547.158,223.995 548.5,225.5C 549.584,224.335 550.417,223.002 551,221.5C 551.71,222.973 552.876,223.64 554.5,223.5C 554.5,226.167 554.5,228.833 554.5,231.5C 555.833,231.5 557.167,231.5 558.5,231.5C 558.5,234.167 558.5,236.833 558.5,239.5C 557.5,239.5 556.5,239.5 555.5,239.5C 555.813,242.247 555.48,244.914 554.5,247.5C 553.522,247.023 552.689,246.357 552,245.5C 551.567,247.664 552.067,249.664 553.5,251.5C 551.924,255.055 549.257,256.222 545.5,255C 544.824,251.351 544.157,247.351 543.5,243C 543.555,240.443 543.888,237.943 544.5,235.5C 543.527,231.855 541.194,229.855 537.5,229.5C 537.543,233.893 537.043,234.226 536,230.5C 535.623,231.942 534.79,232.942 533.5,233.5C 533.5,232.5 533.5,231.5 533.5,230.5C 528.195,231.194 522.862,231.528 517.5,231.5C 518.82,236.907 516.82,239.574 511.5,239.5C 511.5,237.5 511.5,235.5 511.5,233.5C 512.978,233.762 514.311,233.429 515.5,232.5C 510.232,230.929 507.732,232.929 508,238.5C 509.487,239.155 510.653,240.155 511.5,241.5C 516.078,241.625 520.745,241.792 525.5,242C 525.957,241.586 526.291,241.086 526.5,240.5C 524.604,239.534 522.604,239.201 520.5,239.5C 520.5,237.5 520.5,235.5 520.5,233.5C 523.167,233.5 525.833,233.5 528.5,233.5C 528.5,236.5 528.5,239.5 528.5,242.5C 521.962,243.812 515.295,243.812 508.5,242.5C 507.386,243.723 507.219,245.056 508,246.5C 509,246.833 510,247.167 511,247.5C 513.499,252.191 511.999,254.525 506.5,254.5C 506.646,252.058 505.813,251.391 504,252.5C 503.508,251.451 503.674,250.451 504.5,249.5C 503.975,248.808 503.308,248.308 502.5,248C 503.956,247.577 504.456,246.744 504,245.5C 503.667,245.833 503.333,246.167 503,246.5C 500.894,244.709 498.394,244.042 495.5,244.5C 495.852,247.073 495.352,249.406 494,251.5C 492.164,249.396 489.998,249.062 487.5,250.5C 488.698,250.94 489.865,251.273 491,251.5C 491.684,252.784 491.517,253.951 490.5,255C 487.854,255.497 485.187,255.664 482.5,255.5C 482.351,254.448 482.517,253.448 483,252.5C 483.333,252.833 483.667,253.167 484,253.5C 488.166,249.923 488.499,245.923 485,241.5C 484.25,240.874 483.416,240.374 482.5,240C 482.909,237.796 483.242,235.63 483.5,233.5C 480.936,231.016 480.936,228.516 483.5,226C 481.998,222.914 480.331,222.748 478.5,225.5C 478.806,222.615 478.473,219.948 477.5,217.5C 477.5,217.167 477.5,216.833 477.5,216.5C 478.947,215.378 479.947,213.878 480.5,212C 480.909,208.591 480.909,205.091 480.5,201.5C 481.074,199.941 481.74,198.441 482.5,197C 481.715,195.457 481.715,193.79 482.5,192C 479.821,188.593 478.988,184.76 480,180.5C 480.718,179.549 481.551,179.383 482.5,180C 483.833,180.667 483.833,181.333 482.5,182C 483.865,183.682 485.365,183.849 487,182.5C 488.156,183.502 488.656,184.502 488.5,185.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#487689\",d:\"M 476.5,165.5 C 478.167,165.5 479.833,165.5 481.5,165.5C 501.996,166.332 522.663,166.832 543.5,167C 546.352,167.269 549.018,168.103 551.5,169.5C 552.885,173.052 555.385,175.386 559,176.5C 559.303,180.529 559.803,184.529 560.5,188.5C 560.372,212.1 559.706,235.767 558.5,259.5C 555.152,265.133 550.152,268.3 543.5,269C 522.168,269.167 500.835,269 479.5,268.5C 478.551,254.203 478.218,239.869 478.5,225.5C 480.331,222.748 481.998,222.914 483.5,226C 480.936,228.516 480.936,231.016 483.5,233.5C 483.242,235.63 482.909,237.796 482.5,240C 483.416,240.374 484.25,240.874 485,241.5C 488.499,245.923 488.166,249.923 484,253.5C 483.667,253.167 483.333,252.833 483,252.5C 482.517,253.448 482.351,254.448 482.5,255.5C 485.187,255.664 487.854,255.497 490.5,255C 491.517,253.951 491.684,252.784 491,251.5C 489.865,251.273 488.698,250.94 487.5,250.5C 489.998,249.062 492.164,249.396 494,251.5C 495.352,249.406 495.852,247.073 495.5,244.5C 498.394,244.042 500.894,244.709 503,246.5C 503.333,246.167 503.667,245.833 504,245.5C 504.456,246.744 503.956,247.577 502.5,248C 503.308,248.308 503.975,248.808 504.5,249.5C 503.674,250.451 503.508,251.451 504,252.5C 505.813,251.391 506.646,252.058 506.5,254.5C 511.999,254.525 513.499,252.191 511,247.5C 510,247.167 509,246.833 508,246.5C 507.219,245.056 507.386,243.723 508.5,242.5C 515.295,243.812 521.962,243.812 528.5,242.5C 529.5,242.5 530.5,242.5 531.5,242.5C 531.091,239.145 531.758,236.145 533.5,233.5C 534.79,232.942 535.623,231.942 536,230.5C 537.043,234.226 537.543,233.893 537.5,229.5C 541.194,229.855 543.527,231.855 544.5,235.5C 543.888,237.943 543.555,240.443 543.5,243C 544.157,247.351 544.824,251.351 545.5,255C 549.257,256.222 551.924,255.055 553.5,251.5C 552.067,249.664 551.567,247.664 552,245.5C 552.689,246.357 553.522,247.023 554.5,247.5C 555.48,244.914 555.813,242.247 555.5,239.5C 556.5,239.5 557.5,239.5 558.5,239.5C 558.5,236.833 558.5,234.167 558.5,231.5C 557.167,231.5 555.833,231.5 554.5,231.5C 554.5,228.833 554.5,226.167 554.5,223.5C 552.876,223.64 551.71,222.973 551,221.5C 550.417,223.002 549.584,224.335 548.5,225.5C 547.158,223.995 545.492,223.328 543.5,223.5C 543.897,218.041 543.397,212.708 542,207.5C 541.667,207.167 541.333,206.833 541,206.5C 536.912,208.979 532.746,208.979 528.5,206.5C 527.21,200.724 525.71,200.391 524,205.5C 523.395,203.519 522.395,203.185 521,204.5C 520.641,201.456 519.974,201.122 519,203.5C 517.757,202.664 516.59,202.997 515.5,204.5C 516.59,205.609 516.59,206.609 515.5,207.5C 514.808,206.975 514.308,206.308 514,205.5C 513.25,206.126 512.416,206.626 511.5,207C 505.252,207.188 499.085,207.688 493,208.5C 492.1,207.23 490.934,206.23 489.5,205.5C 491.251,202.794 493.251,200.294 495.5,198C 493.616,197.784 491.949,197.117 490.5,196C 493.482,195.502 496.482,195.335 499.5,195.5C 502.167,195.5 504.833,195.5 507.5,195.5C 508.167,190.167 508.833,190.167 509.5,195.5C 510.833,195.5 512.167,195.5 513.5,195.5C 514.391,189.588 512.058,185.921 506.5,184.5C 506.181,188.3 505.181,188.466 503.5,185C 498.416,184.222 493.416,184.389 488.5,185.5C 488.656,184.502 488.156,183.502 487,182.5C 485.365,183.849 483.865,183.682 482.5,182C 483.833,181.333 483.833,180.667 482.5,180C 481.551,179.383 480.718,179.549 480,180.5C 478.988,184.76 479.821,188.593 482.5,192C 481.715,193.79 481.715,195.457 482.5,197C 481.74,198.441 481.074,199.941 480.5,201.5C 480.909,205.091 480.909,208.591 480.5,212C 479.947,213.878 478.947,215.378 477.5,216.5C 476.375,214.871 475.041,213.371 473.5,212C 474.794,209.913 475.961,207.746 477,205.5C 477.827,192.66 477.66,179.993 476.5,167.5C 476.5,166.833 476.5,166.167 476.5,165.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1e0e7\",d:\"M 499.5,195.5 C 496.695,194.681 493.695,194.181 490.5,194C 488.686,191.519 488.02,188.685 488.5,185.5C 493.416,184.389 498.416,184.222 503.5,185C 505.181,188.466 506.181,188.3 506.5,184.5C 512.058,185.921 514.391,189.588 513.5,195.5C 512.167,195.5 510.833,195.5 509.5,195.5C 508.833,190.167 508.167,190.167 507.5,195.5C 504.833,195.5 502.167,195.5 499.5,195.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#528090\",d:\"M 491.5,186.5 C 493.5,186.5 495.5,186.5 497.5,186.5C 497.5,188.5 497.5,190.5 497.5,192.5C 495.5,192.5 493.5,192.5 491.5,192.5C 491.5,190.5 491.5,188.5 491.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c6e6ee\",d:\"M 514.5,184.5 C 519.167,184.5 523.833,184.5 528.5,184.5C 528.5,185.5 528.5,186.5 528.5,187.5C 527.5,187.5 526.5,187.5 525.5,187.5C 525.5,189.833 525.5,192.167 525.5,194.5C 524.5,194.5 523.5,194.5 522.5,194.5C 522.5,192.167 522.5,189.833 522.5,187.5C 521.5,187.5 520.5,187.5 519.5,187.5C 519.5,190.167 519.5,192.833 519.5,195.5C 518.178,195.67 517.011,195.337 516,194.5C 515.174,191.207 514.674,187.874 514.5,184.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#273a48\",d:\"M 623.5,196.5 C 624.643,199.976 624.81,203.642 624,207.5C 622.826,209.671 620.993,210.671 618.5,210.5C 619.172,209.733 620.005,209.066 621,208.5C 621.944,204.391 622.778,200.391 623.5,196.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dd9915\",d:\"M 618.5,203.5 C 618.5,204.5 618.5,205.5 618.5,206.5C 606.204,207.44 593.871,207.773 581.5,207.5C 581.5,207.167 581.5,206.833 581.5,206.5C 592.09,205.69 602.757,205.19 613.5,205C 615.154,204.392 616.821,203.892 618.5,203.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30445c\",d:\"M 560.5,177.5 C 561.222,177.918 561.722,178.584 562,179.5C 562.83,204.003 562.663,228.337 561.5,252.5C 561.795,227.474 561.462,202.474 560.5,177.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9c7426\",d:\"M 618.5,172.5 C 619.458,172.953 620.292,173.619 621,174.5C 621.667,184.167 621.667,193.833 621,203.5C 620.293,205.081 619.46,206.581 618.5,208C 606.171,208.5 593.838,208.667 581.5,208.5C 581.5,208.167 581.5,207.833 581.5,207.5C 593.871,207.773 606.204,207.44 618.5,206.5C 618.5,205.5 618.5,204.5 618.5,203.5C 619.833,193.833 619.833,184.167 618.5,174.5C 618.5,173.833 618.5,173.167 618.5,172.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#33acf5\",d:\"M 398.5,182.5 C 399.167,183.5 399.833,184.5 400.5,185.5C 402.252,199.055 396.585,207.388 383.5,210.5C 338.143,210.813 292.81,210.48 247.5,209.5C 246.833,209.5 246.167,209.5 245.5,209.5C 245.167,208.833 244.833,208.167 244.5,207.5C 245.583,207.539 246.583,207.873 247.5,208.5C 293.792,207.672 340.126,207.172 386.5,207C 388.881,206.777 390.547,205.61 391.5,203.5C 397.903,198.006 400.237,191.006 398.5,182.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#307ebf\",d:\"M 247.5,209.5 C 292.81,210.48 338.143,210.813 383.5,210.5C 357.005,211.498 330.339,211.831 303.5,211.5C 285.497,211.667 267.497,211.5 249.5,211C 248.584,210.722 247.918,210.222 247.5,209.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#22202f\",d:\"M 476.5,167.5 C 477.66,179.993 477.827,192.66 477,205.5C 475.961,207.746 474.794,209.913 473.5,212C 475.041,213.371 476.375,214.871 477.5,216.5C 477.5,216.833 477.5,217.167 477.5,217.5C 477.83,233.675 477.496,249.675 476.5,265.5C 476.667,249.163 476.5,232.83 476,216.5C 475.617,215.944 475.117,215.611 474.5,215.5C 473.833,215.167 473.167,214.833 472.5,214.5C 472.5,213.833 472.167,213.5 471.5,213.5C 471.158,212.662 470.492,212.328 469.5,212.5C 456.265,211.179 442.931,211.179 429.5,212.5C 429.719,211.325 429.386,210.325 428.5,209.5C 426.657,210.939 424.99,210.772 423.5,209C 426.037,206.799 426.037,204.632 423.5,202.5C 423.334,193.494 423.5,184.494 424,175.5C 424.172,182.346 424.672,189.013 425.5,195.5C 425.111,198.553 425.777,201.22 427.5,203.5C 427.833,204.5 428.5,205.167 429.5,205.5C 429.427,207.027 430.094,208.027 431.5,208.5C 444.66,209.66 457.994,209.827 471.5,209C 472.942,208.623 473.942,207.79 474.5,206.5C 475.495,194.345 475.829,182.011 475.5,169.5C 475.328,168.508 475.662,167.842 476.5,167.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#632c31\",d:\"M 474.5,206.5 C 473.942,207.79 472.942,208.623 471.5,209C 457.994,209.827 444.66,209.66 431.5,208.5C 443.012,208.828 454.346,208.495 465.5,207.5C 466.833,207.5 468.167,207.5 469.5,207.5C 471.216,207.371 472.883,207.038 474.5,206.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f65550\",d:\"M 436.5,201.5 C 436.833,201.5 437.167,201.5 437.5,201.5C 447.319,202.494 457.319,202.827 467.5,202.5C 467.5,203.5 467.5,204.5 467.5,205.5C 463.96,205.753 460.627,206.419 457.5,207.5C 450.5,207.5 443.5,207.5 436.5,207.5C 435.22,206.069 433.553,205.402 431.5,205.5C 431.5,204.167 431.5,202.833 431.5,201.5C 433.167,201.5 434.833,201.5 436.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fddcd3\",d:\"M 449.5,197.5 C 450.833,197.5 452.167,197.5 453.5,197.5C 457.514,197.334 461.514,197.501 465.5,198C 466.337,199.011 466.67,200.178 466.5,201.5C 456.833,201.5 447.167,201.5 437.5,201.5C 437.414,200.504 437.748,199.671 438.5,199C 442.356,198.823 446.023,198.323 449.5,197.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f19c9d\",d:\"M 449.5,197.5 C 446.023,198.323 442.356,198.823 438.5,199C 437.748,199.671 437.414,200.504 437.5,201.5C 437.167,201.5 436.833,201.5 436.5,201.5C 436.33,200.178 436.663,199.011 437.5,198C 441.486,197.501 445.486,197.334 449.5,197.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7baab\",d:\"M 429.5,175.5 C 429.5,185.5 429.5,195.5 429.5,205.5C 428.5,205.167 427.833,204.5 427.5,203.5C 428.167,194.167 428.833,184.833 429.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9807a\",d:\"M 453.5,197.5 C 452.167,197.5 450.833,197.5 449.5,197.5C 448.159,195.88 446.326,194.88 444,194.5C 443.503,192.19 443.337,189.857 443.5,187.5C 452.504,185.171 455.838,188.504 453.5,197.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffe6dd\",d:\"M 447.5,188.5 C 452.042,188.286 453.709,190.286 452.5,194.5C 450.253,193.626 447.92,193.292 445.5,193.5C 445.392,191.486 446.058,189.82 447.5,188.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a243c\",d:\"M 618.5,210.5 C 616.735,211.461 614.735,211.795 612.5,211.5C 602.115,211.214 591.782,211.548 581.5,212.5C 581.5,212.167 581.5,211.833 581.5,211.5C 593.753,210.521 606.087,210.187 618.5,210.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0c2758\",d:\"M 400.5,185.5 C 401.926,187.679 402.592,190.179 402.5,193C 402.152,197.192 400.818,201.025 398.5,204.5C 395.824,209.168 391.824,211.834 386.5,212.5C 357.499,213.056 329.833,213.723 303.5,214.5C 303.5,213.5 303.5,212.5 303.5,211.5C 330.339,211.831 357.005,211.498 383.5,210.5C 396.585,207.388 402.252,199.055 400.5,185.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#959997\",d:\"M 469.5,212.5 C 456.117,212.203 442.784,212.536 429.5,213.5C 429.5,213.167 429.5,212.833 429.5,212.5C 442.931,211.179 456.265,211.179 469.5,212.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdef9f\",d:\"M 433.5,214.5 C 445.989,213.505 458.656,213.171 471.5,213.5C 472.167,213.5 472.5,213.833 472.5,214.5C 472.5,215.167 472.167,215.5 471.5,215.5C 459.011,214.505 446.344,214.171 433.5,214.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#23274b\",d:\"M 245.5,209.5 C 246.167,209.5 246.833,209.5 247.5,209.5C 247.918,210.222 248.584,210.722 249.5,211C 267.497,211.5 285.497,211.667 303.5,211.5C 303.5,212.5 303.5,213.5 303.5,214.5C 329.833,213.723 357.499,213.056 386.5,212.5C 384.958,213.141 383.624,214.141 382.5,215.5C 377.349,216.167 372.349,216.834 367.5,217.5C 330.938,216.887 294.272,216.72 257.5,217C 255.774,215.47 253.774,214.47 251.5,214C 247.514,213.501 243.514,213.334 239.5,213.5C 239.5,212.5 239.5,211.5 239.5,210.5C 241.5,210.167 243.5,209.833 245.5,209.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#465c8e\",d:\"M 612.5,211.5 C 612.286,213.144 612.62,214.644 613.5,216C 611.292,216.191 609.292,216.691 607.5,217.5C 607.5,217.833 607.5,218.167 607.5,218.5C 599.648,218.175 591.982,218.508 584.5,219.5C 583.5,219.5 582.5,219.5 581.5,219.5C 581.5,217.167 581.5,214.833 581.5,212.5C 591.782,211.548 602.115,211.214 612.5,211.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d4c68\",d:\"M 607.5,218.5 C 607.5,218.167 607.5,217.833 607.5,217.5C 623.009,217.17 638.342,217.504 653.5,218.5C 642.813,218.168 632.146,218.501 621.5,219.5C 621.957,220.298 622.624,220.631 623.5,220.5C 623.5,221.167 623.5,221.833 623.5,222.5C 623.5,222.833 623.5,223.167 623.5,223.5C 623.167,223.5 622.833,223.5 622.5,223.5C 621.774,230.288 621.107,238.288 620.5,247.5C 621.136,238.435 620.47,229.769 618.5,221.5C 618.5,221.167 618.5,220.833 618.5,220.5C 620.379,220.607 620.712,220.107 619.5,219C 615.514,218.501 611.514,218.334 607.5,218.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#051a34\",d:\"M 584.5,219.5 C 591.982,218.508 599.648,218.175 607.5,218.5C 611.514,218.334 615.514,218.501 619.5,219C 620.712,220.107 620.379,220.607 618.5,220.5C 617.833,220.5 617.167,220.5 616.5,220.5C 606.013,219.506 595.346,219.172 584.5,219.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39586c\",d:\"M 581.5,219.5 C 582.5,219.5 583.5,219.5 584.5,219.5C 595.346,219.172 606.013,219.506 616.5,220.5C 606.167,220.5 595.833,220.5 585.5,220.5C 584.167,220.833 582.833,221.167 581.5,221.5C 581.5,220.833 581.5,220.167 581.5,219.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7fcfd\",d:\"M 585.5,220.5 C 595.833,220.5 606.167,220.5 616.5,220.5C 617.167,220.5 617.833,220.5 618.5,220.5C 618.5,220.833 618.5,221.167 618.5,221.5C 618.5,221.833 618.5,222.167 618.5,222.5C 607.162,222.667 595.828,222.5 584.5,222C 585.056,221.617 585.389,221.117 585.5,220.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbd9dc\",d:\"M 623.5,220.5 C 634.346,220.172 645.013,220.506 655.5,221.5C 645.013,222.494 634.346,222.828 623.5,222.5C 623.5,221.833 623.5,221.167 623.5,220.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#122a46\",d:\"M 20.5,149.5 C 21.1667,149.5 21.8333,149.5 22.5,149.5C 21.8344,349.931 21.1678,550.264 20.5,750.5C 20.5,550.167 20.5,349.833 20.5,149.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7a5a5\",d:\"M 655.5,221.5 C 656.5,222.167 657.5,222.833 658.5,223.5C 658.5,223.833 658.5,224.167 658.5,224.5C 657.833,224.5 657.167,224.5 656.5,224.5C 646.347,223.506 636.014,223.172 625.5,223.5C 625.795,225.735 625.461,227.735 624.5,229.5C 624.795,227.265 624.461,225.265 623.5,223.5C 623.5,223.167 623.5,222.833 623.5,222.5C 634.346,222.828 645.013,222.494 655.5,221.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ed3f3\",d:\"M 585.5,220.5 C 585.389,221.117 585.056,221.617 584.5,222C 595.828,222.5 607.162,222.667 618.5,222.5C 618.148,225.428 617.482,228.262 616.5,231C 617,231.5 617.5,232 618,232.5C 618.498,235.482 618.665,238.482 618.5,241.5C 614.389,241.478 610.389,240.811 606.5,239.5C 605.554,241.075 605.554,242.742 606.5,244.5C 606.253,245.713 605.586,246.38 604.5,246.5C 604.922,242.278 604.255,238.278 602.5,234.5C 601.5,235.167 600.5,235.833 599.5,236.5C 598.511,240.107 598.177,243.774 598.5,247.5C 592.833,247.5 587.167,247.5 581.5,247.5C 581.5,238.833 581.5,230.167 581.5,221.5C 582.833,221.167 584.167,220.833 585.5,220.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8d8db\",d:\"M 579.5,172.5 C 579.5,173.167 579.5,173.833 579.5,174.5C 578.502,201.662 578.169,228.995 578.5,256.5C 577.502,230.339 577.169,204.005 577.5,177.5C 577.5,176.167 577.5,174.833 577.5,173.5C 578.167,173.167 578.833,172.833 579.5,172.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eafdfb\",d:\"M 579.5,174.5 C 579.172,185.346 579.506,196.013 580.5,206.5C 580.5,206.833 580.5,207.167 580.5,207.5C 580.83,225.341 580.497,243.008 579.5,260.5C 579.167,259.167 578.833,257.833 578.5,256.5C 578.169,228.995 578.502,201.662 579.5,174.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1fcfd\",d:\"M 590.5,228.5 C 597.265,228.464 599.265,231.631 596.5,238C 594.19,238.497 591.857,238.663 589.5,238.5C 589.253,235.061 589.586,231.728 590.5,228.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdb909\",d:\"M 335.5,235.5 C 335.628,237.655 335.128,239.655 334,241.5C 332.16,240.167 331.66,240.334 332.5,242C 330.866,242.494 329.199,242.66 327.5,242.5C 327.719,241.325 327.386,240.325 326.5,239.5C 325.393,240.022 324.226,240.355 323,240.5C 320.943,239.203 318.776,238.703 316.5,239C 317.505,240.507 318.838,241.673 320.5,242.5C 319.873,243.417 319.539,244.417 319.5,245.5C 317.901,245.232 316.568,245.566 315.5,246.5C 314.18,247.942 312.514,248.608 310.5,248.5C 310.737,247.209 310.404,246.209 309.5,245.5C 306.875,244.559 306.875,243.393 309.5,242C 310.793,241.51 312.127,241.343 313.5,241.5C 313.5,240.5 313.5,239.5 313.5,238.5C 310.833,238.5 308.167,238.5 305.5,238.5C 305.762,239.978 305.429,241.311 304.5,242.5C 302.146,241.94 299.813,241.273 297.5,240.5C 298.376,239.749 299.376,239.249 300.5,239C 298.744,238.798 297.078,238.298 295.5,237.5C 296.025,236.808 296.692,236.308 297.5,236C 310.162,235.5 322.829,235.333 335.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc303\",d:\"M 335.5,235.5 C 354.167,235.5 372.833,235.5 391.5,235.5C 392.833,235.833 394.167,236.167 395.5,236.5C 396.5,237.167 397.5,237.833 398.5,238.5C 398.5,238.833 398.5,239.167 398.5,239.5C 400.184,244.676 400.85,250.009 400.5,255.5C 399.833,255.5 399.5,255.833 399.5,256.5C 397.241,257.344 396.241,259.011 396.5,261.5C 393.213,263.143 389.88,264.81 386.5,266.5C 353.496,266.485 320.496,266.818 287.5,267.5C 274.989,267.829 262.655,267.495 250.5,266.5C 281.843,266.639 313.177,266.139 344.5,265C 340.167,264.667 335.833,264.333 331.5,264C 335.541,263.827 339.541,263.327 343.5,262.5C 340.827,261.568 338.161,261.402 335.5,262C 337.725,261.124 339.725,259.957 341.5,258.5C 339.657,258.245 337.657,258.078 335.5,258C 337.219,255.335 338.719,252.502 340,249.5C 340.334,247.153 340.167,244.819 339.5,242.5C 335.668,242.777 331.835,243.11 328,243.5C 325.705,243.547 323.871,244.213 322.5,245.5C 321.5,245.5 320.5,245.5 319.5,245.5C 319.539,244.417 319.873,243.417 320.5,242.5C 318.838,241.673 317.505,240.507 316.5,239C 318.776,238.703 320.943,239.203 323,240.5C 324.226,240.355 325.393,240.022 326.5,239.5C 327.386,240.325 327.719,241.325 327.5,242.5C 329.199,242.66 330.866,242.494 332.5,242C 331.66,240.334 332.16,240.167 334,241.5C 335.128,239.655 335.628,237.655 335.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8fae2\",d:\"M 469.5,212.5 C 470.492,212.328 471.158,212.662 471.5,213.5C 458.656,213.171 445.989,213.505 433.5,214.5C 430.633,214.369 428.967,215.703 428.5,218.5C 427.504,232.657 427.171,246.99 427.5,261.5C 426.504,247.01 426.171,232.343 426.5,217.5C 426.5,217.167 426.5,216.833 426.5,216.5C 427.167,215.167 428.167,214.167 429.5,213.5C 442.784,212.536 456.117,212.203 469.5,212.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a3743\",d:\"M 577.5,177.5 C 577.169,204.005 577.502,230.339 578.5,256.5C 578.833,257.833 579.167,259.167 579.5,260.5C 579.833,261.167 580.167,261.833 580.5,262.5C 579.833,262.5 579.5,262.833 579.5,263.5C 578.279,262.972 577.113,262.305 576,261.5C 575.57,258.808 575.737,256.141 576.5,253.5C 576.169,227.995 576.502,202.661 577.5,177.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8ec1d2\",d:\"M 580.5,207.5 C 580.833,207.5 581.167,207.5 581.5,207.5C 581.5,207.833 581.5,208.167 581.5,208.5C 581.5,209.5 581.5,210.5 581.5,211.5C 581.5,211.833 581.5,212.167 581.5,212.5C 581.5,214.833 581.5,217.167 581.5,219.5C 581.5,220.167 581.5,220.833 581.5,221.5C 581.5,230.167 581.5,238.833 581.5,247.5C 581.5,248.5 581.5,249.5 581.5,250.5C 581.5,253.5 581.5,256.5 581.5,259.5C 581.737,260.791 581.404,261.791 580.5,262.5C 580.167,261.833 579.833,261.167 579.5,260.5C 580.497,243.008 580.83,225.341 580.5,207.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8fcfd\",d:\"M 606.5,228.5 C 608.792,228.244 610.959,228.577 613,229.5C 613.777,232.429 613.61,235.263 612.5,238C 610.231,238.758 608.064,238.591 606,237.5C 605.264,234.408 605.431,231.408 606.5,228.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9c60b\",d:\"M 391.5,235.5 C 372.833,235.5 354.167,235.5 335.5,235.5C 322.829,235.333 310.162,235.5 297.5,236C 296.692,236.308 296.025,236.808 295.5,237.5C 297.078,238.298 298.744,238.798 300.5,239C 299.376,239.249 298.376,239.749 297.5,240.5C 299.813,241.273 302.146,241.94 304.5,242.5C 305.429,241.311 305.762,239.978 305.5,238.5C 308.167,238.5 310.833,238.5 313.5,238.5C 313.5,239.5 313.5,240.5 313.5,241.5C 312.127,241.343 310.793,241.51 309.5,242C 306.875,243.393 306.875,244.559 309.5,245.5C 308.167,245.5 306.833,245.5 305.5,245.5C 304.5,245.5 303.5,245.5 302.5,245.5C 300.396,245.201 298.396,245.534 296.5,246.5C 297.642,249.399 298.308,252.399 298.5,255.5C 299.5,255.5 300.5,255.5 301.5,255.5C 302.609,255.443 303.609,255.11 304.5,254.5C 307.287,255.477 310.287,255.81 313.5,255.5C 315.5,255.5 317.5,255.5 319.5,255.5C 319.795,253.265 319.461,251.265 318.5,249.5C 318.5,249.167 318.5,248.833 318.5,248.5C 318.179,246.952 317.179,246.285 315.5,246.5C 316.568,245.566 317.901,245.232 319.5,245.5C 320.5,245.5 321.5,245.5 322.5,245.5C 323.871,244.213 325.705,243.547 328,243.5C 331.835,243.11 335.668,242.777 339.5,242.5C 340.167,244.819 340.334,247.153 340,249.5C 338.719,252.502 337.219,255.335 335.5,258C 337.657,258.078 339.657,258.245 341.5,258.5C 339.725,259.957 337.725,261.124 335.5,262C 338.161,261.402 340.827,261.568 343.5,262.5C 339.541,263.327 335.541,263.827 331.5,264C 335.833,264.333 340.167,264.667 344.5,265C 313.177,266.139 281.843,266.639 250.5,266.5C 246.84,265.18 243.174,263.847 239.5,262.5C 238.011,260.355 237.011,258.022 236.5,255.5C 236.511,250.83 237.511,246.497 239.5,242.5C 243.21,238.964 247.544,236.464 252.5,235C 299.002,234.168 345.335,234.335 391.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#333940\",d:\"M 383.5,230.5 C 338.499,230.333 293.499,230.5 248.5,231C 247.058,231.377 246.058,232.21 245.5,233.5C 236.813,238.218 233.479,245.551 235.5,255.5C 235.5,255.833 235.5,256.167 235.5,256.5C 234.833,256.167 234.167,255.833 233.5,255.5C 233.262,253.596 232.262,252.262 230.5,251.5C 229.495,247.479 229.495,243.479 230.5,239.5C 232.134,239.968 233.3,240.968 234,242.5C 234.692,241.975 235.192,241.308 235.5,240.5C 233.721,238.807 233.221,236.807 234,234.5C 238.41,232.998 242.91,231.498 247.5,230C 293.002,229.169 338.335,229.335 383.5,230.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2ebad\",d:\"M 389.5,232.5 C 390.167,232.5 390.833,232.5 391.5,232.5C 391.5,232.833 391.5,233.167 391.5,233.5C 343.832,233.333 296.166,233.5 248.5,234C 246.167,235.667 243.833,237.333 241.5,239C 240.177,239.816 239.511,240.983 239.5,242.5C 237.511,246.497 236.511,250.83 236.5,255.5C 236.167,255.5 235.833,255.5 235.5,255.5C 233.479,245.551 236.813,238.218 245.5,233.5C 293.458,232.51 341.458,232.176 389.5,232.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37c6f8\",d:\"M 618.5,221.5 C 620.47,229.769 621.136,238.435 620.5,247.5C 615.167,247.5 609.833,247.5 604.5,247.5C 604.5,247.167 604.5,246.833 604.5,246.5C 605.586,246.38 606.253,245.713 606.5,244.5C 605.554,242.742 605.554,241.075 606.5,239.5C 610.389,240.811 614.389,241.478 618.5,241.5C 618.665,238.482 618.498,235.482 618,232.5C 617.5,232 617,231.5 616.5,231C 617.482,228.262 618.148,225.428 618.5,222.5C 618.5,222.167 618.5,221.833 618.5,221.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3fbfe\",d:\"M 604.5,246.5 C 604.5,246.833 604.5,247.167 604.5,247.5C 602.5,247.5 600.5,247.5 598.5,247.5C 598.177,243.774 598.511,240.107 599.5,236.5C 600.5,235.833 601.5,235.167 602.5,234.5C 604.255,238.278 604.922,242.278 604.5,246.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff4c5\",d:\"M 326.5,245.5 C 327.5,245.5 328.5,245.5 329.5,245.5C 330.036,248.698 329.369,251.365 327.5,253.5C 327.599,250.763 327.265,248.096 326.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6dd6f\",d:\"M 322.5,245.5 C 323.833,245.5 325.167,245.5 326.5,245.5C 327.265,248.096 327.599,250.763 327.5,253.5C 326.05,252.342 325.05,252.842 324.5,255C 323.552,255.483 322.552,255.649 321.5,255.5C 321.616,252.14 321.949,248.807 322.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef7d8\",d:\"M 257.5,247.5 C 260.793,247.315 263.46,248.482 265.5,251C 262.798,254.285 259.465,255.118 255.5,253.5C 255.069,252.707 254.735,251.873 254.5,251C 255.544,249.826 256.544,248.659 257.5,247.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0c2755\",d:\"M 622.5,223.5 C 622.804,232.584 622.471,241.584 621.5,250.5C 608.527,251.018 595.527,251.018 582.5,250.5C 582.167,250.5 581.833,250.5 581.5,250.5C 581.5,249.5 581.5,248.5 581.5,247.5C 587.167,247.5 592.833,247.5 598.5,247.5C 600.5,247.5 602.5,247.5 604.5,247.5C 609.833,247.5 615.167,247.5 620.5,247.5C 621.107,238.288 621.774,230.288 622.5,223.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b1c29\",d:\"M 653.5,218.5 C 656.343,219.172 658.843,220.505 661,222.5C 661.251,230.024 661.751,237.524 662.5,245C 662.057,246.825 661.723,248.658 661.5,250.5C 648.167,250.5 634.833,250.5 621.5,250.5C 622.471,241.584 622.804,232.584 622.5,223.5C 622.833,223.5 623.167,223.5 623.5,223.5C 623.5,231.833 623.5,240.167 623.5,248.5C 635.345,248.828 647.012,248.495 658.5,247.5C 659.833,239.5 659.833,231.5 658.5,223.5C 657.5,222.833 656.5,222.167 655.5,221.5C 645.013,220.506 634.346,220.172 623.5,220.5C 622.624,220.631 621.957,220.298 621.5,219.5C 632.146,218.501 642.813,218.168 653.5,218.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9f5758\",d:\"M 623.5,223.5 C 624.461,225.265 624.795,227.265 624.5,229.5C 624.5,235.167 624.5,240.833 624.5,246.5C 629.305,247.487 634.305,247.821 639.5,247.5C 641.167,247.5 642.833,247.5 644.5,247.5C 644.833,247.5 645.167,247.5 645.5,247.5C 649.833,247.5 654.167,247.5 658.5,247.5C 647.012,248.495 635.345,248.828 623.5,248.5C 623.5,240.167 623.5,231.833 623.5,223.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d46472\",d:\"M 658.5,223.5 C 659.833,231.5 659.833,239.5 658.5,247.5C 654.167,247.5 649.833,247.5 645.5,247.5C 645.5,243.5 645.5,239.5 645.5,235.5C 646.5,235.5 647.5,235.5 648.5,235.5C 646.325,239.028 645.992,242.695 647.5,246.5C 650.518,246.665 653.518,246.498 656.5,246C 657.252,245.329 657.586,244.496 657.5,243.5C 658.49,237.355 658.823,231.022 658.5,224.5C 658.5,224.167 658.5,223.833 658.5,223.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fd5968\",d:\"M 657.5,243.5 C 657.586,244.496 657.252,245.329 656.5,246C 653.518,246.498 650.518,246.665 647.5,246.5C 647.125,243.603 647.625,240.937 649,238.5C 650.314,239.313 651.481,240.313 652.5,241.5C 652.833,241.167 653.167,240.833 653.5,240.5C 649.236,235.322 649.736,230.655 655,226.5C 655.945,226.905 656.612,227.572 657,228.5C 657.499,233.489 657.666,238.489 657.5,243.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb6853\",d:\"M 625.5,246.5 C 626.903,241.609 627.57,236.609 627.5,231.5C 628.117,231.389 628.617,231.056 629,230.5C 631.406,232.983 633.573,235.65 635.5,238.5C 636.325,239.386 637.325,239.719 638.5,239.5C 638.5,241.833 638.5,244.167 638.5,246.5C 634.167,246.5 629.833,246.5 625.5,246.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcedea\",d:\"M 638.5,231.5 C 639.5,231.5 640.5,231.5 641.5,231.5C 644.069,236.457 645.069,241.79 644.5,247.5C 642.833,247.5 641.167,247.5 639.5,247.5C 639.5,244.167 639.5,240.833 639.5,237.5C 635.929,237.592 634.762,235.926 636,232.5C 636.671,231.748 637.504,231.414 638.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f88377\",d:\"M 656.5,224.5 C 646.833,224.5 637.167,224.5 627.5,224.5C 627.5,226.833 627.5,229.167 627.5,231.5C 627.57,236.609 626.903,241.609 625.5,246.5C 625.167,246.5 624.833,246.5 624.5,246.5C 624.5,240.833 624.5,235.167 624.5,229.5C 625.461,227.735 625.795,225.735 625.5,223.5C 636.014,223.172 646.347,223.506 656.5,224.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5c7ba\",d:\"M 648.5,235.5 C 647.5,235.5 646.5,235.5 645.5,235.5C 645.5,239.5 645.5,243.5 645.5,247.5C 645.167,247.5 644.833,247.5 644.5,247.5C 645.069,241.79 644.069,236.457 641.5,231.5C 640.5,231.5 639.5,231.5 638.5,231.5C 641.53,227.637 644.696,227.637 648,231.5C 648.49,232.793 648.657,234.127 648.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f66667\",d:\"M 656.5,224.5 C 657.167,224.5 657.833,224.5 658.5,224.5C 658.823,231.022 658.49,237.355 657.5,243.5C 657.666,238.489 657.499,233.489 657,228.5C 656.612,227.572 655.945,226.905 655,226.5C 649.736,230.655 649.236,235.322 653.5,240.5C 653.167,240.833 652.833,241.167 652.5,241.5C 651.481,240.313 650.314,239.313 649,238.5C 647.625,240.937 647.125,243.603 647.5,246.5C 645.992,242.695 646.325,239.028 648.5,235.5C 648.657,234.127 648.49,232.793 648,231.5C 644.696,227.637 641.53,227.637 638.5,231.5C 637.504,231.414 636.671,231.748 636,232.5C 634.762,235.926 635.929,237.592 639.5,237.5C 639.5,240.833 639.5,244.167 639.5,247.5C 634.305,247.821 629.305,247.487 624.5,246.5C 624.833,246.5 625.167,246.5 625.5,246.5C 629.833,246.5 634.167,246.5 638.5,246.5C 638.5,244.167 638.5,241.833 638.5,239.5C 637.325,239.719 636.325,239.386 635.5,238.5C 633.573,235.65 631.406,232.983 629,230.5C 628.617,231.056 628.117,231.389 627.5,231.5C 627.5,229.167 627.5,226.833 627.5,224.5C 637.167,224.5 646.833,224.5 656.5,224.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4deb0\",d:\"M 302.5,245.5 C 301.676,248.764 301.342,252.098 301.5,255.5C 300.5,255.5 299.5,255.5 298.5,255.5C 298.308,252.399 297.642,249.399 296.5,246.5C 298.396,245.534 300.396,245.201 302.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7d78e\",d:\"M 309.5,245.5 C 310.404,246.209 310.737,247.209 310.5,248.5C 312.514,248.608 314.18,247.942 315.5,246.5C 317.179,246.285 318.179,246.952 318.5,248.5C 317.85,248.196 317.183,247.863 316.5,247.5C 315.526,249.743 315.192,252.076 315.5,254.5C 316.5,254.5 317.5,254.5 318.5,254.5C 318.5,252.833 318.5,251.167 318.5,249.5C 319.461,251.265 319.795,253.265 319.5,255.5C 317.5,255.5 315.5,255.5 313.5,255.5C 313.657,254.127 313.49,252.793 313,251.5C 311.556,253.155 309.722,253.822 307.5,253.5C 307.693,250.692 308.36,248.025 309.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1d763\",d:\"M 329.5,245.5 C 330.833,245.5 332.167,245.5 333.5,245.5C 333.298,247.989 333.798,250.323 335,252.5C 335.232,251.263 335.732,250.263 336.5,249.5C 335.294,255.878 333.794,255.545 332,248.5C 331.667,250.5 331.333,252.5 331,254.5C 329.244,255.985 328.077,255.652 327.5,253.5C 329.369,251.365 330.036,248.698 329.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fceebf\",d:\"M 333.5,245.5 C 335.167,245.5 336.833,245.5 338.5,245.5C 338.473,247.199 337.806,248.533 336.5,249.5C 335.732,250.263 335.232,251.263 335,252.5C 333.798,250.323 333.298,247.989 333.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7f6ce\",d:\"M 318.5,248.5 C 318.5,248.833 318.5,249.167 318.5,249.5C 318.5,251.167 318.5,252.833 318.5,254.5C 317.5,254.5 316.5,254.5 315.5,254.5C 315.192,252.076 315.526,249.743 316.5,247.5C 317.183,247.863 317.85,248.196 318.5,248.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#72470f\",d:\"M 398.5,239.5 C 400.047,240.768 401.047,242.435 401.5,244.5C 401.815,248.371 401.482,252.038 400.5,255.5C 400.85,250.009 400.184,244.676 398.5,239.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9ac4d\",d:\"M 302.5,245.5 C 303.5,245.5 304.5,245.5 305.5,245.5C 304.701,248.43 304.368,251.43 304.5,254.5C 303.609,255.11 302.609,255.443 301.5,255.5C 301.342,252.098 301.676,248.764 302.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef2c3\",d:\"M 305.5,245.5 C 306.833,245.5 308.167,245.5 309.5,245.5C 308.36,248.025 307.693,250.692 307.5,253.5C 309.722,253.822 311.556,253.155 313,251.5C 313.49,252.793 313.657,254.127 313.5,255.5C 310.287,255.81 307.287,255.477 304.5,254.5C 304.368,251.43 304.701,248.43 305.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#487486\",d:\"M 623.5,173.5 C 625.28,174.99 625.946,176.99 625.5,179.5C 627.451,179.773 628.951,179.107 630,177.5C 630.667,179.833 630.667,182.167 630,184.5C 626.45,187.307 626.783,190.641 631,194.5C 631.651,196.235 631.485,197.902 630.5,199.5C 633.64,201.58 636.64,203.913 639.5,206.5C 636.721,209.955 633.388,212.621 629.5,214.5C 635.472,215.664 641.472,215.83 647.5,215C 651.835,215.173 654.835,213.34 656.5,209.5C 657.914,210.624 659.414,211.624 661,212.5C 661.333,211.833 661.667,211.167 662,210.5C 663.699,211.406 665.533,211.739 667.5,211.5C 667.38,213.734 667.713,215.901 668.5,218C 667.115,219.597 666.449,221.43 666.5,223.5C 667.5,223.5 668.5,223.5 669.5,223.5C 669.478,231.203 669.312,238.87 669,246.5C 671.995,249.265 675.495,250.098 679.5,249C 677.5,248.667 675.5,248.333 673.5,248C 676.365,247.817 679.031,247.317 681.5,246.5C 682.5,246.5 683.5,246.5 684.5,246.5C 685.531,247.249 686.698,247.915 688,248.5C 688.981,242.675 690.314,242.341 692,247.5C 692.667,244.833 693.333,242.167 694,239.5C 694.49,240.793 694.657,242.127 694.5,243.5C 696.527,243.662 698.527,243.495 700.5,243C 700.167,242.667 699.833,242.333 699.5,242C 700.944,241.219 702.277,241.386 703.5,242.5C 702.459,244.585 700.959,246.252 699,247.5C 698.126,250.379 698.46,253.045 700,255.5C 700.971,254.802 702.137,254.802 703.5,255.5C 704.167,255.167 704.833,254.833 705.5,254.5C 707.184,249.311 707.851,243.978 707.5,238.5C 708.552,238.351 709.552,238.517 710.5,239C 707.833,241.667 707.833,244.333 710.5,247C 708.885,250.077 707.885,253.41 707.5,257C 703.762,258.68 700.262,258.847 697,257.5C 696,258.167 695,258.833 694,259.5C 690.51,258.756 687.177,257.09 684,254.5C 683.167,254.667 682.333,254.833 681.5,255C 683.455,255.953 685.122,257.287 686.5,259C 685.5,259.667 684.5,259.667 683.5,259C 681.392,255.66 679.892,255.827 679,259.5C 678.612,258.572 677.945,257.905 677,257.5C 674.999,258.719 673.166,260.053 671.5,261.5C 671.887,262.72 672.72,263.387 674,263.5C 677.632,262.385 681.298,263.051 685,265.5C 687.872,265.088 690.872,265.088 694,265.5C 696.485,263.244 698.818,263.244 701,265.5C 702.087,263.068 702.587,263.402 702.5,266.5C 694.077,266.42 686.244,266.754 679,267.5C 678.333,264.833 677.667,264.833 677,267.5C 676.333,264.833 675.667,264.833 675,267.5C 674.667,266.833 674.333,266.167 674,265.5C 671.89,267.125 669.557,268.458 667,269.5C 665.215,267.086 663.048,265.753 660.5,265.5C 658.568,266.366 656.568,267.033 654.5,267.5C 652.097,267.825 649.931,267.492 648,266.5C 647.667,267.167 647.333,267.833 647,268.5C 640.316,267.456 632.982,267.456 625,268.5C 619.677,266.823 614.177,265.989 608.5,266C 603.472,263.491 598.138,261.991 592.5,261.5C 592.33,262.822 592.663,263.989 593.5,265C 588.093,265.932 584.093,264.098 581.5,259.5C 581.5,256.5 581.5,253.5 581.5,250.5C 581.833,250.5 582.167,250.5 582.5,250.5C 583.234,251.708 583.567,253.041 583.5,254.5C 596.379,255.613 609.046,255.613 621.5,254.5C 621.819,250.7 622.819,250.534 624.5,254C 635.833,254.667 647.167,254.667 658.5,254C 659.71,252.961 660.71,251.794 661.5,250.5C 661.723,248.658 662.057,246.825 662.5,245C 661.751,237.524 661.251,230.024 661,222.5C 658.843,220.505 656.343,219.172 653.5,218.5C 638.342,217.504 623.009,217.17 607.5,217.5C 609.292,216.691 611.292,216.191 613.5,216C 612.62,214.644 612.286,213.144 612.5,211.5C 614.735,211.795 616.735,211.461 618.5,210.5C 620.993,210.671 622.826,209.671 624,207.5C 624.81,203.642 624.643,199.976 623.5,196.5C 623.5,188.833 623.5,181.167 623.5,173.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#374f68\",d:\"M 582.5,250.5 C 595.527,251.018 608.527,251.018 621.5,250.5C 634.833,250.5 648.167,250.5 661.5,250.5C 660.71,251.794 659.71,252.961 658.5,254C 647.167,254.667 635.833,254.667 624.5,254C 622.819,250.534 621.819,250.7 621.5,254.5C 609.046,255.613 596.379,255.613 583.5,254.5C 583.567,253.041 583.234,251.708 582.5,250.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bddce4\",d:\"M 684.5,246.5 C 683.5,246.5 682.5,246.5 681.5,246.5C 678.833,246.5 676.167,246.5 673.5,246.5C 673.5,245.5 673.5,244.5 673.5,243.5C 677.832,242.903 682.165,242.737 686.5,243C 687.337,244.011 687.67,245.178 687.5,246.5C 686.5,246.5 685.5,246.5 684.5,246.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#341917\",d:\"M 401.5,244.5 C 401.833,244.5 402.167,244.5 402.5,244.5C 402.5,245.5 402.5,246.5 402.5,247.5C 402.665,251.182 402.499,254.848 402,258.5C 399.938,260.901 398.271,263.567 397,266.5C 393.2,270.148 388.7,272.148 383.5,272.5C 383.5,272.167 383.5,271.833 383.5,271.5C 386.442,270.696 389.109,269.362 391.5,267.5C 395.737,264.936 398.403,261.27 399.5,256.5C 399.5,255.833 399.833,255.5 400.5,255.5C 401.482,252.038 401.815,248.371 401.5,244.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282d49\",d:\"M 575.5,252.5 C 575.5,253.167 575.833,253.5 576.5,253.5C 575.737,256.141 575.57,258.808 576,261.5C 577.113,262.305 578.279,262.972 579.5,263.5C 582.332,269.435 586.999,273.268 593.5,275C 627.832,275.5 662.165,275.667 696.5,275.5C 696.389,276.117 696.056,276.617 695.5,277C 697.441,277.743 699.274,277.576 701,276.5C 702.031,277.7 702.865,279.034 703.5,280.5C 702.802,281.863 702.802,283.029 703.5,284C 639.516,284.501 639.516,285.334 703.5,286.5C 714.167,286.167 724.833,285.833 735.5,285.5C 730.167,284.833 724.833,284.167 719.5,283.5C 724.456,282.506 729.456,282.173 734.5,282.5C 733.597,277.733 735.597,275.4 740.5,275.5C 741.442,275.608 742.275,275.941 743,276.5C 743.658,274.892 743.158,273.725 741.5,273C 742.167,272.667 742.833,272.333 743.5,272C 742.027,271.29 741.36,270.124 741.5,268.5C 745.138,271.677 749.472,273.511 754.5,274C 814.335,274.832 874.001,274.665 933.5,273.5C 936.833,273.5 940.167,273.5 943.5,273.5C 948.817,273.502 953.151,271.502 956.5,267.5C 958.167,266.833 959.833,266.167 961.5,265.5C 957.751,268.888 953.751,272.055 949.5,275C 888.145,274.969 826.812,275.969 765.5,278C 760.377,278.804 755.377,279.804 750.5,281C 766.167,281.333 781.833,281.667 797.5,282C 798.416,282.278 799.082,282.778 799.5,283.5C 783.497,283.333 767.497,283.5 751.5,284C 750.167,284.667 750.167,285.333 751.5,286C 754.146,286.497 756.813,286.664 759.5,286.5C 820.834,286.333 882.168,286.5 943.5,287C 942.263,287.232 941.263,287.732 940.5,288.5C 832.126,288.171 723.793,288.504 615.5,289.5C 613.043,289.208 610.376,289.208 607.5,289.5C 607.5,288.167 607.5,286.833 607.5,285.5C 609.827,285.753 611.827,285.086 613.5,283.5C 614.904,284.999 615.57,284.666 615.5,282.5C 615.333,281.833 615.167,281.167 615,280.5C 612.289,281.926 609.789,281.592 607.5,279.5C 605.908,281.562 604.075,281.895 602,280.5C 599.961,281.978 599.128,283.978 599.5,286.5C 604.059,286.879 605.393,289.213 603.5,293.5C 601.491,295.01 599.658,296.677 598,298.5C 597.667,297.833 597.333,297.167 597,296.5C 595.152,298.018 593.652,299.851 592.5,302C 593,302.5 593.5,303 594,303.5C 594.642,313.064 594.142,322.564 592.5,332C 592.735,332.873 593.069,333.707 593.5,334.5C 591.257,335.474 588.924,335.808 586.5,335.5C 586.87,325.111 586.37,314.777 585,304.5C 584.617,305.056 584.117,305.389 583.5,305.5C 583.5,304.833 583.167,304.5 582.5,304.5C 579.5,298.167 574.833,293.5 568.5,290.5C 568.167,290.5 567.833,290.5 567.5,290.5C 566.07,289.463 564.403,288.796 562.5,288.5C 515.628,287.781 471.962,286.948 431.5,286C 433.001,287.252 434.668,288.252 436.5,289C 433.101,289.696 429.768,291.196 426.5,293.5C 424.995,290.869 424.329,291.203 424.5,294.5C 423.167,294.5 421.833,294.5 420.5,294.5C 420.01,302.184 419.343,309.851 418.5,317.5C 420.256,330.386 421.089,343.386 421,356.5C 421.383,357.056 421.883,357.389 422.5,357.5C 422.169,384.005 422.502,410.339 423.5,436.5C 423.5,437.5 423.5,438.5 423.5,439.5C 423.992,441.819 424.992,443.819 426.5,445.5C 426.5,446.167 426.5,446.833 426.5,447.5C 425.427,448.251 425.26,449.251 426,450.5C 430.5,457.001 436.666,460.834 444.5,462C 455.495,462.5 466.495,462.667 477.5,462.5C 478.18,467.343 480.347,468.343 484,465.5C 485.473,465.903 486.806,466.57 488,467.5C 491.358,466.585 495.025,466.251 499,466.5C 499.667,467.833 499.667,469.167 499,470.5C 488.585,470.383 477.252,470.383 465,470.5C 463.92,466.709 461.42,465.043 457.5,465.5C 457.66,467.199 457.494,468.866 457,470.5C 456.333,469.167 455.667,469.167 455,470.5C 454.333,467.833 453.667,467.833 453,470.5C 452.667,469.833 452.333,469.167 452,468.5C 450.384,469.801 448.884,469.801 447.5,468.5C 447.631,467.761 447.464,467.094 447,466.5C 445.915,467.293 444.748,467.96 443.5,468.5C 440.433,466.769 437.1,465.769 433.5,465.5C 432.558,465.608 431.725,465.941 431,466.5C 429.56,464.954 427.727,464.121 425.5,464C 427.167,463.667 428.833,463.333 430.5,463C 431.022,462.439 431.355,461.772 431.5,461C 428.028,458.69 424.695,456.023 421.5,453C 422.138,451.293 422.138,449.46 421.5,447.5C 419.712,447.215 418.045,447.548 416.5,448.5C 419.167,451.5 419.167,454.5 416.5,457.5C 415.335,464.811 415.169,472.144 416,479.5C 416.71,480.973 417.876,481.64 419.5,481.5C 420.396,485.613 420.229,489.613 419,493.5C 418.5,520.498 418.333,547.498 418.5,574.5C 417.5,574.5 416.5,574.5 415.5,574.5C 415.5,569.5 415.5,564.5 415.5,559.5C 414.448,559.649 413.448,559.483 412.5,559C 413.143,556.254 413.476,553.421 413.5,550.5C 412.406,538.859 410.74,528.192 408.5,518.5C 408.34,513.86 409.006,509.36 410.5,505C 409.472,501.779 408.306,498.612 407,495.5C 405.963,508.343 406.463,521.01 408.5,533.5C 408.276,536.485 407.943,539.152 407.5,541.5C 408.156,550.788 409.489,559.788 411.5,568.5C 411.333,571.167 411.167,573.833 411,576.5C 409.244,577.421 409.077,578.588 410.5,580C 410.182,582.375 408.849,583.542 406.5,583.5C 406.67,584.822 406.337,585.989 405.5,587C 406.742,587.311 407.742,586.811 408.5,585.5C 409.631,587.074 409.798,588.741 409,590.5C 408.346,589.304 407.846,589.304 407.5,590.5C 408.325,591.386 409.325,591.719 410.5,591.5C 410.281,590.325 410.614,589.325 411.5,588.5C 412.914,589.624 414.414,590.624 416,591.5C 416.483,590.552 416.649,589.552 416.5,588.5C 418.099,588.232 419.432,588.566 420.5,589.5C 419.386,594.572 421.053,598.239 425.5,600.5C 425.5,600.833 425.5,601.167 425.5,601.5C 422.775,603.161 420.442,605.327 418.5,608C 417.552,608.483 416.552,608.649 415.5,608.5C 415.5,610.167 415.5,611.833 415.5,613.5C 409.605,612.946 403.938,613.612 398.5,615.5C 398.167,615.167 397.833,614.833 397.5,614.5C 398.95,613.15 399.617,611.484 399.5,609.5C 398.448,609.649 397.448,609.483 396.5,609C 396.833,608.667 397.167,608.333 397.5,608C 395.989,606.385 394.656,606.385 393.5,608C 393.833,608.333 394.167,608.667 394.5,609C 388.804,609.17 383.138,609.67 377.5,610.5C 375.995,613.131 375.329,612.797 375.5,609.5C 362.905,611.139 350.238,611.806 337.5,611.5C 337.312,609.897 337.812,608.563 339,607.5C 342.667,607.833 346.333,608.167 350,608.5C 360.689,607.965 371.189,606.632 381.5,604.5C 383.288,604.785 384.955,604.452 386.5,603.5C 389.166,601.165 392.166,599.331 395.5,598C 397.414,596.587 398.747,594.753 399.5,592.5C 400.325,591.614 401.325,591.281 402.5,591.5C 403.752,588.017 404.586,584.351 405,580.5C 405.667,562.833 405.667,545.167 405,527.5C 404.831,543.672 404.331,559.672 403.5,575.5C 403.5,500.5 403.5,425.5 403.5,350.5C 403.829,335.99 403.496,321.657 402.5,307.5C 399.732,299.731 394.399,294.731 386.5,292.5C 387.239,292.631 387.906,292.464 388.5,292C 387.5,291.667 386.5,291.333 385.5,291C 347.168,290.5 308.835,290.333 270.5,290.5C 264.986,289.833 259.319,289.167 253.5,288.5C 253.846,287.304 254.346,287.304 255,288.5C 260.417,287.691 265.917,287.191 271.5,287C 272.416,286.626 273.25,286.126 274,285.5C 288.913,285.392 306.246,286.059 326,287.5C 333.833,287.333 341.667,287.167 349.5,287C 350.167,286.667 350.833,286.333 351.5,286C 346.177,285.501 340.844,285.334 335.5,285.5C 335.67,284.178 335.337,283.011 334.5,282C 329.666,280.239 324.999,280.405 320.5,282.5C 320.167,283.167 319.833,283.833 319.5,284.5C 314.533,285.662 309.533,285.829 304.5,285C 303.663,283.989 303.33,282.822 303.5,281.5C 308.875,281.828 314.208,281.495 319.5,280.5C 318.652,279.009 317.319,278.342 315.5,278.5C 312.153,279.705 308.82,279.705 305.5,278.5C 302.47,279.869 299.303,280.869 296,281.5C 288.246,280.683 280.412,280.183 272.5,280C 271.833,279.333 271.167,278.667 270.5,278C 265.5,277.333 260.5,277.333 255.5,278C 254.359,278.741 254.359,279.575 255.5,280.5C 260.792,281.495 266.125,281.828 271.5,281.5C 271.5,282.5 271.5,283.5 271.5,284.5C 268.864,284.964 266.197,285.297 263.5,285.5C 257.026,284.333 251.359,283.666 246.5,283.5C 244.729,284.035 244.396,284.869 245.5,286C 247.804,286.895 250.138,287.729 252.5,288.5C 247.533,289.662 242.533,289.829 237.5,289C 237.167,288.667 236.833,288.333 236.5,288C 239.416,287.951 240.416,286.784 239.5,284.5C 240.727,283.41 241.56,282.076 242,280.5C 242.965,282.26 244.132,282.594 245.5,281.5C 244.68,279.889 243.346,279.222 241.5,279.5C 241.559,276.951 240.559,274.951 238.5,273.5C 238.709,272.914 239.043,272.414 239.5,272C 238.167,269.693 236.334,267.859 234,266.5C 233.501,262.848 233.335,259.182 233.5,255.5C 234.167,255.833 234.833,256.167 235.5,256.5C 236.624,263.802 240.624,268.969 247.5,272C 292.832,272.5 338.165,272.667 383.5,272.5C 388.7,272.148 393.2,270.148 397,266.5C 398.271,263.567 399.938,260.901 402,258.5C 402.499,254.848 402.665,251.182 402.5,247.5C 403.758,253.957 403.424,260.457 401.5,267C 402.667,268.167 403.833,269.333 405,270.5C 405.896,267.918 407.229,265.584 409,263.5C 409.728,260.77 409.562,258.103 408.5,255.5C 411.11,250.147 412.11,244.48 411.5,238.5C 412.5,238.5 413.5,238.5 414.5,238.5C 414.625,244.587 413.958,250.587 412.5,256.5C 413,258.5 413.5,260.5 414,262.5C 414.923,261.241 415.757,259.908 416.5,258.5C 417.499,246.852 417.832,235.186 417.5,223.5C 418.833,223.5 420.167,223.5 421.5,223.5C 421.024,234.663 421.524,245.663 423,256.5C 423.333,242.833 423.667,229.167 424,215.5C 424.333,215.167 424.667,214.833 425,214.5C 425.278,215.416 425.778,216.082 426.5,216.5C 426.5,216.833 426.5,217.167 426.5,217.5C 425.339,232.328 425.172,247.328 426,262.5C 426.383,263.056 426.883,263.389 427.5,263.5C 427.733,265.062 428.4,266.395 429.5,267.5C 429.75,269.674 430.75,271.341 432.5,272.5C 432.611,273.117 432.944,273.617 433.5,274C 438.5,274.167 443.5,274.333 448.5,274.5C 453.881,274.494 458.881,273.828 463.5,272.5C 490.833,272.5 518.167,272.5 545.5,272.5C 528.995,273.167 512.328,273.833 495.5,274.5C 512.157,275.666 528.823,275.833 545.5,275C 555.177,271.801 561.344,265.301 564,255.5C 564.815,229.458 564.648,203.458 563.5,177.5C 564.85,174.894 566.35,174.894 568,177.5C 567.997,181.742 568.83,185.742 570.5,189.5C 569.91,190.799 568.91,191.632 567.5,192C 568.772,203.901 568.772,215.735 567.5,227.5C 568.922,229.787 569.589,232.287 569.5,235C 567.692,241.497 566.692,247.997 566.5,254.5C 568.743,255.474 571.076,255.808 573.5,255.5C 573.338,253.473 573.505,251.473 574,249.5C 574.232,250.737 574.732,251.737 575.5,252.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5cdcc\",d:\"M 426.5,217.5 C 426.171,232.343 426.504,247.01 427.5,261.5C 427.5,262.167 427.5,262.833 427.5,263.5C 426.883,263.389 426.383,263.056 426,262.5C 425.172,247.328 425.339,232.328 426.5,217.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9b70a\",d:\"M 472.5,214.5 C 473.167,214.833 473.833,215.167 474.5,215.5C 474.5,216.167 474.5,216.833 474.5,217.5C 474.824,232.412 474.491,247.245 473.5,262C 471.791,263.545 469.791,264.378 467.5,264.5C 456.186,263.732 444.853,263.232 433.5,263C 431.624,262.082 430.624,260.582 430.5,258.5C 430.201,256.396 430.534,254.396 431.5,252.5C 433.143,254.154 434.976,255.487 437,256.5C 439.404,255.72 440.904,254.053 441.5,251.5C 444.225,253.429 447.225,253.929 450.5,253C 451.171,252.014 451.171,250.847 450.5,249.5C 453.039,245.647 455.372,245.98 457.5,250.5C 459.321,252.857 461.655,253.191 464.5,251.5C 465.167,252.167 465.833,252.833 466.5,253.5C 469.51,251.413 470.676,248.747 470,245.5C 470.689,246.357 471.522,247.023 472.5,247.5C 473.665,239.855 473.831,232.188 473,224.5C 471.103,226.016 468.936,226.683 466.5,226.5C 466.838,224.146 467.338,221.813 468,219.5C 471.789,222.432 472.955,221.599 471.5,217C 458.171,216.5 444.837,216.333 431.5,216.5C 444.656,215.504 457.99,215.171 471.5,215.5C 472.167,215.5 472.5,215.167 472.5,214.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0ce61\",d:\"M 433.5,214.5 C 446.344,214.171 459.011,214.505 471.5,215.5C 457.99,215.171 444.656,215.504 431.5,216.5C 430.883,216.611 430.383,216.944 430,217.5C 429.5,231.163 429.333,244.829 429.5,258.5C 429.5,260.167 429.5,261.833 429.5,263.5C 428.504,248.676 428.171,233.676 428.5,218.5C 428.967,215.703 430.633,214.369 433.5,214.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbebaf\",d:\"M 428.5,218.5 C 428.171,233.676 428.504,248.676 429.5,263.5C 430.441,265.05 431.107,266.716 431.5,268.5C 430.833,268.167 430.167,267.833 429.5,267.5C 428.4,266.395 427.733,265.062 427.5,263.5C 427.5,262.833 427.5,262.167 427.5,261.5C 427.171,246.99 427.504,232.657 428.5,218.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cde9ed\",d:\"M 533.5,233.5 C 531.758,236.145 531.091,239.145 531.5,242.5C 530.5,242.5 529.5,242.5 528.5,242.5C 528.5,239.5 528.5,236.5 528.5,233.5C 525.833,233.5 523.167,233.5 520.5,233.5C 520.5,235.5 520.5,237.5 520.5,239.5C 522.604,239.201 524.604,239.534 526.5,240.5C 526.291,241.086 525.957,241.586 525.5,242C 520.745,241.792 516.078,241.625 511.5,241.5C 510.653,240.155 509.487,239.155 508,238.5C 507.732,232.929 510.232,230.929 515.5,232.5C 514.311,233.429 512.978,233.762 511.5,233.5C 511.5,235.5 511.5,237.5 511.5,239.5C 516.82,239.574 518.82,236.907 517.5,231.5C 522.862,231.528 528.195,231.194 533.5,230.5C 533.5,231.5 533.5,232.5 533.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2ecee\",d:\"M 496.5,231.5 C 503,230.499 505.5,233.165 504,239.5C 500.858,243.352 497.858,243.352 495,239.5C 494.282,236.593 494.782,233.926 496.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#46676f\",d:\"M 497.5,234.5 C 500.95,233.756 502.616,235.09 502.5,238.5C 500.833,238.5 499.167,238.5 497.5,238.5C 497.5,237.167 497.5,235.833 497.5,234.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cae2e6\",d:\"M 487.5,230.5 C 489.5,230.5 491.5,230.5 493.5,230.5C 492.886,234.135 492.552,237.802 492.5,241.5C 491.5,241.5 490.5,241.5 489.5,241.5C 489.369,237.715 488.702,234.048 487.5,230.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc307\",d:\"M 431.5,216.5 C 444.837,216.333 458.171,216.5 471.5,217C 472.955,221.599 471.789,222.432 468,219.5C 467.338,221.813 466.838,224.146 466.5,226.5C 468.936,226.683 471.103,226.016 473,224.5C 473.831,232.188 473.665,239.855 472.5,247.5C 471.522,247.023 470.689,246.357 470,245.5C 470.676,248.747 469.51,251.413 466.5,253.5C 465.833,252.833 465.167,252.167 464.5,251.5C 461.655,253.191 459.321,252.857 457.5,250.5C 459.735,250.795 461.735,250.461 463.5,249.5C 463.657,248.127 463.49,246.793 463,245.5C 459.513,243.602 458.346,240.935 459.5,237.5C 461.228,235.774 463.228,234.441 465.5,233.5C 468.669,233.338 470.669,231.672 471.5,228.5C 468.584,228.668 465.751,227.668 463,225.5C 460.667,225.583 458.834,226.583 457.5,228.5C 455.105,227.477 454.105,228.477 454.5,231.5C 452.833,231.5 451.167,231.5 449.5,231.5C 449.762,230.022 449.429,228.689 448.5,227.5C 447.757,228.908 446.923,230.241 446,231.5C 444.279,228.612 442.945,225.945 442,223.5C 441.5,223.833 441,224.167 440.5,224.5C 441.309,226.071 441.643,227.738 441.5,229.5C 440.167,229.5 438.833,229.5 437.5,229.5C 440.014,237.373 442.181,244.706 444,251.5C 445.699,252.406 447.533,252.739 449.5,252.5C 449.5,251.5 449.5,250.5 449.5,249.5C 449.833,249.5 450.167,249.5 450.5,249.5C 451.171,250.847 451.171,252.014 450.5,253C 447.225,253.929 444.225,253.429 441.5,251.5C 440.904,254.053 439.404,255.72 437,256.5C 434.976,255.487 433.143,254.154 431.5,252.5C 430.534,254.396 430.201,256.396 430.5,258.5C 430.167,258.5 429.833,258.5 429.5,258.5C 429.333,244.829 429.5,231.163 430,217.5C 430.383,216.944 430.883,216.611 431.5,216.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4d25f\",d:\"M 454.5,243.5 C 455.891,247.888 458.891,249.888 463.5,249.5C 461.735,250.461 459.735,250.795 457.5,250.5C 455.372,245.98 453.039,245.647 450.5,249.5C 450.167,249.5 449.833,249.5 449.5,249.5C 447.833,249.5 446.167,249.5 444.5,249.5C 444.232,247.901 444.566,246.568 445.5,245.5C 445.5,246.5 445.5,247.5 445.5,248.5C 449.074,249.092 451.074,247.592 451.5,244C 452.448,243.517 453.448,243.351 454.5,243.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcf4b5\",d:\"M 459.5,237.5 C 458.346,240.935 459.513,243.602 463,245.5C 463.49,246.793 463.657,248.127 463.5,249.5C 458.891,249.888 455.891,247.888 454.5,243.5C 455.175,240.651 456.842,238.651 459.5,237.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef6cf\",d:\"M 465.5,233.5 C 463.228,234.441 461.228,235.774 459.5,237.5C 456.842,238.651 455.175,240.651 454.5,243.5C 453.448,243.351 452.448,243.517 451.5,244C 451.074,247.592 449.074,249.092 445.5,248.5C 445.5,247.5 445.5,246.5 445.5,245.5C 446.355,244.469 447.022,243.303 447.5,242C 444.688,239.188 441.855,236.355 439,233.5C 438.517,232.552 438.351,231.552 438.5,230.5C 439.552,230.351 440.552,230.517 441.5,231C 444.695,233.756 448.028,236.256 451.5,238.5C 454.651,235.85 457.651,233.016 460.5,230C 462.025,228.991 463.692,228.491 465.5,228.5C 465.5,230.167 465.5,231.833 465.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6cb24\",d:\"M 465.5,233.5 C 465.5,231.833 465.5,230.167 465.5,228.5C 463.692,228.491 462.025,228.991 460.5,230C 457.651,233.016 454.651,235.85 451.5,238.5C 448.028,236.256 444.695,233.756 441.5,231C 440.552,230.517 439.552,230.351 438.5,230.5C 438.351,231.552 438.517,232.552 439,233.5C 441.855,236.355 444.688,239.188 447.5,242C 447.022,243.303 446.355,244.469 445.5,245.5C 444.566,246.568 444.232,247.901 444.5,249.5C 446.167,249.5 447.833,249.5 449.5,249.5C 449.5,250.5 449.5,251.5 449.5,252.5C 447.533,252.739 445.699,252.406 444,251.5C 442.181,244.706 440.014,237.373 437.5,229.5C 438.833,229.5 440.167,229.5 441.5,229.5C 441.643,227.738 441.309,226.071 440.5,224.5C 441,224.167 441.5,223.833 442,223.5C 442.945,225.945 444.279,228.612 446,231.5C 446.923,230.241 447.757,228.908 448.5,227.5C 449.429,228.689 449.762,230.022 449.5,231.5C 451.167,231.5 452.833,231.5 454.5,231.5C 454.105,228.477 455.105,227.477 457.5,228.5C 458.834,226.583 460.667,225.583 463,225.5C 465.751,227.668 468.584,228.668 471.5,228.5C 470.669,231.672 468.669,233.338 465.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#96ebfd\",d:\"M 983.5,-0.5 C 996.833,-0.5 1010.17,-0.5 1023.5,-0.5C 1023.5,340.833 1023.5,682.167 1023.5,1023.5C 1019.17,1023.5 1014.83,1023.5 1010.5,1023.5C 1010.2,1018.24 1010.53,1013.07 1011.5,1008C 1008.94,1006.52 1008.94,1005.02 1011.5,1003.5C 1013.02,1004.8 1013.68,1004.3 1013.5,1002C 1013.4,999.63 1012.4,997.797 1010.5,996.5C 1009.88,998.966 1009.04,1001.3 1008,1003.5C 1008.6,996.879 1009.1,990.212 1009.5,983.5C 1013.8,983.721 1014.46,982.388 1011.5,979.5C 1011.92,978.328 1012.59,977.328 1013.5,976.5C 1012.17,973.167 1012.17,969.833 1013.5,966.5C 1012.68,965.614 1011.68,965.281 1010.5,965.5C 1010.5,964.167 1010.5,962.833 1010.5,961.5C 1012.61,961.321 1014.27,960.321 1015.5,958.5C 1014.13,956.51 1013.13,954.343 1012.5,952C 1013.45,951.517 1014.45,951.351 1015.5,951.5C 1015.66,949.143 1015.5,946.81 1015,944.5C 1012.93,943.736 1010.76,943.236 1008.5,943C 1007.91,941.491 1007.24,939.991 1006.5,938.5C 1005.74,939.628 1005.07,940.795 1004.5,942C 1005.83,943 1007.17,944 1008.5,945C 1007.13,947.899 1005.63,948.066 1004,945.5C 1002.89,947.397 1002.72,949.23 1003.5,951C 1003.05,953.693 1001.55,955.527 999,956.5C 998.517,957.448 998.351,958.448 998.5,959.5C 995.061,959.589 992.228,960.922 990,963.5C 989.282,962.549 988.449,962.383 987.5,963C 986.271,964.529 984.771,965.696 983,966.5C 982.269,970.657 979.769,972.657 975.5,972.5C 975.5,974.5 975.5,976.5 975.5,978.5C 965.498,977.491 955.498,977.825 945.5,979.5C 843.835,980.333 742.168,980.833 640.5,981C 639.069,981.465 637.903,982.299 637,983.5C 633,983.5 629,983.5 625,983.5C 624.308,982.975 623.808,982.308 623.5,981.5C 575.503,980.667 527.503,980.167 479.5,980C 475.661,979.541 471.828,979.041 468,978.5C 465.992,978.307 464.492,978.974 463.5,980.5C 340.456,981.164 217.623,980.497 95,978.5C 93.2494,979.174 91.5827,979.507 90,979.5C 89.5357,978.906 89.369,978.239 89.5,977.5C 378.834,977.667 668.167,977.5 957.5,977C 958.416,976.722 959.082,976.222 959.5,975.5C 961.117,974.962 962.784,974.629 964.5,974.5C 986.233,965.927 1000.07,950.26 1006,927.5C 1006.67,682.167 1006.67,436.833 1006,191.5C 1005.55,188.123 1004.88,184.789 1004,181.5C 1001.95,178.62 1000.12,175.62 998.5,172.5C 999.79,171.942 1000.62,170.942 1001,169.5C 1002.62,170.536 1002.78,171.703 1001.5,173C 1003.17,175.748 1004.67,178.581 1006,181.5C 1007.4,180.774 1008.23,179.607 1008.5,178C 1007.85,174.188 1007.35,170.354 1007,166.5C 1005.17,164.571 1005.51,164.238 1008,165.5C 1007.76,158.242 1007.92,150.909 1008.5,143.5C 1011.52,143.825 1013.19,142.492 1013.5,139.5C 1012.57,137.895 1012.57,136.395 1013.5,135C 1010.96,133.437 1010.96,131.937 1013.5,130.5C 1012.01,128.636 1011.34,126.47 1011.5,124C 1012.73,119.909 1013.4,115.742 1013.5,111.5C 1011.83,111.5 1010.17,111.5 1008.5,111.5C 1007.95,105.605 1008.61,99.9383 1010.5,94.5C 1008.92,93.7022 1007.26,93.2022 1005.5,93C 1006.97,92.2904 1007.64,91.1238 1007.5,89.5C 1011.5,88.8333 1011.5,88.1667 1007.5,87.5C 1007.52,83.4068 1008.19,79.4068 1009.5,75.5C 1008.83,72.8333 1008.17,70.1667 1007.5,67.5C 1008.79,59.1612 1008.79,50.8278 1007.5,42.5C 1004.83,42.5 1002.17,42.5 999.5,42.5C 999.5,41.5 999.5,40.5 999.5,39.5C 1002.55,38.6426 1005.55,38.6426 1008.5,39.5C 1009.05,36.2976 1010.05,33.2976 1011.5,30.5C 1010.02,28.0542 1008.85,28.3876 1008,31.5C 1007.1,30.2986 1005.93,29.4652 1004.5,29C 1006.89,28.0239 1008.05,26.1906 1008,23.5C 1008.42,24.6721 1009.09,25.6721 1010,26.5C 1012.37,23.1995 1013.04,19.5328 1012,15.5C 1010.67,15.5 1009.33,15.5 1008,15.5C 1007.75,13.567 1007.25,11.7337 1006.5,10C 1003.77,9.81844 1001.11,9.31844 998.5,8.5C 996.929,6.58499 994.929,5.58499 992.5,5.5C 992.587,2.4017 992.087,2.06837 991,4.5C 988.894,2.70896 986.394,2.04229 983.5,2.5C 983.333,5.95707 982.333,6.2904 980.5,3.5C 981.826,2.35782 982.826,1.02449 983.5,-0.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#de900d\",d:\"M 474.5,217.5 C 475.661,232.661 475.828,247.994 475,263.5C 473.943,267.391 471.443,269.724 467.5,270.5C 456.136,270.743 444.802,270.41 433.5,269.5C 432.508,269.672 431.842,269.338 431.5,268.5C 431.107,266.716 430.441,265.05 429.5,263.5C 429.5,261.833 429.5,260.167 429.5,258.5C 429.833,258.5 430.167,258.5 430.5,258.5C 430.624,260.582 431.624,262.082 433.5,263C 444.853,263.232 456.186,263.732 467.5,264.5C 469.791,264.378 471.791,263.545 473.5,262C 474.491,247.245 474.824,232.412 474.5,217.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272c4b\",d:\"M 746.5,78.5 C 746.5,78.8333 746.5,79.1667 746.5,79.5C 745.391,79.4431 744.391,79.1098 743.5,78.5C 743.144,77.1301 742.31,76.1301 741,75.5C 729.02,85.8133 717.353,96.48 706,107.5C 705.568,108.6 706.068,109.267 707.5,109.5C 708.167,109.333 708.833,109.167 709.5,109C 710.103,106.929 711.436,105.762 713.5,105.5C 712.167,106.5 712.167,107.5 713.5,108.5C 712.5,108.833 711.833,109.5 711.5,110.5C 710.34,122.66 710.173,134.993 711,147.5C 711.383,148.056 711.883,148.389 712.5,148.5C 712.5,148.833 712.5,149.167 712.5,149.5C 718.987,150.654 725.654,150.821 732.5,150C 733.056,149.617 733.389,149.117 733.5,148.5C 733.833,148.5 734.167,148.5 734.5,148.5C 739.363,148.819 744.03,148.486 748.5,147.5C 748.5,138.833 748.5,130.167 748.5,121.5C 746.833,121.5 745.167,121.5 743.5,121.5C 743.5,121.167 743.5,120.833 743.5,120.5C 745.099,120.768 746.432,120.434 747.5,119.5C 748.492,119.672 749.158,119.338 749.5,118.5C 750.167,127.833 750.833,137.167 751.5,146.5C 751.5,147.833 752.167,148.5 753.5,148.5C 753.926,150.285 755.092,151.285 757,151.5C 759.535,150.417 762.035,149.417 764.5,148.5C 766.144,148.714 767.644,148.38 769,147.5C 769.667,134.833 769.667,122.167 769,109.5C 768.722,108.584 768.222,107.918 767.5,107.5C 766.063,105.237 764.897,102.904 764,100.5C 767.312,102.645 770.146,105.312 772.5,108.5C 773.365,109.583 774.365,109.749 775.5,109C 771.631,104.963 767.631,101.13 763.5,97.5C 763.5,96.8333 763.5,96.1667 763.5,95.5C 769.023,99.8419 773.523,104.842 777,110.5C 775.698,111.085 774.531,111.751 773.5,112.5C 772.505,123.321 772.172,134.321 772.5,145.5C 770.859,148.046 770.525,150.713 771.5,153.5C 772.552,153.351 773.552,153.517 774.5,154C 773.167,154.667 773.167,155.333 774.5,156C 776.221,156.739 777.887,157.573 779.5,158.5C 774.858,158.377 770.191,158.377 765.5,158.5C 757.614,161.809 758.281,163.475 767.5,163.5C 796.492,164.833 825.826,165.5 855.5,165.5C 884.833,165.167 914.167,164.833 943.5,164.5C 938.015,163.833 932.681,163.167 927.5,162.5C 931.029,160.577 935.029,159.911 939.5,160.5C 939.241,156.932 937.241,155.599 933.5,156.5C 933.5,157.5 933.5,158.5 933.5,159.5C 926.137,159.831 918.803,159.497 911.5,158.5C 916.467,157.671 921.467,157.171 926.5,157C 927.337,155.989 927.67,154.822 927.5,153.5C 931.353,153.89 934.353,152.556 936.5,149.5C 947.784,150.8 959.118,151.134 970.5,150.5C 970.863,149.817 971.196,149.15 971.5,148.5C 975.833,148.5 980.167,148.5 984.5,148.5C 984.5,152.167 984.5,155.833 984.5,159.5C 982.506,199.153 981.839,239.153 982.5,279.5C 980.978,269.999 980.645,260.499 981.5,251C 981.519,247.941 980.853,245.107 979.5,242.5C 979.596,232.153 979.93,221.82 980.5,211.5C 979.833,206.167 979.167,206.167 978.5,211.5C 977.828,235.495 977.828,259.995 978.5,285C 978.401,301.203 977.735,317.37 976.5,333.5C 976.76,335.187 977.427,336.687 978.5,338C 978.029,344.803 978.029,351.97 978.5,359.5C 978.551,369.396 977.884,379.23 976.5,389C 977.146,400.376 977.813,411.709 978.5,423C 977.854,428.448 977.188,433.948 976.5,439.5C 975.201,438.91 974.368,437.91 974,436.5C 973.601,436.728 973.435,437.062 973.5,437.5C 972.292,436.766 970.959,436.433 969.5,436.5C 969.5,432.167 969.5,427.833 969.5,423.5C 970.319,426.305 970.819,429.305 971,432.5C 972.049,433.517 973.216,433.684 974.5,433C 973.412,401.848 972.746,370.682 972.5,339.5C 972.797,331.728 973.797,324.061 975.5,316.5C 975.333,315.5 975.167,314.5 975,313.5C 974.722,314.416 974.222,315.082 973.5,315.5C 973.875,312.603 973.375,309.937 972,307.5C 970.565,311.769 968.899,312.102 967,308.5C 966.222,305.725 966.722,303.225 968.5,301C 968.557,296.398 966.39,293.564 962,292.5C 961.667,292.833 961.333,293.167 961,293.5C 958.908,288.51 956.408,288.176 953.5,292.5C 952.833,292.167 952.167,291.833 951.5,291.5C 949.5,290.833 947.5,290.167 945.5,289.5C 944.081,288.549 942.415,288.216 940.5,288.5C 941.263,287.732 942.263,287.232 943.5,287C 882.168,286.5 820.834,286.333 759.5,286.5C 815.335,285.833 871.335,285.167 927.5,284.5C 920.809,283.798 914.143,283.132 907.5,282.5C 871.686,283.264 835.686,283.597 799.5,283.5C 799.082,282.778 798.416,282.278 797.5,282C 781.833,281.667 766.167,281.333 750.5,281C 755.377,279.804 760.377,278.804 765.5,278C 826.812,275.969 888.145,274.969 949.5,275C 953.751,272.055 957.751,268.888 961.5,265.5C 964.325,261.78 965.659,257.446 965.5,252.5C 965.5,252.167 965.5,251.833 965.5,251.5C 966.222,251.082 966.722,250.416 967,249.5C 967.667,228.167 967.667,206.833 967,185.5C 966.427,183.359 965.594,181.359 964.5,179.5C 964.714,177.856 964.38,176.356 963.5,175C 960.334,174.678 957.667,173.511 955.5,171.5C 954.209,170.527 954.209,169.527 955.5,168.5C 953.5,168.167 951.5,167.833 949.5,167.5C 886.499,168.83 823.499,168.83 760.5,167.5C 756.914,167.55 753.58,168.217 750.5,169.5C 748.219,170.339 745.885,171.339 743.5,172.5C 742.614,173.325 742.281,174.325 742.5,175.5C 741.449,176.222 740.782,177.222 740.5,178.5C 739.508,178.328 738.842,178.662 738.5,179.5C 737.292,178.766 735.959,178.433 734.5,178.5C 731.954,207.456 731.954,236.456 734.5,265.5C 736.5,265.5 738.5,265.5 740.5,265.5C 740.557,266.609 740.89,267.609 741.5,268.5C 741.36,270.124 742.027,271.29 743.5,272C 742.833,272.333 742.167,272.667 741.5,273C 743.158,273.725 743.658,274.892 743,276.5C 742.275,275.941 741.442,275.608 740.5,275.5C 735.597,275.4 733.597,277.733 734.5,282.5C 729.456,282.173 724.456,282.506 719.5,283.5C 724.833,284.167 730.167,284.833 735.5,285.5C 724.833,285.833 714.167,286.167 703.5,286.5C 639.516,285.334 639.516,284.501 703.5,284C 702.802,283.029 702.802,281.863 703.5,280.5C 702.865,279.034 702.031,277.7 701,276.5C 699.274,277.576 697.441,277.743 695.5,277C 696.056,276.617 696.389,276.117 696.5,275.5C 702.83,275.604 708.497,273.771 713.5,270C 714.729,268.471 716.229,267.304 718,266.5C 718.526,263.728 719.359,261.062 720.5,258.5C 721.667,232.173 721.833,205.84 721,179.5C 720.79,177.942 720.29,176.609 719.5,175.5C 717.18,172.331 715.013,168.998 713,165.5C 711.316,163.934 709.316,162.934 707,162.5C 693.812,163.428 680.312,163.761 666.5,163.5C 667.919,162.549 669.585,162.216 671.5,162.5C 671.714,160.856 671.38,159.356 670.5,158C 667.168,157.751 664.001,156.918 661,155.5C 658.98,156.032 658.147,157.365 658.5,159.5C 656.549,159.773 655.049,159.107 654,157.5C 650.653,161.645 648.153,161.312 646.5,156.5C 650.56,157.152 652.56,155.485 652.5,151.5C 653.5,151.5 654.5,151.5 655.5,151.5C 655.281,152.675 655.614,153.675 656.5,154.5C 657.452,152.955 657.785,151.288 657.5,149.5C 657.198,146.941 657.532,144.607 658.5,142.5C 658.5,144.167 658.5,145.833 658.5,147.5C 659.5,147.5 660.5,147.5 661.5,147.5C 661.232,145.901 661.566,144.568 662.5,143.5C 662.5,145.833 662.5,148.167 662.5,150.5C 671.136,151.16 679.803,150.993 688.5,150C 685.342,149.446 682.175,148.946 679,148.5C 677.319,148.392 676.152,147.725 675.5,146.5C 675.833,146.5 676.167,146.5 676.5,146.5C 680.298,147.483 684.298,147.817 688.5,147.5C 688.5,146.167 688.5,144.833 688.5,143.5C 688.833,143.5 689.167,143.5 689.5,143.5C 689.34,145.199 689.506,146.866 690,148.5C 690.69,149.738 691.19,149.738 691.5,148.5C 697.167,148.5 702.833,148.5 708.5,148.5C 708.5,136.167 708.5,123.833 708.5,111.5C 706.5,111.5 704.5,111.5 702.5,111.5C 702.5,110.5 702.5,109.5 702.5,108.5C 713.968,97.2002 725.635,86.0335 737.5,75C 742.021,72.377 745.021,73.5437 746.5,78.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44250d\",d:\"M 965.5,252.5 C 965.659,257.446 964.325,261.78 961.5,265.5C 959.833,266.167 958.167,266.833 956.5,267.5C 959.878,264.073 962.211,260.073 963.5,255.5C 964.167,254.5 964.833,253.5 965.5,252.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c222b\",d:\"M 738.5,179.5 C 737.093,181.308 735.926,183.308 735,185.5C 734.333,207.833 734.333,230.167 735,252.5C 735.232,253.737 735.732,254.737 736.5,255.5C 736.66,257.153 737.326,258.486 738.5,259.5C 738.392,261.514 739.058,263.18 740.5,264.5C 740.5,264.833 740.5,265.167 740.5,265.5C 738.5,265.5 736.5,265.5 734.5,265.5C 731.954,236.456 731.954,207.456 734.5,178.5C 735.959,178.433 737.292,178.766 738.5,179.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#351f0b\",d:\"M 960.5,176.5 C 962.43,176.771 963.764,177.771 964.5,179.5C 965.594,181.359 966.427,183.359 967,185.5C 967.667,206.833 967.667,228.167 967,249.5C 966.722,250.416 966.222,251.082 965.5,251.5C 965.667,229.497 965.5,207.497 965,185.5C 964.128,182.144 962.628,179.144 960.5,176.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8df5b\",d:\"M 739.5,183.5 C 738.539,207.807 738.206,232.141 738.5,256.5C 737.503,234.34 737.169,212.006 737.5,189.5C 737.5,188.167 737.5,186.833 737.5,185.5C 738.167,184.833 738.833,184.167 739.5,183.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dee0d1\",d:\"M 740.5,178.5 C 739.801,180.995 738.801,183.328 737.5,185.5C 737.5,186.833 737.5,188.167 737.5,189.5C 736.503,211.327 736.169,233.327 736.5,255.5C 735.732,254.737 735.232,253.737 735,252.5C 734.333,230.167 734.333,207.833 735,185.5C 735.926,183.308 737.093,181.308 738.5,179.5C 738.842,178.662 739.508,178.328 740.5,178.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fefcbd\",d:\"M 737.5,189.5 C 737.169,212.006 737.503,234.34 738.5,256.5C 738.5,257.5 738.5,258.5 738.5,259.5C 737.326,258.486 736.66,257.153 736.5,255.5C 736.169,233.327 736.503,211.327 737.5,189.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#daaf2a\",d:\"M 958.5,175.5 C 959.167,175.833 959.833,176.167 960.5,176.5C 962.628,179.144 964.128,182.144 965,185.5C 965.5,207.497 965.667,229.497 965.5,251.5C 965.5,251.833 965.5,252.167 965.5,252.5C 964.833,253.5 964.167,254.5 963.5,255.5C 964.611,233.853 964.777,212.187 964,190.5C 963.721,186.795 962.221,183.795 959.5,181.5C 958.534,179.604 958.201,177.604 958.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc204\",d:\"M 750.5,175.5 C 819.167,175.5 887.833,175.5 956.5,175.5C 957.167,175.5 957.833,175.5 958.5,175.5C 958.201,177.604 958.534,179.604 959.5,181.5C 962.221,183.795 963.721,186.795 964,190.5C 964.777,212.187 964.611,233.853 963.5,255.5C 962.211,260.073 959.878,264.073 956.5,267.5C 954.254,268.455 951.921,269.122 949.5,269.5C 884.174,270.615 818.84,270.782 753.5,270C 749.274,267.744 744.941,265.911 740.5,264.5C 739.058,263.18 738.392,261.514 738.5,259.5C 738.5,258.5 738.5,257.5 738.5,256.5C 738.206,232.141 738.539,207.807 739.5,183.5C 741.6,180.896 743.933,178.396 746.5,176C 747.793,175.51 749.127,175.343 750.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8a22f\",d:\"M 909.5,253.5 C 910.167,253.5 910.833,253.5 911.5,253.5C 911.389,254.117 911.056,254.617 910.5,255C 872.331,255.831 834.331,255.664 796.5,254.5C 834.337,254.832 872.004,254.498 909.5,253.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#583804\",d:\"M 792.5,250.5 C 793.605,251.6 794.938,252.267 796.5,252.5C 797.167,252.5 797.833,252.5 798.5,252.5C 835.33,253.498 872.33,253.832 909.5,253.5C 872.004,254.498 834.337,254.832 796.5,254.5C 794.167,254.167 792.833,252.833 792.5,250.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#10191c\",d:\"M 913.5,215.5 C 914.495,226.654 914.828,237.988 914.5,249.5C 913.5,250.833 912.5,252.167 911.5,253.5C 910.833,253.5 910.167,253.5 909.5,253.5C 872.33,253.832 835.33,253.498 798.5,252.5C 814.167,252.5 829.833,252.5 845.5,252.5C 867.34,252.831 889.006,252.497 910.5,251.5C 911.167,251.5 911.5,251.167 911.5,250.5C 912.167,250.5 912.5,250.167 912.5,249.5C 913.493,241.016 913.826,232.349 913.5,223.5C 913.5,220.833 913.5,218.167 913.5,215.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#246489\",d:\"M 846.5,237.5 C 846.5,242.167 846.5,246.833 846.5,251.5C 867.833,251.5 889.167,251.5 910.5,251.5C 889.006,252.497 867.34,252.831 845.5,252.5C 845.179,247.305 845.513,242.305 846.5,237.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#40beeb\",d:\"M 846.5,235.5 C 846.833,235.5 847.167,235.5 847.5,235.5C 847.5,238.833 847.5,242.167 847.5,245.5C 847.5,247.167 847.5,248.833 847.5,250.5C 868.833,250.5 890.167,250.5 911.5,250.5C 911.5,251.167 911.167,251.5 910.5,251.5C 889.167,251.5 867.833,251.5 846.5,251.5C 846.5,246.833 846.5,242.167 846.5,237.5C 846.5,236.833 846.5,236.167 846.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2ed8fb\",d:\"M 911.5,242.5 C 911.5,245.167 911.5,247.833 911.5,250.5C 890.167,250.5 868.833,250.5 847.5,250.5C 847.5,248.833 847.5,247.167 847.5,245.5C 868.677,243.837 890.01,242.837 911.5,242.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0f3367\",d:\"M 818.5,232.5 C 818.5,232.167 818.5,231.833 818.5,231.5C 821.5,231.5 824.5,231.5 827.5,231.5C 827.5,232.167 827.5,232.833 827.5,233.5C 825.5,233.5 823.5,233.5 821.5,233.5C 821.5,239.5 821.5,245.5 821.5,251.5C 828.833,251.5 836.167,251.5 843.5,251.5C 843.5,245.5 843.5,239.5 843.5,233.5C 842.167,233.5 840.833,233.5 839.5,233.5C 841.607,232.532 843.941,232.198 846.5,232.5C 846.5,232.833 846.5,233.167 846.5,233.5C 846.5,234.167 846.5,234.833 846.5,235.5C 846.5,236.167 846.5,236.833 846.5,237.5C 845.513,242.305 845.179,247.305 845.5,252.5C 829.833,252.5 814.167,252.5 798.5,252.5C 797.833,252.5 797.167,252.5 796.5,252.5C 796.5,252.167 796.5,251.833 796.5,251.5C 804.167,251.5 811.833,251.5 819.5,251.5C 819.823,244.978 819.49,238.645 818.5,232.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3080ba\",d:\"M 827.5,233.5 C 831.5,233.5 835.5,233.5 839.5,233.5C 840.833,233.5 842.167,233.5 843.5,233.5C 843.5,239.5 843.5,245.5 843.5,251.5C 836.167,251.5 828.833,251.5 821.5,251.5C 821.5,245.5 821.5,239.5 821.5,233.5C 823.5,233.5 825.5,233.5 827.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48bff4\",d:\"M 842.5,239.5 C 842.5,243.167 842.5,246.833 842.5,250.5C 836.833,250.5 831.167,250.5 825.5,250.5C 825.5,250.167 825.5,249.833 825.5,249.5C 829.5,249.5 833.5,249.5 837.5,249.5C 838.167,249.5 838.833,249.5 839.5,249.5C 839.881,245.881 840.881,242.548 842.5,239.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ea2d8\",d:\"M 797.5,232.5 C 804.5,232.5 811.5,232.5 818.5,232.5C 819.49,238.645 819.823,244.978 819.5,251.5C 811.833,251.5 804.167,251.5 796.5,251.5C 795.5,251.167 794.833,250.5 794.5,249.5C 794.5,248.833 794.5,248.167 794.5,247.5C 795.267,248.172 795.934,249.005 796.5,250C 803.826,250.5 811.159,250.666 818.5,250.5C 818.5,244.833 818.5,239.167 818.5,233.5C 811.313,233.825 804.313,233.491 797.5,232.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#feeda4\",d:\"M 764.5,241.5 C 767.167,241.5 769.833,241.5 772.5,241.5C 772.5,242.833 772.5,244.167 772.5,245.5C 770.143,245.663 767.81,245.497 765.5,245C 764.663,243.989 764.33,242.822 764.5,241.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5a4212\",d:\"M 793.5,210.5 C 793.5,211.5 793.5,212.5 793.5,213.5C 793.5,213.833 793.5,214.167 793.5,214.5C 792.505,226.322 792.172,238.322 792.5,250.5C 791.34,238.007 791.173,225.34 792,212.5C 792.278,211.584 792.778,210.918 793.5,210.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282903\",d:\"M 913.5,211.5 C 914.222,211.918 914.722,212.584 915,213.5C 915.826,225.674 915.66,237.674 914.5,249.5C 914.828,237.988 914.495,226.654 913.5,215.5C 913.5,214.833 913.5,214.167 913.5,213.5C 913.5,212.833 913.5,212.167 913.5,211.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39dffc\",d:\"M 794.5,231.5 C 795.609,231.557 796.609,231.89 797.5,232.5C 804.313,233.491 811.313,233.825 818.5,233.5C 818.5,239.167 818.5,244.833 818.5,250.5C 811.159,250.666 803.826,250.5 796.5,250C 795.934,249.005 795.267,248.172 794.5,247.5C 794.5,242.167 794.5,236.833 794.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#59e8f8\",d:\"M 847.5,235.5 C 868.833,235.5 890.167,235.5 911.5,235.5C 911.5,237.833 911.5,240.167 911.5,242.5C 890.01,242.837 868.677,243.837 847.5,245.5C 847.5,242.167 847.5,238.833 847.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bdfdfe\",d:\"M 851.5,239.5 C 869.836,239.333 888.17,239.5 906.5,240C 906.957,240.414 907.291,240.914 907.5,241.5C 888.509,242.666 869.509,242.833 850.5,242C 850.167,241.667 849.833,241.333 849.5,241C 850.416,240.722 851.082,240.222 851.5,239.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#49daf4\",d:\"M 842.5,239.5 C 840.881,242.548 839.881,245.881 839.5,249.5C 839.5,245.5 839.5,241.5 839.5,237.5C 834.203,236.725 828.87,236.392 823.5,236.5C 823.5,237.833 823.5,239.167 823.5,240.5C 828.619,239.897 833.285,240.564 837.5,242.5C 832.833,242.5 828.167,242.5 823.5,242.5C 822.99,245.388 823.656,247.721 825.5,249.5C 825.5,249.833 825.5,250.167 825.5,250.5C 824.5,250.5 823.5,250.5 822.5,250.5C 822.5,245.167 822.5,239.833 822.5,234.5C 829.167,234.5 835.833,234.5 842.5,234.5C 842.5,236.167 842.5,237.833 842.5,239.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#94fafd\",d:\"M 837.5,242.5 C 837.5,244.833 837.5,247.167 837.5,249.5C 833.5,249.5 829.5,249.5 825.5,249.5C 823.656,247.721 822.99,245.388 823.5,242.5C 828.167,242.5 832.833,242.5 837.5,242.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4cf8fd\",d:\"M 839.5,249.5 C 838.833,249.5 838.167,249.5 837.5,249.5C 837.5,247.167 837.5,244.833 837.5,242.5C 833.285,240.564 828.619,239.897 823.5,240.5C 823.5,239.167 823.5,237.833 823.5,236.5C 828.87,236.392 834.203,236.725 839.5,237.5C 839.5,241.5 839.5,245.5 839.5,249.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#40c8fa\",d:\"M 847.5,235.5 C 868.994,234.503 890.66,234.169 912.5,234.5C 912.5,239.5 912.5,244.5 912.5,249.5C 912.5,250.167 912.167,250.5 911.5,250.5C 911.5,247.833 911.5,245.167 911.5,242.5C 911.5,240.167 911.5,237.833 911.5,235.5C 890.167,235.5 868.833,235.5 847.5,235.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2ea1eb\",d:\"M 846.5,233.5 C 868.5,233.5 890.5,233.5 912.5,233.5C 912.5,233.833 912.5,234.167 912.5,234.5C 890.66,234.169 868.994,234.503 847.5,235.5C 847.167,235.5 846.833,235.5 846.5,235.5C 846.5,234.833 846.5,234.167 846.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#090a08\",d:\"M 793.5,214.5 C 793.172,226.345 793.505,238.012 794.5,249.5C 794.833,250.5 795.5,251.167 796.5,251.5C 796.5,251.833 796.5,252.167 796.5,252.5C 794.938,252.267 793.605,251.6 792.5,250.5C 792.172,238.322 792.505,226.322 793.5,214.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#00277c\",d:\"M 827.5,231.5 C 834.167,231.5 840.833,231.5 847.5,231.5C 862.17,231.333 876.837,231.5 891.5,232C 876.504,232.5 861.504,232.667 846.5,232.5C 843.941,232.198 841.607,232.532 839.5,233.5C 835.5,233.5 831.5,233.5 827.5,233.5C 827.5,232.833 827.5,232.167 827.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1af22\",d:\"M 895.5,201.5 C 899.646,200.353 903.98,200.186 908.5,201C 912.154,204.646 914.988,208.813 917,213.5C 917.385,225.83 918.219,237.997 919.5,250C 917.46,252.518 914.793,253.685 911.5,253.5C 912.5,252.167 913.5,250.833 914.5,249.5C 915.66,237.674 915.826,225.674 915,213.5C 914.722,212.584 914.222,211.918 913.5,211.5C 912.857,208.012 910.857,205.512 907.5,204C 904.464,201.994 901.131,201.16 897.5,201.5C 896.833,201.5 896.167,201.5 895.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0a4c9e\",d:\"M 847.5,231.5 C 847.5,231.167 847.5,230.833 847.5,230.5C 850.167,230.5 852.833,230.5 855.5,230.5C 869.171,230.333 882.837,230.5 896.5,231C 902.26,230.878 907.593,231.711 912.5,233.5C 890.5,233.5 868.5,233.5 846.5,233.5C 846.5,233.167 846.5,232.833 846.5,232.5C 861.504,232.667 876.504,232.5 891.5,232C 876.837,231.5 862.17,231.333 847.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c73c8\",d:\"M 818.5,231.5 C 818.5,231.833 818.5,232.167 818.5,232.5C 811.5,232.5 804.5,232.5 797.5,232.5C 797.586,231.504 797.252,230.671 796.5,230C 803.991,229.063 811.324,229.563 818.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2278bd\",d:\"M 913.5,223.5 C 913.826,232.349 913.493,241.016 912.5,249.5C 912.5,244.5 912.5,239.5 912.5,234.5C 912.5,234.167 912.5,233.833 912.5,233.5C 907.593,231.711 902.26,230.878 896.5,231C 882.837,230.5 869.171,230.333 855.5,230.5C 873.993,229.503 892.659,229.17 911.5,229.5C 911.025,226.918 911.692,224.918 913.5,223.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c90d2\",d:\"M 819.5,224.5 C 820.183,226.176 821.517,226.843 823.5,226.5C 823.5,227.5 823.5,228.5 823.5,229.5C 828.117,230.563 836.117,230.897 847.5,230.5C 847.5,230.833 847.5,231.167 847.5,231.5C 840.833,231.5 834.167,231.5 827.5,231.5C 824.5,231.5 821.5,231.5 818.5,231.5C 811.324,229.563 803.991,229.063 796.5,230C 797.252,230.671 797.586,231.504 797.5,232.5C 796.609,231.89 795.609,231.557 794.5,231.5C 794.5,230.5 794.5,229.5 794.5,228.5C 797.216,228.614 799.216,227.614 800.5,225.5C 807.135,229.696 813.469,229.363 819.5,224.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2db7f2\",d:\"M 908.5,207.5 C 910.643,209.131 912.31,211.131 913.5,213.5C 913.5,214.167 913.5,214.833 913.5,215.5C 913.5,218.167 913.5,220.833 913.5,223.5C 911.692,224.918 911.025,226.918 911.5,229.5C 892.659,229.17 873.993,229.503 855.5,230.5C 852.833,230.5 850.167,230.5 847.5,230.5C 836.117,230.897 828.117,230.563 823.5,229.5C 823.5,228.5 823.5,227.5 823.5,226.5C 821.517,226.843 820.183,226.176 819.5,224.5C 820.024,222.694 820.691,221.028 821.5,219.5C 821.343,220.873 821.51,222.207 822,223.5C 822.333,223.167 822.667,222.833 823,222.5C 823.614,228.389 826.447,229.889 831.5,227C 828.258,226.717 827.924,225.883 830.5,224.5C 849.296,224.648 868.13,225.315 887,226.5C 888.107,226.415 889.107,226.081 890,225.5C 890.181,222.305 890.681,219.305 891.5,216.5C 891.95,220.232 893.617,223.398 896.5,226C 898.387,226.78 900.054,226.613 901.5,225.5C 906.109,223.275 907.609,219.609 906,214.5C 904.961,213.756 904.461,212.756 904.5,211.5C 905.794,212.29 906.961,213.29 908,214.5C 909.06,212.05 909.227,209.717 908.5,207.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#17355b\",d:\"M 795.5,207.5 C 796.167,207.5 796.833,207.5 797.5,207.5C 795.449,213.163 796.782,217.83 801.5,221.5C 805.454,227.407 810.287,228.073 816,223.5C 816.847,221.807 817.68,220.14 818.5,218.5C 820.04,216.162 820.706,213.495 820.5,210.5C 821.167,210.5 821.833,210.5 822.5,210.5C 822.5,210.833 822.5,211.167 822.5,211.5C 822.721,214.279 822.388,216.946 821.5,219.5C 820.691,221.028 820.024,222.694 819.5,224.5C 813.469,229.363 807.135,229.696 800.5,225.5C 798.678,222.528 796.844,219.528 795,216.5C 794.501,220.486 794.334,224.486 794.5,228.5C 794.5,229.5 794.5,230.5 794.5,231.5C 794.5,236.833 794.5,242.167 794.5,247.5C 794.5,248.167 794.5,248.833 794.5,249.5C 793.505,238.012 793.172,226.345 793.5,214.5C 793.5,214.167 793.5,213.833 793.5,213.5C 795.074,211.898 795.741,209.898 795.5,207.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#201c2e\",d:\"M 904.5,211.5 C 904.461,212.756 904.961,213.756 906,214.5C 907.609,219.609 906.109,223.275 901.5,225.5C 899.517,225.843 898.183,225.176 897.5,223.5C 899.554,223.635 901.221,222.968 902.5,221.5C 903.993,220.688 904.66,219.355 904.5,217.5C 904.66,215.645 903.993,214.312 902.5,213.5C 901.508,213.672 900.842,213.338 900.5,212.5C 901.833,212.167 903.167,211.833 904.5,211.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#95d2f4\",d:\"M 800.5,225.5 C 799.216,227.614 797.216,228.614 794.5,228.5C 794.334,224.486 794.501,220.486 795,216.5C 796.844,219.528 798.678,222.528 800.5,225.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e8a59f\",d:\"M 900.5,212.5 C 900.842,213.338 901.508,213.672 902.5,213.5C 901.768,216.068 901.768,218.734 902.5,221.5C 901.221,222.968 899.554,223.635 897.5,223.5C 894.764,221.142 893.93,218.142 895,214.5C 896.444,212.845 898.278,212.178 900.5,212.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3dd3fb\",d:\"M 822.5,211.5 C 838.809,212.424 855.143,212.757 871.5,212.5C 856.672,213.331 841.672,213.831 826.5,214C 830.777,214.955 835.111,215.455 839.5,215.5C 857.19,214.912 874.857,214.246 892.5,213.5C 891.89,214.391 891.557,215.391 891.5,216.5C 890.681,219.305 890.181,222.305 890,225.5C 889.107,226.081 888.107,226.415 887,226.5C 868.13,225.315 849.296,224.648 830.5,224.5C 827.924,225.883 828.258,226.717 831.5,227C 826.447,229.889 823.614,228.389 823,222.5C 822.667,222.833 822.333,223.167 822,223.5C 821.51,222.207 821.343,220.873 821.5,219.5C 822.388,216.946 822.721,214.279 822.5,211.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b86869\",d:\"M 902.5,213.5 C 903.993,214.312 904.66,215.645 904.5,217.5C 904.66,219.355 903.993,220.688 902.5,221.5C 901.768,218.734 901.768,216.068 902.5,213.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9af8fe\",d:\"M 829.5,217.5 C 835.509,217.334 841.509,217.501 847.5,218C 850.035,218.928 851.035,220.762 850.5,223.5C 842.5,223.5 834.5,223.5 826.5,223.5C 826.5,221.833 826.5,220.167 826.5,218.5C 827.791,218.737 828.791,218.404 829.5,217.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#143564\",d:\"M 904.5,211.5 C 903.167,211.833 901.833,212.167 900.5,212.5C 898.278,212.178 896.444,212.845 895,214.5C 893.93,218.142 894.764,221.142 897.5,223.5C 898.183,225.176 899.517,225.843 901.5,225.5C 900.054,226.613 898.387,226.78 896.5,226C 893.617,223.398 891.95,220.232 891.5,216.5C 891.557,215.391 891.89,214.391 892.5,213.5C 895.249,209.829 898.916,208.663 903.5,210C 904.056,210.383 904.389,210.883 904.5,211.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dbf0f4\",d:\"M 818.5,218.5 C 817.68,220.14 816.847,221.807 816,223.5C 810.287,228.073 805.454,227.407 801.5,221.5C 800.62,219.611 800.62,217.611 801.5,215.5C 806.869,216.471 812.203,216.471 817.5,215.5C 818.386,216.325 818.719,217.325 818.5,218.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bce0ec\",d:\"M 813.5,203.5 C 816.833,204.833 819.167,207.167 820.5,210.5C 820.706,213.495 820.04,216.162 818.5,218.5C 818.719,217.325 818.386,216.325 817.5,215.5C 812.203,216.471 806.869,216.471 801.5,215.5C 800.62,217.611 800.62,219.611 801.5,221.5C 796.782,217.83 795.449,213.163 797.5,207.5C 797.5,206.833 797.833,206.5 798.5,206.5C 798.5,208.5 798.5,210.5 798.5,212.5C 805.167,212.5 811.833,212.5 818.5,212.5C 818.657,211.127 818.49,209.793 818,208.5C 817.586,208.957 817.086,209.291 816.5,209.5C 815.473,207.447 814.473,205.447 813.5,203.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7f350f\",d:\"M 773.5,203.5 C 775.176,204.183 775.843,205.517 775.5,207.5C 774.062,212.57 770.728,214.403 765.5,213C 764.242,211.259 763.242,209.426 762.5,207.5C 763.167,206.5 763.833,205.5 764.5,204.5C 763.671,209.501 765.671,211.668 770.5,211C 771.305,209.887 771.972,208.721 772.5,207.5C 773.434,206.432 773.768,205.099 773.5,203.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#162130\",d:\"M 888.5,209.5 C 888.196,210.15 887.863,210.817 887.5,211.5C 882.208,212.495 876.875,212.828 871.5,212.5C 855.143,212.757 838.809,212.424 822.5,211.5C 822.5,211.167 822.5,210.833 822.5,210.5C 843.167,210.5 863.833,210.5 884.5,210.5C 885.833,210.167 887.167,209.833 888.5,209.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#222120\",d:\"M 795.5,207.5 C 795.741,209.898 795.074,211.898 793.5,213.5C 793.5,212.5 793.5,211.5 793.5,210.5C 793.932,209.29 794.599,208.29 795.5,207.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c05b4d\",d:\"M 764.5,204.5 C 764.833,204.5 765.167,204.5 765.5,204.5C 766.175,209.611 768.509,210.611 772.5,207.5C 771.972,208.721 771.305,209.887 770.5,211C 765.671,211.668 763.671,209.501 764.5,204.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#84eef9\",d:\"M 908.5,207.5 C 909.227,209.717 909.06,212.05 908,214.5C 906.961,213.29 905.794,212.29 904.5,211.5C 904.389,210.883 904.056,210.383 903.5,210C 898.916,208.663 895.249,209.829 892.5,213.5C 874.857,214.246 857.19,214.912 839.5,215.5C 835.111,215.455 830.777,214.955 826.5,214C 841.672,213.831 856.672,213.331 871.5,212.5C 876.875,212.828 882.208,212.495 887.5,211.5C 887.863,210.817 888.196,210.15 888.5,209.5C 894.712,202.512 901.379,201.845 908.5,207.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0a121\",d:\"M 815.5,201.5 C 817.606,202.783 819.94,203.616 822.5,204C 823.38,205.356 823.714,206.856 823.5,208.5C 843.833,208.5 864.167,208.5 884.5,208.5C 884.5,208.833 884.5,209.167 884.5,209.5C 863.489,209.833 842.489,209.5 821.5,208.5C 819.477,206.147 817.477,203.814 815.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0fafa\",d:\"M 813.5,203.5 C 814.473,205.447 815.473,207.447 816.5,209.5C 817.086,209.291 817.586,208.957 818,208.5C 818.49,209.793 818.657,211.127 818.5,212.5C 811.833,212.5 805.167,212.5 798.5,212.5C 798.5,210.5 798.5,208.5 798.5,206.5C 802.777,202.499 807.777,201.499 813.5,203.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f47029\",d:\"M 773.5,203.5 C 773.768,205.099 773.434,206.432 772.5,207.5C 768.509,210.611 766.175,209.611 765.5,204.5C 766.607,203.008 768.107,202.008 770,201.5C 771.699,201.387 772.866,202.053 773.5,203.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f281f\",d:\"M 897.5,201.5 C 901.131,201.16 904.464,201.994 907.5,204C 910.857,205.512 912.857,208.012 913.5,211.5C 913.5,212.167 913.5,212.833 913.5,213.5C 912.31,211.131 910.643,209.131 908.5,207.5C 901.379,201.845 894.712,202.512 888.5,209.5C 887.167,209.833 885.833,210.167 884.5,210.5C 884.5,210.167 884.5,209.833 884.5,209.5C 884.5,209.167 884.5,208.833 884.5,208.5C 887.004,207.416 889.337,206.083 891.5,204.5C 893.544,203.492 895.544,202.492 897.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#382916\",d:\"M 815.5,201.5 C 817.477,203.814 819.477,206.147 821.5,208.5C 842.489,209.5 863.489,209.833 884.5,209.5C 884.5,209.833 884.5,210.167 884.5,210.5C 863.833,210.5 843.167,210.5 822.5,210.5C 821.833,210.5 821.167,210.5 820.5,210.5C 819.167,207.167 816.833,204.833 813.5,203.5C 807.777,201.499 802.777,202.499 798.5,206.5C 797.833,206.5 797.5,206.833 797.5,207.5C 796.833,207.5 796.167,207.5 795.5,207.5C 797.252,205.754 798.585,203.754 799.5,201.5C 804.856,200.296 810.189,200.296 815.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6f6117\",d:\"M 895.5,201.5 C 896.167,201.5 896.833,201.5 897.5,201.5C 895.544,202.492 893.544,203.492 891.5,204.5C 892.262,202.738 893.596,201.738 895.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#351e2a\",d:\"M 772.5,199.5 C 770.631,200.165 768.631,200.831 766.5,201.5C 765.873,202.417 765.539,203.417 765.5,204.5C 765.167,204.5 764.833,204.5 764.5,204.5C 763.833,205.5 763.167,206.5 762.5,207.5C 761.314,206.295 761.314,204.961 762.5,203.5C 764.881,199.598 768.214,198.265 772.5,199.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eae178\",d:\"M 771.5,195.5 C 768.99,195.054 766.99,195.72 765.5,197.5C 764.685,198.837 763.518,199.837 762,200.5C 761.517,201.448 761.351,202.448 761.5,203.5C 760.883,203.611 760.383,203.944 760,204.5C 759.333,203.167 759.333,201.833 760,200.5C 762.52,195.314 766.353,193.647 771.5,195.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4eaba\",d:\"M 771.5,195.5 C 774.06,196.22 775.893,197.887 777,200.5C 777.74,201.749 777.573,202.749 776.5,203.5C 775.5,202.167 774.5,200.833 773.5,199.5C 773.389,198.883 773.056,198.383 772.5,198C 770.19,197.503 767.857,197.337 765.5,197.5C 766.99,195.72 768.99,195.054 771.5,195.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#763f38\",d:\"M 772.5,199.5 C 772.833,199.5 773.167,199.5 773.5,199.5C 774.5,200.833 775.5,202.167 776.5,203.5C 776.768,205.099 776.434,206.432 775.5,207.5C 775.843,205.517 775.176,204.183 773.5,203.5C 772.866,202.053 771.699,201.387 770,201.5C 768.107,202.008 766.607,203.008 765.5,204.5C 765.539,203.417 765.873,202.417 766.5,201.5C 768.631,200.831 770.631,200.165 772.5,199.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cbd9d4\",d:\"M 765.5,197.5 C 767.857,197.337 770.19,197.503 772.5,198C 773.056,198.383 773.389,198.883 773.5,199.5C 773.167,199.5 772.833,199.5 772.5,199.5C 768.214,198.265 764.881,199.598 762.5,203.5C 762.167,203.5 761.833,203.5 761.5,203.5C 761.351,202.448 761.517,201.448 762,200.5C 763.518,199.837 764.685,198.837 765.5,197.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b1861f\",d:\"M 815.5,201.5 C 810.189,200.296 804.856,200.296 799.5,201.5C 799.611,200.883 799.944,200.383 800.5,200C 805.167,199.333 809.833,199.333 814.5,200C 815.056,200.383 815.389,200.883 815.5,201.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0cb40\",d:\"M 873.5,186.5 C 870.615,186.194 867.948,186.527 865.5,187.5C 866.244,190.95 864.91,192.616 861.5,192.5C 861.383,190.516 862.05,188.85 863.5,187.5C 862.349,186.269 861.183,186.269 860,187.5C 859.503,190.146 859.336,192.813 859.5,195.5C 861.5,195.5 863.5,195.5 865.5,195.5C 861.357,196.104 857.19,197.104 853,198.5C 850.542,197.92 848.042,197.586 845.5,197.5C 841.18,198.528 836.846,199.028 832.5,199C 831.533,194.599 831.2,190.099 831.5,185.5C 837.026,185.179 842.36,185.512 847.5,186.5C 849.029,185.653 850.696,184.986 852.5,184.5C 857.508,185.768 862.508,185.768 867.5,184.5C 869.717,184.878 871.717,185.545 873.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebc962\",d:\"M 865.5,187.5 C 867.948,186.527 870.615,186.194 873.5,186.5C 874.708,187.234 876.041,187.567 877.5,187.5C 877.785,189.288 877.452,190.955 876.5,192.5C 874.227,191.625 873.227,189.958 873.5,187.5C 872.5,187.5 871.5,187.5 870.5,187.5C 870.167,190.167 869.833,192.833 869.5,195.5C 868.167,195.5 866.833,195.5 865.5,195.5C 867.461,193.202 868.461,190.535 868.5,187.5C 867.5,187.5 866.5,187.5 865.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf0bf\",d:\"M 841.5,195.5 C 841.5,194.167 841.5,192.833 841.5,191.5C 844.658,192.876 847.991,193.542 851.5,193.5C 851.5,191.5 851.5,189.5 851.5,187.5C 852.708,186.218 854.042,186.218 855.5,187.5C 856.516,190.134 856.516,192.8 855.5,195.5C 850.833,195.5 846.167,195.5 841.5,195.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf1bb\",d:\"M 865.5,187.5 C 866.5,187.5 867.5,187.5 868.5,187.5C 868.461,190.535 867.461,193.202 865.5,195.5C 863.5,195.5 861.5,195.5 859.5,195.5C 859.336,192.813 859.503,190.146 860,187.5C 861.183,186.269 862.349,186.269 863.5,187.5C 862.05,188.85 861.383,190.516 861.5,192.5C 864.91,192.616 866.244,190.95 865.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8e895\",d:\"M 877.5,187.5 C 878.748,188.334 879.415,189.667 879.5,191.5C 879.167,192.833 878.833,194.167 878.5,195.5C 875.549,194.643 872.549,194.643 869.5,195.5C 869.833,192.833 870.167,190.167 870.5,187.5C 871.5,187.5 872.5,187.5 873.5,187.5C 873.227,189.958 874.227,191.625 876.5,192.5C 877.452,190.955 877.785,189.288 877.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2de8f\",d:\"M 847.5,186.5 C 848.568,187.434 849.901,187.768 851.5,187.5C 851.5,189.5 851.5,191.5 851.5,193.5C 847.991,193.542 844.658,192.876 841.5,191.5C 841.5,192.833 841.5,194.167 841.5,195.5C 840.833,195.5 840.167,195.5 839.5,195.5C 839.5,192.833 839.5,190.167 839.5,187.5C 842.096,186.735 844.763,186.401 847.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbefbe\",d:\"M 839.5,187.5 C 839.5,190.167 839.5,192.833 839.5,195.5C 837.167,195.5 834.833,195.5 832.5,195.5C 832.5,192.5 832.5,189.5 832.5,186.5C 835.059,186.198 837.393,186.532 839.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdfbce\",d:\"M 951.5,172.5 C 952.995,172.989 954.329,173.655 955.5,174.5C 920.349,173.853 885.182,173.52 850,173.5C 816.493,173.5 783.327,174.167 750.5,175.5C 749.127,175.343 747.793,175.51 746.5,176C 743.933,178.396 741.6,180.896 739.5,183.5C 738.833,184.167 738.167,184.833 737.5,185.5C 738.801,183.328 739.801,180.995 740.5,178.5C 740.782,177.222 741.449,176.222 742.5,175.5C 743.605,174.4 744.938,173.733 746.5,173.5C 814.792,172.507 883.125,172.173 951.5,172.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e3238\",d:\"M 750.5,169.5 C 816.834,169.333 883.168,169.5 949.5,170C 951.518,170.505 953.518,171.005 955.5,171.5C 957.667,173.511 960.334,174.678 963.5,175C 964.38,176.356 964.714,177.856 964.5,179.5C 963.764,177.771 962.43,176.771 960.5,176.5C 959.833,176.167 959.167,175.833 958.5,175.5C 957.833,175.5 957.167,175.5 956.5,175.5C 956.5,174.833 956.167,174.5 955.5,174.5C 954.329,173.655 952.995,172.989 951.5,172.5C 883.668,171.335 815.668,171.168 747.5,172C 746.944,172.383 746.611,172.883 746.5,173.5C 744.938,173.733 743.605,174.4 742.5,175.5C 742.281,174.325 742.614,173.325 743.5,172.5C 745.885,171.339 748.219,170.339 750.5,169.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2dd59\",d:\"M 955.5,174.5 C 956.167,174.5 956.5,174.833 956.5,175.5C 887.833,175.5 819.167,175.5 750.5,175.5C 783.327,174.167 816.493,173.5 850,173.5C 885.182,173.52 920.349,173.853 955.5,174.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6e1d7\",d:\"M 951.5,172.5 C 883.125,172.173 814.792,172.507 746.5,173.5C 746.611,172.883 746.944,172.383 747.5,172C 815.668,171.168 883.668,171.335 951.5,172.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272d40\",d:\"M 955.5,171.5 C 953.518,171.005 951.518,170.505 949.5,170C 883.168,169.5 816.834,169.333 750.5,169.5C 753.58,168.217 756.914,167.55 760.5,167.5C 823.499,168.83 886.499,168.83 949.5,167.5C 951.5,167.833 953.5,168.167 955.5,168.5C 954.209,169.527 954.209,170.527 955.5,171.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#262e43\",d:\"M 927.5,162.5 C 932.681,163.167 938.015,163.833 943.5,164.5C 914.167,164.833 884.833,165.167 855.5,165.5C 825.826,165.5 796.492,164.833 767.5,163.5C 820.826,163.5 874.159,163.166 927.5,162.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d212d\",d:\"M 763.5,111.5 C 764.094,123.825 764.427,136.158 764.5,148.5C 762.035,149.417 759.535,150.417 757,151.5C 755.092,151.285 753.926,150.285 753.5,148.5C 755.5,148.5 757.5,148.5 759.5,148.5C 761.479,136.88 762.146,124.88 761.5,112.5C 761.842,111.662 762.508,111.328 763.5,111.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c48a1a\",d:\"M 731.5,118.5 C 731.666,128.172 731.5,137.839 731,147.5C 725.259,148.475 719.425,148.808 713.5,148.5C 713.5,148.167 713.5,147.833 713.5,147.5C 718.784,146.878 724.117,146.211 729.5,145.5C 730.141,136.371 730.808,127.371 731.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aecdee\",d:\"M 741.5,122.5 C 741.5,122.167 741.5,121.833 741.5,121.5C 742.167,121.5 742.833,121.5 743.5,121.5C 745.167,121.5 746.833,121.5 748.5,121.5C 748.5,130.167 748.5,138.833 748.5,147.5C 746.879,147.213 745.879,146.213 745.5,144.5C 746.626,138.218 746.793,131.885 746,125.5C 742.989,124 743.489,123.166 747.5,123C 745.527,122.505 743.527,122.338 741.5,122.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6f716f\",d:\"M 767.5,107.5 C 768.222,107.918 768.722,108.584 769,109.5C 769.667,122.167 769.667,134.833 769,147.5C 767.644,148.38 766.144,148.714 764.5,148.5C 764.427,136.158 764.094,123.825 763.5,111.5C 764.833,111.5 766.167,111.5 767.5,111.5C 767.5,110.167 767.5,108.833 767.5,107.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#898b62\",d:\"M 751.5,115.5 C 751.5,115.167 751.5,114.833 751.5,114.5C 753.5,114.5 755.5,114.5 757.5,114.5C 757.976,118.993 758.642,123.327 759.5,127.5C 759.666,133.509 759.499,139.509 759,145.5C 757.267,147.602 755.267,147.935 753,146.5C 752.283,137.483 752.45,128.483 753.5,119.5C 753.415,117.667 752.748,116.334 751.5,115.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4f8f9\",d:\"M 735.5,121.5 C 737.5,121.5 739.5,121.5 741.5,121.5C 741.5,121.833 741.5,122.167 741.5,122.5C 741.184,130.752 741.518,138.919 742.5,147C 740.19,147.497 737.857,147.663 735.5,147.5C 735.5,138.833 735.5,130.167 735.5,121.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b0f09\",d:\"M 747.5,119.5 C 746.432,120.434 745.099,120.768 743.5,120.5C 740.167,120.5 736.833,120.5 733.5,120.5C 733.5,129.833 733.5,139.167 733.5,148.5C 733.389,149.117 733.056,149.617 732.5,150C 725.654,150.821 718.987,150.654 712.5,149.5C 719.09,149.811 725.59,149.478 732,148.5C 732.5,138.839 732.666,129.172 732.5,119.5C 737.5,119.5 742.5,119.5 747.5,119.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b8dae2\",d:\"M 735.5,121.5 C 735.5,130.167 735.5,138.833 735.5,147.5C 737.857,147.663 740.19,147.497 742.5,147C 741.518,138.919 741.184,130.752 741.5,122.5C 743.527,122.338 745.527,122.505 747.5,123C 743.489,123.166 742.989,124 746,125.5C 746.793,131.885 746.626,138.218 745.5,144.5C 745.879,146.213 746.879,147.213 748.5,147.5C 744.03,148.486 739.363,148.819 734.5,148.5C 734.173,139.318 734.507,130.318 735.5,121.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44525b\",d:\"M 743.5,120.5 C 743.5,120.833 743.5,121.167 743.5,121.5C 742.833,121.5 742.167,121.5 741.5,121.5C 739.5,121.5 737.5,121.5 735.5,121.5C 734.507,130.318 734.173,139.318 734.5,148.5C 734.167,148.5 733.833,148.5 733.5,148.5C 733.5,139.167 733.5,129.833 733.5,120.5C 736.833,120.5 740.167,120.5 743.5,120.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f5253\",d:\"M 760.5,112.5 C 760.833,112.5 761.167,112.5 761.5,112.5C 762.146,124.88 761.479,136.88 759.5,148.5C 760.868,126.081 760.868,119.081 759.5,127.5C 758.642,123.327 757.976,118.993 757.5,114.5C 757.5,114.167 757.5,113.833 757.5,113.5C 758.391,112.89 759.391,112.557 760.5,112.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#818684\",d:\"M 759.5,148.5 C 757.5,148.5 755.5,148.5 753.5,148.5C 752.167,148.5 751.5,147.833 751.5,146.5C 751.5,136.167 751.5,125.833 751.5,115.5C 752.748,116.334 753.415,117.667 753.5,119.5C 752.45,128.483 752.283,137.483 753,146.5C 755.267,147.935 757.267,147.602 759,145.5C 759.499,139.509 759.666,133.509 759.5,127.5C 760.868,119.081 760.868,126.081 759.5,148.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4e5976\",d:\"M 751.5,114.5 C 751.5,114.833 751.5,115.167 751.5,115.5C 751.5,125.833 751.5,136.167 751.5,146.5C 750.833,137.167 750.167,127.833 749.5,118.5C 749.157,116.517 749.824,115.183 751.5,114.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#57370a\",d:\"M 731.5,118.5 C 737.5,118.5 743.5,118.5 749.5,118.5C 749.158,119.338 748.492,119.672 747.5,119.5C 742.5,119.5 737.5,119.5 732.5,119.5C 732.666,129.172 732.5,138.839 732,148.5C 725.59,149.478 719.09,149.811 712.5,149.5C 712.5,149.167 712.5,148.833 712.5,148.5C 712.833,148.5 713.167,148.5 713.5,148.5C 719.425,148.808 725.259,148.475 731,147.5C 731.5,137.839 731.666,128.172 731.5,118.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3dcd8\",d:\"M 711.5,110.5 C 712.167,122.5 712.833,134.5 713.5,146.5C 713.5,146.833 713.5,147.167 713.5,147.5C 713.5,147.833 713.5,148.167 713.5,148.5C 713.167,148.5 712.833,148.5 712.5,148.5C 711.883,148.389 711.383,148.056 711,147.5C 710.173,134.993 710.34,122.66 711.5,110.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8f8c5\",d:\"M 713.5,108.5 C 713.833,108.5 714.167,108.5 714.5,108.5C 713.52,121.087 713.187,133.754 713.5,146.5C 712.833,134.5 712.167,122.5 711.5,110.5C 711.833,109.5 712.5,108.833 713.5,108.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b49b3d\",d:\"M 757.5,113.5 C 757.5,113.833 757.5,114.167 757.5,114.5C 755.5,114.5 753.5,114.5 751.5,114.5C 749.824,115.183 749.157,116.517 749.5,118.5C 743.5,118.5 737.5,118.5 731.5,118.5C 731.842,117.662 732.508,117.328 733.5,117.5C 738.5,117.5 743.5,117.5 748.5,117.5C 748.5,116.167 748.5,114.833 748.5,113.5C 751.5,113.5 754.5,113.5 757.5,113.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc00f\",d:\"M 734.5,95.5 C 735.067,96.4202 734.401,96.7535 732.5,96.5C 732.335,99.5184 732.502,102.518 733,105.5C 734.93,100.787 738.097,99.4534 742.5,101.5C 743.496,101.414 744.329,101.748 745,102.5C 745.711,104.899 745.544,107.232 744.5,109.5C 745.09,110.799 746.09,111.632 747.5,112C 746.809,113.067 746.309,114.234 746,115.5C 741.732,116.14 737.565,116.807 733.5,117.5C 732.508,117.328 731.842,117.662 731.5,118.5C 730.808,127.371 730.141,136.371 729.5,145.5C 724.117,146.211 718.784,146.878 713.5,147.5C 713.5,147.167 713.5,146.833 713.5,146.5C 713.187,133.754 713.52,121.087 714.5,108.5C 716.194,106.139 718.194,104.139 720.5,102.5C 723.603,100.577 726.603,98.41 729.5,96C 731.134,95.5065 732.801,95.3398 734.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#94763e\",d:\"M 761.5,102.5 C 761.833,102.5 762.167,102.5 762.5,102.5C 763.833,104.5 765.5,106.167 767.5,107.5C 767.5,108.833 767.5,110.167 767.5,111.5C 766.167,111.5 764.833,111.5 763.5,111.5C 762.508,111.328 761.842,111.662 761.5,112.5C 761.167,112.5 760.833,112.5 760.5,112.5C 760.821,110.952 761.821,110.285 763.5,110.5C 763.713,107.549 763.046,104.882 761.5,102.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d68e03\",d:\"M 742.5,101.5 C 744.309,107.483 741.976,109.816 735.5,108.5C 734.833,103.167 737.167,100.833 742.5,101.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a2208\",d:\"M 474.5,215.5 C 475.117,215.611 475.617,215.944 476,216.5C 476.5,232.83 476.667,249.163 476.5,265.5C 475.063,269.667 472.063,271.667 467.5,271.5C 467.5,271.167 467.5,270.833 467.5,270.5C 471.443,269.724 473.943,267.391 475,263.5C 475.828,247.994 475.661,232.661 474.5,217.5C 474.5,216.833 474.5,216.167 474.5,215.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a718a\",d:\"M 717.5,191.5 C 717.667,213.503 717.5,235.503 717,257.5C 714.273,262.396 710.439,266.062 705.5,268.5C 667.525,270.469 629.525,270.969 591.5,270C 589.846,269.392 588.179,268.892 586.5,268.5C 584.027,266.939 582.027,264.939 580.5,262.5C 581.404,261.791 581.737,260.791 581.5,259.5C 584.093,264.098 588.093,265.932 593.5,265C 592.663,263.989 592.33,262.822 592.5,261.5C 598.138,261.991 603.472,263.491 608.5,266C 614.177,265.989 619.677,266.823 625,268.5C 632.982,267.456 640.316,267.456 647,268.5C 647.333,267.833 647.667,267.167 648,266.5C 649.931,267.492 652.097,267.825 654.5,267.5C 656.568,267.033 658.568,266.366 660.5,265.5C 663.048,265.753 665.215,267.086 667,269.5C 669.557,268.458 671.89,267.125 674,265.5C 674.333,266.167 674.667,266.833 675,267.5C 675.667,264.833 676.333,264.833 677,267.5C 677.667,264.833 678.333,264.833 679,267.5C 686.244,266.754 694.077,266.42 702.5,266.5C 704.655,266.628 706.655,266.128 708.5,265C 710.14,261.364 712.14,258.03 714.5,255C 713.43,247.229 713.43,239.562 714.5,232C 713.726,229.595 713.226,227.095 713,224.5C 711.301,223.594 709.467,223.261 707.5,223.5C 707.172,218.125 707.505,212.792 708.5,207.5C 709.333,208.5 710.167,209.5 711,210.5C 711.333,205.833 711.667,201.167 712,196.5C 712.333,197.167 712.667,197.833 713,198.5C 714.352,196.406 714.852,194.073 714.5,191.5C 715.5,191.5 716.5,191.5 717.5,191.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282e4d\",d:\"M 216.5,260.5 C 216.022,263.278 217.022,265.278 219.5,266.5C 217.865,267.681 216.198,267.681 214.5,266.5C 213.269,267.651 213.269,268.817 214.5,270C 217.355,272.08 220.021,271.914 222.5,269.5C 222.833,271.833 223.167,274.167 223.5,276.5C 223.121,279.681 222.621,282.681 222,285.5C 226.414,286.303 230.914,286.803 235.5,287C 233.833,287.333 232.167,287.667 230.5,288C 231.167,288.333 231.833,288.667 232.5,289C 228.312,289.176 224.312,289.676 220.5,290.5C 166.833,290.5 113.167,290.5 59.5,290.5C 59.4142,289.504 59.7476,288.671 60.5,288C 66.5,287.667 72.5,287.333 78.5,287C 80.4646,283.963 82.9646,282.463 86,282.5C 86.3333,283.833 86.6667,285.167 87,286.5C 87.4828,285.552 87.6495,284.552 87.5,283.5C 91.5932,283.522 95.5932,284.189 99.5,285.5C 101.486,285.213 103.32,284.547 105,283.5C 106.22,284.388 107.553,285.055 109,285.5C 113.528,284.406 117.861,283.073 122,281.5C 123.827,282.659 125.493,283.992 127,285.5C 128,284.833 129,284.167 130,283.5C 133.667,283.833 137.333,284.167 141,284.5C 142.706,283.692 143.539,282.359 143.5,280.5C 137.086,279.473 130.919,279.473 125,280.5C 123.073,279.139 120.906,278.306 118.5,278C 105.5,277.667 92.5,277.333 79.5,277C 73.0621,276.078 66.7288,274.911 60.5,273.5C 107.003,273.832 153.336,273.499 199.5,272.5C 207.191,271.172 212.857,267.172 216.5,260.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e39311\",d:\"M 399.5,256.5 C 398.403,261.27 395.737,264.936 391.5,267.5C 388.978,267.128 386.978,267.961 385.5,270C 339.478,270.813 293.478,270.647 247.5,269.5C 244.236,267.906 241.569,265.573 239.5,262.5C 243.174,263.847 246.84,265.18 250.5,266.5C 262.655,267.495 274.989,267.829 287.5,267.5C 303.326,268.496 319.326,269.163 335.5,269.5C 352.647,268.424 369.647,267.424 386.5,266.5C 389.88,264.81 393.213,263.143 396.5,261.5C 396.241,259.011 397.241,257.344 399.5,256.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eca206\",d:\"M 386.5,266.5 C 369.647,267.424 352.647,268.424 335.5,269.5C 319.326,269.163 303.326,268.496 287.5,267.5C 320.496,266.818 353.496,266.485 386.5,266.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282d4a\",d:\"M 106.5,95.5 C 106.5,100.833 106.5,106.167 106.5,111.5C 106.5,118.5 106.5,125.5 106.5,132.5C 106.5,137.833 106.5,143.167 106.5,148.5C 119.313,150.022 132.313,150.522 145.5,150C 146.416,149.722 147.082,149.222 147.5,148.5C 154.022,148.823 160.355,148.49 166.5,147.5C 166.173,137.985 166.506,128.652 167.5,119.5C 167.544,130.876 167.544,142.043 167.5,153C 170.661,154.565 173.661,156.398 176.5,158.5C 177.645,157.224 177.645,155.891 176.5,154.5C 178.045,153.548 179.712,153.215 181.5,153.5C 181.5,155.833 181.5,158.167 181.5,160.5C 182.833,160.5 184.167,160.5 185.5,160.5C 185.5,158.167 185.5,155.833 185.5,153.5C 186.833,153.5 188.167,153.5 189.5,153.5C 189.773,162.517 190.773,162.684 192.5,154C 203.311,152.064 214.311,151.231 225.5,151.5C 225.5,152.5 225.5,153.5 225.5,154.5C 219.102,154.243 212.769,154.743 206.5,156C 206.833,156.333 207.167,156.667 207.5,157C 216.296,156.955 224.962,157.788 233.5,159.5C 237.644,156.684 236.977,155.184 231.5,155C 230.663,153.989 230.33,152.822 230.5,151.5C 244.414,151.825 258.414,151.492 272.5,150.5C 273.058,151.79 274.058,152.623 275.5,153C 274.346,153.914 274.513,154.747 276,155.5C 281.355,156.285 286.855,156.285 292.5,155.5C 294.831,157.479 297.497,158.812 300.5,159.5C 300.351,158.448 300.517,157.448 301,156.5C 301.333,156.833 301.667,157.167 302,157.5C 304.552,154.806 305.719,155.473 305.5,159.5C 308.347,159.218 311.013,159.218 313.5,159.5C 320.031,154.526 327.365,152.859 335.5,154.5C 335.5,155.5 335.5,156.5 335.5,157.5C 330.224,156.795 324.891,156.795 319.5,157.5C 319.33,158.822 319.663,159.989 320.5,161C 325.57,160.984 330.404,161.818 335,163.5C 336.727,163.354 336.894,162.687 335.5,161.5C 339.445,160.509 343.445,160.176 347.5,160.5C 347.281,159.325 347.614,158.325 348.5,157.5C 350.444,156.811 352.444,156.311 354.5,156C 355.509,153.828 357.176,152.662 359.5,152.5C 359.36,154.124 360.027,155.29 361.5,156C 360.833,157 360.167,158 359.5,159C 356.854,159.497 354.187,159.664 351.5,159.5C 351.5,160.833 351.5,162.167 351.5,163.5C 356.833,163.5 362.167,163.5 367.5,163.5C 367.45,161.41 368.45,160.077 370.5,159.5C 374.751,160.356 378.918,160.689 383,160.5C 383.004,158.632 382.504,156.798 381.5,155C 381.743,154.098 382.077,153.265 382.5,152.5C 383.577,151.982 384.744,151.648 386,151.5C 392.568,152.677 399.068,154.01 405.5,155.5C 405.918,156.222 406.584,156.722 407.5,157C 402.611,157.343 397.778,156.843 393,155.5C 387.271,154.384 385.438,156.384 387.5,161.5C 378.295,164.135 368.962,166.135 359.5,167.5C 346.307,165.838 332.973,164.505 319.5,163.5C 318.473,161.976 316.973,161.309 315,161.5C 311.196,162.205 307.363,162.538 303.5,162.5C 303.5,163.5 303.5,164.5 303.5,165.5C 308.833,165.5 314.167,165.5 319.5,165.5C 319.5,166.833 319.5,168.167 319.5,169.5C 296.164,169.333 272.831,169.5 249.5,170C 246.474,170.623 244.474,171.79 243.5,173.5C 240.363,176.299 238.029,179.632 236.5,183.5C 234.229,193.061 236.896,201.061 244.5,207.5C 244.833,208.167 245.167,208.833 245.5,209.5C 243.5,209.833 241.5,210.167 239.5,210.5C 239.5,211.5 239.5,212.5 239.5,213.5C 243.514,213.334 247.514,213.501 251.5,214C 253.774,214.47 255.774,215.47 257.5,217C 294.272,216.72 330.938,216.887 367.5,217.5C 372.544,217.173 377.544,217.506 382.5,218.5C 361.508,219.333 340.508,219.833 319.5,220C 318.271,220.781 316.938,221.281 315.5,221.5C 311.862,220.818 308.195,220.318 304.5,220C 288.167,219.667 271.833,219.333 255.5,219C 254.892,218.13 254.059,217.63 253,217.5C 250.976,217.8 250.476,218.633 251.5,220C 265.811,223.3 280.311,224.134 295,222.5C 308.009,224.645 321.176,224.978 334.5,223.5C 335.025,222.808 335.692,222.308 336.5,222C 352.877,221.819 369.211,221.319 385.5,220.5C 386.5,221 387.5,221.5 388.5,222C 384.456,223.899 384.623,225.065 389,225.5C 391.333,224.833 393.667,224.167 396,223.5C 397.658,223.675 398.991,224.342 400,225.5C 401.353,224.296 403.019,223.629 405,223.5C 410.384,223.432 411.884,225.932 409.5,231C 411.367,231.711 412.867,231.211 414,229.5C 413.772,233.763 411.772,237.096 408,239.5C 406.056,247.352 405.222,247.019 405.5,238.5C 404.167,238.5 402.833,238.5 401.5,238.5C 401.517,240.565 401.85,242.565 402.5,244.5C 402.167,244.5 401.833,244.5 401.5,244.5C 401.047,242.435 400.047,240.768 398.5,239.5C 398.5,239.167 398.5,238.833 398.5,238.5C 397.99,234.32 395.656,232.32 391.5,232.5C 390.833,232.5 390.167,232.5 389.5,232.5C 387.786,231.262 385.786,230.595 383.5,230.5C 338.335,229.335 293.002,229.169 247.5,230C 242.91,231.498 238.41,232.998 234,234.5C 233.221,236.807 233.721,238.807 235.5,240.5C 235.192,241.308 234.692,241.975 234,242.5C 233.3,240.968 232.134,239.968 230.5,239.5C 229.495,243.479 229.495,247.479 230.5,251.5C 229.725,256.797 229.392,262.13 229.5,267.5C 230.5,267.5 231.5,267.5 232.5,267.5C 232.762,268.978 232.429,270.311 231.5,271.5C 230.281,272.263 229.281,273.263 228.5,274.5C 227.773,270.678 226.773,267.011 225.5,263.5C 223.833,263.5 222.167,263.5 220.5,263.5C 220.5,262.167 220.5,260.833 220.5,259.5C 219.5,259.5 218.5,259.5 217.5,259.5C 220.372,250.984 219.372,242.818 214.5,235C 212.82,235.771 211.153,235.605 209.5,234.5C 208.833,234.167 208.167,233.833 207.5,233.5C 206.833,233.167 206.167,232.833 205.5,232.5C 204.292,231.766 202.959,231.433 201.5,231.5C 155.67,230.501 109.67,230.168 63.5,230.5C 95.0026,229.833 126.669,229.167 158.5,228.5C 159.282,226.671 158.616,225.171 156.5,224C 163.173,224.89 169.84,224.557 176.5,223C 156.345,221.91 136.178,221.077 116,220.5C 114.564,220.559 113.231,220.892 112,221.5C 109.446,220.229 106.613,219.562 103.5,219.5C 95.5481,220.828 87.5481,221.494 79.5,221.5C 68.8126,221.832 58.1459,221.499 47.5,220.5C 47.2907,219.914 46.9574,219.414 46.5,219C 49.8536,218.545 53.1869,218.045 56.5,217.5C 56.31,215.041 57.31,213.374 59.5,212.5C 107.168,212.667 154.834,212.5 202.5,212C 208.349,211.29 212.682,208.457 215.5,203.5C 216.79,202.942 217.623,201.942 218,200.5C 218.499,195.511 218.666,190.511 218.5,185.5C 218.657,184.127 218.49,182.793 218,181.5C 215.587,179.591 213.753,177.257 212.5,174.5C 210.205,172.52 207.539,171.353 204.5,171C 157.332,170.168 110.332,170.335 63.5,171.5C 59.6279,171.242 55.9612,171.909 52.5,173.5C 51.8826,173.389 51.3826,173.056 51,172.5C 47.3802,174.155 43.5469,175.488 39.5,176.5C 40.84,177.688 41.5066,179.188 41.5,181C 41.0368,184.54 40.3701,188.04 39.5,191.5C 38.914,191.709 38.414,192.043 38,192.5C 37.6643,197.532 37.1643,202.532 36.5,207.5C 35.5,207.5 34.5,207.5 33.5,207.5C 33.334,202.156 33.5006,196.823 34,191.5C 35.7039,188.827 36.8706,185.993 37.5,183C 37.1667,181.833 36.8333,180.667 36.5,179.5C 34.677,180.747 32.677,181.414 30.5,181.5C 30.5,179.5 30.5,177.5 30.5,175.5C 29.5,175.5 28.5,175.5 27.5,175.5C 26.0093,185.87 25.0093,195.704 24.5,205C 25.9773,207.571 27.9773,208.071 30.5,206.5C 31.929,212.066 32.5957,217.733 32.5,223.5C 32.4547,232.121 32.4547,240.788 32.5,249.5C 32.1291,252.538 30.4624,254.204 27.5,254.5C 27.0204,260.102 27.0204,265.769 27.5,271.5C 30.2978,271.63 32.2978,272.964 33.5,275.5C 31.6868,281.342 31.0201,287.342 31.5,293.5C 36.443,293.288 37.1097,294.288 33.5,296.5C 34.6888,297.429 36.0222,297.762 37.5,297.5C 37.2436,299.792 37.5769,301.959 38.5,304C 37.8742,304.75 37.3742,305.584 37,306.5C 36.2904,305.027 35.1238,304.36 33.5,304.5C 32.1667,306.833 32.1667,309.167 33.5,311.5C 32.1667,311.5 30.8333,311.5 29.5,311.5C 29.5,314.167 29.5,316.833 29.5,319.5C 31.8333,319.5 34.1667,319.5 36.5,319.5C 36.1437,316.436 36.9771,313.769 39,311.5C 38.6322,323.178 39.1322,335.012 40.5,347C 40.6906,348.973 40.024,350.473 38.5,351.5C 37.5334,356.802 36.8667,362.135 36.5,367.5C 38.1667,367.5 39.8333,367.5 41.5,367.5C 41.3713,369.216 41.038,370.883 40.5,372.5C 39.7701,373.712 38.7701,374.712 37.5,375.5C 38.0678,378.452 39.2344,381.119 41,383.5C 41.21,381.942 41.71,380.609 42.5,379.5C 42.1675,446.669 42.5008,513.669 43.5,580.5C 44.2239,583.843 45.0572,587.176 46,590.5C 46.3826,591.056 46.8826,591.389 47.5,591.5C 47.6833,593.988 48.6833,595.988 50.5,597.5C 52.3026,601.746 55.6359,603.912 60.5,604C 167.499,604.5 274.499,604.667 381.5,604.5C 371.189,606.632 360.689,607.965 350,608.5C 346.333,608.167 342.667,607.833 339,607.5C 337.812,608.563 337.312,609.897 337.5,611.5C 350.238,611.806 362.905,611.139 375.5,609.5C 375.329,612.797 375.995,613.131 377.5,610.5C 383.138,609.67 388.804,609.17 394.5,609C 394.167,608.667 393.833,608.333 393.5,608C 394.656,606.385 395.989,606.385 397.5,608C 397.167,608.333 396.833,608.667 396.5,609C 397.448,609.483 398.448,609.649 399.5,609.5C 399.617,611.484 398.95,613.15 397.5,614.5C 397.833,614.833 398.167,615.167 398.5,615.5C 403.938,613.612 409.605,612.946 415.5,613.5C 415.5,611.833 415.5,610.167 415.5,608.5C 416.552,608.649 417.552,608.483 418.5,608C 420.442,605.327 422.775,603.161 425.5,601.5C 428.711,604.714 432.045,607.88 435.5,611C 439.489,612.331 443.489,613.665 447.5,615C 446.062,615.219 444.729,615.719 443.5,616.5C 447.763,618.961 452.43,620.295 457.5,620.5C 478.14,619.523 498.806,619.189 519.5,619.5C 514.856,619.835 510.856,621.668 507.5,625C 505.866,625.494 504.199,625.66 502.5,625.5C 502.676,629.265 504.676,631.265 508.5,631.5C 507.756,628.05 509.09,626.384 512.5,626.5C 512.5,628.833 512.5,631.167 512.5,633.5C 511.5,633.5 510.5,633.5 509.5,633.5C 508.827,640.699 509.827,647.532 512.5,654C 512.195,660.47 511.862,666.97 511.5,673.5C 513.8,675.828 513.8,677.995 511.5,680C 513.053,682.837 512.72,685.337 510.5,687.5C 510.153,676.468 509.153,665.802 507.5,655.5C 507.961,648.641 507.128,641.974 505,635.5C 502.821,633.652 500.987,631.485 499.5,629C 497.5,627.667 495.5,626.333 493.5,625C 492.251,624.26 491.251,624.427 490.5,625.5C 489.833,625.5 489.167,625.5 488.5,625.5C 488.158,624.662 487.492,624.328 486.5,624.5C 485.234,623.91 483.901,623.41 482.5,623C 342.167,622.333 201.833,622.333 61.5,623C 59.1484,623.24 57.1484,624.073 55.5,625.5C 49.4342,627.9 45.4342,632.233 43.5,638.5C 42.3263,639.514 41.6596,640.847 41.5,642.5C 40.8826,642.611 40.3826,642.944 40,643.5C 40.0671,666.144 39.9004,688.811 39.5,711.5C 39.5008,725.184 40.1674,738.517 41.5,751.5C 40.8666,757.563 42.5332,762.896 46.5,767.5C 51.0736,771.61 56.0736,774.943 61.5,777.5C 62.1408,778.482 62.8075,779.482 63.5,780.5C 201.834,781.854 340.168,782.188 478.5,781.5C 479.382,783.084 480.215,784.751 481,786.5C 487.355,784.519 490.022,786.852 489,793.5C 488.439,792.978 487.772,792.645 487,792.5C 485.036,793.852 482.869,794.686 480.5,795C 445.488,795.778 410.488,795.612 375.5,794.5C 374.009,792.395 373.342,790.228 373.5,788C 371.5,787.333 369.5,787.333 367.5,788C 369.973,789.402 369.973,790.902 367.5,792.5C 369.369,793.624 371.369,794.457 373.5,795C 371.443,795.305 369.443,795.305 367.5,795C 368.623,796.044 369.956,796.71 371.5,797C 367.917,799.443 364.251,799.943 360.5,798.5C 358.803,798.899 357.137,799.399 355.5,800C 357.891,800.691 357.891,801.691 355.5,803C 359.801,805.871 359.468,807.705 354.5,808.5C 354.216,806.123 354.216,803.956 354.5,802C 352.956,801.71 351.623,801.044 350.5,800C 351.423,797.959 351.756,795.792 351.5,793.5C 348.212,793.073 345.212,793.74 342.5,795.5C 341.304,795.154 341.304,794.654 342.5,794C 340.5,793.667 338.5,793.333 336.5,793C 335.773,791.601 335.273,790.101 335,788.5C 333.989,787.663 332.822,787.33 331.5,787.5C 331.649,788.552 331.483,789.552 331,790.5C 327.557,793.668 323.39,795.168 318.5,795C 286.833,795.667 255.167,795.667 223.5,795C 221.444,794.689 219.444,794.189 217.5,793.5C 214.68,795.855 212.346,798.522 210.5,801.5C 210.5,802.167 210.167,802.5 209.5,802.5C 208.828,801.733 207.995,801.066 207,800.5C 206.503,798.19 206.337,795.857 206.5,793.5C 200.824,793.334 195.157,793.501 189.5,794C 188.975,794.692 188.308,795.192 187.5,795.5C 186.086,794.376 184.586,793.376 183,792.5C 182.333,793.167 181.667,793.833 181,794.5C 141.831,795.6 102.331,795.6 62.5,794.5C 57.3981,796.029 52.3981,797.696 47.5,799.5C 47.5,800.5 47.5,801.5 47.5,802.5C 45.4004,802.523 43.5671,801.856 42,800.5C 40.3514,801.786 39.1847,803.453 38.5,805.5C 39.935,806.929 40.935,808.595 41.5,810.5C 40.1798,837.646 40.1798,864.646 41.5,891.5C 41.3379,893.527 41.5045,895.527 42,897.5C 45.15,901.617 48.65,905.451 52.5,909C 54.4727,909.495 56.4727,909.662 58.5,909.5C 58.6107,910.117 58.944,910.617 59.5,911C 74.1667,911.333 88.8333,911.667 103.5,912C 106.217,912.043 106.884,913.043 105.5,915C 106.953,916.783 107.953,918.783 108.5,921C 108.333,921.833 108.167,922.667 108,923.5C 106.841,922.434 106.008,922.767 105.5,924.5C 104.5,925.833 103.5,925.833 102.5,924.5C 102.134,923.305 101.301,922.639 100,922.5C 98.6043,923.394 97.1043,924.061 95.5,924.5C 91.4787,923.236 87.4787,923.236 83.5,924.5C 82.0186,923.52 80.6853,922.353 79.5,921C 77.8659,920.506 76.1992,920.34 74.5,920.5C 74.5,924.167 74.5,927.833 74.5,931.5C 77.0619,932.654 79.5619,933.988 82,935.5C 85.4472,933.378 88.9472,933.045 92.5,934.5C 91.4514,934.598 90.2847,934.598 89,934.5C 87.8139,936.677 85.9806,937.677 83.5,937.5C 83.5,939.5 83.5,941.5 83.5,943.5C 80.0314,944.237 76.5314,943.903 73,942.5C 69.0225,943.12 65.1892,944.287 61.5,946C 62.4158,946.278 63.0825,946.778 63.5,947.5C 60.6717,946.503 58.005,946.503 55.5,947.5C 54.2921,946.766 52.9587,946.433 51.5,946.5C 40.5543,941.221 32.2209,933.221 26.5,922.5C 24.868,918.242 23.5347,913.909 22.5,909.5C 22.3704,867.36 22.537,825.027 23,782.5C 23.2382,778.778 23.7382,775.111 24.5,771.5C 24,770.5 23.5,769.5 23,768.5C 22.3333,562.833 22.3333,357.167 23,151.5C 24.0386,150.756 24.5386,149.756 24.5,148.5C 25.5,148.5 26.5,148.5 27.5,148.5C 28.5676,149.434 29.901,149.768 31.5,149.5C 31.5,150.5 31.5,151.5 31.5,152.5C 26.528,152.242 25.3613,154.242 28,158.5C 28.3333,157.833 28.6667,157.167 29,156.5C 31.8407,157.42 34.674,158.42 37.5,159.5C 39.0293,159.471 40.196,158.804 41,157.5C 41.4083,159.41 42.5749,160.41 44.5,160.5C 47.357,159.925 49.0237,158.258 49.5,155.5C 47.4727,155.662 45.4727,155.495 43.5,155C 43.0426,154.586 42.7093,154.086 42.5,153.5C 46.0275,152.079 49.6942,151.412 53.5,151.5C 53.5,154.5 53.5,157.5 53.5,160.5C 54.8333,160.5 56.1667,160.5 57.5,160.5C 57.5,158.833 57.5,157.167 57.5,155.5C 58.8333,155.5 60.1667,155.5 61.5,155.5C 61.7135,157.144 61.3802,158.644 60.5,160C 64.2933,162.139 67.96,161.972 71.5,159.5C 69.0962,158.65 66.7628,157.65 64.5,156.5C 70.4725,155.67 76.4725,155.17 82.5,155C 83.8333,153.667 83.8333,152.333 82.5,151C 75.654,150.828 68.9874,150.328 62.5,149.5C 70.5,149.5 78.5,149.5 86.5,149.5C 92.084,150.618 97.7507,150.785 103.5,150C 104,149.5 104.5,149 105,148.5C 105.168,130.662 105.668,112.995 106.5,95.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#34b0f6\",d:\"M 49.5,264.5 C 51.8825,266.046 54.5491,266.713 57.5,266.5C 102.664,267.499 147.997,267.832 193.5,267.5C 192.391,268.29 191.058,268.79 189.5,269C 146.182,270.393 102.848,270.893 59.5,270.5C 55.4945,269.502 52.1612,267.502 49.5,264.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2fc6fd\",d:\"M 199.5,266.5 C 197.735,267.461 195.735,267.795 193.5,267.5C 147.997,267.832 102.664,267.499 57.5,266.5C 104.849,265.663 152.182,265.663 199.5,266.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#348fdb\",d:\"M 212.5,238.5 C 217.123,243.176 218.623,248.843 217,255.5C 213.859,262.641 208.692,267.808 201.5,271C 155.501,271.5 109.501,271.667 63.5,271.5C 61.901,271.768 60.5676,271.434 59.5,270.5C 102.848,270.893 146.182,270.393 189.5,269C 191.058,268.79 192.391,268.29 193.5,267.5C 195.735,267.795 197.735,267.461 199.5,266.5C 208.676,264.823 214.009,259.323 215.5,250C 215.079,245.931 214.079,242.098 212.5,238.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad5fc\",d:\"M 207.5,233.5 C 208.167,233.833 208.833,234.167 209.5,234.5C 210.789,235.637 211.789,236.97 212.5,238.5C 214.079,242.098 215.079,245.931 215.5,250C 214.009,259.323 208.676,264.823 199.5,266.5C 152.182,265.663 104.849,265.663 57.5,266.5C 54.5491,266.713 51.8825,266.046 49.5,264.5C 49.1667,264.5 48.8333,264.5 48.5,264.5C 45.9872,260.477 44.3205,256.144 43.5,251.5C 44.9578,247.817 46.6245,244.15 48.5,240.5C 50.9179,239.585 52.9179,238.085 54.5,236C 57.5,235.667 60.5,235.333 63.5,235C 111.404,234.17 159.237,234.336 207,235.5C 207.464,234.906 207.631,234.239 207.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ccfcfd\",d:\"M 147.5,245.5 C 149.924,245.192 152.257,245.526 154.5,246.5C 155.417,249.758 155.751,253.091 155.5,256.5C 154.5,256.5 153.5,256.5 152.5,256.5C 152.799,254.396 152.466,252.396 151.5,250.5C 150.548,252.045 150.215,253.712 150.5,255.5C 149.167,255.5 147.833,255.5 146.5,255.5C 146.616,252.14 146.949,248.807 147.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b3f3f9\",d:\"M 100.5,244.5 C 103.792,244.12 106.125,245.453 107.5,248.5C 108.325,249.386 109.325,249.719 110.5,249.5C 110.147,247.365 110.98,246.032 113,245.5C 114.756,246.896 116.256,248.563 117.5,250.5C 119.217,249.332 119.884,247.665 119.5,245.5C 127.857,246.048 135.857,246.048 143.5,245.5C 144.167,245.833 144.833,246.167 145.5,246.5C 142.961,249.184 142.961,251.851 145.5,254.5C 139.632,255.507 133.632,255.507 127.5,254.5C 124.578,257.034 121.578,257.034 118.5,254.5C 116.362,255.243 114.196,255.91 112,256.5C 110.416,256.012 109.249,255.012 108.5,253.5C 105.872,255.633 103.039,255.966 100,254.5C 99.2534,251.076 99.42,247.743 100.5,244.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#50caf4\",d:\"M 133.5,248.5 C 135.256,249.552 135.923,251.219 135.5,253.5C 131.26,253.107 130.593,251.441 133.5,248.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#55ceec\",d:\"M 101.5,248.5 C 105.161,248.35 106.161,249.85 104.5,253C 103.552,253.483 102.552,253.649 101.5,253.5C 101.5,251.833 101.5,250.167 101.5,248.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e0fcfe\",d:\"M 66.5,245.5 C 67.8734,245.343 69.2068,245.51 70.5,246C 71.3758,248.376 73.0425,249.876 75.5,250.5C 73.0425,251.124 71.3758,252.624 70.5,255C 69.5,255.667 68.5,255.667 67.5,255C 65.4679,253.325 63.4679,251.658 61.5,250C 63.2065,248.491 64.8732,246.991 66.5,245.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3c2f13\",d:\"M 391.5,233.5 C 391.5,233.167 391.5,232.833 391.5,232.5C 395.656,232.32 397.99,234.32 398.5,238.5C 397.5,237.833 396.5,237.167 395.5,236.5C 394.564,235.026 393.23,234.026 391.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1cd3f\",d:\"M 391.5,233.5 C 393.23,234.026 394.564,235.026 395.5,236.5C 394.167,236.167 392.833,235.833 391.5,235.5C 345.335,234.335 299.002,234.168 252.5,235C 247.544,236.464 243.21,238.964 239.5,242.5C 239.511,240.983 240.177,239.816 241.5,239C 243.833,237.333 246.167,235.667 248.5,234C 296.166,233.5 343.832,233.333 391.5,233.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#87e3f5\",d:\"M 53.5,232.5 C 53.8333,232.5 54.1667,232.5 54.5,232.5C 104.833,233.833 155.167,233.833 205.5,232.5C 206.167,232.833 206.833,233.167 207.5,233.5C 207.631,234.239 207.464,234.906 207,235.5C 159.237,234.336 111.404,234.17 63.5,235C 60.5,235.333 57.5,235.667 54.5,236C 52.9179,238.085 50.9179,239.585 48.5,240.5C 46.6245,244.15 44.9578,247.817 43.5,251.5C 42.5385,242.82 45.8719,236.487 53.5,232.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1fefe\",d:\"M 201.5,231.5 C 202.959,231.433 204.292,231.766 205.5,232.5C 155.167,233.833 104.833,233.833 54.5,232.5C 103.477,231.519 152.477,231.185 201.5,231.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4e7cc\",d:\"M 383.5,230.5 C 385.786,230.595 387.786,231.262 389.5,232.5C 341.458,232.176 293.458,232.51 245.5,233.5C 246.058,232.21 247.058,231.377 248.5,231C 293.499,230.5 338.499,230.333 383.5,230.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cadef4\",d:\"M 63.5,230.5 C 109.67,230.168 155.67,230.501 201.5,231.5C 152.477,231.185 103.477,231.519 54.5,232.5C 57.1226,230.735 60.1226,230.068 63.5,230.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#27284c\",d:\"M 63.5,230.5 C 60.1226,230.068 57.1226,230.735 54.5,232.5C 54.1667,232.5 53.8333,232.5 53.5,232.5C 53.5,231.5 53.5,230.5 53.5,229.5C 51.4727,229.662 49.4727,229.495 47.5,229C 46.2243,224.618 47.7243,223.452 52,225.5C 55.0445,225.041 58.0445,224.374 61,223.5C 72.3916,225.389 83.8916,226.056 95.5,225.5C 95.6495,224.448 95.4828,223.448 95,222.5C 92.4217,223.141 89.755,223.475 87,223.5C 84.0706,223.475 81.5706,222.809 79.5,221.5C 87.5481,221.494 95.5481,220.828 103.5,219.5C 106.613,219.562 109.446,220.229 112,221.5C 113.231,220.892 114.564,220.559 116,220.5C 136.178,221.077 156.345,221.91 176.5,223C 169.84,224.557 163.173,224.89 156.5,224C 158.616,225.171 159.282,226.671 158.5,228.5C 126.669,229.167 95.0026,229.833 63.5,230.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#25264e\",d:\"M 63.5,213.5 C 90.8354,213.333 118.169,213.5 145.5,214C 148.286,216.277 151.286,217.11 154.5,216.5C 161.117,217.296 167.783,217.796 174.5,218C 158.83,218.489 143.163,218.323 127.5,217.5C 105.825,216.603 84.4918,215.27 63.5,213.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#271105\",d:\"M 43.5,186.5 C 43.5,186.833 43.5,187.167 43.5,187.5C 43.335,190.85 43.5017,194.183 44,197.5C 44.2784,198.416 44.7784,199.082 45.5,199.5C 46.9063,199.973 47.573,200.973 47.5,202.5C 48.9527,206.226 51.6194,208.559 55.5,209.5C 55.9175,210.222 56.5842,210.722 57.5,211C 105.668,211.832 153.668,211.665 201.5,210.5C 203.786,210.405 205.786,209.738 207.5,208.5C 208.287,206.896 209.62,206.229 211.5,206.5C 212.833,205.5 214.167,204.5 215.5,203.5C 212.682,208.457 208.349,211.29 202.5,212C 154.834,212.5 107.168,212.667 59.5,212.5C 45.4018,209.093 40.0684,200.427 43.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#875916\",d:\"M 55.5,209.5 C 74.1393,210.448 92.806,210.782 111.5,210.5C 141.5,210.5 171.5,210.5 201.5,210.5C 153.668,211.665 105.668,211.832 57.5,211C 56.5842,210.722 55.9175,210.222 55.5,209.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d4932a\",d:\"M 207.5,208.5 C 205.786,209.738 203.786,210.405 201.5,210.5C 171.5,210.5 141.5,210.5 111.5,210.5C 143.353,209.804 175.353,209.138 207.5,208.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4970a\",d:\"M 214.5,196.5 C 214.833,196.5 215.167,196.5 215.5,196.5C 215.833,196.5 216.167,196.5 216.5,196.5C 215.284,200.052 213.618,203.385 211.5,206.5C 209.62,206.229 208.287,206.896 207.5,208.5C 175.353,209.138 143.353,209.804 111.5,210.5C 92.806,210.782 74.1393,210.448 55.5,209.5C 55.1667,208.833 54.8333,208.167 54.5,207.5C 104.172,207.575 153.839,207.075 203.5,206C 208.441,204.212 212.107,201.046 214.5,196.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9e6f17\",d:\"M 47.5,202.5 C 50.6743,203.01 53.0077,204.677 54.5,207.5C 54.8333,208.167 55.1667,208.833 55.5,209.5C 51.6194,208.559 48.9527,206.226 47.5,202.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48240e\",d:\"M 215.5,181.5 C 216.857,182.59 217.857,183.924 218.5,185.5C 218.666,190.511 218.499,195.511 218,200.5C 217.623,201.942 216.79,202.942 215.5,203.5C 214.167,204.5 212.833,205.5 211.5,206.5C 213.618,203.385 215.284,200.052 216.5,196.5C 217.841,191.529 217.508,186.529 215.5,181.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbbf05\",d:\"M 101.5,199.5 C 104.329,198.285 107.162,198.618 110,200.5C 111.092,199.704 112.259,199.037 113.5,198.5C 118.796,199.495 124.129,200.162 129.5,200.5C 129.5,199.5 129.5,198.5 129.5,197.5C 136.466,197.034 143.299,197.7 150,199.5C 152.259,198.908 153.925,197.575 155,195.5C 155.49,196.793 155.657,198.127 155.5,199.5C 156.483,201.291 157.816,202.791 159.5,204C 174.767,203.888 189.433,204.054 203.5,204.5C 204.696,204.154 204.696,203.654 203.5,203C 207.3,201.867 209.8,199.367 211,195.5C 212.011,196.337 213.178,196.67 214.5,196.5C 212.107,201.046 208.441,204.212 203.5,206C 153.839,207.075 104.172,207.575 54.5,207.5C 53.0077,204.677 50.6743,203.01 47.5,202.5C 47.573,200.973 46.9063,199.973 45.5,199.5C 45.2529,196.061 45.5863,192.728 46.5,189.5C 48.8008,184.679 52.1341,180.512 56.5,177C 59.5541,176.179 62.5541,176.345 65.5,177.5C 68.1051,181.579 70.4384,181.413 72.5,177C 77.1476,175.69 78.1476,176.69 75.5,180C 75.9903,181.982 76.9903,183.649 78.5,185C 78.1667,185.333 77.8333,185.667 77.5,186C 71.9944,186.369 66.6611,185.536 61.5,183.5C 59.208,184.79 57.208,186.457 55.5,188.5C 56.8333,190.5 58.1667,192.5 59.5,194.5C 63.6749,195.168 65.8416,197.501 66,201.5C 63.7967,201.761 61.63,201.261 59.5,200C 56.8824,197.261 54.3824,194.427 52,191.5C 48.5572,193.997 47.7239,197.163 49.5,201C 50.8989,201.595 52.2322,201.428 53.5,200.5C 56.7031,204.542 60.7031,205.542 65.5,203.5C 65.5,204.5 65.5,205.5 65.5,206.5C 71.1167,206.727 73.1167,204.227 71.5,199C 72.1275,196.474 73.4609,195.641 75.5,196.5C 76.8498,195.05 78.5165,194.383 80.5,194.5C 80.5,193.5 80.5,192.5 80.5,191.5C 83.8333,191.5 87.1667,191.5 90.5,191.5C 89.8547,194.483 89.5213,197.317 89.5,200C 96.5032,200.497 96.8365,201.163 90.5,202C 93.8168,202.498 97.1501,202.665 100.5,202.5C 100.5,203.5 100.5,204.5 100.5,205.5C 103.95,206.244 105.616,204.91 105.5,201.5C 103.517,201.843 102.183,201.176 101.5,199.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eecf68\",d:\"M 146.5,187.5 C 144.167,187.5 141.833,187.5 139.5,187.5C 139.5,190.5 139.5,193.5 139.5,196.5C 138.833,196.5 138.167,196.5 137.5,196.5C 137.82,193.102 137.487,189.768 136.5,186.5C 135.119,187 134.453,188 134.5,189.5C 134.846,190.849 135.179,192.183 135.5,193.5C 133.952,193.821 133.285,194.821 133.5,196.5C 131.379,196.675 129.379,196.341 127.5,195.5C 126.432,194.566 125.099,194.232 123.5,194.5C 123.5,193.5 123.5,192.5 123.5,191.5C 124.873,191.657 126.207,191.49 127.5,191C 125.273,190.296 124.94,189.129 126.5,187.5C 127.756,187.096 128.923,186.429 130,185.5C 135.662,184.979 141.162,185.645 146.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e8cc60\",d:\"M 47.5,183.5 C 46.8505,185.435 46.5172,187.435 46.5,189.5C 45.5863,192.728 45.2529,196.061 45.5,199.5C 44.7784,199.082 44.2784,198.416 44,197.5C 43.5017,194.183 43.335,190.85 43.5,187.5C 44.4725,185.861 45.8058,184.527 47.5,183.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7e49b\",d:\"M 106.5,186.5 C 107.167,187.833 108.167,188.833 109.5,189.5C 109.714,191.144 109.38,192.644 108.5,194C 106.42,194.789 104.586,195.956 103,197.5C 102.5,197.333 102,197.167 101.5,197C 100.544,193.606 100.211,190.106 100.5,186.5C 102.347,185.427 104.347,185.427 106.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1c935\",d:\"M 57.5,175.5 C 108.02,174.183 158.687,174.183 209.5,175.5C 211.923,176.95 213.923,178.95 215.5,181.5C 217.508,186.529 217.841,191.529 216.5,196.5C 216.167,196.5 215.833,196.5 215.5,196.5C 217.088,188.237 214.421,181.903 207.5,177.5C 199.5,177.167 191.5,176.833 183.5,176.5C 175.003,176.53 166.67,177.197 158.5,178.5C 156.081,180.845 155.415,183.511 156.5,186.5C 157.478,186.023 158.311,185.357 159,184.5C 162.485,188.483 163.985,193.15 163.5,198.5C 160.794,198.575 158.127,198.908 155.5,199.5C 155.657,198.127 155.49,196.793 155,195.5C 153.925,197.575 152.259,198.908 150,199.5C 143.299,197.7 136.466,197.034 129.5,197.5C 129.5,198.5 129.5,199.5 129.5,200.5C 124.129,200.162 118.796,199.495 113.5,198.5C 112.259,199.037 111.092,199.704 110,200.5C 107.162,198.618 104.329,198.285 101.5,199.5C 99.179,197.91 98.179,195.577 98.5,192.5C 97.5,192.5 96.5,192.5 95.5,192.5C 95.5,191.5 95.5,190.5 95.5,189.5C 96.8221,189.33 97.9887,189.663 99,190.5C 99.21,188.942 99.71,187.609 100.5,186.5C 100.211,190.106 100.544,193.606 101.5,197C 102,197.167 102.5,197.333 103,197.5C 104.586,195.956 106.42,194.789 108.5,194C 109.38,192.644 109.714,191.144 109.5,189.5C 110.959,189.567 112.292,189.234 113.5,188.5C 113.421,189.93 113.754,191.264 114.5,192.5C 113.5,193.167 112.5,193.833 111.5,194.5C 114.32,195.694 117.153,195.694 120,194.5C 122.421,196.493 124.921,196.826 127.5,195.5C 129.379,196.341 131.379,196.675 133.5,196.5C 133.285,194.821 133.952,193.821 135.5,193.5C 135.285,195.179 135.952,196.179 137.5,196.5C 138.167,196.5 138.833,196.5 139.5,196.5C 140.5,196.5 141.5,196.5 142.5,196.5C 142.833,192.5 143.167,192.5 143.5,196.5C 144.822,196.67 145.989,196.337 147,195.5C 147.497,193.19 147.663,190.857 147.5,188.5C 147.929,187.047 148.096,185.381 148,183.5C 148.333,183.833 148.667,184.167 149,184.5C 153.919,183.68 156.086,180.68 155.5,175.5C 139.5,175.5 123.5,175.5 107.5,175.5C 90.8333,175.5 74.1667,175.5 57.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fae4a5\",d:\"M 126.5,187.5 C 124.94,189.129 125.273,190.296 127.5,191C 126.207,191.49 124.873,191.657 123.5,191.5C 123.5,192.5 123.5,193.5 123.5,194.5C 125.099,194.232 126.432,194.566 127.5,195.5C 124.921,196.826 122.421,196.493 120,194.5C 117.153,195.694 114.32,195.694 111.5,194.5C 112.5,193.833 113.5,193.167 114.5,192.5C 113.754,191.264 113.421,189.93 113.5,188.5C 114.568,187.566 115.901,187.232 117.5,187.5C 117.5,188.833 117.5,190.167 117.5,191.5C 118.833,191.5 120.167,191.5 121.5,191.5C 121.5,190.167 121.5,188.833 121.5,187.5C 123.167,187.5 124.833,187.5 126.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff8a7\",d:\"M 137.5,196.5 C 135.952,196.179 135.285,195.179 135.5,193.5C 135.179,192.183 134.846,190.849 134.5,189.5C 134.453,188 135.119,187 136.5,186.5C 137.487,189.768 137.82,193.102 137.5,196.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9eca4\",d:\"M 149.5,186.5 C 151.806,186.993 154.139,187.326 156.5,187.5C 156.343,188.873 156.51,190.207 157,191.5C 159.261,192.772 159.761,194.438 158.5,196.5C 157.449,195.115 156.116,194.115 154.5,193.5C 153.614,194.325 153.281,195.325 153.5,196.5C 152.167,196.5 150.833,196.5 149.5,196.5C 149.5,193.167 149.5,189.833 149.5,186.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#faf2cd\",d:\"M 146.5,187.5 C 147.167,187.5 147.5,187.833 147.5,188.5C 147.663,190.857 147.497,193.19 147,195.5C 145.989,196.337 144.822,196.67 143.5,196.5C 143.167,192.5 142.833,192.5 142.5,196.5C 141.5,196.5 140.5,196.5 139.5,196.5C 139.5,193.5 139.5,190.5 139.5,187.5C 141.833,187.5 144.167,187.5 146.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcc401\",d:\"M 215.5,196.5 C 215.167,196.5 214.833,196.5 214.5,196.5C 213.178,196.67 212.011,196.337 211,195.5C 209.8,199.367 207.3,201.867 203.5,203C 204.696,203.654 204.696,204.154 203.5,204.5C 189.433,204.054 174.767,203.888 159.5,204C 157.816,202.791 156.483,201.291 155.5,199.5C 158.127,198.908 160.794,198.575 163.5,198.5C 163.985,193.15 162.485,188.483 159,184.5C 158.311,185.357 157.478,186.023 156.5,186.5C 155.415,183.511 156.081,180.845 158.5,178.5C 166.67,177.197 175.003,176.53 183.5,176.5C 191.5,176.833 199.5,177.167 207.5,177.5C 214.421,181.903 217.088,188.237 215.5,196.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8c00c\",d:\"M 107.5,175.5 C 123.5,175.5 139.5,175.5 155.5,175.5C 156.086,180.68 153.919,183.68 149,184.5C 148.667,184.167 148.333,183.833 148,183.5C 148.096,185.381 147.929,187.047 147.5,188.5C 147.5,187.833 147.167,187.5 146.5,187.5C 141.162,185.645 135.662,184.979 130,185.5C 128.923,186.429 127.756,187.096 126.5,187.5C 124.833,187.5 123.167,187.5 121.5,187.5C 121.5,188.833 121.5,190.167 121.5,191.5C 120.167,191.5 118.833,191.5 117.5,191.5C 117.5,190.167 117.5,188.833 117.5,187.5C 115.901,187.232 114.568,187.566 113.5,188.5C 112.292,189.234 110.959,189.567 109.5,189.5C 108.167,188.833 107.167,187.833 106.5,186.5C 106.53,185.503 106.03,184.836 105,184.5C 101.468,183.484 97.9684,182.484 94.5,181.5C 94.5,179.833 94.5,178.167 94.5,176.5C 96.5922,176.561 98.0922,177.561 99,179.5C 99.9078,177.561 101.408,176.561 103.5,176.5C 103.5,177.833 103.5,179.167 103.5,180.5C 104.5,180.5 105.5,180.5 106.5,180.5C 106.366,178.708 106.699,177.042 107.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7c80c\",d:\"M 57.5,175.5 C 74.1667,175.5 90.8333,175.5 107.5,175.5C 106.699,177.042 106.366,178.708 106.5,180.5C 105.5,180.5 104.5,180.5 103.5,180.5C 103.5,179.167 103.5,177.833 103.5,176.5C 101.408,176.561 99.9078,177.561 99,179.5C 98.0922,177.561 96.5922,176.561 94.5,176.5C 94.5,178.167 94.5,179.833 94.5,181.5C 97.9684,182.484 101.468,183.484 105,184.5C 106.03,184.836 106.53,185.503 106.5,186.5C 104.347,185.427 102.347,185.427 100.5,186.5C 99.71,187.609 99.21,188.942 99,190.5C 97.9887,189.663 96.8221,189.33 95.5,189.5C 95.5,190.5 95.5,191.5 95.5,192.5C 96.5,192.5 97.5,192.5 98.5,192.5C 98.179,195.577 99.179,197.91 101.5,199.5C 102.183,201.176 103.517,201.843 105.5,201.5C 105.616,204.91 103.95,206.244 100.5,205.5C 100.5,204.5 100.5,203.5 100.5,202.5C 97.1501,202.665 93.8168,202.498 90.5,202C 96.8365,201.163 96.5032,200.497 89.5,200C 89.5213,197.317 89.8547,194.483 90.5,191.5C 87.1667,191.5 83.8333,191.5 80.5,191.5C 80.5,192.5 80.5,193.5 80.5,194.5C 78.5165,194.383 76.8498,195.05 75.5,196.5C 73.4609,195.641 72.1275,196.474 71.5,199C 73.1167,204.227 71.1167,206.727 65.5,206.5C 65.5,205.5 65.5,204.5 65.5,203.5C 60.7031,205.542 56.7031,204.542 53.5,200.5C 52.2322,201.428 50.8989,201.595 49.5,201C 47.7239,197.163 48.5572,193.997 52,191.5C 54.3824,194.427 56.8824,197.261 59.5,200C 61.63,201.261 63.7967,201.761 66,201.5C 65.8416,197.501 63.6749,195.168 59.5,194.5C 58.1667,192.5 56.8333,190.5 55.5,188.5C 57.208,186.457 59.208,184.79 61.5,183.5C 66.6611,185.536 71.9944,186.369 77.5,186C 77.8333,185.667 78.1667,185.333 78.5,185C 76.9903,183.649 75.9903,181.982 75.5,180C 78.1476,176.69 77.1476,175.69 72.5,177C 70.4384,181.413 68.1051,181.579 65.5,177.5C 62.5541,176.345 59.5541,176.179 56.5,177C 52.1341,180.512 48.8008,184.679 46.5,189.5C 46.5172,187.435 46.8505,185.435 47.5,183.5C 49.3834,178.943 52.7167,176.277 57.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef7cb\",d:\"M 66.5,187.5 C 74.6712,189 75.3378,192 68.5,196.5C 62.8696,194.452 62.2029,191.452 66.5,187.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0edbc\",d:\"M 63.5,171.5 C 109.835,171.333 156.168,171.5 202.5,172C 205.069,172.898 207.402,174.065 209.5,175.5C 158.687,174.183 108.02,174.183 57.5,175.5C 52.7167,176.277 49.3834,178.943 47.5,183.5C 45.8058,184.527 44.4725,185.861 43.5,187.5C 43.5,187.167 43.5,186.833 43.5,186.5C 44.7737,180.947 47.7737,176.613 52.5,173.5C 55.9612,171.909 59.6279,171.242 63.5,171.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#342f35\",d:\"M 63.5,171.5 C 110.332,170.335 157.332,170.168 204.5,171C 207.539,171.353 210.205,172.52 212.5,174.5C 213.753,177.257 215.587,179.591 218,181.5C 218.49,182.793 218.657,184.127 218.5,185.5C 217.857,183.924 216.857,182.59 215.5,181.5C 213.923,178.95 211.923,176.95 209.5,175.5C 207.402,174.065 205.069,172.898 202.5,172C 156.168,171.5 109.835,171.333 63.5,171.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a6fa3\",d:\"M 106.5,132.5 C 106.833,132.5 107.167,132.5 107.5,132.5C 107.5,133.5 107.5,134.5 107.5,135.5C 106.911,139.971 107.577,143.971 109.5,147.5C 114.807,148.026 119.807,147.36 124.5,145.5C 124.5,146.5 124.5,147.5 124.5,148.5C 118.5,148.5 112.5,148.5 106.5,148.5C 106.5,143.167 106.5,137.833 106.5,132.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#45a5e0\",d:\"M 126.5,132.5 C 126.833,132.5 127.167,132.5 127.5,132.5C 127.5,137.167 127.5,141.833 127.5,146.5C 132.833,146.5 138.167,146.5 143.5,146.5C 143.666,142.486 143.499,138.486 143,134.5C 140.723,133.883 138.556,133.216 136.5,132.5C 139.167,132.5 141.833,132.5 144.5,132.5C 144.5,137.5 144.5,142.5 144.5,147.5C 138.599,148.806 132.599,148.806 126.5,147.5C 126.5,142.5 126.5,137.5 126.5,132.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4cc6f1\",d:\"M 107.5,135.5 C 107.833,135.5 108.167,135.5 108.5,135.5C 108.5,136.833 108.5,138.167 108.5,139.5C 108.5,141.167 108.5,142.833 108.5,144.5C 112.39,144.272 116.224,144.606 120,145.5C 121.03,145.164 121.53,144.497 121.5,143.5C 121.205,141.265 121.539,139.265 122.5,137.5C 122.5,140.5 122.5,143.5 122.5,146.5C 117.968,146.182 113.634,146.515 109.5,147.5C 107.577,143.971 106.911,139.971 107.5,135.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9ff8fb\",d:\"M 121.5,143.5 C 121.53,144.497 121.03,145.164 120,145.5C 116.224,144.606 112.39,144.272 108.5,144.5C 108.5,142.833 108.5,141.167 108.5,139.5C 112.452,138.728 116.452,138.395 120.5,138.5C 120.216,140.415 120.549,142.081 121.5,143.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#45a5e9\",d:\"M 107.5,132.5 C 112.167,132.5 116.833,132.5 121.5,132.5C 122.5,132.5 123.5,132.5 124.5,132.5C 124.5,136.833 124.5,141.167 124.5,145.5C 119.807,147.36 114.807,148.026 109.5,147.5C 113.634,146.515 117.968,146.182 122.5,146.5C 122.5,143.5 122.5,140.5 122.5,137.5C 122.5,136.167 122.5,134.833 122.5,133.5C 117.381,132.897 112.715,133.564 108.5,135.5C 108.167,135.5 107.833,135.5 107.5,135.5C 107.5,134.5 107.5,133.5 107.5,132.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5cecf8\",d:\"M 122.5,137.5 C 121.539,139.265 121.205,141.265 121.5,143.5C 120.549,142.081 120.216,140.415 120.5,138.5C 116.452,138.395 112.452,138.728 108.5,139.5C 108.5,138.167 108.5,136.833 108.5,135.5C 112.715,133.564 117.381,132.897 122.5,133.5C 122.5,134.833 122.5,136.167 122.5,137.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#53ddf7\",d:\"M 127.5,132.5 C 130.5,132.5 133.5,132.5 136.5,132.5C 138.556,133.216 140.723,133.883 143,134.5C 143.499,138.486 143.666,142.486 143.5,146.5C 138.167,146.5 132.833,146.5 127.5,146.5C 127.5,141.833 127.5,137.167 127.5,132.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cefcfd\",d:\"M 132.5,139.5 C 135.167,139.5 137.833,139.5 140.5,139.5C 140.5,140.833 140.5,142.167 140.5,143.5C 137.833,143.5 135.167,143.5 132.5,143.5C 132.5,142.167 132.5,140.833 132.5,139.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b16e19\",d:\"M 391.5,267.5 C 389.109,269.362 386.442,270.696 383.5,271.5C 338.832,271.667 294.165,271.5 249.5,271C 248.584,270.722 247.918,270.222 247.5,269.5C 293.478,270.647 339.478,270.813 385.5,270C 386.978,267.961 388.978,267.128 391.5,267.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#553520\",d:\"M 429.5,267.5 C 430.167,267.833 430.833,268.167 431.5,268.5C 431.842,269.338 432.508,269.672 433.5,269.5C 434.263,270.268 435.263,270.768 436.5,271C 445.494,271.5 454.494,271.666 463.5,271.5C 463.5,271.833 463.5,272.167 463.5,272.5C 453.167,272.5 442.833,272.5 432.5,272.5C 430.75,271.341 429.75,269.674 429.5,267.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b06b1f\",d:\"M 433.5,269.5 C 444.802,270.41 456.136,270.743 467.5,270.5C 467.5,270.833 467.5,271.167 467.5,271.5C 466.167,271.5 464.833,271.5 463.5,271.5C 454.494,271.666 445.494,271.5 436.5,271C 435.263,270.768 434.263,270.268 433.5,269.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a516e\",d:\"M 477.5,217.5 C 478.473,219.948 478.806,222.615 478.5,225.5C 478.218,239.869 478.551,254.203 479.5,268.5C 500.835,269 522.168,269.167 543.5,269C 550.152,268.3 555.152,265.133 558.5,259.5C 559.167,259.167 559.833,258.833 560.5,258.5C 557.77,265.562 552.77,270.229 545.5,272.5C 518.167,272.5 490.833,272.5 463.5,272.5C 463.5,272.167 463.5,271.833 463.5,271.5C 464.833,271.5 466.167,271.5 467.5,271.5C 472.063,271.667 475.063,269.667 476.5,265.5C 477.496,249.675 477.83,233.675 477.5,217.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#374d6c\",d:\"M 717.5,177.5 C 717.833,177.5 718.167,177.5 718.5,177.5C 719.631,204.143 719.798,230.81 719,257.5C 715.494,264.362 710.327,269.528 703.5,273C 666.833,273.667 630.167,273.667 593.5,273C 590.761,271.974 588.428,270.474 586.5,268.5C 588.179,268.892 589.846,269.392 591.5,270C 629.525,270.969 667.525,270.469 705.5,268.5C 710.439,266.062 714.273,262.396 717,257.5C 717.5,235.503 717.667,213.503 717.5,191.5C 717.5,186.833 717.5,182.167 717.5,177.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d98b03\",d:\"M 740.5,265.5 C 740.5,265.167 740.5,264.833 740.5,264.5C 744.941,265.911 749.274,267.744 753.5,270C 818.84,270.782 884.174,270.615 949.5,269.5C 949.5,269.833 949.5,270.167 949.5,270.5C 883.51,271.464 817.51,271.798 751.5,271.5C 747.266,270.526 743.599,268.526 740.5,265.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#09295d\",d:\"M 209.5,234.5 C 211.153,235.605 212.82,235.771 214.5,235C 219.372,242.818 220.372,250.984 217.5,259.5C 216.833,259.5 216.5,259.833 216.5,260.5C 212.857,267.172 207.191,271.172 199.5,272.5C 153.997,272.832 108.664,272.499 63.5,271.5C 109.501,271.667 155.501,271.5 201.5,271C 208.692,267.808 213.859,262.641 217,255.5C 218.623,248.843 217.123,243.176 212.5,238.5C 211.789,236.97 210.789,235.637 209.5,234.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#381a04\",d:\"M 235.5,255.5 C 235.833,255.5 236.167,255.5 236.5,255.5C 237.011,258.022 238.011,260.355 239.5,262.5C 241.569,265.573 244.236,267.906 247.5,269.5C 247.918,270.222 248.584,270.722 249.5,271C 294.165,271.5 338.832,271.667 383.5,271.5C 383.5,271.833 383.5,272.167 383.5,272.5C 338.165,272.667 292.832,272.5 247.5,272C 240.624,268.969 236.624,263.802 235.5,256.5C 235.5,256.167 235.5,255.833 235.5,255.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b0650c\",d:\"M 949.5,270.5 C 947.156,270.94 945.156,271.94 943.5,273.5C 940.167,273.5 936.833,273.5 933.5,273.5C 874.499,273.667 815.499,273.5 756.5,273C 754.618,272.802 752.952,272.302 751.5,271.5C 817.51,271.798 883.51,271.464 949.5,270.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d1c43\",d:\"M 48.5,264.5 C 48.8333,264.5 49.1667,264.5 49.5,264.5C 52.1612,267.502 55.4945,269.502 59.5,270.5C 60.5676,271.434 61.901,271.768 63.5,271.5C 108.664,272.499 153.997,272.832 199.5,272.5C 153.336,273.499 107.003,273.832 60.5,273.5C 55.5308,272.599 51.3642,270.265 48,266.5C 47.3083,265.563 47.475,264.897 48.5,264.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#432713\",d:\"M 956.5,267.5 C 953.151,271.502 948.817,273.502 943.5,273.5C 945.156,271.94 947.156,270.94 949.5,270.5C 949.5,270.167 949.5,269.833 949.5,269.5C 951.921,269.122 954.254,268.455 956.5,267.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d1419\",d:\"M 432.5,272.5 C 442.833,272.5 453.167,272.5 463.5,272.5C 458.881,273.828 453.881,274.494 448.5,274.5C 443.5,274.333 438.5,274.167 433.5,274C 432.944,273.617 432.611,273.117 432.5,272.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#121c39\",d:\"M 563.5,177.5 C 564.648,203.458 564.815,229.458 564,255.5C 561.344,265.301 555.177,271.801 545.5,275C 528.823,275.833 512.157,275.666 495.5,274.5C 512.328,273.833 528.995,273.167 545.5,272.5C 552.77,270.229 557.77,265.562 560.5,258.5C 560.833,256.5 561.167,254.5 561.5,252.5C 562.663,228.337 562.83,204.003 562,179.5C 561.722,178.584 561.222,177.918 560.5,177.5C 560.443,176.391 560.11,175.391 559.5,174.5C 560.117,174.389 560.617,174.056 561,173.5C 561.608,175.066 562.442,176.4 563.5,177.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#161d3c\",d:\"M 719.5,175.5 C 720.29,176.609 720.79,177.942 721,179.5C 721.833,205.84 721.667,232.173 720.5,258.5C 719.359,261.062 718.526,263.728 718,266.5C 716.229,267.304 714.729,268.471 713.5,270C 708.497,273.771 702.83,275.604 696.5,275.5C 662.165,275.667 627.832,275.5 593.5,275C 586.999,273.268 582.332,269.435 579.5,263.5C 579.5,262.833 579.833,262.5 580.5,262.5C 582.027,264.939 584.027,266.939 586.5,268.5C 588.428,270.474 590.761,271.974 593.5,273C 630.167,273.667 666.833,273.667 703.5,273C 710.327,269.528 715.494,264.362 719,257.5C 719.798,230.81 719.631,204.143 718.5,177.5C 718.328,176.508 718.662,175.842 719.5,175.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c0c0a\",d:\"M 740.5,265.5 C 743.599,268.526 747.266,270.526 751.5,271.5C 752.952,272.302 754.618,272.802 756.5,273C 815.499,273.5 874.499,273.667 933.5,273.5C 874.001,274.665 814.335,274.832 754.5,274C 749.472,273.511 745.138,271.677 741.5,268.5C 740.89,267.609 740.557,266.609 740.5,265.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#292f49\",d:\"M 52.5,173.5 C 47.7737,176.613 44.7737,180.947 43.5,186.5C 40.0684,200.427 45.4018,209.093 59.5,212.5C 57.31,213.374 56.31,215.041 56.5,217.5C 53.1869,218.045 49.8536,218.545 46.5,219C 46.9574,219.414 47.2907,219.914 47.5,220.5C 58.1459,221.499 68.8126,221.832 79.5,221.5C 81.5706,222.809 84.0706,223.475 87,223.5C 89.755,223.475 92.4217,223.141 95,222.5C 95.4828,223.448 95.6495,224.448 95.5,225.5C 83.8916,226.056 72.3916,225.389 61,223.5C 58.0445,224.374 55.0445,225.041 52,225.5C 47.7243,223.452 46.2243,224.618 47.5,229C 49.4727,229.495 51.4727,229.662 53.5,229.5C 53.5,230.5 53.5,231.5 53.5,232.5C 45.8719,236.487 42.5385,242.82 43.5,251.5C 44.3205,256.144 45.9872,260.477 48.5,264.5C 47.475,264.897 47.3083,265.563 48,266.5C 51.3642,270.265 55.5308,272.599 60.5,273.5C 66.7288,274.911 73.0621,276.078 79.5,277C 92.5,277.333 105.5,277.667 118.5,278C 120.906,278.306 123.073,279.139 125,280.5C 130.919,279.473 137.086,279.473 143.5,280.5C 143.539,282.359 142.706,283.692 141,284.5C 137.333,284.167 133.667,283.833 130,283.5C 129,284.167 128,284.833 127,285.5C 125.493,283.992 123.827,282.659 122,281.5C 117.861,283.073 113.528,284.406 109,285.5C 107.553,285.055 106.22,284.388 105,283.5C 103.32,284.547 101.486,285.213 99.5,285.5C 95.5932,284.189 91.5932,283.522 87.5,283.5C 87.6495,284.552 87.4828,285.552 87,286.5C 86.6667,285.167 86.3333,283.833 86,282.5C 82.9646,282.463 80.4646,283.963 78.5,287C 72.5,287.333 66.5,287.667 60.5,288C 59.7476,288.671 59.4142,289.504 59.5,290.5C 58.0783,290.709 56.745,291.209 55.5,292C 56.0944,292.464 56.7611,292.631 57.5,292.5C 50.5064,294.827 45.8397,299.494 43.5,306.5C 42.1667,327.5 42.1667,348.5 43.5,369.5C 42.8333,370.833 41.8333,371.833 40.5,372.5C 41.038,370.883 41.3713,369.216 41.5,367.5C 39.8333,367.5 38.1667,367.5 36.5,367.5C 36.8667,362.135 37.5334,356.802 38.5,351.5C 40.024,350.473 40.6906,348.973 40.5,347C 39.1322,335.012 38.6322,323.178 39,311.5C 36.9771,313.769 36.1437,316.436 36.5,319.5C 34.1667,319.5 31.8333,319.5 29.5,319.5C 29.5,316.833 29.5,314.167 29.5,311.5C 30.8333,311.5 32.1667,311.5 33.5,311.5C 32.1667,309.167 32.1667,306.833 33.5,304.5C 35.1238,304.36 36.2904,305.027 37,306.5C 37.3742,305.584 37.8742,304.75 38.5,304C 37.5769,301.959 37.2436,299.792 37.5,297.5C 36.0222,297.762 34.6888,297.429 33.5,296.5C 37.1097,294.288 36.443,293.288 31.5,293.5C 31.0201,287.342 31.6868,281.342 33.5,275.5C 32.2978,272.964 30.2978,271.63 27.5,271.5C 27.0204,265.769 27.0204,260.102 27.5,254.5C 30.4624,254.204 32.1291,252.538 32.5,249.5C 32.4547,240.788 32.4547,232.121 32.5,223.5C 32.5957,217.733 31.929,212.066 30.5,206.5C 27.9773,208.071 25.9773,207.571 24.5,205C 25.0093,195.704 26.0093,185.87 27.5,175.5C 28.5,175.5 29.5,175.5 30.5,175.5C 30.5,177.5 30.5,179.5 30.5,181.5C 32.677,181.414 34.677,180.747 36.5,179.5C 36.8333,180.667 37.1667,181.833 37.5,183C 36.8706,185.993 35.7039,188.827 34,191.5C 33.5006,196.823 33.334,202.156 33.5,207.5C 34.5,207.5 35.5,207.5 36.5,207.5C 37.1643,202.532 37.6643,197.532 38,192.5C 38.414,192.043 38.914,191.709 39.5,191.5C 40.3701,188.04 41.0368,184.54 41.5,181C 41.5066,179.188 40.84,177.688 39.5,176.5C 43.5469,175.488 47.3802,174.155 51,172.5C 51.3826,173.056 51.8826,173.389 52.5,173.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#292e47\",d:\"M 230.5,251.5 C 232.262,252.262 233.262,253.596 233.5,255.5C 233.335,259.182 233.501,262.848 234,266.5C 236.334,267.859 238.167,269.693 239.5,272C 239.043,272.414 238.709,272.914 238.5,273.5C 240.559,274.951 241.559,276.951 241.5,279.5C 243.346,279.222 244.68,279.889 245.5,281.5C 244.132,282.594 242.965,282.26 242,280.5C 241.56,282.076 240.727,283.41 239.5,284.5C 240.416,286.784 239.416,287.951 236.5,288C 236.833,288.333 237.167,288.667 237.5,289C 242.533,289.829 247.533,289.662 252.5,288.5C 250.138,287.729 247.804,286.895 245.5,286C 244.396,284.869 244.729,284.035 246.5,283.5C 251.359,283.666 257.026,284.333 263.5,285.5C 266.197,285.297 268.864,284.964 271.5,284.5C 271.5,283.5 271.5,282.5 271.5,281.5C 266.125,281.828 260.792,281.495 255.5,280.5C 254.359,279.575 254.359,278.741 255.5,278C 260.5,277.333 265.5,277.333 270.5,278C 271.167,278.667 271.833,279.333 272.5,280C 280.412,280.183 288.246,280.683 296,281.5C 299.303,280.869 302.47,279.869 305.5,278.5C 308.82,279.705 312.153,279.705 315.5,278.5C 317.319,278.342 318.652,279.009 319.5,280.5C 314.208,281.495 308.875,281.828 303.5,281.5C 303.33,282.822 303.663,283.989 304.5,285C 309.533,285.829 314.533,285.662 319.5,284.5C 319.833,283.833 320.167,283.167 320.5,282.5C 324.999,280.405 329.666,280.239 334.5,282C 335.337,283.011 335.67,284.178 335.5,285.5C 340.844,285.334 346.177,285.501 351.5,286C 350.833,286.333 350.167,286.667 349.5,287C 341.667,287.167 333.833,287.333 326,287.5C 306.246,286.059 288.913,285.392 274,285.5C 273.25,286.126 272.416,286.626 271.5,287C 265.917,287.191 260.417,287.691 255,288.5C 254.346,287.304 253.846,287.304 253.5,288.5C 259.319,289.167 264.986,289.833 270.5,290.5C 253.833,290.5 237.167,290.5 220.5,290.5C 224.312,289.676 228.312,289.176 232.5,289C 231.833,288.667 231.167,288.333 230.5,288C 232.167,287.667 233.833,287.333 235.5,287C 230.914,286.803 226.414,286.303 222,285.5C 222.621,282.681 223.121,279.681 223.5,276.5C 223.167,274.167 222.833,271.833 222.5,269.5C 220.021,271.914 217.355,272.08 214.5,270C 213.269,268.817 213.269,267.651 214.5,266.5C 216.198,267.681 217.865,267.681 219.5,266.5C 217.022,265.278 216.022,263.278 216.5,260.5C 216.5,259.833 216.833,259.5 217.5,259.5C 218.5,259.5 219.5,259.5 220.5,259.5C 220.5,260.833 220.5,262.167 220.5,263.5C 222.167,263.5 223.833,263.5 225.5,263.5C 226.773,267.011 227.773,270.678 228.5,274.5C 229.281,273.263 230.281,272.263 231.5,271.5C 232.429,270.311 232.762,268.978 232.5,267.5C 231.5,267.5 230.5,267.5 229.5,267.5C 229.392,262.13 229.725,256.797 230.5,251.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c2a50\",d:\"M 759.5,286.5 C 756.813,286.664 754.146,286.497 751.5,286C 750.167,285.333 750.167,284.667 751.5,284C 767.497,283.5 783.497,283.333 799.5,283.5C 835.686,283.597 871.686,283.264 907.5,282.5C 914.143,283.132 920.809,283.798 927.5,284.5C 871.335,285.167 815.335,285.833 759.5,286.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1fafd\",d:\"M 562.5,288.5 C 564.403,288.796 566.07,289.463 567.5,290.5C 524.663,290.832 481.997,290.499 439.5,289.5C 480.457,288.511 521.457,288.178 562.5,288.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c6e2ec\",d:\"M 940.5,288.5 C 942.415,288.216 944.081,288.549 945.5,289.5C 836.831,289.167 728.165,289.5 619.5,290.5C 618.398,291.176 617.398,291.842 616.5,292.5C 614.194,292.993 611.861,293.326 609.5,293.5C 610.29,292.599 611.29,291.932 612.5,291.5C 613.71,291.068 614.71,290.401 615.5,289.5C 723.793,288.504 832.126,288.171 940.5,288.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#292b3f\",d:\"M 59.5,290.5 C 113.167,290.5 166.833,290.5 220.5,290.5C 237.167,290.5 253.833,290.5 270.5,290.5C 308.835,290.333 347.168,290.5 385.5,291C 386.5,291.333 387.5,291.667 388.5,292C 387.906,292.464 387.239,292.631 386.5,292.5C 276.833,292.5 167.167,292.5 57.5,292.5C 56.7611,292.631 56.0944,292.464 55.5,292C 56.745,291.209 58.0783,290.709 59.5,290.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bef7fc\",d:\"M 439.5,289.5 C 481.997,290.499 524.663,290.832 567.5,290.5C 567.833,290.5 568.167,290.5 568.5,290.5C 555.01,291.496 541.344,291.829 527.5,291.5C 501.5,291.5 475.5,291.5 449.5,291.5C 445.363,291.146 441.363,291.646 437.5,293C 433.277,296.556 429.777,300.723 427,305.5C 425.672,323.277 424.506,340.943 423.5,358.5C 423.221,340.472 423.554,322.472 424.5,304.5C 427.167,297.167 432.167,292.167 439.5,289.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dafefe\",d:\"M 945.5,289.5 C 947.5,290.167 949.5,290.833 951.5,291.5C 949.735,292.461 947.735,292.795 945.5,292.5C 835.984,291.176 726.317,291.176 616.5,292.5C 617.398,291.842 618.398,291.176 619.5,290.5C 728.165,289.5 836.831,289.167 945.5,289.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d5e6ed\",d:\"M 57.5,292.5 C 167.167,292.5 276.833,292.5 386.5,292.5C 394.399,294.731 399.732,299.731 402.5,307.5C 402.5,307.833 402.5,308.167 402.5,308.5C 397.922,300.372 390.922,296.039 381.5,295.5C 272.69,294.842 164.024,295.509 55.5,297.5C 50.5178,300.317 46.6844,304.317 44,309.5C 43.5172,308.552 43.3505,307.552 43.5,306.5C 45.8397,299.494 50.5064,294.827 57.5,292.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d3b4f\",d:\"M 562.5,288.5 C 521.457,288.178 480.457,288.511 439.5,289.5C 432.167,292.167 427.167,297.167 424.5,304.5C 423.732,305.263 423.232,306.263 423,307.5C 422.5,324.163 422.333,340.83 422.5,357.5C 421.883,357.389 421.383,357.056 421,356.5C 421.089,343.386 420.256,330.386 418.5,317.5C 419.343,309.851 420.01,302.184 420.5,294.5C 421.833,294.5 423.167,294.5 424.5,294.5C 424.329,291.203 424.995,290.869 426.5,293.5C 429.768,291.196 433.101,289.696 436.5,289C 434.668,288.252 433.001,287.252 431.5,286C 471.962,286.948 515.628,287.781 562.5,288.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#477182\",d:\"M 381.5,295.5 C 379.708,296.309 377.708,296.809 375.5,297C 351.493,297.167 327.493,297.667 303.5,298.5C 306.107,299.318 308.774,299.818 311.5,300C 308.167,300.333 304.833,300.667 301.5,301C 308.004,301.041 314.338,301.708 320.5,303C 315.19,301.885 310.19,302.718 305.5,305.5C 303.184,302.573 301.684,302.907 301,306.5C 297.547,305.184 294.214,305.517 291,307.5C 288.581,305.406 286.414,305.406 284.5,307.5C 280.998,308.011 277.665,308.678 274.5,309.5C 274.167,309.5 273.833,309.5 273.5,309.5C 272.833,309.5 272.167,309.5 271.5,309.5C 270.167,309.5 268.833,309.5 267.5,309.5C 267.5,310.5 267.5,311.5 267.5,312.5C 266.167,312.5 264.833,312.5 263.5,312.5C 263.853,310.365 263.02,309.032 261,308.5C 259.97,308.836 259.47,309.503 259.5,310.5C 258.833,311.5 258.167,312.5 257.5,313.5C 255.883,314.038 254.216,314.371 252.5,314.5C 252.5,313.5 252.5,312.5 252.5,311.5C 254.167,311.5 255.833,311.5 257.5,311.5C 257.5,310.5 257.5,309.5 257.5,308.5C 255.167,308.5 252.833,308.5 250.5,308.5C 250.5,312.833 250.5,317.167 250.5,321.5C 251.952,322.302 253.618,322.802 255.5,323C 253.862,324.801 252.028,324.968 250,323.5C 245.158,325.795 240.325,325.629 235.5,323C 236.833,322.667 238.167,322.333 239.5,322C 238.748,321.329 238.414,320.496 238.5,319.5C 241.582,321.181 244.915,321.848 248.5,321.5C 249.097,317.257 249.097,312.924 248.5,308.5C 240.99,307.678 237.324,311.012 237.5,318.5C 235.458,315.771 233.792,312.771 232.5,309.5C 231.243,311.679 229.743,313.679 228,315.5C 226.92,313.447 226.086,311.28 225.5,309C 225.167,308.833 224.833,308.667 224.5,308.5C 223.571,309.689 223.238,311.022 223.5,312.5C 221.167,311.833 218.833,311.167 216.5,310.5C 216.5,313.167 216.5,315.833 216.5,318.5C 216.167,318.5 215.833,318.5 215.5,318.5C 214.941,315.157 213.608,312.157 211.5,309.5C 208.651,311.012 206.984,313.345 206.5,316.5C 205.833,315.167 205.167,313.833 204.5,312.5C 203.656,310.241 201.989,309.241 199.5,309.5C 199.567,310.959 199.234,312.292 198.5,313.5C 197.222,313.218 196.222,312.551 195.5,311.5C 194.817,309.824 193.483,309.157 191.5,309.5C 191.182,314.032 191.515,318.366 192.5,322.5C 192.918,323.222 193.584,323.722 194.5,324C 191.363,325.322 188.196,326.488 185,327.5C 184.692,326.692 184.192,326.025 183.5,325.5C 181.167,326.167 178.833,326.833 176.5,327.5C 175.571,328.689 175.238,330.022 175.5,331.5C 173.738,331.357 172.071,331.691 170.5,332.5C 169.702,330.922 169.202,329.256 169,327.5C 167.933,326.809 166.766,326.309 165.5,326C 166.167,325.667 166.833,325.333 167.5,325C 165.563,324.878 164.23,324.045 163.5,322.5C 163.833,315.833 164.167,315.833 164.5,322.5C 165.5,322.5 166.5,322.5 167.5,322.5C 167.5,318.833 167.5,315.167 167.5,311.5C 168.822,311.33 169.989,311.663 171,312.5C 172.16,324.482 172.993,324.482 173.5,312.5C 176.044,312.104 178.211,312.771 180,314.5C 180.29,316.952 180.956,319.285 182,321.5C 183.61,317.287 185.444,313.287 187.5,309.5C 186.167,309.5 184.833,309.5 183.5,309.5C 183.719,310.675 183.386,311.675 182.5,312.5C 181.893,312.376 181.56,312.043 181.5,311.5C 181.5,310.5 181.5,309.5 181.5,308.5C 174.167,308.5 166.833,308.5 159.5,308.5C 159.662,310.527 159.495,312.527 159,314.5C 158.802,312.618 158.302,310.952 157.5,309.5C 155.5,309.5 153.5,309.5 151.5,309.5C 151.5,312.5 151.5,315.5 151.5,318.5C 150.596,319.209 150.263,320.209 150.5,321.5C 148.447,321.598 146.78,320.931 145.5,319.5C 146.833,318.067 148.333,316.733 150,315.5C 149.683,310.385 146.85,308.385 141.5,309.5C 141.5,312.833 141.5,316.167 141.5,319.5C 140.728,320.694 139.728,321.694 138.5,322.5C 137.833,322.5 137.5,322.167 137.5,321.5C 139.697,317.885 140.03,314.052 138.5,310C 134.933,308.925 131.933,309.758 129.5,312.5C 126.198,309.096 122.698,308.763 119,311.5C 116.894,309.709 114.394,309.042 111.5,309.5C 111.5,313.5 111.5,317.5 111.5,321.5C 114.38,320.136 116.88,318.136 119,315.5C 119.436,318.398 120.603,320.731 122.5,322.5C 123.836,326.103 123.002,326.436 120,323.5C 116.993,324.819 113.993,324.819 111,323.5C 109.784,318.961 108.784,314.294 108,309.5C 107.818,312.226 107.318,314.893 106.5,317.5C 105.392,313.184 104.392,308.851 103.5,304.5C 101.994,303.253 100.494,303.253 99,304.5C 97.3983,302.354 96.2317,300.02 95.5,297.5C 83.4954,297.333 71.4954,297.5 59.5,298C 58.2341,298.309 57.0674,298.809 56,299.5C 55.5357,298.906 55.369,298.239 55.5,297.5C 164.024,295.509 272.69,294.842 381.5,295.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#242f58\",d:\"M 973.5,315.5 C 971.909,319.204 971.076,323.204 971,327.5C 970.567,346.168 970.067,364.835 969.5,383.5C 969.511,389.079 969.844,394.579 970.5,400C 969.161,407.888 968.827,415.721 969.5,423.5C 969.5,427.833 969.5,432.167 969.5,436.5C 970.959,436.433 972.292,436.766 973.5,437.5C 973.5,439.167 973.5,440.833 973.5,442.5C 972.549,443.919 972.216,445.585 972.5,447.5C 971.5,447.5 970.5,447.5 969.5,447.5C 969.665,444.482 969.498,441.482 969,438.5C 967.481,440.556 966.647,442.89 966.5,445.5C 969.65,449.888 968.65,453.054 963.5,455C 961.5,455.333 959.5,455.667 957.5,456C 956.692,457.706 955.359,458.539 953.5,458.5C 954.853,457.474 955.853,456.141 956.5,454.5C 957.552,454.649 958.552,454.483 959.5,454C 964.082,450.603 966.082,446.103 965.5,440.5C 965.5,440.167 965.5,439.833 965.5,439.5C 966.222,439.082 966.722,438.416 967,437.5C 967.667,398.167 967.667,358.833 967,319.5C 966.833,357.002 966.333,394.336 965.5,431.5C 965.832,389.33 965.499,347.33 964.5,305.5C 961.998,300.149 958.331,295.816 953.5,292.5C 956.408,288.176 958.908,288.51 961,293.5C 961.333,293.167 961.667,292.833 962,292.5C 966.39,293.564 968.557,296.398 968.5,301C 966.722,303.225 966.222,305.725 967,308.5C 968.899,312.102 970.565,311.769 972,307.5C 973.375,309.937 973.875,312.603 973.5,315.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39d4fb\",d:\"M 568.5,290.5 C 574.833,293.5 579.5,298.167 582.5,304.5C 582.5,323.5 582.5,342.5 582.5,361.5C 581.507,353.016 581.174,344.349 581.5,335.5C 580.5,335.5 579.5,335.5 578.5,335.5C 578.167,346.167 577.833,356.833 577.5,367.5C 577.167,367.5 576.833,367.5 576.5,367.5C 575.166,347.528 566.999,330.861 552,317.5C 551.505,315.527 551.338,313.527 551.5,311.5C 547.627,309.57 543.294,308.903 538.5,309.5C 536.973,309.573 535.973,308.906 535.5,307.5C 535.631,306.624 535.298,305.957 534.5,305.5C 531.833,304.877 529.333,303.877 527,302.5C 526.405,301.101 526.572,299.768 527.5,298.5C 524.92,297.451 522.254,296.784 519.5,296.5C 519.5,297.833 519.5,299.167 519.5,300.5C 512.998,299.223 506.331,298.39 499.5,298C 512.378,297.547 512.545,296.714 500,295.5C 496.048,297.265 491.882,297.765 487.5,297C 488.833,296.333 488.833,295.667 487.5,295C 494.285,293.139 501.285,292.306 508.5,292.5C 525.493,293.483 542.493,293.65 559.5,293C 548.659,292.83 537.992,292.33 527.5,291.5C 541.344,291.829 555.01,291.496 568.5,290.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad1fb\",d:\"M 449.5,291.5 C 475.5,291.5 501.5,291.5 527.5,291.5C 537.992,292.33 548.659,292.83 559.5,293C 542.493,293.65 525.493,293.483 508.5,292.5C 501.285,292.306 494.285,293.139 487.5,295C 488.833,295.667 488.833,296.333 487.5,297C 491.882,297.765 496.048,297.265 500,295.5C 512.545,296.714 512.378,297.547 499.5,298C 506.331,298.39 512.998,299.223 519.5,300.5C 519.5,299.167 519.5,297.833 519.5,296.5C 522.254,296.784 524.92,297.451 527.5,298.5C 526.572,299.768 526.405,301.101 527,302.5C 529.333,303.877 531.833,304.877 534.5,305.5C 535.298,305.957 535.631,306.624 535.5,307.5C 493.214,293.346 461.381,305.679 440,344.5C 436.028,357.196 434.528,370.196 435.5,383.5C 434.153,380.26 433.486,376.76 433.5,373C 434.548,364.462 435.381,355.962 436,347.5C 433.216,344.716 431.549,345.383 431,349.5C 430.667,349.167 430.333,348.833 430,348.5C 429.667,350.5 429.333,352.5 429,354.5C 428.768,353.263 428.268,352.263 427.5,351.5C 426.341,341.008 426.175,330.341 427,319.5C 428.477,314.312 429.477,308.979 430,303.5C 432.5,301 435,298.5 437.5,296C 440.817,295.502 444.15,295.335 447.5,295.5C 447.527,293.801 448.194,292.467 449.5,291.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8eef4\",d:\"M 145.5,319.5 C 144.518,320.141 143.518,320.807 142.5,321.5C 141.702,321.043 141.369,320.376 141.5,319.5C 141.5,316.167 141.5,312.833 141.5,309.5C 146.85,308.385 149.683,310.385 150,315.5C 148.333,316.733 146.833,318.067 145.5,319.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a7888\",d:\"M 55.5,297.5 C 55.369,298.239 55.5357,298.906 56,299.5C 57.0674,298.809 58.2341,298.309 59.5,298C 71.4954,297.5 83.4954,297.333 95.5,297.5C 96.2317,300.02 97.3983,302.354 99,304.5C 100.494,303.253 101.994,303.253 103.5,304.5C 104.392,308.851 105.392,313.184 106.5,317.5C 107.318,314.893 107.818,312.226 108,309.5C 108.784,314.294 109.784,318.961 111,323.5C 113.993,324.819 116.993,324.819 120,323.5C 123.002,326.436 123.836,326.103 122.5,322.5C 122.926,321.472 122.926,320.139 122.5,318.5C 124.995,319.199 127.328,320.199 129.5,321.5C 129.52,319.857 128.853,318.524 127.5,317.5C 127.808,316.692 128.308,316.025 129,315.5C 130.075,320.084 132.908,322.084 137.5,321.5C 137.5,322.167 137.833,322.5 138.5,322.5C 137.737,323.268 136.737,323.768 135.5,324C 136.973,324.71 137.64,325.876 137.5,327.5C 131.479,326.166 126.812,327.999 123.5,333C 124.009,334.169 124.842,335.002 126,335.5C 128.066,330.743 130.566,330.41 133.5,334.5C 131.604,335.466 129.604,335.799 127.5,335.5C 127.5,338.833 127.5,342.167 127.5,345.5C 116.833,345.833 116.833,346.167 127.5,346.5C 128.472,352.286 125.972,355.286 120,355.5C 116.553,353.236 112.72,351.736 108.5,351C 106.597,349.553 104.93,347.886 103.5,346C 100.793,345.605 98.1267,345.105 95.5,344.5C 93.4939,343.489 91.4939,342.489 89.5,341.5C 87.1716,342.33 84.8383,343.163 82.5,344C 69.8133,353.008 56.8133,361.508 43.5,369.5C 42.1667,348.5 42.1667,327.5 43.5,306.5C 43.3505,307.552 43.5172,308.552 44,309.5C 46.6844,304.317 50.5178,300.317 55.5,297.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9f4f9\",d:\"M 204.5,312.5 C 204.5,315.5 204.5,318.5 204.5,321.5C 203.5,321.5 202.5,321.5 201.5,321.5C 200.833,313.5 200.167,313.5 199.5,321.5C 198.5,321.5 197.5,321.5 196.5,321.5C 196.107,318.487 196.774,315.82 198.5,313.5C 199.234,312.292 199.567,310.959 199.5,309.5C 201.989,309.241 203.656,310.241 204.5,312.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#daf0f4\",d:\"M 181.5,311.5 C 181.56,312.043 181.893,312.376 182.5,312.5C 183.386,311.675 183.719,310.675 183.5,309.5C 184.833,309.5 186.167,309.5 187.5,309.5C 185.444,313.287 183.61,317.287 182,321.5C 180.956,319.285 180.29,316.952 180,314.5C 178.211,312.771 176.044,312.104 173.5,312.5C 172.993,324.482 172.16,324.482 171,312.5C 169.989,311.663 168.822,311.33 167.5,311.5C 167.5,315.167 167.5,318.833 167.5,322.5C 166.5,322.5 165.5,322.5 164.5,322.5C 164.167,315.833 163.833,315.833 163.5,322.5C 162.167,322.5 160.833,322.5 159.5,322.5C 160.2,318.202 160.533,313.869 160.5,309.5C 167.781,308.929 174.781,309.595 181.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#294b71\",d:\"M 538.5,309.5 C 543.294,308.903 547.627,309.57 551.5,311.5C 548.257,310.42 544.924,310.253 541.5,311C 544.365,311.183 547.031,311.683 549.5,312.5C 546.612,311.99 544.279,312.656 542.5,314.5C 541.075,312.969 540.409,313.302 540.5,315.5C 539.512,314.205 538.512,312.872 537.5,311.5C 538.338,311.158 538.672,310.492 538.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5a6f77\",d:\"M 144.5,311.5 C 145.497,311.47 146.164,311.97 146.5,313C 144.906,317.314 144.239,316.814 144.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1dde6\",d:\"M 257.5,313.5 C 259.238,319.927 256.905,322.594 250.5,321.5C 250.5,317.167 250.5,312.833 250.5,308.5C 252.833,308.5 255.167,308.5 257.5,308.5C 257.5,309.5 257.5,310.5 257.5,311.5C 255.833,311.5 254.167,311.5 252.5,311.5C 252.5,312.5 252.5,313.5 252.5,314.5C 254.216,314.371 255.883,314.038 257.5,313.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2e3ea\",d:\"M 271.5,309.5 C 271.5,313.5 271.5,317.5 271.5,321.5C 269.403,320.647 267.403,320.647 265.5,321.5C 263.912,320.99 262.745,319.99 262,318.5C 261.517,319.448 261.351,320.448 261.5,321.5C 260.5,321.5 259.5,321.5 258.5,321.5C 259.244,317.881 259.577,314.215 259.5,310.5C 259.47,309.503 259.97,308.836 261,308.5C 263.02,309.032 263.853,310.365 263.5,312.5C 264.833,312.5 266.167,312.5 267.5,312.5C 267.5,311.5 267.5,310.5 267.5,309.5C 268.833,309.5 270.167,309.5 271.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7c6c8\",d:\"M 549.5,312.5 C 549.5,313.5 549.5,314.5 549.5,315.5C 547.265,315.205 545.265,315.539 543.5,316.5C 542.662,316.158 542.328,315.492 542.5,314.5C 544.279,312.656 546.612,311.99 549.5,312.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d5ecf2\",d:\"M 137.5,321.5 C 132.908,322.084 130.075,320.084 129,315.5C 128.308,316.025 127.808,316.692 127.5,317.5C 128.853,318.524 129.52,319.857 129.5,321.5C 127.328,320.199 124.995,319.199 122.5,318.5C 122.926,320.139 122.926,321.472 122.5,322.5C 120.603,320.731 119.436,318.398 119,315.5C 116.88,318.136 114.38,320.136 111.5,321.5C 111.5,317.5 111.5,313.5 111.5,309.5C 114.394,309.042 116.894,309.709 119,311.5C 122.698,308.763 126.198,309.096 129.5,312.5C 131.933,309.758 134.933,308.925 138.5,310C 140.03,314.052 139.697,317.885 137.5,321.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#819fab\",d:\"M 133.5,311.5 C 136.127,311.293 137.793,312.46 138.5,315C 136.167,321 133.833,321 131.5,315C 131.978,313.697 132.645,312.531 133.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#859fab\",d:\"M 181.5,311.5 C 174.781,309.595 167.781,308.929 160.5,309.5C 160.533,313.869 160.2,318.202 159.5,322.5C 158.833,322.5 158.167,322.5 157.5,322.5C 156.817,320.824 155.483,320.157 153.5,320.5C 153.5,317.5 153.5,314.5 153.5,311.5C 155.483,311.843 156.817,311.176 157.5,309.5C 158.302,310.952 158.802,312.618 159,314.5C 159.495,312.527 159.662,310.527 159.5,308.5C 166.833,308.5 174.167,308.5 181.5,308.5C 181.5,309.5 181.5,310.5 181.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d6eff2\",d:\"M 195.5,311.5 C 195.251,314.002 194.917,316.502 194.5,319C 194.392,320.681 193.725,321.848 192.5,322.5C 191.515,318.366 191.182,314.032 191.5,309.5C 193.483,309.157 194.817,309.824 195.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#deeff3\",d:\"M 237.5,318.5 C 237.5,319.5 237.5,320.5 237.5,321.5C 235.516,321.617 233.85,320.95 232.5,319.5C 229.807,321.27 226.807,321.937 223.5,321.5C 221.457,313.79 220.124,313.79 219.5,321.5C 218.5,321.5 217.5,321.5 216.5,321.5C 216.5,320.5 216.5,319.5 216.5,318.5C 216.5,315.833 216.5,313.167 216.5,310.5C 218.833,311.167 221.167,311.833 223.5,312.5C 223.238,311.022 223.571,309.689 224.5,308.5C 224.833,308.667 225.167,308.833 225.5,309C 226.086,311.28 226.92,313.447 228,315.5C 229.743,313.679 231.243,311.679 232.5,309.5C 233.792,312.771 235.458,315.771 237.5,318.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dcf0f4\",d:\"M 215.5,318.5 C 215.157,320.225 214.157,320.725 212.5,320C 210.487,314.266 209.487,314.766 209.5,321.5C 208.5,321.5 207.5,321.5 206.5,321.5C 206.5,319.833 206.5,318.167 206.5,316.5C 206.984,313.345 208.651,311.012 211.5,309.5C 213.608,312.157 214.941,315.157 215.5,318.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d4ecf2\",d:\"M 238.5,319.5 C 238.5,318.833 238.167,318.5 237.5,318.5C 237.324,311.012 240.99,307.678 248.5,308.5C 249.097,312.924 249.097,317.257 248.5,321.5C 244.915,321.848 241.582,321.181 238.5,319.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6f9fa\",d:\"M 515.5,304.5 C 519.553,305.013 523.553,305.846 527.5,307C 530.706,308.769 534.039,310.269 537.5,311.5C 538.512,312.872 539.512,314.205 540.5,315.5C 540.5,316.167 540.5,316.833 540.5,317.5C 540.5,319.833 540.5,322.167 540.5,324.5C 539.5,324.5 538.5,324.5 537.5,324.5C 526.651,322.33 515.651,320.997 504.5,320.5C 491.317,320.822 480.317,325.655 471.5,335C 471.989,336.138 472.322,337.305 472.5,338.5C 464.311,346.387 459.644,356.054 458.5,367.5C 456.483,375.57 457.483,383.237 461.5,390.5C 461.932,391.71 462.599,392.71 463.5,393.5C 465.991,398.478 468.991,403.145 472.5,407.5C 474.327,409.973 475.66,412.639 476.5,415.5C 477.167,418.833 477.833,422.167 478.5,425.5C 477.833,425.5 477.167,425.5 476.5,425.5C 474.562,423.837 472.228,423.171 469.5,423.5C 467.833,423.5 466.167,423.5 464.5,423.5C 463.262,424.412 461.928,424.579 460.5,424C 449.473,414.108 442.473,401.942 439.5,387.5C 439.59,385.304 439.923,383.137 440.5,381C 438.065,373.261 437.899,365.427 440,357.5C 440.333,358.167 440.667,358.833 441,359.5C 441.877,354.766 443.377,350.266 445.5,346C 445.167,345.667 444.833,345.333 444.5,345C 446.516,343.871 448.182,343.038 449.5,342.5C 449.167,341.833 448.833,341.167 448.5,340.5C 450.229,338.149 450.896,335.482 450.5,332.5C 460.791,318.005 474.791,309.005 492.5,305.5C 500.132,304.642 507.799,304.309 515.5,304.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ae576b\",d:\"M 549.5,318.5 C 553.566,321.563 556.899,325.229 559.5,329.5C 555.434,326.437 552.101,322.771 549.5,318.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd4fd\",d:\"M 951.5,291.5 C 952.167,291.833 952.833,292.167 953.5,292.5C 958.331,295.816 961.998,300.149 964.5,305.5C 964.667,349.501 964.5,393.501 964,437.5C 963.392,439.066 962.558,440.4 961.5,441.5C 960.989,437.97 961.656,434.804 963.5,432C 962.799,414.889 962.132,397.723 961.5,380.5C 962.632,360.184 962.798,339.851 962,319.5C 961.626,318.584 961.126,317.75 960.5,317C 961.8,312.55 961.8,308.05 960.5,303.5C 959.451,301.784 958.118,300.451 956.5,299.5C 956.249,297.83 955.582,296.33 954.5,295C 947.608,293.314 940.774,293.481 934,295.5C 931.589,294.861 929.089,294.527 926.5,294.5C 869.841,295.305 813.174,295.805 756.5,296C 802.288,296.696 848.288,297.529 894.5,298.5C 892.599,298.395 890.599,299.062 888.5,300.5C 890.737,301.132 892.403,302.465 893.5,304.5C 891.668,305.248 890.001,306.248 888.5,307.5C 887.808,306.975 887.308,306.308 887,305.5C 886.667,305.833 886.333,306.167 886,306.5C 885.517,305.552 885.351,304.552 885.5,303.5C 883.516,303.383 881.85,304.05 880.5,305.5C 879.833,304.833 879.167,304.167 878.5,303.5C 878.167,304 877.833,304.5 877.5,305C 878.707,306.3 879.374,307.8 879.5,309.5C 877.309,308.709 875.309,308.709 873.5,309.5C 872.167,309.5 870.833,309.5 869.5,309.5C 867.5,308.167 865.5,308.167 863.5,309.5C 859.404,307.787 855.07,307.121 850.5,307.5C 850.674,305.139 851.007,302.806 851.5,300.5C 849.323,300.586 847.323,301.253 845.5,302.5C 844.494,302.062 844.494,301.396 845.5,300.5C 844.833,300.167 844.167,299.833 843.5,299.5C 836.529,300.251 830.362,300.251 825,299.5C 824,300.167 823,300.833 822,301.5C 820.542,300.253 819.042,300.253 817.5,301.5C 816.139,305.074 817.473,306.74 821.5,306.5C 822.524,302.777 823.857,302.943 825.5,307C 824.437,308.188 823.103,308.688 821.5,308.5C 819.833,308.5 818.167,308.5 816.5,308.5C 815.5,308.5 814.5,308.5 813.5,308.5C 813.62,305.795 812.62,305.128 810.5,306.5C 809.667,305.5 808.833,304.5 808,303.5C 805.879,305.457 803.379,305.957 800.5,305C 800.833,304.667 801.167,304.333 801.5,304C 798.934,302.132 796.1,300.632 793,299.5C 791.242,300.252 789.075,301.086 786.5,302C 785.953,302.925 785.287,303.758 784.5,304.5C 778.694,305.301 773.527,305.301 769,304.5C 768.193,300.551 767.693,300.551 767.5,304.5C 764.421,304.74 761.421,304.407 758.5,303.5C 757.413,308.74 756.413,308.74 755.5,303.5C 754.5,303.5 753.5,303.5 752.5,303.5C 752.167,308.833 751.833,308.833 751.5,303.5C 747.776,303.106 744.276,303.773 741,305.5C 740.05,304.978 739.216,304.311 738.5,303.5C 738.167,303.833 737.833,304.167 737.5,304.5C 738.833,305.62 739.333,306.953 739,308.5C 736.559,310.969 733.726,312.802 730.5,314C 734.801,314.999 739.135,315.499 743.5,315.5C 743.065,318.838 743.732,321.838 745.5,324.5C 740.159,321.497 734.825,318.497 729.5,315.5C 727.197,313.745 724.53,312.578 721.5,312C 713.167,311.333 704.833,311.333 696.5,312C 695.944,312.383 695.611,312.883 695.5,313.5C 685.996,315.215 677.662,319.215 670.5,325.5C 667.319,327.592 664.319,329.925 661.5,332.5C 661.5,328.5 663.5,326.5 667.5,326.5C 667.351,325.448 667.517,324.448 668,323.5C 668.333,323.833 668.667,324.167 669,324.5C 671.167,322.333 673.333,320.167 675.5,318C 673.481,314.807 671.814,315.14 670.5,319C 669.552,319.483 668.552,319.649 667.5,319.5C 668.797,315.569 668.797,311.902 667.5,308.5C 664.731,307.802 662.398,306.468 660.5,304.5C 659.833,305.5 659.167,306.5 658.5,307.5C 657.15,306.05 655.484,305.383 653.5,305.5C 653.36,303.876 654.027,302.71 655.5,302C 650.219,301.026 645.219,301.693 640.5,304C 641.337,305.011 641.67,306.178 641.5,307.5C 640.5,307.5 639.5,307.5 638.5,307.5C 638.762,306.022 638.429,304.689 637.5,303.5C 636.709,304.066 636.709,304.899 637.5,306C 636.863,307.713 635.863,307.879 634.5,306.5C 632.729,307.035 632.396,307.869 633.5,309C 631.562,311.568 630.729,314.402 631,317.5C 636.663,311.91 637.496,312.41 633.5,319C 634.235,322.2 636.235,323.7 639.5,323.5C 638.929,328.851 639.929,329.518 642.5,325.5C 645.786,328.267 648.786,327.934 651.5,324.5C 651.739,326.467 651.406,328.301 650.5,330C 651.184,331.693 652.184,333.193 653.5,334.5C 653,334.833 652.5,335.167 652,335.5C 650.7,334.293 649.2,333.626 647.5,333.5C 648.167,335.819 648.334,338.153 648,340.5C 645.987,345.018 643.653,349.351 641,353.5C 639.445,351.854 637.779,351.521 636,352.5C 635.333,362.5 635.333,372.5 636,382.5C 636.667,383.833 637.333,383.833 638,382.5C 638.178,385.542 639.012,388.375 640.5,391C 640.006,392.462 639.673,393.962 639.5,395.5C 640.72,398.533 641.72,401.699 642.5,405C 641.381,406.876 639.714,407.709 637.5,407.5C 637.523,404.879 636.189,403.545 633.5,403.5C 632.287,403.747 631.62,404.414 631.5,405.5C 629.01,407.489 626.677,409.656 624.5,412C 625.745,412.791 627.078,413.291 628.5,413.5C 629.828,417.254 632.494,418.421 636.5,417C 637.044,416.283 637.711,415.783 638.5,415.5C 639.5,415.5 640.5,415.5 641.5,415.5C 641.5,413.833 641.5,412.167 641.5,410.5C 642.5,410.5 643.5,410.5 644.5,410.5C 644.263,409.209 644.596,408.209 645.5,407.5C 645.351,408.552 645.517,409.552 646,410.5C 647.011,409.663 648.178,409.33 649.5,409.5C 649.338,411.527 649.505,413.527 650,415.5C 651,416.833 652,416.833 653,415.5C 653.708,416.381 654.542,417.047 655.5,417.5C 656.794,418.29 657.961,419.29 659,420.5C 659.399,420.272 659.565,419.938 659.5,419.5C 660.936,421.319 662.603,421.652 664.5,420.5C 656.133,408.432 651.133,395.099 649.5,380.5C 653.5,380.5 657.5,380.5 661.5,380.5C 661.457,383.91 661.957,387.243 663,390.5C 663.424,393.025 664.59,395.025 666.5,396.5C 670.308,404.978 675.975,411.978 683.5,417.5C 679.885,423.116 675.885,428.45 671.5,433.5C 672.5,434.833 673.5,434.833 674.5,433.5C 678.518,428.154 682.851,423.154 687.5,418.5C 691.333,420.421 695.333,421.754 699.5,422.5C 700.568,423.434 701.901,423.768 703.5,423.5C 705.557,427.118 706.557,431.118 706.5,435.5C 707.833,435.5 709.167,435.5 710.5,435.5C 710.5,431.833 710.5,428.167 710.5,424.5C 711.791,424.737 712.791,424.404 713.5,423.5C 717.529,423.851 721.362,423.185 725,421.5C 725.5,421.833 726,422.167 726.5,422.5C 725.757,423.182 725.091,423.849 724.5,424.5C 722.938,424.733 721.605,425.4 720.5,426.5C 719.186,436.396 717.186,446.229 714.5,456C 683.167,456.667 651.833,456.667 620.5,456C 618.323,454.798 615.989,454.298 613.5,454.5C 612.833,454.5 612.167,454.5 611.5,454.5C 609.596,454.262 608.262,453.262 607.5,451.5C 606.833,450.5 606.167,449.5 605.5,448.5C 605.707,447.262 606.374,445.762 607.5,444C 605.759,441.739 604.759,439.073 604.5,436C 605.932,392.493 606.432,348.993 606,305.5C 606.465,304.069 607.299,302.903 608.5,302C 611.895,300.764 614.895,298.931 617.5,296.5C 619.396,295.534 621.396,295.201 623.5,295.5C 623.5,294.5 623.5,293.5 623.5,292.5C 730.833,292.5 838.167,292.5 945.5,292.5C 947.735,292.795 949.735,292.461 951.5,291.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3382b7\",d:\"M 729.5,315.5 C 718.291,312.559 706.958,311.893 695.5,313.5C 695.611,312.883 695.944,312.383 696.5,312C 704.833,311.333 713.167,311.333 721.5,312C 724.53,312.578 727.197,313.745 729.5,315.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad6f9\",d:\"M 661.5,332.5 C 653.579,340.34 648.246,349.673 645.5,360.5C 642.198,365.465 640.865,371.132 641.5,377.5C 641.656,387.76 642.989,397.76 645.5,407.5C 644.596,408.209 644.263,409.209 644.5,410.5C 643.5,410.5 642.5,410.5 641.5,410.5C 641.5,412.167 641.5,413.833 641.5,415.5C 640.5,415.5 639.5,415.5 638.5,415.5C 640.06,412.541 639.727,409.874 637.5,407.5C 639.714,407.709 641.381,406.876 642.5,405C 641.72,401.699 640.72,398.533 639.5,395.5C 639.673,393.962 640.006,392.462 640.5,391C 639.012,388.375 638.178,385.542 638,382.5C 637.333,383.833 636.667,383.833 636,382.5C 635.333,372.5 635.333,362.5 636,352.5C 637.779,351.521 639.445,351.854 641,353.5C 643.653,349.351 645.987,345.018 648,340.5C 648.334,338.153 648.167,335.819 647.5,333.5C 649.2,333.626 650.7,334.293 652,335.5C 652.5,335.167 653,334.833 653.5,334.5C 652.184,333.193 651.184,331.693 650.5,330C 651.406,328.301 651.739,326.467 651.5,324.5C 653.593,323.062 654.927,321.062 655.5,318.5C 655.152,316.152 653.818,314.818 651.5,314.5C 649.833,313.5 648.5,312.167 647.5,310.5C 646.399,309.402 645.066,309.235 643.5,310C 641.286,312.925 638.953,315.759 636.5,318.5C 638.523,320.853 640.523,323.186 642.5,325.5C 639.929,329.518 638.929,328.851 639.5,323.5C 636.235,323.7 634.235,322.2 633.5,319C 637.496,312.41 636.663,311.91 631,317.5C 630.729,314.402 631.562,311.568 633.5,309C 632.396,307.869 632.729,307.035 634.5,306.5C 635.863,307.879 636.863,307.713 637.5,306C 636.709,304.899 636.709,304.066 637.5,303.5C 638.429,304.689 638.762,306.022 638.5,307.5C 639.5,307.5 640.5,307.5 641.5,307.5C 641.67,306.178 641.337,305.011 640.5,304C 645.219,301.693 650.219,301.026 655.5,302C 654.027,302.71 653.36,303.876 653.5,305.5C 655.484,305.383 657.15,306.05 658.5,307.5C 659.167,306.5 659.833,305.5 660.5,304.5C 662.398,306.468 664.731,307.802 667.5,308.5C 668.797,311.902 668.797,315.569 667.5,319.5C 668.552,319.649 669.552,319.483 670.5,319C 671.814,315.14 673.481,314.807 675.5,318C 673.333,320.167 671.167,322.333 669,324.5C 668.667,324.167 668.333,323.833 668,323.5C 667.517,324.448 667.351,325.448 667.5,326.5C 663.5,326.5 661.5,328.5 661.5,332.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1bc09\",d:\"M 640.5,316.5 C 640.5,315.833 640.833,315.5 641.5,315.5C 642.857,314.315 644.357,313.315 646,312.5C 654.849,317.464 654.349,321.131 644.5,323.5C 644.5,322.167 644.5,320.833 644.5,319.5C 643.167,319.5 641.833,319.5 640.5,319.5C 640.5,318.5 640.5,317.5 640.5,316.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1bf43\",d:\"M 647.5,310.5 C 648.5,312.167 649.833,313.5 651.5,314.5C 652.476,315.815 653.476,317.148 654.5,318.5C 652.424,321.581 649.757,323.914 646.5,325.5C 641.777,323.861 639.777,320.861 640.5,316.5C 640.5,317.5 640.5,318.5 640.5,319.5C 641.833,319.5 643.167,319.5 644.5,319.5C 644.5,320.833 644.5,322.167 644.5,323.5C 654.349,321.131 654.849,317.464 646,312.5C 644.357,313.315 642.857,314.315 641.5,315.5C 642.288,312.379 644.288,310.712 647.5,310.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd2fd\",d:\"M 943.5,297.5 C 946.372,298.325 949.372,299.159 952.5,300C 952.677,302.369 952.344,304.869 951.5,307.5C 957.487,310.12 960.487,314.786 960.5,321.5C 959.176,322.006 958.509,323.339 958.5,325.5C 955.881,325.768 953.381,325.435 951,324.5C 950.316,325.784 950.483,326.951 951.5,328C 950.167,328.333 948.833,328.667 947.5,329C 949.769,329.758 951.936,329.591 954,328.5C 954.7,330.032 955.866,331.032 957.5,331.5C 958.452,333.045 958.785,334.712 958.5,336.5C 955.372,335.382 952.372,335.549 949.5,337C 953.304,338.706 956.804,338.206 960,335.5C 960.667,338.167 960.667,340.833 960,343.5C 958.951,342.483 957.784,342.316 956.5,343C 957.516,344.677 958.516,346.343 959.5,348C 958.614,350.112 958.614,352.278 959.5,354.5C 957.139,354.326 954.806,353.993 952.5,353.5C 952.657,354.873 952.49,356.207 952,357.5C 951.451,354.448 952.284,351.781 954.5,349.5C 952.32,347.91 949.987,346.576 947.5,345.5C 948.424,343.279 947.757,341.613 945.5,340.5C 945.975,337.918 945.308,335.918 943.5,334.5C 943.5,334.167 943.5,333.833 943.5,333.5C 901.665,332.833 859.665,332.167 817.5,331.5C 816.975,330.808 816.308,330.308 815.5,330C 818.96,329.015 822.294,328.848 825.5,329.5C 864.029,329.017 902.696,328.851 941.5,329C 942.841,327.174 942.341,326.007 940,325.5C 922.089,325.816 903.922,325.816 885.5,325.5C 878.49,326.057 871.49,326.724 864.5,327.5C 860.131,327.564 855.964,326.898 852,325.5C 850.106,325.58 848.273,325.913 846.5,326.5C 841.553,325.717 836.553,325.217 831.5,325C 831.167,324.667 830.833,324.333 830.5,324C 859.167,323.667 887.833,323.333 916.5,323C 916.833,322.667 917.167,322.333 917.5,322C 915.563,321.878 914.23,321.045 913.5,319.5C 915.094,316.939 916.094,313.939 916.5,310.5C 917.086,310.709 917.586,311.043 918,311.5C 918.497,314.146 918.664,316.813 918.5,319.5C 919.5,319.5 920.5,319.5 921.5,319.5C 920.841,316.545 920.508,313.545 920.5,310.5C 921.5,310.5 922.5,310.5 923.5,310.5C 923.5,313.5 923.5,316.5 923.5,319.5C 924.5,319.5 925.5,319.5 926.5,319.5C 926.489,317.453 926.156,315.453 925.5,313.5C 926.754,311.666 927.421,309.666 927.5,307.5C 926.448,307.649 925.448,307.483 924.5,307C 925.641,306.259 925.641,305.425 924.5,304.5C 932.479,303.668 940.479,303.168 948.5,303C 948.167,302.667 947.833,302.333 947.5,302C 934.915,300.338 922.249,299.338 909.5,299C 920.731,297.544 932.064,297.044 943.5,297.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38d6f9\",d:\"M 956.5,299.5 C 955.542,299.047 954.708,298.381 954,297.5C 950.712,297.658 947.212,297.658 943.5,297.5C 932.064,297.044 920.731,297.544 909.5,299C 922.249,299.338 934.915,300.338 947.5,302C 947.833,302.333 948.167,302.667 948.5,303C 940.479,303.168 932.479,303.668 924.5,304.5C 925.641,305.425 925.641,306.259 924.5,307C 925.448,307.483 926.448,307.649 927.5,307.5C 927.421,309.666 926.754,311.666 925.5,313.5C 926.156,315.453 926.489,317.453 926.5,319.5C 925.5,319.5 924.5,319.5 923.5,319.5C 923.5,316.5 923.5,313.5 923.5,310.5C 924.833,309.833 924.833,309.167 923.5,308.5C 918.79,307.055 914.123,307.389 909.5,309.5C 909.167,309.5 908.833,309.5 908.5,309.5C 904.648,308.356 900.648,308.356 896.5,309.5C 895.399,308.402 894.066,308.235 892.5,309C 891.91,310.299 890.91,311.132 889.5,311.5C 886.353,309.207 883.02,308.54 879.5,309.5C 879.374,307.8 878.707,306.3 877.5,305C 877.833,304.5 878.167,304 878.5,303.5C 879.167,304.167 879.833,304.833 880.5,305.5C 881.85,304.05 883.516,303.383 885.5,303.5C 885.351,304.552 885.517,305.552 886,306.5C 886.333,306.167 886.667,305.833 887,305.5C 887.308,306.308 887.808,306.975 888.5,307.5C 890.001,306.248 891.668,305.248 893.5,304.5C 892.403,302.465 890.737,301.132 888.5,300.5C 890.599,299.062 892.599,298.395 894.5,298.5C 848.288,297.529 802.288,296.696 756.5,296C 813.174,295.805 869.841,295.305 926.5,294.5C 929.089,294.527 931.589,294.861 934,295.5C 940.774,293.481 947.608,293.314 954.5,295C 955.582,296.33 956.249,297.83 956.5,299.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2ed8f7\",d:\"M 623.5,295.5 C 664.168,295.333 704.835,295.5 745.5,296C 725.146,297.162 704.646,297.662 684,297.5C 663.489,297.5 643.322,296.833 623.5,295.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7ec3a7\",d:\"M 647.5,310.5 C 644.288,310.712 642.288,312.379 641.5,315.5C 640.833,315.5 640.5,315.833 640.5,316.5C 639.777,320.861 641.777,323.861 646.5,325.5C 649.757,323.914 652.424,321.581 654.5,318.5C 653.476,317.148 652.476,315.815 651.5,314.5C 653.818,314.818 655.152,316.152 655.5,318.5C 654.927,321.062 653.593,323.062 651.5,324.5C 648.786,327.934 645.786,328.267 642.5,325.5C 640.523,323.186 638.523,320.853 636.5,318.5C 638.953,315.759 641.286,312.925 643.5,310C 645.066,309.235 646.399,309.402 647.5,310.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e2f8fc\",d:\"M 157.5,309.5 C 156.817,311.176 155.483,311.843 153.5,311.5C 153.5,314.5 153.5,317.5 153.5,320.5C 155.483,320.157 156.817,320.824 157.5,322.5C 155.5,322.5 153.5,322.5 151.5,322.5C 151.5,321.167 151.5,319.833 151.5,318.5C 151.5,315.5 151.5,312.5 151.5,309.5C 153.5,309.5 155.5,309.5 157.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2e2ed\",d:\"M 537.5,324.5 C 534.983,326.053 532.15,327.053 529,327.5C 527.05,325.429 524.883,325.095 522.5,326.5C 521.614,325.675 521.281,324.675 521.5,323.5C 515.491,323.334 509.491,323.501 503.5,324C 501.618,324.198 499.952,324.698 498.5,325.5C 494.494,326.091 490.827,327.425 487.5,329.5C 485.345,329.372 483.345,329.872 481.5,331C 478.31,333.364 475.31,335.864 472.5,338.5C 472.322,337.305 471.989,336.138 471.5,335C 480.317,325.655 491.317,320.822 504.5,320.5C 515.651,320.997 526.651,322.33 537.5,324.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b5e6e5\",d:\"M 68.5,321.5 C 69.5,321.5 70.5,321.5 71.5,321.5C 71.5,322.5 71.5,323.5 71.5,324.5C 70.5,324.5 69.5,324.5 68.5,324.5C 68.5,323.5 68.5,322.5 68.5,321.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#102d67\",d:\"M 729.5,315.5 C 734.825,318.497 740.159,321.497 745.5,324.5C 750.774,329.722 755.941,335.056 761,340.5C 775.115,365.39 774.948,390.057 760.5,414.5C 759.761,414.631 759.094,414.464 758.5,414C 759.252,413.329 759.586,412.496 759.5,411.5C 763.743,404.439 766.41,396.772 767.5,388.5C 768.477,385.713 768.81,382.713 768.5,379.5C 764.167,379.5 759.833,379.5 755.5,379.5C 754.178,379.33 753.011,379.663 752,380.5C 751.304,383.478 750.804,386.478 750.5,389.5C 749.778,389.918 749.278,390.584 749,391.5C 749.017,387.525 749.184,383.525 749.5,379.5C 750.5,378.833 751.5,378.167 752.5,377.5C 757.833,377.5 763.167,377.5 768.5,377.5C 768.813,373.958 768.479,370.625 767.5,367.5C 766.474,357.854 763.141,349.188 757.5,341.5C 746.277,325.047 730.611,316.047 710.5,314.5C 709.512,319.64 709.179,324.974 709.5,330.5C 711.167,330.5 712.833,330.5 714.5,330.5C 718.973,331.613 722.973,333.613 726.5,336.5C 720.833,335.167 715.167,333.833 709.5,332.5C 708.391,332.557 707.391,332.89 706.5,333.5C 695.196,334.158 685.529,338.491 677.5,346.5C 676.662,346.158 676.328,345.492 676.5,344.5C 676.833,343.833 677.167,343.167 677.5,342.5C 681.109,340.02 684.776,337.52 688.5,335C 693.928,333.351 699.262,331.851 704.5,330.5C 705.117,330.389 705.617,330.056 706,329.5C 706.499,324.177 706.666,318.844 706.5,313.5C 704.585,313.216 702.919,313.549 701.5,314.5C 699.708,314.366 698.042,314.699 696.5,315.5C 693.848,315.41 691.515,316.076 689.5,317.5C 682.979,319.427 676.979,322.427 671.5,326.5C 670.833,326.5 670.5,326.167 670.5,325.5C 677.662,319.215 685.996,315.215 695.5,313.5C 706.958,311.893 718.291,312.559 729.5,315.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9ba9d8\",d:\"M 696.5,315.5 C 694.485,316.924 692.152,317.59 689.5,317.5C 691.515,316.076 693.848,315.41 696.5,315.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38c7f8\",d:\"M 705.5,317.5 C 705.706,321.898 705.373,326.232 704.5,330.5C 699.262,331.851 693.928,333.351 688.5,335C 684.776,337.52 681.109,340.02 677.5,342.5C 677.586,341.504 677.252,340.671 676.5,340C 684.428,337.163 684.094,334.996 675.5,333.5C 675.5,332.5 675.5,331.5 675.5,330.5C 678.676,330.948 681.676,331.948 684.5,333.5C 686.867,333.158 689.2,332.658 691.5,332C 692.711,331.107 692.711,330.274 691.5,329.5C 690.264,330.246 688.93,330.579 687.5,330.5C 687.1,327.239 688.267,326.572 691,328.5C 692.724,328.045 694.224,327.212 695.5,326C 692.401,325.613 689.734,324.446 687.5,322.5C 688.842,321.207 690.509,320.374 692.5,320C 696.787,318.847 701.121,318.013 705.5,317.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ca5e70\",d:\"M 543.5,320.5 C 547.076,322.823 548.243,326.157 547,330.5C 542.961,331.056 539.128,332.056 535.5,333.5C 534.833,333.5 534.5,333.167 534.5,332.5C 537.845,330.783 541.511,330.116 545.5,330.5C 545.845,326.885 545.178,323.552 543.5,320.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5899db\",d:\"M 701.5,314.5 C 702.919,313.549 704.585,313.216 706.5,313.5C 706.666,318.844 706.499,324.177 706,329.5C 705.617,330.056 705.117,330.389 704.5,330.5C 705.373,326.232 705.706,321.898 705.5,317.5C 705.5,316.5 705.5,315.5 705.5,314.5C 704.167,314.5 702.833,314.5 701.5,314.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a2145\",d:\"M 542.5,314.5 C 542.328,315.492 542.662,316.158 543.5,316.5C 543.5,317.833 543.5,319.167 543.5,320.5C 545.178,323.552 545.845,326.885 545.5,330.5C 541.511,330.116 537.845,330.783 534.5,332.5C 533.272,333.306 532.272,334.306 531.5,335.5C 530.833,335.5 530.167,335.5 529.5,335.5C 528.284,333.549 526.618,332.049 524.5,331C 518.976,329.19 513.309,328.023 507.5,327.5C 507.174,331.884 507.508,336.217 508.5,340.5C 511.942,341.645 515.275,342.979 518.5,344.5C 517.193,346.152 517.193,347.818 518.5,349.5C 517.775,350.867 517.108,352.2 516.5,353.5C 513.772,353.829 511.438,353.163 509.5,351.5C 510.5,351.5 511.5,351.5 512.5,351.5C 512.617,349.516 511.95,347.85 510.5,346.5C 506.035,345.995 501.702,345.161 497.5,344C 500.022,342.659 502.689,341.826 505.5,341.5C 505.813,337.958 505.479,334.625 504.5,331.5C 504.5,330.167 504.5,328.833 504.5,327.5C 498.076,328.42 491.743,329.753 485.5,331.5C 486.167,330.833 486.833,330.167 487.5,329.5C 490.827,327.425 494.494,326.091 498.5,325.5C 509.7,324.034 520.2,326.034 530,331.5C 533.89,329.919 537.89,328.585 542,327.5C 542.674,323.888 542.174,320.554 540.5,317.5C 540.5,316.833 540.5,316.167 540.5,315.5C 540.409,313.302 541.075,312.969 542.5,314.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ed5fb\",d:\"M 943.5,297.5 C 947.212,297.658 950.712,297.658 954,297.5C 954.708,298.381 955.542,299.047 956.5,299.5C 958.118,300.451 959.451,301.784 960.5,303.5C 961.8,308.05 961.8,312.55 960.5,317C 961.126,317.75 961.626,318.584 962,319.5C 962.798,339.851 962.632,360.184 961.5,380.5C 962.132,397.723 962.799,414.889 963.5,432C 961.656,434.804 960.989,437.97 961.5,441.5C 961.108,443.179 960.608,444.846 960,446.5C 956.544,449.802 952.711,452.469 948.5,454.5C 947.244,454.461 946.244,454.961 945.5,456C 909.981,456.183 874.481,456.683 839,457.5C 837.373,457.375 835.873,456.875 834.5,456C 837.028,455.002 837.028,454.169 834.5,453.5C 833,453.453 832,454.119 831.5,455.5C 818.183,456.499 804.85,456.833 791.5,456.5C 789.245,455.352 787.412,453.686 786,451.5C 785.667,447.167 785.333,442.833 785,438.5C 777.655,429.655 769.488,421.655 760.5,414.5C 774.948,390.057 775.115,365.39 761,340.5C 755.941,335.056 750.774,329.722 745.5,324.5C 743.732,321.838 743.065,318.838 743.5,315.5C 739.135,315.499 734.801,314.999 730.5,314C 733.726,312.802 736.559,310.969 739,308.5C 739.333,306.953 738.833,305.62 737.5,304.5C 737.833,304.167 738.167,303.833 738.5,303.5C 739.216,304.311 740.05,304.978 741,305.5C 744.276,303.773 747.776,303.106 751.5,303.5C 751.833,308.833 752.167,308.833 752.5,303.5C 753.5,303.5 754.5,303.5 755.5,303.5C 756.413,308.74 757.413,308.74 758.5,303.5C 761.421,304.407 764.421,304.74 767.5,304.5C 767.693,300.551 768.193,300.551 769,304.5C 773.527,305.301 778.694,305.301 784.5,304.5C 785.287,303.758 785.953,302.925 786.5,302C 789.075,301.086 791.242,300.252 793,299.5C 796.1,300.632 798.934,302.132 801.5,304C 801.167,304.333 800.833,304.667 800.5,305C 803.379,305.957 805.879,305.457 808,303.5C 808.833,304.5 809.667,305.5 810.5,306.5C 812.62,305.128 813.62,305.795 813.5,308.5C 814.5,308.5 815.5,308.5 816.5,308.5C 816.189,309.478 815.522,310.145 814.5,310.5C 812.427,309.531 810.261,308.865 808,308.5C 804.192,309.429 800.359,309.429 796.5,308.5C 796.335,312.182 796.501,315.848 797,319.5C 798.622,317.5 800.455,315.667 802.5,314C 803.448,313.517 804.448,313.351 805.5,313.5C 805.5,315.167 805.5,316.833 805.5,318.5C 806.5,318.5 807.5,318.5 808.5,318.5C 808.5,317.5 808.5,316.5 808.5,315.5C 812.209,315.872 815.543,317.205 818.5,319.5C 820.264,320.712 821.93,320.379 823.5,318.5C 824.583,319.365 824.749,320.365 824,321.5C 822.927,320.72 821.76,320.887 820.5,322C 823,322.5 825.5,323 828,323.5C 828.09,325.768 826.923,327.268 824.5,328C 825.056,328.383 825.389,328.883 825.5,329.5C 822.294,328.848 818.96,329.015 815.5,330C 816.308,330.308 816.975,330.808 817.5,331.5C 859.665,332.167 901.665,332.833 943.5,333.5C 901.165,333.333 858.832,333.5 816.5,334C 815.944,334.383 815.611,334.883 815.5,335.5C 814.566,336.568 814.232,337.901 814.5,339.5C 857.501,340.106 900.501,340.773 943.5,341.5C 943.5,342.5 943.5,343.5 943.5,344.5C 900.664,344.768 857.997,345.435 815.5,346.5C 815.5,348.167 815.5,349.833 815.5,351.5C 858.665,352.665 901.998,352.831 945.5,352C 946.516,351.481 947.182,350.647 947.5,349.5C 945.875,346.765 945.208,343.765 945.5,340.5C 947.757,341.613 948.424,343.279 947.5,345.5C 949.987,346.576 952.32,347.91 954.5,349.5C 952.284,351.781 951.451,354.448 952,357.5C 952.49,356.207 952.657,354.873 952.5,353.5C 954.806,353.993 957.139,354.326 959.5,354.5C 958.614,352.278 958.614,350.112 959.5,348C 958.516,346.343 957.516,344.677 956.5,343C 957.784,342.316 958.951,342.483 960,343.5C 960.667,340.833 960.667,338.167 960,335.5C 956.804,338.206 953.304,338.706 949.5,337C 952.372,335.549 955.372,335.382 958.5,336.5C 958.785,334.712 958.452,333.045 957.5,331.5C 955.866,331.032 954.7,330.032 954,328.5C 951.936,329.591 949.769,329.758 947.5,329C 948.833,328.667 950.167,328.333 951.5,328C 950.483,326.951 950.316,325.784 951,324.5C 953.381,325.435 955.881,325.768 958.5,325.5C 958.509,323.339 959.176,322.006 960.5,321.5C 960.487,314.786 957.487,310.12 951.5,307.5C 952.344,304.869 952.677,302.369 952.5,300C 949.372,299.159 946.372,298.325 943.5,297.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#85e4f0\",d:\"M 923.5,308.5 C 919.833,308.5 916.167,308.5 912.5,308.5C 912.5,312.167 912.5,315.833 912.5,319.5C 904.133,319.705 895.8,319.371 887.5,318.5C 890.327,317.632 893.327,317.632 896.5,318.5C 896.5,315.5 896.5,312.5 896.5,309.5C 900.648,308.356 904.648,308.356 908.5,309.5C 907.5,309.5 906.5,309.5 905.5,309.5C 905.5,312.167 905.5,314.833 905.5,317.5C 902.795,317.62 902.128,316.62 903.5,314.5C 902.833,313.833 902.167,313.167 901.5,312.5C 902.833,309.833 902.167,309.167 899.5,310.5C 898.52,313.086 898.187,315.753 898.5,318.5C 906.386,320.319 910.052,317.319 909.5,309.5C 914.123,307.389 918.79,307.055 923.5,308.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9fbfc\",d:\"M 908.5,309.5 C 908.833,309.5 909.167,309.5 909.5,309.5C 910.052,317.319 906.386,320.319 898.5,318.5C 898.187,315.753 898.52,313.086 899.5,310.5C 902.167,309.167 902.833,309.833 901.5,312.5C 902.167,313.167 902.833,313.833 903.5,314.5C 902.128,316.62 902.795,317.62 905.5,317.5C 905.5,314.833 905.5,312.167 905.5,309.5C 906.5,309.5 907.5,309.5 908.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7f7fa\",d:\"M 879.5,309.5 C 883.02,308.54 886.353,309.207 889.5,311.5C 890.91,311.132 891.91,310.299 892.5,309C 894.066,308.235 895.399,308.402 896.5,309.5C 896.5,312.5 896.5,315.5 896.5,318.5C 893.327,317.632 890.327,317.632 887.5,318.5C 887.083,319.124 886.416,319.457 885.5,319.5C 881.556,318.444 877.556,317.777 873.5,317.5C 873.5,314.833 873.5,312.167 873.5,309.5C 875.309,308.709 877.309,308.709 879.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8f6fa\",d:\"M 816.5,308.5 C 818.167,308.5 819.833,308.5 821.5,308.5C 822.469,309.309 823.302,310.309 824,311.5C 825.186,309.323 827.019,308.323 829.5,308.5C 830.167,315.167 830.833,315.167 831.5,308.5C 832.5,308.5 833.5,308.5 834.5,308.5C 834.5,312.167 834.5,315.833 834.5,319.5C 830.798,318.158 826.965,317.158 823,316.5C 821.877,318.1 820.377,319.1 818.5,319.5C 815.543,317.205 812.209,315.872 808.5,315.5C 808.5,316.5 808.5,317.5 808.5,318.5C 807.5,318.5 806.5,318.5 805.5,318.5C 805.5,316.833 805.5,315.167 805.5,313.5C 804.448,313.351 803.448,313.517 802.5,314C 800.455,315.667 798.622,317.5 797,319.5C 796.501,315.848 796.335,312.182 796.5,308.5C 800.359,309.429 804.192,309.429 808,308.5C 810.261,308.865 812.427,309.531 814.5,310.5C 815.522,310.145 816.189,309.478 816.5,308.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#61c3d4\",d:\"M 817.5,311.5 C 818.5,311.5 819.5,311.5 820.5,311.5C 820.5,313.167 820.5,314.833 820.5,316.5C 819.167,316.5 817.833,316.5 816.5,316.5C 816.629,314.784 816.962,313.117 817.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d7fcfe\",d:\"M 869.5,309.5 C 872.68,314.135 871.513,317.135 866,318.5C 861.004,316.864 860.17,313.864 863.5,309.5C 865.5,308.167 867.5,308.167 869.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c0f9fc\",d:\"M 923.5,308.5 C 924.833,309.167 924.833,309.833 923.5,310.5C 922.5,310.5 921.5,310.5 920.5,310.5C 920.508,313.545 920.841,316.545 921.5,319.5C 920.5,319.5 919.5,319.5 918.5,319.5C 918.664,316.813 918.497,314.146 918,311.5C 917.586,311.043 917.086,310.709 916.5,310.5C 916.094,313.939 915.094,316.939 913.5,319.5C 913.167,319.5 912.833,319.5 912.5,319.5C 912.5,315.833 912.5,312.167 912.5,308.5C 916.167,308.5 919.833,308.5 923.5,308.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9fc4da\",d:\"M 540.5,317.5 C 542.174,320.554 542.674,323.888 542,327.5C 537.89,328.585 533.89,329.919 530,331.5C 520.2,326.034 509.7,324.034 498.5,325.5C 499.952,324.698 501.618,324.198 503.5,324C 509.491,323.501 515.491,323.334 521.5,323.5C 521.281,324.675 521.614,325.675 522.5,326.5C 524.883,325.095 527.05,325.429 529,327.5C 532.15,327.053 534.983,326.053 537.5,324.5C 538.5,324.5 539.5,324.5 540.5,324.5C 540.5,322.167 540.5,319.833 540.5,317.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f36664\",d:\"M 549.5,315.5 C 549.5,316.5 549.5,317.5 549.5,318.5C 552.101,322.771 555.434,326.437 559.5,329.5C 561.822,330.802 563.155,332.802 563.5,335.5C 565.126,339.75 566.459,344.083 567.5,348.5C 565.699,346.061 563.699,343.728 561.5,341.5C 562.348,339.591 562.682,337.591 562.5,335.5C 559.843,335.838 557.51,335.171 555.5,333.5C 554.253,335.006 554.253,336.506 555.5,338C 553.238,338.701 552.238,339.868 552.5,341.5C 550.167,340.5 548.5,338.833 547.5,336.5C 548.325,335.614 549.325,335.281 550.5,335.5C 550.778,333.654 550.111,332.32 548.5,331.5C 545.714,332.956 542.714,333.956 539.5,334.5C 540.864,337.363 543.03,339.363 546,340.5C 547.009,342.025 547.509,343.692 547.5,345.5C 549.903,345.393 551.736,346.393 553,348.5C 556.521,360.101 557.355,371.768 555.5,383.5C 555.824,376.646 555.491,369.979 554.5,363.5C 551.309,351.349 544.975,341.349 535.5,333.5C 539.128,332.056 542.961,331.056 547,330.5C 548.243,326.157 547.076,322.823 543.5,320.5C 543.5,319.167 543.5,317.833 543.5,316.5C 545.265,315.539 547.265,315.205 549.5,315.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37d5f8\",d:\"M 863.5,309.5 C 860.17,313.864 861.004,316.864 866,318.5C 871.513,317.135 872.68,314.135 869.5,309.5C 870.833,309.5 872.167,309.5 873.5,309.5C 873.5,312.167 873.5,314.833 873.5,317.5C 877.556,317.777 881.556,318.444 885.5,319.5C 886.416,319.457 887.083,319.124 887.5,318.5C 895.8,319.371 904.133,319.705 912.5,319.5C 912.833,319.5 913.167,319.5 913.5,319.5C 914.23,321.045 915.563,321.878 917.5,322C 917.167,322.333 916.833,322.667 916.5,323C 887.833,323.333 859.167,323.667 830.5,324C 830.833,324.333 831.167,324.667 831.5,325C 836.553,325.217 841.553,325.717 846.5,326.5C 848.273,325.913 850.106,325.58 852,325.5C 855.964,326.898 860.131,327.564 864.5,327.5C 871.49,326.724 878.49,326.057 885.5,325.5C 903.922,325.816 922.089,325.816 940,325.5C 942.341,326.007 942.841,327.174 941.5,329C 902.696,328.851 864.029,329.017 825.5,329.5C 825.389,328.883 825.056,328.383 824.5,328C 826.923,327.268 828.09,325.768 828,323.5C 825.5,323 823,322.5 820.5,322C 821.76,320.887 822.927,320.72 824,321.5C 824.749,320.365 824.583,319.365 823.5,318.5C 821.93,320.379 820.264,320.712 818.5,319.5C 820.377,319.1 821.877,318.1 823,316.5C 826.965,317.158 830.798,318.158 834.5,319.5C 834.5,315.833 834.5,312.167 834.5,308.5C 833.5,308.5 832.5,308.5 831.5,308.5C 830.833,315.167 830.167,315.167 829.5,308.5C 827.019,308.323 825.186,309.323 824,311.5C 823.302,310.309 822.469,309.309 821.5,308.5C 823.103,308.688 824.437,308.188 825.5,307C 823.857,302.943 822.524,302.777 821.5,306.5C 817.473,306.74 816.139,305.074 817.5,301.5C 819.042,300.253 820.542,300.253 822,301.5C 823,300.833 824,300.167 825,299.5C 830.362,300.251 836.529,300.251 843.5,299.5C 844.167,299.833 844.833,300.167 845.5,300.5C 844.494,301.396 844.494,302.062 845.5,302.5C 847.323,301.253 849.323,300.586 851.5,300.5C 851.007,302.806 850.674,305.139 850.5,307.5C 855.07,307.121 859.404,307.787 863.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#65c7dd\",d:\"M 864.5,311.5 C 865.833,311.5 867.167,311.5 868.5,311.5C 869.167,315.5 867.5,317.167 863.5,316.5C 863.366,314.708 863.699,313.042 864.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9f7fa\",d:\"M 836.5,308.5 C 844.5,308.5 852.5,308.5 860.5,308.5C 859.372,311.438 858.205,314.438 857,317.5C 855.26,310.173 853.094,309.84 850.5,316.5C 849.065,315.176 848.065,313.51 847.5,311.5C 846.534,313.396 846.201,315.396 846.5,317.5C 844.508,317.328 842.842,317.995 841.5,319.5C 839.929,318.691 838.262,318.357 836.5,318.5C 836.5,315.167 836.5,311.833 836.5,308.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6698ac\",d:\"M 424.5,304.5 C 423.554,322.472 423.221,340.472 423.5,358.5C 423.5,371.167 423.5,383.833 423.5,396.5C 423.5,409.833 423.5,423.167 423.5,436.5C 422.502,410.339 422.169,384.005 422.5,357.5C 422.333,340.83 422.5,324.163 423,307.5C 423.232,306.263 423.732,305.263 424.5,304.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#47a4e5\",d:\"M 710.5,314.5 C 710.5,319.167 710.5,323.833 710.5,328.5C 715.214,328.173 719.88,328.507 724.5,329.5C 725.243,330.182 725.909,330.849 726.5,331.5C 722.481,331.354 718.481,331.021 714.5,330.5C 712.833,330.5 711.167,330.5 709.5,330.5C 709.179,324.974 709.512,319.64 710.5,314.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4cdcf8\",d:\"M 504.5,331.5 C 504.5,334.5 504.5,337.5 504.5,340.5C 503.167,340.5 501.833,340.5 500.5,340.5C 497.955,340.849 495.955,340.016 494.5,338C 488.142,337.176 482.809,339.176 478.5,344C 477.049,343.737 475.716,343.904 474.5,344.5C 474.167,345.167 473.833,345.833 473.5,346.5C 474.95,347.85 475.617,349.516 475.5,351.5C 473.286,351.291 471.619,352.124 470.5,354C 468.049,358.185 466.716,362.685 466.5,367.5C 467.675,367.719 468.675,367.386 469.5,366.5C 470.052,364.667 470.885,363 472,361.5C 472.991,362.43 473.491,363.596 473.5,365C 472.983,369.52 472.316,374.02 471.5,378.5C 470.655,376.238 469.322,375.571 467.5,376.5C 466.526,378.743 466.192,381.076 466.5,383.5C 468.483,383.157 469.817,383.824 470.5,385.5C 468.833,386.167 467.167,386.833 465.5,387.5C 464.374,380.914 464.208,374.247 465,367.5C 465.856,361.807 466.69,356.141 467.5,350.5C 468.809,347.222 470.642,344.222 473,341.5C 477.066,337.923 481.232,334.589 485.5,331.5C 491.743,329.753 498.076,328.42 504.5,327.5C 504.5,328.833 504.5,330.167 504.5,331.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#436c81\",d:\"M 529.5,335.5 C 528.833,336.833 528.167,338.167 527.5,339.5C 524.596,340.614 522.596,342.614 521.5,345.5C 520.609,344.89 519.609,344.557 518.5,344.5C 515.275,342.979 511.942,341.645 508.5,340.5C 507.508,336.217 507.174,331.884 507.5,327.5C 513.309,328.023 518.976,329.19 524.5,331C 526.618,332.049 528.284,333.549 529.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfceb6\",d:\"M 709.5,332.5 C 715.167,333.833 720.833,335.167 726.5,336.5C 726.833,337.167 727.167,337.833 727.5,338.5C 721.98,336.704 716.313,335.704 710.5,335.5C 710.167,335.5 709.833,335.5 709.5,335.5C 709.5,334.5 709.5,333.5 709.5,332.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#93c1ca\",d:\"M 602.5,301.5 C 602.628,303.655 602.128,305.655 601,307.5C 600.5,351.499 600.333,395.499 600.5,439.5C 599.335,395.335 599.169,351.002 600,306.5C 600.374,304.509 601.207,302.842 602.5,301.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a66bb\",d:\"M 714.5,330.5 C 718.481,331.021 722.481,331.354 726.5,331.5C 728.325,333.808 730.658,335.641 733.5,337C 735.79,338.777 737.457,340.944 738.5,343.5C 736.066,341.251 733.399,339.084 730.5,337C 729.207,336.51 727.873,336.343 726.5,336.5C 722.973,333.613 718.973,331.613 714.5,330.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2ca2ee\",d:\"M 726.5,331.5 C 728.801,332.06 731.134,332.56 733.5,333C 740.773,338.712 746.773,345.545 751.5,353.5C 751.44,354.043 751.107,354.376 750.5,354.5C 749.52,353.019 748.353,351.685 747,350.5C 746.536,351.094 746.369,351.761 746.5,352.5C 745.527,350.861 744.194,349.527 742.5,348.5C 741.92,346.251 740.587,344.585 738.5,343.5C 737.457,340.944 735.79,338.777 733.5,337C 730.658,335.641 728.325,333.808 726.5,331.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bdf9fe\",d:\"M 943.5,333.5 C 943.5,333.833 943.5,334.167 943.5,334.5C 944.234,335.708 944.567,337.041 944.5,338.5C 901.5,338.5 858.5,338.5 815.5,338.5C 815.5,337.5 815.5,336.5 815.5,335.5C 815.611,334.883 815.944,334.383 816.5,334C 858.832,333.5 901.165,333.333 943.5,333.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#edfefd\",d:\"M 817.5,334.5 C 859.167,334.5 900.833,334.5 942.5,334.5C 942.5,335.5 942.5,336.5 942.5,337.5C 900.495,337.833 858.495,337.5 816.5,336.5C 816.863,335.817 817.196,335.15 817.5,334.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#192238\",d:\"M 367.5,344.5 C 377.51,351.836 387.51,359.17 397.5,366.5C 397.66,368.199 397.494,369.866 397,371.5C 396.768,370.263 396.268,369.263 395.5,368.5C 394.375,366.871 393.041,365.371 391.5,364C 375.048,353.209 358.881,342.042 343,330.5C 327.871,340.974 312.704,351.307 297.5,361.5C 296.833,361.5 296.167,361.5 295.5,361.5C 296.29,360.206 297.29,359.039 298.5,358C 312.007,349.08 325.341,339.914 338.5,330.5C 340.432,329.634 342.432,328.967 344.5,328.5C 351.974,334.074 359.641,339.407 367.5,344.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efe1e0\",d:\"M 706.5,333.5 C 706.5,334.167 706.5,334.833 706.5,335.5C 702.494,336.091 698.827,337.425 695.5,339.5C 678.162,345.872 669.495,358.206 669.5,376.5C 669.5,376.833 669.5,377.167 669.5,377.5C 668.167,377.5 666.833,377.5 665.5,377.5C 665.5,375.833 665.5,374.167 665.5,372.5C 665.5,372.167 665.5,371.833 665.5,371.5C 666.924,369.485 667.59,367.152 667.5,364.5C 669.28,357.603 672.614,351.603 677.5,346.5C 685.529,338.491 695.196,334.158 706.5,333.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#241e30\",d:\"M 726.5,336.5 C 727.873,336.343 729.207,336.51 730.5,337C 733.399,339.084 736.066,341.251 738.5,343.5C 740.587,344.585 741.92,346.251 742.5,348.5C 742.5,349.167 742.5,349.833 742.5,350.5C 741.167,349.5 739.833,348.5 738.5,347.5C 735.424,343.793 731.758,340.793 727.5,338.5C 727.167,337.833 726.833,337.167 726.5,336.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#182d46\",d:\"M 487.5,329.5 C 486.833,330.167 486.167,330.833 485.5,331.5C 481.232,334.589 477.066,337.923 473,341.5C 470.642,344.222 468.809,347.222 467.5,350.5C 465.282,352.651 463.948,355.318 463.5,358.5C 462.076,360.515 461.41,362.848 461.5,365.5C 461.5,369.5 461.5,373.5 461.5,377.5C 460.679,374.359 460.179,371.025 460,367.5C 459.501,371.821 459.334,376.154 459.5,380.5C 458.515,376.366 458.182,372.032 458.5,367.5C 459.644,356.054 464.311,346.387 472.5,338.5C 475.31,335.864 478.31,333.364 481.5,331C 483.345,329.872 485.345,329.372 487.5,329.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36cff7\",d:\"M 687.5,322.5 C 689.734,324.446 692.401,325.613 695.5,326C 694.224,327.212 692.724,328.045 691,328.5C 688.267,326.572 687.1,327.239 687.5,330.5C 688.93,330.579 690.264,330.246 691.5,329.5C 692.711,330.274 692.711,331.107 691.5,332C 689.2,332.658 686.867,333.158 684.5,333.5C 681.676,331.948 678.676,330.948 675.5,330.5C 675.5,331.5 675.5,332.5 675.5,333.5C 684.094,334.996 684.428,337.163 676.5,340C 677.252,340.671 677.586,341.504 677.5,342.5C 677.167,343.167 676.833,343.833 676.5,344.5C 670.188,350.118 666.188,357.118 664.5,365.5C 662.432,368.763 661.432,372.43 661.5,376.5C 657.5,376.5 653.5,376.5 649.5,376.5C 650.176,356.315 658.843,340.482 675.5,329C 679.118,326.026 683.118,323.859 687.5,322.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9dee3\",d:\"M 395.5,368.5 C 395.672,369.492 395.338,370.158 394.5,370.5C 392.445,368.445 390.112,366.779 387.5,365.5C 387.167,364.5 386.5,363.833 385.5,363.5C 372.484,354.172 359.15,345.172 345.5,336.5C 340.97,335.578 337.304,337.245 334.5,341.5C 324.951,346.723 315.951,352.723 307.5,359.5C 305.368,359.554 304.035,360.554 303.5,362.5C 301.973,362.427 300.973,363.094 300.5,364.5C 299.508,364.328 298.842,364.662 298.5,365.5C 296.052,367.284 293.385,368.618 290.5,369.5C 290.351,368.448 290.517,367.448 291,366.5C 293.352,364.97 295.519,363.303 297.5,361.5C 312.704,351.307 327.871,340.974 343,330.5C 358.881,342.042 375.048,353.209 391.5,364C 393.041,365.371 394.375,366.871 395.5,368.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c57a6a\",d:\"M 706.5,335.5 C 706.5,340.167 706.5,344.833 706.5,349.5C 706.167,349.5 705.833,349.5 705.5,349.5C 705.167,349.5 704.833,349.5 704.5,349.5C 705.43,345.6 705.763,341.6 705.5,337.5C 702.167,338.167 698.833,338.833 695.5,339.5C 698.827,337.425 702.494,336.091 706.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dee2ed\",d:\"M 450.5,332.5 C 450.896,335.482 450.229,338.149 448.5,340.5C 448.833,341.167 449.167,341.833 449.5,342.5C 448.182,343.038 446.516,343.871 444.5,345C 444.833,345.333 445.167,345.667 445.5,346C 443.377,350.266 441.877,354.766 441,359.5C 440.667,358.833 440.333,358.167 440,357.5C 437.899,365.427 438.065,373.261 440.5,381C 439.923,383.137 439.59,385.304 439.5,387.5C 434.132,367.312 437.799,348.979 450.5,332.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#012052\",d:\"M 965.5,439.5 C 965.5,436.833 965.5,434.167 965.5,431.5C 966.333,394.336 966.833,357.002 967,319.5C 967.667,358.833 967.667,398.167 967,437.5C 966.722,438.416 966.222,439.082 965.5,439.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc685e\",d:\"M 567.5,348.5 C 571.652,359.751 573.318,371.418 572.5,383.5C 571.549,384.919 571.216,386.585 571.5,388.5C 570.073,390.148 569.24,392.148 569,394.5C 567.66,395.868 566.326,397.201 565,398.5C 562.951,396.392 560.451,395.226 557.5,395C 554.209,391.661 553.543,387.828 555.5,383.5C 557.355,371.768 556.521,360.101 553,348.5C 551.736,346.393 549.903,345.393 547.5,345.5C 547.509,343.692 547.009,342.025 546,340.5C 543.03,339.363 540.864,337.363 539.5,334.5C 542.714,333.956 545.714,332.956 548.5,331.5C 550.111,332.32 550.778,333.654 550.5,335.5C 549.325,335.281 548.325,335.614 547.5,336.5C 548.5,338.833 550.167,340.5 552.5,341.5C 552.238,339.868 553.238,338.701 555.5,338C 554.253,336.506 554.253,335.006 555.5,333.5C 557.51,335.171 559.843,335.838 562.5,335.5C 562.682,337.591 562.348,339.591 561.5,341.5C 563.699,343.728 565.699,346.061 567.5,348.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9a6d6d\",d:\"M 527.5,339.5 C 526.448,342.193 525.448,344.86 524.5,347.5C 524.167,347.5 523.833,347.5 523.5,347.5C 522.5,347.167 521.833,346.5 521.5,345.5C 522.596,342.614 524.596,340.614 527.5,339.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3cd3fb\",d:\"M 710.5,314.5 C 730.611,316.047 746.277,325.047 757.5,341.5C 759.881,346.198 760.881,351.198 760.5,356.5C 756.845,357.075 753.845,356.075 751.5,353.5C 746.773,345.545 740.773,338.712 733.5,333C 731.134,332.56 728.801,332.06 726.5,331.5C 725.909,330.849 725.243,330.182 724.5,329.5C 719.88,328.507 715.214,328.173 710.5,328.5C 710.5,323.833 710.5,319.167 710.5,314.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#163a63\",d:\"M 670.5,325.5 C 670.5,326.167 670.833,326.5 671.5,326.5C 656.139,337.553 647.805,352.553 646.5,371.5C 645.539,373.265 645.205,375.265 645.5,377.5C 646.833,377.5 648.167,377.5 649.5,377.5C 649.5,378.167 649.5,378.833 649.5,379.5C 648.5,379.5 647.5,379.5 646.5,379.5C 646.843,394.193 651.176,407.527 659.5,419.5C 659.565,419.938 659.399,420.272 659,420.5C 657.961,419.29 656.794,418.29 655.5,417.5C 651.197,409.775 647.363,401.775 644,393.5C 643.017,382.396 643.517,371.396 645.5,360.5C 648.246,349.673 653.579,340.34 661.5,332.5C 664.319,329.925 667.319,327.592 670.5,325.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9fcfe\",d:\"M 785.5,342.5 C 792.055,344.61 792.722,347.61 787.5,351.5C 783.131,349.26 782.464,346.26 785.5,342.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c1a19\",d:\"M 709.5,332.5 C 709.5,333.5 709.5,334.5 709.5,335.5C 709.5,340.167 709.5,344.833 709.5,349.5C 708.5,350.833 707.5,350.833 706.5,349.5C 706.5,344.833 706.5,340.167 706.5,335.5C 706.5,334.833 706.5,334.167 706.5,333.5C 707.391,332.89 708.391,332.557 709.5,332.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#58d1ee\",d:\"M 943.5,334.5 C 945.308,335.918 945.975,337.918 945.5,340.5C 945.208,343.765 945.875,346.765 947.5,349.5C 947.182,350.647 946.516,351.481 945.5,352C 901.998,352.831 858.665,352.665 815.5,351.5C 858.337,351.832 901.003,351.499 943.5,350.5C 944.791,349.458 944.791,348.292 943.5,347C 900.835,346.5 858.168,346.333 815.5,346.5C 857.997,345.435 900.664,344.768 943.5,344.5C 943.5,343.5 943.5,342.5 943.5,341.5C 900.501,340.773 857.501,340.106 814.5,339.5C 814.232,337.901 814.566,336.568 815.5,335.5C 815.5,336.5 815.5,337.5 815.5,338.5C 858.5,338.5 901.5,338.5 944.5,338.5C 944.567,337.041 944.234,335.708 943.5,334.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b08929\",d:\"M 709.5,335.5 C 709.833,335.5 710.167,335.5 710.5,335.5C 710.5,339.833 710.5,344.167 710.5,348.5C 714.077,348.145 717.077,349.145 719.5,351.5C 716.316,350.357 712.983,349.691 709.5,349.5C 709.5,344.833 709.5,340.167 709.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bef9fe\",d:\"M 815.5,346.5 C 858.168,346.333 900.835,346.5 943.5,347C 944.791,348.292 944.791,349.458 943.5,350.5C 901.003,351.499 858.337,351.832 815.5,351.5C 815.5,349.833 815.5,348.167 815.5,346.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0fefe\",d:\"M 943.5,350.5 C 901.832,350.667 860.165,350.5 818.5,350C 818.043,349.586 817.709,349.086 817.5,348.5C 859.163,347.333 900.829,347.167 942.5,348C 943.252,348.671 943.586,349.504 943.5,350.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f86952\",d:\"M 704.5,349.5 C 696.08,350.264 689.746,354.264 685.5,361.5C 684.206,362.29 683.039,363.29 682,364.5C 681.014,368.632 679.847,372.632 678.5,376.5C 675.5,376.5 672.5,376.5 669.5,376.5C 669.495,358.206 678.162,345.872 695.5,339.5C 698.833,338.833 702.167,338.167 705.5,337.5C 705.763,341.6 705.43,345.6 704.5,349.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cf6568\",d:\"M 563.5,335.5 C 565.86,337.713 567.694,340.379 569,343.5C 570.195,348.952 571.695,354.285 573.5,359.5C 573.826,367.684 573.492,375.684 572.5,383.5C 573.318,371.418 571.652,359.751 567.5,348.5C 566.459,344.083 565.126,339.75 563.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#531e2c\",d:\"M 523.5,347.5 C 523.833,347.5 524.167,347.5 524.5,347.5C 527.209,350.175 529.876,352.842 532.5,355.5C 534.97,358.774 536.636,362.441 537.5,366.5C 535.064,361.194 531.731,356.528 527.5,352.5C 526.264,351.754 524.93,351.421 523.5,351.5C 523.5,350.167 523.5,348.833 523.5,347.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#651217\",d:\"M 534.5,332.5 C 534.5,333.167 534.833,333.5 535.5,333.5C 544.975,341.349 551.309,351.349 554.5,363.5C 555.156,372.739 554.156,381.739 551.5,390.5C 550.833,390.167 550.167,389.833 549.5,389.5C 549.5,387.5 549.5,385.5 549.5,383.5C 555.169,363.18 549.169,347.18 531.5,335.5C 532.272,334.306 533.272,333.306 534.5,332.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ebdf1\",d:\"M 757.5,341.5 C 763.141,349.188 766.474,357.854 767.5,367.5C 767.5,370.5 767.5,373.5 767.5,376.5C 763.833,376.5 760.167,376.5 756.5,376.5C 759.625,375.521 762.958,375.187 766.5,375.5C 766.636,370.016 765.803,364.682 764,359.5C 762.89,357.963 761.39,357.297 759.5,357.5C 759.808,359.924 759.474,362.257 758.5,364.5C 756.929,363.691 755.262,363.357 753.5,363.5C 752.243,360.904 751.076,358.237 750,355.5C 749.536,356.094 749.369,356.761 749.5,357.5C 748.263,356.035 747.263,354.368 746.5,352.5C 746.369,351.761 746.536,351.094 747,350.5C 748.353,351.685 749.52,353.019 750.5,354.5C 751.107,354.376 751.44,354.043 751.5,353.5C 753.845,356.075 756.845,357.075 760.5,356.5C 760.881,351.198 759.881,346.198 757.5,341.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#476b80\",d:\"M 402.5,307.5 C 403.496,321.657 403.829,335.99 403.5,350.5C 402.635,356.004 401.968,361.671 401.5,367.5C 400.041,367.567 398.708,367.234 397.5,366.5C 387.51,359.17 377.51,351.836 367.5,344.5C 370.342,343.388 373.008,343.888 375.5,346C 377.311,348.978 379.644,351.478 382.5,353.5C 383.478,353.023 384.311,352.357 385,351.5C 388.143,355.961 391.977,356.628 396.5,353.5C 397.196,355.992 396.863,358.492 395.5,361C 395.862,362.225 396.362,363.391 397,364.5C 398.844,361.467 399.844,358.134 400,354.5C 400.333,356.167 400.667,357.833 401,359.5C 401.181,342.426 401.681,325.426 402.5,308.5C 402.5,308.167 402.5,307.833 402.5,307.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30344d\",d:\"M 615.5,289.5 C 614.71,290.401 613.71,291.068 612.5,291.5C 610.636,290.207 608.636,290.207 606.5,291.5C 604.263,295.635 601.763,299.635 599,303.5C 597.079,350.202 597.245,396.869 599.5,443.5C 598.761,443.369 598.094,443.536 597.5,444C 598.833,445 598.833,446 597.5,447C 596.216,447.684 595.049,447.517 594,446.5C 592.915,447.293 591.748,447.96 590.5,448.5C 588.693,453.297 586.026,457.464 582.5,461C 579.946,461.558 577.946,460.725 576.5,458.5C 578.234,456.766 580.234,455.432 582.5,454.5C 583.167,452.5 583.833,450.5 584.5,448.5C 586.045,447.548 587.712,447.215 589.5,447.5C 589.338,445.473 589.505,443.473 590,441.5C 591.533,441.944 593.033,442.277 594.5,442.5C 596.562,439.001 596.895,435.335 595.5,431.5C 594.284,432.002 593.117,432.335 592,432.5C 591.223,427.778 591.39,423.111 592.5,418.5C 591.39,415.127 590.39,414.96 589.5,418C 589.585,419.107 589.919,420.107 590.5,421C 589.691,426.417 589.191,431.917 589,437.5C 588.23,438.598 587.397,438.598 586.5,437.5C 586.5,403.5 586.5,369.5 586.5,335.5C 588.924,335.808 591.257,335.474 593.5,334.5C 593.069,333.707 592.735,332.873 592.5,332C 594.142,322.564 594.642,313.064 594,303.5C 593.5,303 593,302.5 592.5,302C 593.652,299.851 595.152,298.018 597,296.5C 597.333,297.167 597.667,297.833 598,298.5C 599.658,296.677 601.491,295.01 603.5,293.5C 605.393,289.213 604.059,286.879 599.5,286.5C 599.128,283.978 599.961,281.978 602,280.5C 604.075,281.895 605.908,281.562 607.5,279.5C 609.789,281.592 612.289,281.926 615,280.5C 615.167,281.167 615.333,281.833 615.5,282.5C 615.57,284.666 614.904,284.999 613.5,283.5C 611.827,285.086 609.827,285.753 607.5,285.5C 607.5,286.833 607.5,288.167 607.5,289.5C 610.376,289.208 613.043,289.208 615.5,289.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#132950\",d:\"M 535.5,307.5 C 535.973,308.906 536.973,309.573 538.5,309.5C 538.672,310.492 538.338,311.158 537.5,311.5C 534.039,310.269 530.706,308.769 527.5,307C 523.553,305.846 519.553,305.013 515.5,304.5C 509.013,303.346 502.346,303.179 495.5,304C 494.263,304.232 493.263,304.732 492.5,305.5C 474.791,309.005 460.791,318.005 450.5,332.5C 437.799,348.979 434.132,367.312 439.5,387.5C 442.473,401.942 449.473,414.108 460.5,424C 461.928,424.579 463.262,424.412 464.5,423.5C 464.5,425.5 464.5,427.5 464.5,429.5C 460.332,427.577 456.665,424.91 453.5,421.5C 449.742,417.085 446.409,412.419 443.5,407.5C 440.455,399.583 437.788,391.583 435.5,383.5C 434.528,370.196 436.028,357.196 440,344.5C 461.381,305.679 493.214,293.346 535.5,307.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a3afbb\",d:\"M 515.5,304.5 C 507.799,304.309 500.132,304.642 492.5,305.5C 493.263,304.732 494.263,304.232 495.5,304C 502.346,303.179 509.013,303.346 515.5,304.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfa926\",d:\"M 738.5,347.5 C 739.833,348.5 741.167,349.5 742.5,350.5C 743.11,351.391 743.443,352.391 743.5,353.5C 745.083,357.069 746.583,360.735 748,364.5C 748.667,368.5 748.667,372.5 748,376.5C 745.281,377.444 742.448,377.777 739.5,377.5C 737.585,377.784 735.919,377.451 734.5,376.5C 734.873,371.452 733.706,366.785 731,362.5C 727.99,359.657 725.157,356.657 722.5,353.5C 725.756,355.25 728.589,357.583 731,360.5C 733.129,359.137 733.629,359.471 732.5,361.5C 735.021,366.179 736.021,371.179 735.5,376.5C 738.518,376.665 741.518,376.498 744.5,376C 745.684,374.82 746.351,373.32 746.5,371.5C 745.442,367.88 744.608,364.214 744,360.5C 742.795,359.929 741.628,359.262 740.5,358.5C 741.544,356.232 741.711,353.899 741,351.5C 739.519,350.529 738.685,349.196 738.5,347.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1a623\",d:\"M 705.5,351.5 C 710.032,350.886 714.032,351.886 717.5,354.5C 711.303,352.707 705.303,353.207 699.5,356C 699.201,357.32 699.034,358.82 699,360.5C 698.667,360.833 698.333,361.167 698,361.5C 696.412,359.032 694.578,358.866 692.5,361C 691.663,362.011 691.33,363.178 691.5,364.5C 688.619,364.698 686.619,366.198 685.5,369C 684.581,373.781 684.248,378.615 684.5,383.5C 684.167,383.5 683.833,383.5 683.5,383.5C 683.5,380.167 683.5,376.833 683.5,373.5C 685.473,360.861 692.806,353.527 705.5,351.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6d200a\",d:\"M 704.5,349.5 C 704.833,349.5 705.167,349.5 705.5,349.5C 705.5,350.167 705.5,350.833 705.5,351.5C 692.806,353.527 685.473,360.861 683.5,373.5C 682.833,373.5 682.167,373.5 681.5,373.5C 681.617,369.005 682.951,365.005 685.5,361.5C 689.746,354.264 696.08,350.264 704.5,349.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#694e2c\",d:\"M 743.5,353.5 C 747.223,357.31 749.223,361.976 749.5,367.5C 749.5,370.833 749.5,374.167 749.5,377.5C 746.167,378.833 742.833,378.833 739.5,377.5C 742.448,377.777 745.281,377.444 748,376.5C 748.667,372.5 748.667,368.5 748,364.5C 746.583,360.735 745.083,357.069 743.5,353.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f66462\",d:\"M 529.5,335.5 C 530.167,335.5 530.833,335.5 531.5,335.5C 549.169,347.18 555.169,363.18 549.5,383.5C 548.448,384.53 547.114,385.197 545.5,385.5C 543.307,385.281 541.307,384.615 539.5,383.5C 539.666,377.491 539.499,371.491 539,365.5C 538.518,360.89 536.352,357.557 532.5,355.5C 529.876,352.842 527.209,350.175 524.5,347.5C 525.448,344.86 526.448,342.193 527.5,339.5C 528.167,338.167 528.833,336.833 529.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#caf2f8\",d:\"M 701.5,314.5 C 702.833,314.5 704.167,314.5 705.5,314.5C 705.5,315.5 705.5,316.5 705.5,317.5C 701.121,318.013 696.787,318.847 692.5,320C 690.509,320.374 688.842,321.207 687.5,322.5C 683.118,323.859 679.118,326.026 675.5,329C 658.843,340.482 650.176,356.315 649.5,376.5C 648.5,376.5 647.5,376.5 646.5,376.5C 646.5,374.833 646.5,373.167 646.5,371.5C 647.805,352.553 656.139,337.553 671.5,326.5C 676.979,322.427 682.979,319.427 689.5,317.5C 692.152,317.59 694.485,316.924 696.5,315.5C 698.042,314.699 699.708,314.366 701.5,314.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7c30b\",d:\"M 710.5,335.5 C 716.313,335.704 721.98,336.704 727.5,338.5C 731.758,340.793 735.424,343.793 738.5,347.5C 738.685,349.196 739.519,350.529 741,351.5C 741.711,353.899 741.544,356.232 740.5,358.5C 741.628,359.262 742.795,359.929 744,360.5C 744.608,364.214 745.442,367.88 746.5,371.5C 746.351,373.32 745.684,374.82 744.5,376C 741.518,376.498 738.518,376.665 735.5,376.5C 736.021,371.179 735.021,366.179 732.5,361.5C 733.629,359.471 733.129,359.137 731,360.5C 728.589,357.583 725.756,355.25 722.5,353.5C 720.973,353.573 719.973,352.906 719.5,351.5C 717.077,349.145 714.077,348.145 710.5,348.5C 710.5,344.167 710.5,339.833 710.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#172953\",d:\"M 476.5,386.5 C 473.602,387.889 470.602,389.056 467.5,390C 466.177,390.816 465.511,391.983 465.5,393.5C 464.604,392.494 463.938,392.494 463.5,393.5C 462.599,392.71 461.932,391.71 461.5,390.5C 461.041,387.123 460.374,383.789 459.5,380.5C 459.334,376.154 459.501,371.821 460,367.5C 460.179,371.025 460.679,374.359 461.5,377.5C 461.414,381.319 462.081,384.985 463.5,388.5C 463.735,389.097 464.235,389.43 465,389.5C 469.468,388.428 473.301,386.262 476.5,383C 475.575,377.884 475.242,372.717 475.5,367.5C 477.446,357.575 482.779,350.241 491.5,345.5C 494.795,344.176 496.128,345.509 495.5,349.5C 493.712,349.215 492.045,349.548 490.5,350.5C 491.46,351.812 491.294,353.146 490,354.5C 484.521,356.159 481.354,359.826 480.5,365.5C 479.914,365.291 479.414,364.957 479,364.5C 477.255,370.124 477.088,375.79 478.5,381.5C 478.276,383.455 477.609,385.121 476.5,386.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9c30a\",d:\"M 717.5,354.5 C 721.02,355.353 723.687,357.353 725.5,360.5C 725.433,362.401 725.767,364.234 726.5,366C 728.459,367.3 729.626,369.133 730,371.5C 730.609,376.861 730.442,382.195 729.5,387.5C 728.89,388.391 728.557,389.391 728.5,390.5C 727.094,390.973 726.427,391.973 726.5,393.5C 722.054,398.557 716.387,401.557 709.5,402.5C 703.806,403.328 698.806,401.994 694.5,398.5C 693.089,396.086 691.089,394.419 688.5,393.5C 686.262,390.57 684.929,387.237 684.5,383.5C 684.248,378.615 684.581,373.781 685.5,369C 686.619,366.198 688.619,364.698 691.5,364.5C 691.33,363.178 691.663,362.011 692.5,361C 694.578,358.866 696.412,359.032 698,361.5C 698.333,361.167 698.667,360.833 699,360.5C 699.034,358.82 699.201,357.32 699.5,356C 705.303,353.207 711.303,352.707 717.5,354.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d1fefe\",d:\"M 944.5,362.5 C 944.167,363.167 943.833,363.833 943.5,364.5C 900.833,364.5 858.167,364.5 815.5,364.5C 815.5,362.833 815.5,361.167 815.5,359.5C 858.5,359.5 901.5,359.5 944.5,359.5C 944.5,360.5 944.5,361.5 944.5,362.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5fbfe\",d:\"M 831.5,360.5 C 868.506,360.167 905.506,360.5 942.5,361.5C 902.171,362.667 861.837,362.833 821.5,362C 825.025,361.821 828.359,361.321 831.5,360.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3dd0fb\",d:\"M 943.5,414.5 C 944.833,412.833 944.833,411.167 943.5,409.5C 940.359,408.679 937.025,408.179 933.5,408C 935.762,405.171 938.095,405.004 940.5,407.5C 942.577,406.012 943.577,404.012 943.5,401.5C 944.833,400.167 944.833,398.833 943.5,397.5C 938.544,396.172 933.211,395.505 927.5,395.5C 891.824,394.972 856.157,394.139 820.5,393C 819.263,392.768 818.263,392.268 817.5,391.5C 859.835,391.667 902.168,391.5 944.5,391C 943.944,390.617 943.611,390.117 943.5,389.5C 943.5,389.167 943.5,388.833 943.5,388.5C 944.75,388.423 945.583,387.756 946,386.5C 946.333,387.5 946.667,388.5 947,389.5C 948.613,385.861 950.446,382.361 952.5,379C 952.333,378.5 952.167,378 952,377.5C 951.174,379.405 950.007,379.739 948.5,378.5C 950.742,374.052 949.075,371.719 943.5,371.5C 900.833,371.5 858.167,371.5 815.5,371.5C 831.662,370.669 847.995,370.169 864.5,370C 858.978,368.876 853.311,368.042 847.5,367.5C 836.849,366.668 826.182,366.168 815.5,366C 858.335,365.833 901.002,365.333 943.5,364.5C 943.833,363.833 944.167,363.167 944.5,362.5C 946.799,361.222 949.132,359.889 951.5,358.5C 953.993,358.6 956.493,358.933 959,359.5C 959.782,362.257 959.282,364.757 957.5,367C 958.167,367.333 958.833,367.667 959.5,368C 958.572,368.388 957.905,369.055 957.5,370C 958.629,372.305 958.629,374.638 957.5,377C 958.722,377.864 959.722,379.53 960.5,382C 959.914,386.274 958.914,390.441 957.5,394.5C 958.42,397.434 959.087,400.434 959.5,403.5C 959.303,412.43 959.303,421.43 959.5,430.5C 956.813,430.664 954.146,430.497 951.5,430C 950.047,427.886 948.047,426.552 945.5,426C 943.737,422.757 943.071,419.257 943.5,415.5C 944.5,415.5 945.5,415.5 946.5,415.5C 946.649,414.448 946.483,413.448 946,412.5C 945.583,413.756 944.75,414.423 943.5,414.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#47d2f1\",d:\"M 449.5,291.5 C 448.194,292.467 447.527,293.801 447.5,295.5C 444.15,295.335 440.817,295.502 437.5,296C 435,298.5 432.5,301 430,303.5C 429.477,308.979 428.477,314.312 427,319.5C 426.175,330.341 426.341,341.008 427.5,351.5C 427.444,372.845 427.277,394.178 427,415.5C 427.414,415.043 427.914,414.709 428.5,414.5C 429.331,422.145 429.831,429.812 430,437.5C 431.659,441.147 430.492,443.814 426.5,445.5C 424.992,443.819 423.992,441.819 423.5,439.5C 424.83,433.202 425.497,426.535 425.5,419.5C 425.333,412.833 425.167,406.167 425,399.5C 424.768,398.263 424.268,397.263 423.5,396.5C 423.5,383.833 423.5,371.167 423.5,358.5C 424.506,340.943 425.672,323.277 427,305.5C 429.777,300.723 433.277,296.556 437.5,293C 441.363,291.646 445.363,291.146 449.5,291.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5f90a8\",d:\"M 463.5,358.5 C 463.59,361.152 462.924,363.485 461.5,365.5C 461.41,362.848 462.076,360.515 463.5,358.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#502307\",d:\"M 705.5,349.5 C 705.833,349.5 706.167,349.5 706.5,349.5C 707.5,350.833 708.5,350.833 709.5,349.5C 712.983,349.691 716.316,350.357 719.5,351.5C 719.973,352.906 720.973,353.573 722.5,353.5C 725.157,356.657 727.99,359.657 731,362.5C 733.706,366.785 734.873,371.452 734.5,376.5C 733.662,376.842 733.328,377.508 733.5,378.5C 732.833,380.167 732.167,381.833 731.5,383.5C 731.666,378.489 731.499,373.489 731,368.5C 729.896,365.279 728.063,362.612 725.5,360.5C 723.687,357.353 721.02,355.353 717.5,354.5C 714.032,351.886 710.032,350.886 705.5,351.5C 705.5,350.833 705.5,350.167 705.5,349.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36d4fa\",d:\"M 756.5,376.5 C 756.167,376.5 755.833,376.5 755.5,376.5C 755.577,372.037 754.91,367.704 753.5,363.5C 755.262,363.357 756.929,363.691 758.5,364.5C 759.474,362.257 759.808,359.924 759.5,357.5C 761.39,357.297 762.89,357.963 764,359.5C 765.803,364.682 766.636,370.016 766.5,375.5C 762.958,375.187 759.625,375.521 756.5,376.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc675f\",d:\"M 345.5,336.5 C 359.15,345.172 372.484,354.172 385.5,363.5C 385.5,364.167 385.5,364.833 385.5,365.5C 385.5,392.5 385.5,419.5 385.5,446.5C 383.801,446.66 382.134,446.494 380.5,446C 378.246,443.667 375.913,441.333 373.5,439C 371.744,438.798 370.078,438.298 368.5,437.5C 367.204,435.421 365.538,433.754 363.5,432.5C 361.604,431.534 359.604,431.201 357.5,431.5C 352.535,422.79 345.535,420.623 336.5,425C 335.748,425.671 335.414,426.504 335.5,427.5C 334.127,427.343 332.793,427.51 331.5,428C 321.895,434.686 312.228,441.519 302.5,448.5C 301.333,420.506 301.167,392.506 302,364.5C 302.717,363.956 303.217,363.289 303.5,362.5C 304.035,360.554 305.368,359.554 307.5,359.5C 311.65,359.145 315.317,357.812 318.5,355.5C 318.5,354.5 318.5,353.5 318.5,352.5C 320.308,352.509 321.975,352.009 323.5,351C 327.185,347.723 330.851,344.556 334.5,341.5C 337.116,340.52 339.449,339.02 341.5,337C 342.793,336.51 344.127,336.343 345.5,336.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aaf1f8\",d:\"M 467.5,350.5 C 466.69,356.141 465.856,361.807 465,367.5C 464.208,374.247 464.374,380.914 465.5,387.5C 465.158,388.338 464.492,388.672 463.5,388.5C 462.081,384.985 461.414,381.319 461.5,377.5C 461.5,373.5 461.5,369.5 461.5,365.5C 462.924,363.485 463.59,361.152 463.5,358.5C 463.948,355.318 465.282,352.651 467.5,350.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ccffb\",d:\"M 85.5,353.5 C 85.8333,353.5 86.1667,353.5 86.5,353.5C 92.0543,353.274 96.0543,355.607 98.5,360.5C 94.9206,360.766 94.5873,362.099 97.5,364.5C 96.2889,365.72 96.2889,366.887 97.5,368C 95.0288,368.706 92.6954,368.373 90.5,367C 92.3266,366.101 93.66,364.767 94.5,363C 93.2724,360.435 91.6057,358.269 89.5,356.5C 89.6745,358.574 89.0078,360.741 87.5,363C 87.8443,364.365 88.5109,365.532 89.5,366.5C 87.2573,367.474 84.924,367.808 82.5,367.5C 82.5,368.5 82.5,369.5 82.5,370.5C 81.5,370.5 80.5,370.5 79.5,370.5C 79.2148,372.288 79.5481,373.955 80.5,375.5C 81.5,374.167 82.5,374.167 83.5,375.5C 84.1667,374.167 84.8333,372.833 85.5,371.5C 85.8333,372.167 86.1667,372.833 86.5,373.5C 85.0229,375.639 84.0229,377.972 83.5,380.5C 87.5852,379.659 90.5852,380.992 92.5,384.5C 94.8333,385.833 97.1667,385.833 99.5,384.5C 96.8923,381.455 93.5589,379.621 89.5,379C 92.7878,377.642 94.2878,375.142 94,371.5C 95.7141,372.925 97.0475,372.592 98,370.5C 101.166,371.614 104.666,372.781 108.5,374C 109.743,375.154 110.743,376.488 111.5,378C 109.167,379 106.833,380 104.5,381C 104.165,382.503 104.165,383.836 104.5,385C 101.016,387.267 97.3494,387.767 93.5,386.5C 91.0197,387.415 90.3531,388.915 91.5,391C 95.8915,393.358 99.7248,392.858 103,389.5C 105.365,391.365 105.532,393.032 103.5,394.5C 104.376,395.251 105.376,395.751 106.5,396C 105.66,397.666 106.16,397.833 108,396.5C 108.99,399.626 110.156,402.626 111.5,405.5C 97.7744,390.281 83.2744,389.614 68,403.5C 67.059,405.727 65.8923,407.727 64.5,409.5C 65.212,406.125 65.712,402.791 66,399.5C 65.1667,400.5 64.3333,401.5 63.5,402.5C 61.8211,400.896 59.8211,400.229 57.5,400.5C 57.7529,402.827 57.0863,404.827 55.5,406.5C 54.6858,404.234 54.1858,401.9 54,399.5C 53.6667,404.833 53.3333,410.167 53,415.5C 51.6054,414.185 50.6054,414.519 50,416.5C 49.6667,411.5 49.3333,406.5 49,401.5C 48.169,437.669 48.3357,473.669 49.5,509.5C 49.7148,511.179 49.0481,512.179 47.5,512.5C 47.5,467.833 47.5,423.167 47.5,378.5C 61.5401,372.154 74.2068,363.82 85.5,353.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37d5fd\",d:\"M 98.5,360.5 C 104.086,362.633 109.086,365.799 113.5,370C 118.075,372.758 122.742,375.258 127.5,377.5C 128.581,389.82 128.414,402.154 127,414.5C 125.605,415.815 124.605,415.481 124,413.5C 123.667,414.167 123.333,414.833 123,415.5C 122.577,414.044 121.744,413.544 120.5,414C 121.122,415.569 121.456,417.236 121.5,419C 119.925,421.556 118.758,424.389 118,427.5C 117.093,421.527 116.427,415.527 116,409.5C 115.55,406.894 114.05,405.561 111.5,405.5C 110.156,402.626 108.99,399.626 108,396.5C 106.16,397.833 105.66,397.666 106.5,396C 105.376,395.751 104.376,395.251 103.5,394.5C 105.532,393.032 105.365,391.365 103,389.5C 99.7248,392.858 95.8915,393.358 91.5,391C 90.3531,388.915 91.0197,387.415 93.5,386.5C 97.3494,387.767 101.016,387.267 104.5,385C 104.165,383.836 104.165,382.503 104.5,381C 106.833,380 109.167,379 111.5,378C 110.743,376.488 109.743,375.154 108.5,374C 104.666,372.781 101.166,371.614 98,370.5C 97.0475,372.592 95.7141,372.925 94,371.5C 94.2878,375.142 92.7878,377.642 89.5,379C 93.5589,379.621 96.8923,381.455 99.5,384.5C 97.1667,385.833 94.8333,385.833 92.5,384.5C 90.5852,380.992 87.5852,379.659 83.5,380.5C 84.0229,377.972 85.0229,375.639 86.5,373.5C 86.1667,372.833 85.8333,372.167 85.5,371.5C 84.8333,372.833 84.1667,374.167 83.5,375.5C 82.5,374.167 81.5,374.167 80.5,375.5C 79.5481,373.955 79.2148,372.288 79.5,370.5C 80.5,370.5 81.5,370.5 82.5,370.5C 82.5,369.5 82.5,368.5 82.5,367.5C 84.924,367.808 87.2573,367.474 89.5,366.5C 88.5109,365.532 87.8443,364.365 87.5,363C 89.0078,360.741 89.6745,358.574 89.5,356.5C 91.6057,358.269 93.2724,360.435 94.5,363C 93.66,364.767 92.3266,366.101 90.5,367C 92.6954,368.373 95.0288,368.706 97.5,368C 96.2889,366.887 96.2889,365.72 97.5,364.5C 94.5873,362.099 94.9206,360.766 98.5,360.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fee1d5\",d:\"M 346.5,390.5 C 343.833,390.167 341.167,389.833 338.5,389.5C 330.474,383.7 328.807,376.533 333.5,368C 342.401,361.415 350.234,362.581 357,371.5C 359.559,381.397 356.059,387.73 346.5,390.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dd6f72\",d:\"M 532.5,355.5 C 536.352,357.557 538.518,360.89 539,365.5C 539.499,371.491 539.666,377.491 539.5,383.5C 538.833,383.5 538.167,383.5 537.5,383.5C 537.101,378.026 537.101,372.36 537.5,366.5C 536.636,362.441 534.97,358.774 532.5,355.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aef5fd\",d:\"M 753.5,363.5 C 754.91,367.704 755.577,372.037 755.5,376.5C 754.5,376.5 753.5,376.5 752.5,376.5C 752.876,369.908 751.876,363.575 749.5,357.5C 749.369,356.761 749.536,356.094 750,355.5C 751.076,358.237 752.243,360.904 753.5,363.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3795c7\",d:\"M 130.5,376.5 C 130.5,389.5 130.5,402.5 130.5,415.5C 130.167,415.5 129.833,415.5 129.5,415.5C 130.147,402.456 129.48,389.789 127.5,377.5C 122.742,375.258 118.075,372.758 113.5,370C 109.086,365.799 104.086,362.633 98.5,360.5C 96.0543,355.607 92.0543,353.274 86.5,353.5C 86.9623,352.12 87.9623,351.453 89.5,351.5C 92.8383,352.165 95.505,353.832 97.5,356.5C 103.555,358.184 108.555,361.35 112.5,366C 119.194,368.49 125.194,371.99 130.5,376.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#121f34\",d:\"M 95.5,344.5 C 109.611,354.548 124.278,363.548 139.5,371.5C 139.665,374.518 139.498,377.518 139,380.5C 136.851,381.84 135.684,381.173 135.5,378.5C 136.043,378.44 136.376,378.107 136.5,377.5C 135.757,376.818 135.091,376.151 134.5,375.5C 136.549,375.294 136.883,374.461 135.5,373C 119.923,363.294 104.423,353.461 89,343.5C 72.0335,353.153 55.7001,363.82 40,375.5C 39.2506,376.635 39.4173,377.635 40.5,378.5C 42.2459,376.748 44.2459,375.415 46.5,374.5C 47.1667,374.5 47.5,374.833 47.5,375.5C 47.5,375.833 47.5,376.167 47.5,376.5C 46.5012,423.997 46.1679,471.664 46.5,519.5C 46.5,520.167 46.1667,520.5 45.5,520.5C 45.5,473.167 45.5,425.833 45.5,378.5C 44.209,378.263 43.209,378.596 42.5,379.5C 41.71,380.609 41.21,381.942 41,383.5C 39.2344,381.119 38.0678,378.452 37.5,375.5C 38.7701,374.712 39.7701,373.712 40.5,372.5C 41.8333,371.833 42.8333,370.833 43.5,369.5C 56.8133,361.508 69.8133,353.008 82.5,344C 84.8383,343.163 87.1716,342.33 89.5,341.5C 91.4939,342.489 93.4939,343.489 95.5,344.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3290d1\",d:\"M 85.5,353.5 C 74.2068,363.82 61.5401,372.154 47.5,378.5C 47.5,377.833 47.5,377.167 47.5,376.5C 47.5,376.167 47.5,375.833 47.5,375.5C 58.8076,369.179 69.8076,362.345 80.5,355C 82.1545,354.392 83.8211,353.892 85.5,353.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0d8e6\",d:\"M 134.5,375.5 C 119.596,365.795 104.429,356.462 89,347.5C 74.6698,356.348 60.5031,365.348 46.5,374.5C 44.2459,375.415 42.2459,376.748 40.5,378.5C 39.4173,377.635 39.2506,376.635 40,375.5C 55.7001,363.82 72.0335,353.153 89,343.5C 104.423,353.461 119.923,363.294 135.5,373C 136.883,374.461 136.549,375.294 134.5,375.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e38072\",d:\"M 349.5,369.5 C 347.181,368.833 344.847,368.666 342.5,369C 340.844,370.829 338.844,372.163 336.5,373C 335.577,375.041 335.244,377.208 335.5,379.5C 333.862,370.307 337.862,366.474 347.5,368C 348.416,368.278 349.082,368.778 349.5,369.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2894c0\",d:\"M 576.5,367.5 C 576.833,367.5 577.167,367.5 577.5,367.5C 577.782,372.927 577.449,378.26 576.5,383.5C 576.167,383.5 575.833,383.5 575.5,383.5C 576.098,378.187 576.431,372.854 576.5,367.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#888696\",d:\"M 667.5,364.5 C 667.59,367.152 666.924,369.485 665.5,371.5C 665.41,368.848 666.076,366.515 667.5,364.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c75750\",d:\"M 685.5,361.5 C 682.951,365.005 681.617,369.005 681.5,373.5C 680.751,374.531 680.085,375.698 679.5,377C 676.183,377.498 672.85,377.665 669.5,377.5C 669.5,377.167 669.5,376.833 669.5,376.5C 672.5,376.5 675.5,376.5 678.5,376.5C 679.847,372.632 681.014,368.632 682,364.5C 683.039,363.29 684.206,362.29 685.5,361.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7fbfe\",d:\"M 87.5,370.5 C 92.1585,370.015 93.4919,371.848 91.5,376C 90.2068,376.49 88.8734,376.657 87.5,376.5C 87.5,374.5 87.5,372.5 87.5,370.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#192f52\",d:\"M 134.5,375.5 C 135.091,376.151 135.757,376.818 136.5,377.5C 136.376,378.107 136.043,378.44 135.5,378.5C 133.51,401.142 132.844,424.142 133.5,447.5C 133.167,447.5 132.833,447.5 132.5,447.5C 132.173,423.925 132.506,400.425 133.5,377C 132.552,376.517 131.552,376.351 130.5,376.5C 125.194,371.99 119.194,368.49 112.5,366C 108.555,361.35 103.555,358.184 97.5,356.5C 95.505,353.832 92.8383,352.165 89.5,351.5C 87.9623,351.453 86.9623,352.12 86.5,353.5C 86.1667,353.5 85.8333,353.5 85.5,353.5C 83.8211,353.892 82.1545,354.392 80.5,355C 69.8076,362.345 58.8076,369.179 47.5,375.5C 47.5,374.833 47.1667,374.5 46.5,374.5C 60.5031,365.348 74.6698,356.348 89,347.5C 104.429,356.462 119.596,365.795 134.5,375.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0fdfd\",d:\"M 943.5,372.5 C 943.5,373.5 943.5,374.5 943.5,375.5C 901.167,375.5 858.833,375.5 816.5,375.5C 816.5,374.5 816.5,373.5 816.5,372.5C 858.833,372.5 901.167,372.5 943.5,372.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#23191b\",d:\"M 749.5,367.5 C 750.734,369.201 751.401,371.201 751.5,373.5C 751.66,375.355 750.993,376.688 749.5,377.5C 749.5,374.167 749.5,370.833 749.5,367.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef5b5\",d:\"M 711.5,376.5 C 711.719,377.675 711.386,378.675 710.5,379.5C 709.482,378.807 708.482,378.141 707.5,377.5C 706.878,376.373 706.045,375.373 705,374.5C 704,369.833 705.667,368.5 710,370.5C 710.311,371.742 709.811,372.742 708.5,373.5C 709.34,374.735 710.34,375.735 711.5,376.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3471b2\",d:\"M 767.5,367.5 C 768.479,370.625 768.813,373.958 768.5,377.5C 763.167,377.5 757.833,377.5 752.5,377.5C 752.5,377.167 752.5,376.833 752.5,376.5C 753.5,376.5 754.5,376.5 755.5,376.5C 755.833,376.5 756.167,376.5 756.5,376.5C 760.167,376.5 763.833,376.5 767.5,376.5C 767.5,373.5 767.5,370.5 767.5,367.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#14203a\",d:\"M 551.5,311.5 C 551.338,313.527 551.505,315.527 552,317.5C 566.999,330.861 575.166,347.528 576.5,367.5C 576.431,372.854 576.098,378.187 575.5,383.5C 575.435,386.428 574.768,389.095 573.5,391.5C 574.659,380.676 574.659,370.01 573.5,359.5C 571.695,354.285 570.195,348.952 569,343.5C 567.694,340.379 565.86,337.713 563.5,335.5C 563.155,332.802 561.822,330.802 559.5,329.5C 556.899,325.229 553.566,321.563 549.5,318.5C 549.5,317.5 549.5,316.5 549.5,315.5C 549.5,314.5 549.5,313.5 549.5,312.5C 547.031,311.683 544.365,311.183 541.5,311C 544.924,310.253 548.257,310.42 551.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5fdfe\",d:\"M 616.5,292.5 C 609.052,296.727 604.552,303.061 603,311.5C 602.333,353.167 602.333,394.833 603,436.5C 603.27,439.224 603.77,441.891 604.5,444.5C 604.376,445.107 604.043,445.44 603.5,445.5C 602.833,444.833 602.167,444.167 601.5,443.5C 601.167,442.167 600.833,440.833 600.5,439.5C 600.333,395.499 600.5,351.499 601,307.5C 602.128,305.655 602.628,303.655 602.5,301.5C 604.117,298.216 606.45,295.549 609.5,293.5C 611.861,293.326 614.194,292.993 616.5,292.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5bd2ec\",d:\"M 945.5,292.5 C 838.167,292.5 730.833,292.5 623.5,292.5C 623.5,293.5 623.5,294.5 623.5,295.5C 621.396,295.201 619.396,295.534 617.5,296.5C 614.895,298.931 611.895,300.764 608.5,302C 607.299,302.903 606.465,304.069 606,305.5C 606.432,348.993 605.932,392.493 604.5,436C 604.759,439.073 605.759,441.739 607.5,444C 606.374,445.762 605.707,447.262 605.5,448.5C 604.094,448.027 603.427,447.027 603.5,445.5C 604.043,445.44 604.376,445.107 604.5,444.5C 603.77,441.891 603.27,439.224 603,436.5C 602.333,394.833 602.333,353.167 603,311.5C 604.552,303.061 609.052,296.727 616.5,292.5C 726.317,291.176 835.984,291.176 945.5,292.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bbfcff\",d:\"M 815.5,371.5 C 858.167,371.5 900.833,371.5 943.5,371.5C 943.5,371.833 943.5,372.167 943.5,372.5C 901.167,372.5 858.833,372.5 816.5,372.5C 816.5,373.5 816.5,374.5 816.5,375.5C 858.833,375.5 901.167,375.5 943.5,375.5C 901.003,376.499 858.337,376.832 815.5,376.5C 815.5,374.833 815.5,373.167 815.5,371.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a7889\",d:\"M 381.5,295.5 C 390.922,296.039 397.922,300.372 402.5,308.5C 401.681,325.426 401.181,342.426 401,359.5C 400.667,357.833 400.333,356.167 400,354.5C 399.844,358.134 398.844,361.467 397,364.5C 396.362,363.391 395.862,362.225 395.5,361C 396.863,358.492 397.196,355.992 396.5,353.5C 391.977,356.628 388.143,355.961 385,351.5C 384.311,352.357 383.478,353.023 382.5,353.5C 379.644,351.478 377.311,348.978 375.5,346C 373.008,343.888 370.342,343.388 367.5,344.5C 359.641,339.407 351.974,334.074 344.5,328.5C 342.432,328.967 340.432,329.634 338.5,330.5C 325.341,339.914 312.007,349.08 298.5,358C 297.29,359.039 296.29,360.206 295.5,361.5C 289.745,363.677 287.745,367.677 289.5,373.5C 292.512,372.745 295.178,371.412 297.5,369.5C 297.83,387.674 297.497,405.674 296.5,423.5C 270.468,423.806 244.468,423.473 218.5,422.5C 218.34,420.801 218.506,419.134 219,417.5C 220.011,418.337 221.178,418.67 222.5,418.5C 222.477,416.4 223.144,414.567 224.5,413C 224.245,408.608 224.245,404.108 224.5,399.5C 225.833,399.5 227.167,399.5 228.5,399.5C 228.312,401.103 228.812,402.437 230,403.5C 230.495,401.527 230.662,399.527 230.5,397.5C 233.198,397.45 235.364,398.45 237,400.5C 238.356,399.62 239.856,399.286 241.5,399.5C 243.13,402.675 244.63,406.009 246,409.5C 246.333,408.833 246.667,408.167 247,407.5C 247.707,409.081 248.54,410.581 249.5,412C 250.996,412.507 252.163,412.007 253,410.5C 253.667,411.167 254.333,411.833 255,412.5C 257.064,411.409 259.231,411.242 261.5,412C 260.179,413.545 260.512,414.711 262.5,415.5C 265.109,414.77 267.776,414.27 270.5,414C 268.19,413.503 265.857,413.337 263.5,413.5C 263.617,411.516 262.95,409.85 261.5,408.5C 265.165,400.209 262.498,394.876 253.5,392.5C 253.167,393.167 252.833,393.833 252.5,394.5C 247.517,392.343 242.85,389.676 238.5,386.5C 237.702,386.957 237.369,387.624 237.5,388.5C 211.912,371.918 186.579,354.918 161.5,337.5C 160.594,335.614 159.594,333.78 158.5,332C 153.859,330.349 151.193,331.849 150.5,336.5C 151.137,341.131 153.804,343.131 158.5,342.5C 161.934,344.733 165.267,347.233 168.5,350C 170.066,350.765 171.399,350.598 172.5,349.5C 173.492,349.328 174.158,349.662 174.5,350.5C 173.833,350.5 173.5,350.833 173.5,351.5C 171.51,374.142 170.844,397.142 171.5,420.5C 172.833,420.5 174.167,420.5 175.5,420.5C 175.5,398.167 175.5,375.833 175.5,353.5C 187.614,362.603 200.281,370.937 213.5,378.5C 213.5,406.833 213.5,435.167 213.5,463.5C 212.167,463.5 210.833,463.5 209.5,463.5C 197.917,455.79 186.083,448.457 174,441.5C 171.266,442.78 168.433,443.946 165.5,445C 155.167,452.167 144.833,459.333 134.5,466.5C 133.504,460.202 133.17,453.868 133.5,447.5C 132.844,424.142 133.51,401.142 135.5,378.5C 135.684,381.173 136.851,381.84 139,380.5C 139.498,377.518 139.665,374.518 139.5,371.5C 124.278,363.548 109.611,354.548 95.5,344.5C 98.1267,345.105 100.793,345.605 103.5,346C 104.93,347.886 106.597,349.553 108.5,351C 112.72,351.736 116.553,353.236 120,355.5C 125.972,355.286 128.472,352.286 127.5,346.5C 116.833,346.167 116.833,345.833 127.5,345.5C 127.5,342.167 127.5,338.833 127.5,335.5C 129.604,335.799 131.604,335.466 133.5,334.5C 130.566,330.41 128.066,330.743 126,335.5C 124.842,335.002 124.009,334.169 123.5,333C 126.812,327.999 131.479,326.166 137.5,327.5C 137.64,325.876 136.973,324.71 135.5,324C 136.737,323.768 137.737,323.268 138.5,322.5C 139.728,321.694 140.728,320.694 141.5,319.5C 141.369,320.376 141.702,321.043 142.5,321.5C 143.518,320.807 144.518,320.141 145.5,319.5C 146.78,320.931 148.447,321.598 150.5,321.5C 150.263,320.209 150.596,319.209 151.5,318.5C 151.5,319.833 151.5,321.167 151.5,322.5C 153.5,322.5 155.5,322.5 157.5,322.5C 158.167,322.5 158.833,322.5 159.5,322.5C 160.833,322.5 162.167,322.5 163.5,322.5C 164.23,324.045 165.563,324.878 167.5,325C 166.833,325.333 166.167,325.667 165.5,326C 166.766,326.309 167.933,326.809 169,327.5C 169.202,329.256 169.702,330.922 170.5,332.5C 172.071,331.691 173.738,331.357 175.5,331.5C 175.238,330.022 175.571,328.689 176.5,327.5C 178.833,326.833 181.167,326.167 183.5,325.5C 184.192,326.025 184.692,326.692 185,327.5C 188.196,326.488 191.363,325.322 194.5,324C 193.584,323.722 192.918,323.222 192.5,322.5C 193.725,321.848 194.392,320.681 194.5,319C 194.917,316.502 195.251,314.002 195.5,311.5C 196.222,312.551 197.222,313.218 198.5,313.5C 196.774,315.82 196.107,318.487 196.5,321.5C 197.5,321.5 198.5,321.5 199.5,321.5C 200.167,313.5 200.833,313.5 201.5,321.5C 202.5,321.5 203.5,321.5 204.5,321.5C 204.5,318.5 204.5,315.5 204.5,312.5C 205.167,313.833 205.833,315.167 206.5,316.5C 206.5,318.167 206.5,319.833 206.5,321.5C 207.5,321.5 208.5,321.5 209.5,321.5C 209.487,314.766 210.487,314.266 212.5,320C 214.157,320.725 215.157,320.225 215.5,318.5C 215.833,318.5 216.167,318.5 216.5,318.5C 216.5,319.5 216.5,320.5 216.5,321.5C 217.5,321.5 218.5,321.5 219.5,321.5C 220.124,313.79 221.457,313.79 223.5,321.5C 226.807,321.937 229.807,321.27 232.5,319.5C 233.85,320.95 235.516,321.617 237.5,321.5C 237.5,320.5 237.5,319.5 237.5,318.5C 238.167,318.5 238.5,318.833 238.5,319.5C 238.414,320.496 238.748,321.329 239.5,322C 238.167,322.333 236.833,322.667 235.5,323C 240.325,325.629 245.158,325.795 250,323.5C 252.028,324.968 253.862,324.801 255.5,323C 253.618,322.802 251.952,322.302 250.5,321.5C 256.905,322.594 259.238,319.927 257.5,313.5C 258.167,312.5 258.833,311.5 259.5,310.5C 259.577,314.215 259.244,317.881 258.5,321.5C 259.5,321.5 260.5,321.5 261.5,321.5C 261.351,320.448 261.517,319.448 262,318.5C 262.745,319.99 263.912,320.99 265.5,321.5C 267.403,320.647 269.403,320.647 271.5,321.5C 271.5,317.5 271.5,313.5 271.5,309.5C 272.167,309.5 272.833,309.5 273.5,309.5C 272.911,313.971 273.577,317.971 275.5,321.5C 278.833,321.5 282.167,321.5 285.5,321.5C 285.281,320.325 285.614,319.325 286.5,318.5C 288.111,319.32 288.778,320.654 288.5,322.5C 289.5,322.5 290.5,322.5 291.5,322.5C 291.886,306.621 292.886,306.621 294.5,322.5C 295.5,322.5 296.5,322.5 297.5,322.5C 297.577,318.785 297.244,315.119 296.5,311.5C 297.978,311.762 299.311,311.429 300.5,310.5C 300.291,309.914 299.957,309.414 299.5,309C 295.179,308.501 290.846,308.334 286.5,308.5C 286.843,310.483 286.176,311.817 284.5,312.5C 283.596,311.791 283.263,310.791 283.5,309.5C 280.5,309.5 277.5,309.5 274.5,309.5C 277.665,308.678 280.998,308.011 284.5,307.5C 286.414,305.406 288.581,305.406 291,307.5C 294.214,305.517 297.547,305.184 301,306.5C 301.684,302.907 303.184,302.573 305.5,305.5C 310.19,302.718 315.19,301.885 320.5,303C 314.338,301.708 308.004,301.041 301.5,301C 304.833,300.667 308.167,300.333 311.5,300C 308.774,299.818 306.107,299.318 303.5,298.5C 327.493,297.667 351.493,297.167 375.5,297C 377.708,296.809 379.708,296.309 381.5,295.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cfebe7\",d:\"M 218.5,352.5 C 219.5,352.5 220.5,352.5 221.5,352.5C 221.5,353.833 221.5,355.167 221.5,356.5C 222.5,356.5 223.5,356.5 224.5,356.5C 224.5,357.5 224.5,358.5 224.5,359.5C 220.074,359.28 218.074,356.946 218.5,352.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec756f\",d:\"M 334.5,341.5 C 330.851,344.556 327.185,347.723 323.5,351C 321.975,352.009 320.308,352.509 318.5,352.5C 318.5,353.5 318.5,354.5 318.5,355.5C 315.317,357.812 311.65,359.145 307.5,359.5C 315.951,352.723 324.951,346.723 334.5,341.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d5eaed\",d:\"M 257.5,346.5 C 259.827,346.247 261.827,346.914 263.5,348.5C 269.266,346.909 272.266,349.242 272.5,355.5C 272.267,356.932 271.6,357.432 270.5,357C 268.187,349.538 267.187,349.705 267.5,357.5C 265.408,357.439 263.908,356.439 263,354.5C 262.517,355.448 262.351,356.448 262.5,357.5C 261.5,357.5 260.5,357.5 259.5,357.5C 259.664,354.813 259.497,352.146 259,349.5C 258.667,351.833 258.333,354.167 258,356.5C 256.989,357.337 255.822,357.67 254.5,357.5C 253.807,353.247 254.807,349.581 257.5,346.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f18782\",d:\"M 340.5,345.5 C 345.339,344.677 347.673,346.677 347.5,351.5C 345.143,351.663 342.81,351.497 340.5,351C 339.248,349.172 339.248,347.339 340.5,345.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff7df\",d:\"M 342.5,346.5 C 346.31,347.754 346.31,348.754 342.5,349.5C 342.5,348.5 342.5,347.5 342.5,346.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#131d2c\",d:\"M 172.5,349.5 C 171.399,350.598 170.066,350.765 168.5,350C 165.267,347.233 161.934,344.733 158.5,342.5C 159.251,341.427 160.251,341.26 161.5,342C 165.322,344.33 168.988,346.83 172.5,349.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea847b\",d:\"M 345.5,336.5 C 344.127,336.343 342.793,336.51 341.5,337C 339.449,339.02 337.116,340.52 334.5,341.5C 337.304,337.245 340.97,335.578 345.5,336.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c0e3e8\",d:\"M 243.5,333.5 C 244.833,333.5 246.167,333.5 247.5,333.5C 247.803,336.588 246.47,338.254 243.5,338.5C 243.5,336.833 243.5,335.167 243.5,333.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d5f7f9\",d:\"M 363.5,317.5 C 367.5,317.5 371.5,317.5 375.5,317.5C 375.5,320.833 375.5,324.167 375.5,327.5C 371.833,327.5 368.167,327.5 364.5,327.5C 363.521,324.375 363.187,321.042 363.5,317.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#598187\",d:\"M 366.5,319.5 C 368.833,319.5 371.167,319.5 373.5,319.5C 374.265,324.906 371.931,326.906 366.5,325.5C 366.5,323.5 366.5,321.5 366.5,319.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a5c8d0\",d:\"M 363.5,317.5 C 367.634,316.515 371.968,316.182 376.5,316.5C 376.5,320.5 376.5,324.5 376.5,328.5C 372.298,328.817 368.298,328.483 364.5,327.5C 368.167,327.5 371.833,327.5 375.5,327.5C 375.5,324.167 375.5,320.833 375.5,317.5C 371.5,317.5 367.5,317.5 363.5,317.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#657f89\",d:\"M 242.5,311.5 C 243.5,311.5 244.5,311.5 245.5,311.5C 245.52,313.143 244.853,314.476 243.5,315.5C 244.5,316.167 245.5,316.833 246.5,317.5C 240.794,318.458 239.46,316.458 242.5,311.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1f5f9\",d:\"M 273.5,309.5 C 273.833,309.5 274.167,309.5 274.5,309.5C 277.5,309.5 280.5,309.5 283.5,309.5C 283.263,310.791 283.596,311.791 284.5,312.5C 288.796,318.02 288.13,318.686 282.5,314.5C 281.833,316.5 281.167,318.5 280.5,320.5C 278.709,308.882 277.043,309.215 275.5,321.5C 273.577,317.971 272.911,313.971 273.5,309.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b9d0d9\",d:\"M 275.5,321.5 C 277.043,309.215 278.709,308.882 280.5,320.5C 281.167,318.5 281.833,316.5 282.5,314.5C 288.13,318.686 288.796,318.02 284.5,312.5C 286.176,311.817 286.843,310.483 286.5,308.5C 290.846,308.334 295.179,308.501 299.5,309C 299.957,309.414 300.291,309.914 300.5,310.5C 299.311,311.429 297.978,311.762 296.5,311.5C 297.244,315.119 297.577,318.785 297.5,322.5C 296.5,322.5 295.5,322.5 294.5,322.5C 292.886,306.621 291.886,306.621 291.5,322.5C 290.5,322.5 289.5,322.5 288.5,322.5C 288.778,320.654 288.111,319.32 286.5,318.5C 285.614,319.325 285.281,320.325 285.5,321.5C 282.167,321.5 278.833,321.5 275.5,321.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4078b3\",d:\"M 664.5,365.5 C 664.326,367.861 663.993,370.194 663.5,372.5C 662.549,373.919 662.216,375.585 662.5,377.5C 658.167,377.5 653.833,377.5 649.5,377.5C 648.167,377.5 646.833,377.5 645.5,377.5C 645.205,375.265 645.539,373.265 646.5,371.5C 646.5,373.167 646.5,374.833 646.5,376.5C 647.5,376.5 648.5,376.5 649.5,376.5C 653.5,376.5 657.5,376.5 661.5,376.5C 661.432,372.43 662.432,368.763 664.5,365.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0c2364\",d:\"M 663.5,372.5 C 663.5,375.833 663.5,379.167 663.5,382.5C 662.596,381.791 662.263,380.791 662.5,379.5C 658.167,379.5 653.833,379.5 649.5,379.5C 649.5,378.833 649.5,378.167 649.5,377.5C 653.833,377.5 658.167,377.5 662.5,377.5C 662.216,375.585 662.549,373.919 663.5,372.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d09b2a\",d:\"M 725.5,360.5 C 728.063,362.612 729.896,365.279 731,368.5C 731.499,373.489 731.666,378.489 731.5,383.5C 731.34,385.153 730.674,386.486 729.5,387.5C 730.442,382.195 730.609,376.861 730,371.5C 729.626,369.133 728.459,367.3 726.5,366C 725.767,364.234 725.433,362.401 725.5,360.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#51cbe1\",d:\"M 943.5,372.5 C 944.249,373.531 944.915,374.698 945.5,376C 945.167,376.333 944.833,376.667 944.5,377C 901.331,377.831 858.331,377.665 815.5,376.5C 858.337,376.832 901.003,376.499 943.5,375.5C 943.5,374.5 943.5,373.5 943.5,372.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#35d4fb\",d:\"M 500.5,340.5 C 497.372,341.983 494.372,343.649 491.5,345.5C 482.779,350.241 477.446,357.575 475.5,367.5C 474.674,372.316 474.174,377.316 474,382.5C 472.961,383.71 471.794,384.71 470.5,385.5C 469.817,383.824 468.483,383.157 466.5,383.5C 466.192,381.076 466.526,378.743 467.5,376.5C 469.322,375.571 470.655,376.238 471.5,378.5C 472.316,374.02 472.983,369.52 473.5,365C 473.491,363.596 472.991,362.43 472,361.5C 470.885,363 470.052,364.667 469.5,366.5C 468.675,367.386 467.675,367.719 466.5,367.5C 466.716,362.685 468.049,358.185 470.5,354C 471.619,352.124 473.286,351.291 475.5,351.5C 475.617,349.516 474.95,347.85 473.5,346.5C 473.833,345.833 474.167,345.167 474.5,344.5C 475.716,343.904 477.049,343.737 478.5,344C 482.809,339.176 488.142,337.176 494.5,338C 495.955,340.016 497.955,340.849 500.5,340.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5f212c\",d:\"M 298.5,365.5 C 298.842,364.662 299.508,364.328 300.5,364.5C 300.5,392.833 300.5,421.167 300.5,449.5C 299.833,421.5 299.167,393.5 298.5,365.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f86e64\",d:\"M 349.5,369.5 C 354.015,373.096 354.682,377.429 351.5,382.5C 346.594,388.591 341.428,388.924 336,383.5C 335.51,382.207 335.343,380.873 335.5,379.5C 335.244,377.208 335.577,375.041 336.5,373C 338.844,372.163 340.844,370.829 342.5,369C 344.847,368.666 347.181,368.833 349.5,369.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#341914\",d:\"M 665.5,372.5 C 665.5,374.167 665.5,375.833 665.5,377.5C 666.833,377.5 668.167,377.5 669.5,377.5C 672.85,377.665 676.183,377.498 679.5,377C 680.085,375.698 680.751,374.531 681.5,373.5C 682.167,373.5 682.833,373.5 683.5,373.5C 683.5,376.833 683.5,380.167 683.5,383.5C 683.737,384.791 683.404,385.791 682.5,386.5C 682.007,384.194 681.674,381.861 681.5,379.5C 676.637,379.181 671.97,379.514 667.5,380.5C 665.952,380.821 665.285,381.821 665.5,383.5C 664.167,379.833 664.167,376.167 665.5,372.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c2849\",d:\"M 742.5,348.5 C 744.194,349.527 745.527,350.861 746.5,352.5C 747.263,354.368 748.263,356.035 749.5,357.5C 751.876,363.575 752.876,369.908 752.5,376.5C 752.5,376.833 752.5,377.167 752.5,377.5C 751.5,378.167 750.5,378.833 749.5,379.5C 746.833,379.5 744.167,379.5 741.5,379.5C 739.396,379.201 737.396,379.534 735.5,380.5C 734.972,382.336 734.306,384.003 733.5,385.5C 733.5,383.167 733.5,380.833 733.5,378.5C 733.328,377.508 733.662,376.842 734.5,376.5C 735.919,377.451 737.585,377.784 739.5,377.5C 742.833,378.833 746.167,378.833 749.5,377.5C 750.993,376.688 751.66,375.355 751.5,373.5C 751.401,371.201 750.734,369.201 749.5,367.5C 749.223,361.976 747.223,357.31 743.5,353.5C 743.443,352.391 743.11,351.391 742.5,350.5C 742.5,349.833 742.5,349.167 742.5,348.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#170412\",d:\"M 298.5,365.5 C 299.167,393.5 299.833,421.5 300.5,449.5C 300.217,450.289 299.717,450.956 299,451.5C 298.5,444.174 298.334,436.841 298.5,429.5C 298.472,407.958 298.472,386.625 298.5,365.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9ee7c\",d:\"M 711.5,376.5 C 712.417,378.662 712.417,380.995 711.5,383.5C 709.143,383.663 706.81,383.497 704.5,383C 703.663,381.989 703.33,380.822 703.5,379.5C 704.822,379.33 705.989,379.663 707,380.5C 707.483,379.552 707.649,378.552 707.5,377.5C 708.482,378.141 709.482,378.807 710.5,379.5C 711.386,378.675 711.719,377.675 711.5,376.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dde8f0\",d:\"M 237.5,388.5 C 242.147,391.32 246.647,394.32 251,397.5C 257.533,394.713 260.533,396.713 260,403.5C 256.667,407.5 253.333,407.5 250,403.5C 249.802,401.618 249.302,399.952 248.5,398.5C 238.099,391.438 227.433,384.771 216.5,378.5C 202.537,369.18 188.537,359.846 174.5,350.5C 174.158,349.662 173.492,349.328 172.5,349.5C 168.988,346.83 165.322,344.33 161.5,342C 160.251,341.26 159.251,341.427 158.5,342.5C 153.804,343.131 151.137,341.131 150.5,336.5C 151.193,331.849 153.859,330.349 158.5,332C 159.594,333.78 160.594,335.614 161.5,337.5C 186.579,354.918 211.912,371.918 237.5,388.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7f4041\",d:\"M 667.5,380.5 C 671.97,379.514 676.637,379.181 681.5,379.5C 681.674,381.861 682.007,384.194 682.5,386.5C 682.5,386.833 682.5,387.167 682.5,387.5C 681.076,385.485 680.41,383.152 680.5,380.5C 676.5,380.5 672.5,380.5 668.5,380.5C 668.167,380.5 667.833,380.5 667.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#339bd5\",d:\"M 475.5,367.5 C 475.242,372.717 475.575,377.884 476.5,383C 473.301,386.262 469.468,388.428 465,389.5C 464.235,389.43 463.735,389.097 463.5,388.5C 464.492,388.672 465.158,388.338 465.5,387.5C 467.167,386.833 468.833,386.167 470.5,385.5C 471.794,384.71 472.961,383.71 474,382.5C 474.174,377.316 474.674,372.316 475.5,367.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d4e7eb\",d:\"M 173.5,351.5 C 174.5,351.833 175.167,352.5 175.5,353.5C 175.5,375.833 175.5,398.167 175.5,420.5C 174.167,420.5 172.833,420.5 171.5,420.5C 170.844,397.142 171.51,374.142 173.5,351.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#27609c\",d:\"M 755.5,380.5 C 755.5,380.167 755.5,379.833 755.5,379.5C 759.833,379.5 764.167,379.5 768.5,379.5C 768.81,382.713 768.477,385.713 767.5,388.5C 767.5,385.833 767.5,383.167 767.5,380.5C 763.5,380.5 759.5,380.5 755.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8599bb\",d:\"M 458.5,367.5 C 458.182,372.032 458.515,376.366 459.5,380.5C 460.374,383.789 461.041,387.123 461.5,390.5C 457.483,383.237 456.483,375.57 458.5,367.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4abff2\",d:\"M 741.5,380.5 C 742.404,381.209 742.737,382.209 742.5,383.5C 744.167,383.5 745.833,383.5 747.5,383.5C 747.664,386.187 747.497,388.854 747,391.5C 744.965,391.606 743.132,392.606 741.5,394.5C 738.751,393.511 736.751,394.511 735.5,397.5C 734.778,398.551 733.778,399.218 732.5,399.5C 733.917,392.418 736.917,386.085 741.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f8fc6\",d:\"M 741.5,380.5 C 741.5,380.167 741.5,379.833 741.5,379.5C 744.167,379.5 746.833,379.5 749.5,379.5C 749.184,383.525 749.017,387.525 749,391.5C 749.278,390.584 749.778,389.918 750.5,389.5C 749.512,393.485 748.512,397.485 747.5,401.5C 744.757,399.761 742.757,397.427 741.5,394.5C 743.132,392.606 744.965,391.606 747,391.5C 747.497,388.854 747.664,386.187 747.5,383.5C 745.833,383.5 744.167,383.5 742.5,383.5C 742.737,382.209 742.404,381.209 741.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d293c\",d:\"M 216.5,378.5 C 227.433,384.771 238.099,391.438 248.5,398.5C 248.631,399.376 248.298,400.043 247.5,400.5C 245.833,399.667 244.167,398.833 242.5,398C 234.333,392.5 226.167,387 218,381.5C 217.5,395.829 217.333,410.163 217.5,424.5C 216.504,409.342 216.17,394.009 216.5,378.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#367eb7\",d:\"M 649.5,380.5 C 649.5,380.167 649.5,379.833 649.5,379.5C 653.833,379.5 658.167,379.5 662.5,379.5C 662.263,380.791 662.596,381.791 663.5,382.5C 663.307,387.438 664.307,392.105 666.5,396.5C 664.59,395.025 663.424,393.025 663,390.5C 661.957,387.243 661.457,383.91 661.5,380.5C 657.5,380.5 653.5,380.5 649.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#db706e\",d:\"M 668.5,380.5 C 672.5,380.5 676.5,380.5 680.5,380.5C 680.41,383.152 681.076,385.485 682.5,387.5C 684.008,389.181 685.008,391.181 685.5,393.5C 683.627,392.137 681.961,390.47 680.5,388.5C 679.534,386.604 679.201,384.604 679.5,382.5C 676.507,381.865 673.507,381.699 670.5,382C 669.663,383.011 669.33,384.178 669.5,385.5C 668.549,384.081 668.216,382.415 668.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c95d5e\",d:\"M 554.5,363.5 C 555.491,369.979 555.824,376.646 555.5,383.5C 553.543,387.828 554.209,391.661 557.5,395C 560.451,395.226 562.951,396.392 565,398.5C 566.326,397.201 567.66,395.868 569,394.5C 569.24,392.148 570.073,390.148 571.5,388.5C 571.007,390.806 570.674,393.139 570.5,395.5C 569.542,397.302 568.875,399.302 568.5,401.5C 561.444,399.741 555.777,396.075 551.5,390.5C 554.156,381.739 555.156,372.739 554.5,363.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6c9be\",d:\"M 667.5,380.5 C 667.833,380.5 668.167,380.5 668.5,380.5C 668.216,382.415 668.549,384.081 669.5,385.5C 669.5,388.167 669.5,390.833 669.5,393.5C 669.5,394.167 669.167,394.5 668.5,394.5C 667.614,390.917 666.614,387.25 665.5,383.5C 665.285,381.821 665.952,380.821 667.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2fefe\",d:\"M 943.5,388.5 C 943.5,388.833 943.5,389.167 943.5,389.5C 901.167,389.5 858.833,389.5 816.5,389.5C 815.549,388.081 815.216,386.415 815.5,384.5C 858.167,384.5 900.833,384.5 943.5,384.5C 943.5,385.833 943.5,387.167 943.5,388.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5fefc\",d:\"M 816.5,386.5 C 858.505,386.167 900.505,386.5 942.5,387.5C 921.5,387.833 900.5,388.167 879.5,388.5C 858.156,388.5 837.156,387.833 816.5,386.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#69e3f4\",d:\"M 741.5,379.5 C 741.5,379.833 741.5,380.167 741.5,380.5C 736.917,386.085 733.917,392.418 732.5,399.5C 731.833,399.5 731.5,399.833 731.5,400.5C 729.148,399.288 727.315,399.955 726,402.5C 724.588,401.077 723.421,401.244 722.5,403C 722.833,403.333 723.167,403.667 723.5,404C 720.507,406.328 717.173,407.994 713.5,409C 712.617,412.45 711.784,415.95 711,419.5C 710.501,414.845 710.334,410.179 710.5,405.5C 711.791,405.737 712.791,405.404 713.5,404.5C 714.167,404.5 714.5,404.167 714.5,403.5C 724.036,400.967 730.369,394.967 733.5,385.5C 734.306,384.003 734.972,382.336 735.5,380.5C 737.396,379.534 739.396,379.201 741.5,379.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282b49\",d:\"M 504.5,331.5 C 505.479,334.625 505.813,337.958 505.5,341.5C 502.689,341.826 500.022,342.659 497.5,344C 501.702,345.161 506.035,345.995 510.5,346.5C 511.95,347.85 512.617,349.516 512.5,351.5C 511.5,351.5 510.5,351.5 509.5,351.5C 506.988,350.072 504.322,349.572 501.5,350C 497.023,353.12 493.023,356.954 489.5,361.5C 483.701,375.307 487.035,384.807 499.5,390C 516.534,392.966 525.034,385.8 525,368.5C 524.617,367.944 524.117,367.611 523.5,367.5C 521.94,363.274 519.273,359.941 515.5,357.5C 516.675,357.719 517.675,357.386 518.5,356.5C 517.807,355.482 517.141,354.482 516.5,353.5C 517.108,352.2 517.775,350.867 518.5,349.5C 517.193,347.818 517.193,346.152 518.5,344.5C 519.609,344.557 520.609,344.89 521.5,345.5C 521.833,346.5 522.5,347.167 523.5,347.5C 523.5,348.833 523.5,350.167 523.5,351.5C 524.93,351.421 526.264,351.754 527.5,352.5C 531.731,356.528 535.064,361.194 537.5,366.5C 537.101,372.36 537.101,378.026 537.5,383.5C 538.625,384.652 538.625,385.652 537.5,386.5C 536.292,385.766 534.959,385.433 533.5,385.5C 532.338,390.663 529.338,394.329 524.5,396.5C 523.883,396.389 523.383,396.056 523,395.5C 516.869,400.157 510.036,401.824 502.5,400.5C 503.59,399.391 503.59,398.391 502.5,397.5C 498.816,398.669 495.15,398.502 491.5,397C 488.791,394.325 486.124,391.658 483.5,389C 482.099,388.59 480.766,388.09 479.5,387.5C 478.791,386.596 477.791,386.263 476.5,386.5C 477.609,385.121 478.276,383.455 478.5,381.5C 477.088,375.79 477.255,370.124 479,364.5C 479.414,364.957 479.914,365.291 480.5,365.5C 481.354,359.826 484.521,356.159 490,354.5C 491.294,353.146 491.46,351.812 490.5,350.5C 492.045,349.548 493.712,349.215 495.5,349.5C 496.128,345.509 494.795,344.176 491.5,345.5C 494.372,343.649 497.372,341.983 500.5,340.5C 501.833,340.5 503.167,340.5 504.5,340.5C 504.5,337.5 504.5,334.5 504.5,331.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd2f9\",d:\"M 515.5,357.5 C 519.273,359.941 521.94,363.274 523.5,367.5C 523.011,383.157 515.011,389.99 499.5,388C 490.532,382.711 487.365,374.878 490,364.5C 496.273,354.08 504.773,351.747 515.5,357.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#112e55\",d:\"M 509.5,351.5 C 511.438,353.163 513.772,353.829 516.5,353.5C 517.141,354.482 517.807,355.482 518.5,356.5C 517.675,357.386 516.675,357.719 515.5,357.5C 504.773,351.747 496.273,354.08 490,364.5C 487.365,374.878 490.532,382.711 499.5,388C 515.011,389.99 523.011,383.157 523.5,367.5C 524.117,367.611 524.617,367.944 525,368.5C 525.034,385.8 516.534,392.966 499.5,390C 487.035,384.807 483.701,375.307 489.5,361.5C 493.023,356.954 497.023,353.12 501.5,350C 504.322,349.572 506.988,350.072 509.5,351.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#331525\",d:\"M 573.5,359.5 C 574.659,370.01 574.659,380.676 573.5,391.5C 573.5,392.167 573.5,392.833 573.5,393.5C 573.167,393.5 572.833,393.5 572.5,393.5C 571.833,394.167 571.167,394.833 570.5,395.5C 570.674,393.139 571.007,390.806 571.5,388.5C 571.216,386.585 571.549,384.919 572.5,383.5C 573.492,375.684 573.826,367.684 573.5,359.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#32e5fd\",d:\"M 582.5,361.5 C 582.5,374.167 582.5,386.833 582.5,399.5C 581.683,401.969 581.183,404.635 581,407.5C 580.333,404.833 579.667,404.833 579,407.5C 578.843,402.718 577.676,398.218 575.5,394C 576.286,390.542 576.62,387.042 576.5,383.5C 577.449,378.26 577.782,372.927 577.5,367.5C 577.833,356.833 578.167,346.167 578.5,335.5C 579.5,335.5 580.5,335.5 581.5,335.5C 581.174,344.349 581.507,353.016 582.5,361.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b7edf7\",d:\"M 755.5,379.5 C 755.5,379.833 755.5,380.167 755.5,380.5C 754.318,386.561 752.818,392.561 751,398.5C 750.241,400.063 749.074,401.063 747.5,401.5C 748.512,397.485 749.512,393.485 750.5,389.5C 750.804,386.478 751.304,383.478 752,380.5C 753.011,379.663 754.178,379.33 755.5,379.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#49c2e9\",d:\"M 816.5,389.5 C 858.833,389.5 901.167,389.5 943.5,389.5C 943.611,390.117 943.944,390.617 944.5,391C 902.168,391.5 859.835,391.667 817.5,391.5C 816.022,391.762 814.689,391.429 813.5,390.5C 814.472,390.407 815.472,390.074 816.5,389.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7d551e\",d:\"M 728.5,390.5 C 728.573,392.027 727.906,393.027 726.5,393.5C 726.427,391.973 727.094,390.973 728.5,390.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e2556\",d:\"M 586.5,335.5 C 586.5,369.5 586.5,403.5 586.5,437.5C 583.888,449.616 576.554,457.45 564.5,461C 535.542,462.459 506.542,462.959 477.5,462.5C 466.495,462.667 455.495,462.5 444.5,462C 436.666,460.834 430.5,457.001 426,450.5C 425.26,449.251 425.427,448.251 426.5,447.5C 427.806,449.473 429.473,451.139 431.5,452.5C 434.316,456.08 437.983,458.413 442.5,459.5C 482.665,460.665 522.998,460.831 563.5,460C 565.066,459.392 566.4,458.558 567.5,457.5C 575.971,454.358 581.305,448.358 583.5,439.5C 583.5,394.833 583.5,350.167 583.5,305.5C 584.117,305.389 584.617,305.056 585,304.5C 586.37,314.777 586.87,325.111 586.5,335.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9c631e\",d:\"M 688.5,393.5 C 691.089,394.419 693.089,396.086 694.5,398.5C 691.911,397.581 689.911,395.914 688.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f17e7f\",d:\"M 338.5,389.5 C 341.167,389.833 343.833,390.167 346.5,390.5C 345.766,391.708 345.433,393.041 345.5,394.5C 352.022,394.177 358.355,394.51 364.5,395.5C 350.167,395.5 335.833,395.5 321.5,395.5C 327.319,394.672 333.319,394.172 339.5,394C 341.86,392.126 341.527,390.626 338.5,389.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4bcbf5\",d:\"M 755.5,380.5 C 759.5,380.5 763.5,380.5 767.5,380.5C 767.5,383.167 767.5,385.833 767.5,388.5C 766.41,396.772 763.743,404.439 759.5,411.5C 754.619,409.291 750.619,405.957 747.5,401.5C 749.074,401.063 750.241,400.063 751,398.5C 752.818,392.561 754.318,386.561 755.5,380.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#47100a\",d:\"M 683.5,383.5 C 683.833,383.5 684.167,383.5 684.5,383.5C 684.929,387.237 686.262,390.57 688.5,393.5C 689.911,395.914 691.911,397.581 694.5,398.5C 698.806,401.994 703.806,403.328 709.5,402.5C 709.5,402.833 709.5,403.167 709.5,403.5C 707.821,403.285 706.821,403.952 706.5,405.5C 697.808,404.325 690.808,400.325 685.5,393.5C 685.008,391.181 684.008,389.181 682.5,387.5C 682.5,387.167 682.5,386.833 682.5,386.5C 683.404,385.791 683.737,384.791 683.5,383.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#112d58\",d:\"M 111.5,405.5 C 112.501,408.172 113.501,410.838 114.5,413.5C 115.553,423.503 112.887,432.337 106.5,440C 102.808,441.942 99.1417,443.776 95.5,445.5C 95.1667,445.5 94.8333,445.5 94.5,445.5C 85.3354,446.775 77.3354,444.441 70.5,438.5C 64.9292,431.898 62.5958,424.232 63.5,415.5C 63.5172,413.435 63.8505,411.435 64.5,409.5C 65.8923,407.727 67.059,405.727 68,403.5C 83.2744,389.614 97.7744,390.281 111.5,405.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9f6fa\",d:\"M 649.5,379.5 C 649.5,379.833 649.5,380.167 649.5,380.5C 651.133,395.099 656.133,408.432 664.5,420.5C 662.603,421.652 660.936,421.319 659.5,419.5C 651.176,407.527 646.843,394.193 646.5,379.5C 647.5,379.5 648.5,379.5 649.5,379.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ddfefe\",d:\"M 943.5,397.5 C 944.833,398.833 944.833,400.167 943.5,401.5C 900.833,401.5 858.167,401.5 815.5,401.5C 815.5,400.167 815.5,398.833 815.5,397.5C 858.167,397.5 900.833,397.5 943.5,397.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fed8cd\",d:\"M 321.5,395.5 C 335.833,395.5 350.167,395.5 364.5,395.5C 365.791,396.542 365.791,397.708 364.5,399C 350.171,399.5 335.837,399.667 321.5,399.5C 321.5,398.167 321.5,396.833 321.5,395.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf7e8\",d:\"M 322.5,396.5 C 336.183,396.167 349.85,396.501 363.5,397.5C 356.667,397.833 349.833,398.167 343,398.5C 335.799,398.497 328.966,397.83 322.5,396.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fafafe\",d:\"M 818.5,398.5 C 859.839,398.167 901.172,398.5 942.5,399.5C 900.837,400.667 859.171,400.833 817.5,400C 818.056,399.617 818.389,399.117 818.5,398.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b2848\",d:\"M 23.5,148.5 C 23.8333,148.5 24.1667,148.5 24.5,148.5C 24.5386,149.756 24.0386,150.756 23,151.5C 22.3333,357.167 22.3333,562.833 23,768.5C 23.5,769.5 24,770.5 24.5,771.5C 23.7382,775.111 23.2382,778.778 23,782.5C 22.537,825.027 22.3704,867.36 22.5,909.5C 22.0046,907.518 21.5046,905.518 21,903.5C 20.5,852.501 20.3333,801.501 20.5,750.5C 21.1678,550.264 21.8344,349.931 22.5,149.5C 23.1667,149.5 23.5,149.167 23.5,148.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#23211c\",d:\"M 733.5,378.5 C 733.5,380.833 733.5,383.167 733.5,385.5C 730.369,394.967 724.036,400.967 714.5,403.5C 712.833,403.5 711.167,403.5 709.5,403.5C 709.5,403.167 709.5,402.833 709.5,402.5C 716.387,401.557 722.054,398.557 726.5,393.5C 727.906,393.027 728.573,392.027 728.5,390.5C 728.557,389.391 728.89,388.391 729.5,387.5C 730.674,386.486 731.34,385.153 731.5,383.5C 732.167,381.833 732.833,380.167 733.5,378.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b303e\",d:\"M 612.5,291.5 C 611.29,291.932 610.29,292.599 609.5,293.5C 606.45,295.549 604.117,298.216 602.5,301.5C 601.207,302.842 600.374,304.509 600,306.5C 599.169,351.002 599.335,395.335 600.5,439.5C 600.833,440.833 601.167,442.167 601.5,443.5C 600.604,444.506 599.938,444.506 599.5,443.5C 597.245,396.869 597.079,350.202 599,303.5C 601.763,299.635 604.263,295.635 606.5,291.5C 608.636,290.207 610.636,290.207 612.5,291.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e87c7d\",d:\"M 669.5,393.5 C 673.19,398.542 676.523,403.875 679.5,409.5C 674.707,405.366 671.04,400.366 668.5,394.5C 669.167,394.5 669.5,394.167 669.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f96b61\",d:\"M 685.5,393.5 C 690.808,400.325 697.808,404.325 706.5,405.5C 706.5,409.833 706.5,414.167 706.5,418.5C 705.833,418.833 705.167,419.167 704.5,419.5C 705.19,414.893 705.19,410.226 704.5,405.5C 698.222,405.018 692.389,403.018 687,399.5C 685.743,399.85 685.409,400.517 686,401.5C 694.745,404.475 694.578,406.642 685.5,408C 684.619,408.708 683.953,409.542 683.5,410.5C 682.167,410.167 680.833,409.833 679.5,409.5C 676.523,403.875 673.19,398.542 669.5,393.5C 669.5,390.833 669.5,388.167 669.5,385.5C 669.33,384.178 669.663,383.011 670.5,382C 673.507,381.699 676.507,381.865 679.5,382.5C 679.201,384.604 679.534,386.604 680.5,388.5C 681.961,390.47 683.627,392.137 685.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5f8f9\",d:\"M 111.5,412.5 C 112.391,420.754 110.058,427.921 104.5,434C 101.52,435.634 98.52,437.3 95.5,439C 93.2562,439.906 90.9228,440.406 88.5,440.5C 83.5416,439.181 78.5416,438.181 73.5,437.5C 64.3564,427.472 63.1897,416.472 70,404.5C 82.9791,392.21 95.6458,392.543 108,405.5C 108.959,407.953 110.126,410.286 111.5,412.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#17203a\",d:\"M 173.5,351.5 C 173.5,350.833 173.833,350.5 174.5,350.5C 188.537,359.846 202.537,369.18 216.5,378.5C 216.17,394.009 216.504,409.342 217.5,424.5C 243.663,425.332 269.997,425.832 296.5,426C 283.993,426.169 271.66,426.669 259.5,427.5C 259.5,428.167 259.5,428.833 259.5,429.5C 258.5,429.5 257.5,429.5 256.5,429.5C 243.876,427.519 230.876,426.852 217.5,427.5C 216.883,427.611 216.383,427.944 216,428.5C 215.5,442.496 215.333,456.496 215.5,470.5C 213.809,469.136 212.142,467.803 210.5,466.5C 210.5,466.167 210.5,465.833 210.5,465.5C 211.822,465.33 212.989,465.663 214,466.5C 214.83,436.997 214.664,407.664 213.5,378.5C 200.281,370.937 187.614,362.603 175.5,353.5C 175.167,352.5 174.5,351.833 173.5,351.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39d0fc\",d:\"M 888.5,424.5 C 873.5,424.5 858.5,424.5 843.5,424.5C 844.568,423.566 845.901,423.232 847.5,423.5C 847.5,422.5 847.5,421.5 847.5,420.5C 841.546,421.239 839.546,419.239 841.5,414.5C 842.167,414.5 842.833,414.5 843.5,414.5C 844.688,413.316 845.855,413.316 847,414.5C 847.167,413.833 847.333,413.167 847.5,412.5C 846.293,410.551 844.627,409.051 842.5,408C 843.851,406.383 845.518,405.216 847.5,404.5C 868.823,402.833 890.156,402.5 911.5,403.5C 914.803,404.44 918.136,405.273 921.5,406C 920.833,406.333 920.167,406.667 919.5,407C 920.833,407.333 922.167,407.667 923.5,408C 919.514,408.499 915.514,408.666 911.5,408.5C 911.5,407.5 911.5,406.5 911.5,405.5C 900.791,403.02 890.124,403.353 879.5,406.5C 878.359,407.425 878.359,408.259 879.5,409C 882.557,409.256 885.557,409.756 888.5,410.5C 890.333,409.948 892,409.115 893.5,408C 895.966,408.07 898.3,407.904 900.5,407.5C 901.167,407.833 901.833,408.167 902.5,408.5C 900.474,410.286 898.308,410.619 896,409.5C 894.941,409.63 894.108,410.13 893.5,411C 887.99,411.05 882.657,411.717 877.5,413C 883.859,413.169 890.193,413.669 896.5,414.5C 892.623,415.197 888.79,415.864 885,416.5C 883.318,416.193 881.652,415.86 880,415.5C 869.506,416.433 859.006,417.433 848.5,418.5C 858.727,419.178 868.894,419.844 879,420.5C 879.333,420.167 879.667,419.833 880,419.5C 880.374,420.416 880.874,421.25 881.5,422C 883.5,422.333 885.5,422.667 887.5,423C 888.056,423.383 888.389,423.883 888.5,424.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#252f48\",d:\"M 969.5,423.5 C 968.827,415.721 969.161,407.888 970.5,400C 969.844,394.579 969.511,389.079 969.5,383.5C 970.067,364.835 970.567,346.168 971,327.5C 971.076,323.204 971.909,319.204 973.5,315.5C 974.222,315.082 974.722,314.416 975,313.5C 975.167,314.5 975.333,315.5 975.5,316.5C 973.797,324.061 972.797,331.728 972.5,339.5C 972.746,370.682 973.412,401.848 974.5,433C 973.216,433.684 972.049,433.517 971,432.5C 970.819,429.305 970.319,426.305 969.5,423.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b344c\",d:\"M 42.5,379.5 C 43.209,378.596 44.209,378.263 45.5,378.5C 45.5,425.833 45.5,473.167 45.5,520.5C 45.5,538.167 45.5,555.833 45.5,573.5C 45.1657,508.66 44.1657,443.994 42.5,379.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad4fc\",d:\"M 435.5,383.5 C 437.788,391.583 440.455,399.583 443.5,407.5C 442.769,409.599 442.769,411.599 443.5,413.5C 444.192,412.975 444.692,412.308 445,411.5C 446.891,415.564 449.724,418.897 453.5,421.5C 456.665,424.91 460.332,427.577 464.5,429.5C 464.5,430.167 464.5,430.833 464.5,431.5C 465.207,435.248 466.207,438.914 467.5,442.5C 470.817,441.779 474.151,441.612 477.5,442C 482.907,445.58 488.907,447.58 495.5,448C 505.881,448.539 516.215,448.039 526.5,446.5C 527.496,446.586 528.329,446.252 529,445.5C 537.042,448.346 544.875,447.846 552.5,444C 554.435,442.151 556.269,440.317 558,438.5C 560.188,439.059 560.854,440.393 560,442.5C 558.565,444.211 556.731,445.378 554.5,446C 556.221,446.739 557.887,447.573 559.5,448.5C 548.021,448.876 536.854,448.876 526,448.5C 521.206,449.453 516.373,450.12 511.5,450.5C 511.5,451.5 511.5,452.5 511.5,453.5C 521.886,453.191 532.219,453.524 542.5,454.5C 548.146,453.875 553.813,453.208 559.5,452.5C 560.383,451.452 561.05,450.285 561.5,449C 560.453,447.422 560.453,445.922 561.5,444.5C 562.167,445.5 562.833,446.5 563.5,447.5C 563.833,447 564.167,446.5 564.5,446C 562.591,441.672 561.091,437.172 560,432.5C 559.228,431.151 558.061,430.318 556.5,430C 559.14,428.367 561.807,428.533 564.5,430.5C 569.07,429.052 572.07,426.052 573.5,421.5C 573.173,416.677 573.173,411.844 573.5,407C 570.86,404.382 571.194,402.048 574.5,400C 573.577,397.959 573.244,395.792 573.5,393.5C 573.5,392.833 573.5,392.167 573.5,391.5C 574.768,389.095 575.435,386.428 575.5,383.5C 575.833,383.5 576.167,383.5 576.5,383.5C 576.62,387.042 576.286,390.542 575.5,394C 577.676,398.218 578.843,402.718 579,407.5C 579.667,404.833 580.333,404.833 581,407.5C 581.183,404.635 581.683,401.969 582.5,399.5C 582.667,410.505 582.5,421.505 582,432.5C 580.262,437.414 578.762,442.414 577.5,447.5C 574.722,450.609 571.389,452.942 567.5,454.5C 553.588,456.142 539.588,457.142 525.5,457.5C 496.509,456.716 467.509,456.216 438.5,456C 436.607,453.978 434.273,452.812 431.5,452.5C 429.473,451.139 427.806,449.473 426.5,447.5C 426.5,446.833 426.5,446.167 426.5,445.5C 430.492,443.814 431.659,441.147 430,437.5C 429.831,429.812 429.331,422.145 428.5,414.5C 427.914,414.709 427.414,415.043 427,415.5C 427.277,394.178 427.444,372.845 427.5,351.5C 428.268,352.263 428.768,353.263 429,354.5C 429.333,352.5 429.667,350.5 430,348.5C 430.333,348.833 430.667,349.167 431,349.5C 431.549,345.383 433.216,344.716 436,347.5C 435.381,355.962 434.548,364.462 433.5,373C 433.486,376.76 434.153,380.26 435.5,383.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#291d36\",d:\"M 465.5,393.5 C 467.025,396.563 469.025,399.23 471.5,401.5C 477.089,409.289 484.422,414.622 493.5,417.5C 494.167,418.167 494.833,418.833 495.5,419.5C 489.483,417.991 483.816,415.657 478.5,412.5C 476.54,410.844 474.54,409.177 472.5,407.5C 468.991,403.145 465.991,398.478 463.5,393.5C 463.938,392.494 464.604,392.494 465.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#341f35\",d:\"M 479.5,387.5 C 480.766,388.09 482.099,388.59 483.5,389C 486.124,391.658 488.791,394.325 491.5,397C 495.15,398.502 498.816,398.669 502.5,397.5C 503.59,398.391 503.59,399.391 502.5,400.5C 510.036,401.824 516.869,400.157 523,395.5C 523.383,396.056 523.883,396.389 524.5,396.5C 519.899,400.329 514.566,402.662 508.5,403.5C 506.833,403.5 505.167,403.5 503.5,403.5C 492.569,402.57 484.569,397.236 479.5,387.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ed8c8b\",d:\"M 539.5,388.5 C 541.637,389.787 543.97,390.621 546.5,391C 547.252,391.671 547.586,392.504 547.5,393.5C 546.833,393.833 546.167,394.167 545.5,394.5C 545.5,393.5 545.5,392.5 545.5,391.5C 542.813,391.336 540.146,391.503 537.5,392C 534.15,396.205 530.15,399.371 525.5,401.5C 530.167,397.167 534.833,392.833 539.5,388.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efe4dc\",d:\"M 537.5,386.5 C 538.167,387.167 538.833,387.833 539.5,388.5C 534.833,392.833 530.167,397.167 525.5,401.5C 520.884,403.592 516.217,405.259 511.5,406.5C 509.396,406.799 507.396,406.466 505.5,405.5C 506.602,404.824 507.602,404.158 508.5,403.5C 514.566,402.662 519.899,400.329 524.5,396.5C 529.338,394.329 532.338,390.663 533.5,385.5C 534.959,385.433 536.292,385.766 537.5,386.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f16964\",d:\"M 479.5,387.5 C 484.569,397.236 492.569,402.57 503.5,403.5C 503.5,404.5 503.5,405.5 503.5,406.5C 499.493,405.495 495.493,404.495 491.5,403.5C 489.142,403.753 486.808,404.086 484.5,404.5C 484.5,403.5 484.5,402.5 484.5,401.5C 482.833,401.5 481.167,401.5 479.5,401.5C 479.579,402.93 479.246,404.264 478.5,405.5C 482.56,408.855 486.893,412.022 491.5,415C 496.167,415.667 500.833,415.667 505.5,415C 506.833,414.333 506.833,413.667 505.5,413C 509.897,412.678 514.23,413.178 518.5,414.5C 521.603,414.798 523.27,413.465 523.5,410.5C 527.049,410.561 530.382,409.727 533.5,408C 534.337,406.989 534.67,405.822 534.5,404.5C 537.541,404.594 539.207,403.094 539.5,400C 540.448,399.517 541.448,399.351 542.5,399.5C 541.4,400.605 540.733,401.938 540.5,403.5C 537.167,406.167 533.833,408.833 530.5,411.5C 520.191,416.822 509.191,418.822 497.5,417.5C 496.167,417.5 494.833,417.5 493.5,417.5C 484.422,414.622 477.089,409.289 471.5,401.5C 471.205,399.577 470.372,397.91 469,396.5C 468.333,395.167 468.333,393.833 469,392.5C 472.335,390.415 475.835,388.748 479.5,387.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#632122\",d:\"M 547.5,393.5 C 546.149,397.542 543.815,400.875 540.5,403.5C 540.733,401.938 541.4,400.605 542.5,399.5C 543.89,398.101 544.89,396.434 545.5,394.5C 546.167,394.167 546.833,393.833 547.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8717f\",d:\"M 476.5,386.5 C 477.791,386.263 478.791,386.596 479.5,387.5C 475.835,388.748 472.335,390.415 469,392.5C 468.333,393.833 468.333,395.167 469,396.5C 470.372,397.91 471.205,399.577 471.5,401.5C 469.025,399.23 467.025,396.563 465.5,393.5C 465.511,391.983 466.177,390.816 467.5,390C 470.602,389.056 473.602,387.889 476.5,386.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#522a2c\",d:\"M 537.5,383.5 C 538.167,383.5 538.833,383.5 539.5,383.5C 542.161,386.502 545.495,388.502 549.5,389.5C 549.34,391.153 548.674,392.486 547.5,393.5C 547.586,392.504 547.252,391.671 546.5,391C 543.97,390.621 541.637,389.787 539.5,388.5C 538.833,387.833 538.167,387.167 537.5,386.5C 538.625,385.652 538.625,384.652 537.5,383.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d06c71\",d:\"M 539.5,383.5 C 541.307,384.615 543.307,385.281 545.5,385.5C 547.114,385.197 548.448,384.53 549.5,383.5C 549.5,385.5 549.5,387.5 549.5,389.5C 545.495,388.502 542.161,386.502 539.5,383.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc675f\",d:\"M 545.5,394.5 C 544.89,396.434 543.89,398.101 542.5,399.5C 541.448,399.351 540.448,399.517 539.5,400C 539.207,403.094 537.541,404.594 534.5,404.5C 534.67,405.822 534.337,406.989 533.5,408C 530.382,409.727 527.049,410.561 523.5,410.5C 523.27,413.465 521.603,414.798 518.5,414.5C 514.23,413.178 509.897,412.678 505.5,413C 506.833,413.667 506.833,414.333 505.5,415C 500.833,415.667 496.167,415.667 491.5,415C 486.893,412.022 482.56,408.855 478.5,405.5C 479.246,404.264 479.579,402.93 479.5,401.5C 481.167,401.5 482.833,401.5 484.5,401.5C 484.5,402.5 484.5,403.5 484.5,404.5C 486.808,404.086 489.142,403.753 491.5,403.5C 495.493,404.495 499.493,405.495 503.5,406.5C 506.054,407.388 508.721,407.721 511.5,407.5C 517.567,408.378 522.233,406.378 525.5,401.5C 530.15,399.371 534.15,396.205 537.5,392C 540.146,391.503 542.813,391.336 545.5,391.5C 545.5,392.5 545.5,393.5 545.5,394.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1817a\",d:\"M 525.5,401.5 C 522.233,406.378 517.567,408.378 511.5,407.5C 511.5,407.167 511.5,406.833 511.5,406.5C 516.217,405.259 520.884,403.592 525.5,401.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eeaca4\",d:\"M 503.5,403.5 C 505.167,403.5 506.833,403.5 508.5,403.5C 507.602,404.158 506.602,404.824 505.5,405.5C 507.396,406.466 509.396,406.799 511.5,406.5C 511.5,406.833 511.5,407.167 511.5,407.5C 508.721,407.721 506.054,407.388 503.5,406.5C 503.5,405.5 503.5,404.5 503.5,403.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41bff4\",d:\"M 645.5,360.5 C 643.517,371.396 643.017,382.396 644,393.5C 647.363,401.775 651.197,409.775 655.5,417.5C 654.542,417.047 653.708,416.381 653,415.5C 652,416.833 651,416.833 650,415.5C 649.505,413.527 649.338,411.527 649.5,409.5C 648.178,409.33 647.011,409.663 646,410.5C 645.517,409.552 645.351,408.552 645.5,407.5C 642.989,397.76 641.656,387.76 641.5,377.5C 640.865,371.132 642.198,365.465 645.5,360.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#31ccf5\",d:\"M 731.5,400.5 C 731.648,405.322 730.981,409.988 729.5,414.5C 724.109,418.295 718.109,420.628 711.5,421.5C 710.287,421.253 709.62,420.586 709.5,419.5C 709.5,414.5 709.5,409.5 709.5,404.5C 710.833,404.5 712.167,404.5 713.5,404.5C 712.791,405.404 711.791,405.737 710.5,405.5C 710.334,410.179 710.501,414.845 711,419.5C 711.784,415.95 712.617,412.45 713.5,409C 717.173,407.994 720.507,406.328 723.5,404C 723.167,403.667 722.833,403.333 722.5,403C 723.421,401.244 724.588,401.077 726,402.5C 727.315,399.955 729.148,399.288 731.5,400.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#77f0f7\",d:\"M 779.5,400.5 C 786.883,403.358 787.217,407.025 780.5,411.5C 776.991,408.117 776.658,404.45 779.5,400.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a6f80\",d:\"M 248.5,398.5 C 249.302,399.952 249.802,401.618 250,403.5C 253.333,407.5 256.667,407.5 260,403.5C 260.533,396.713 257.533,394.713 251,397.5C 246.647,394.32 242.147,391.32 237.5,388.5C 237.369,387.624 237.702,386.957 238.5,386.5C 242.85,389.676 247.517,392.343 252.5,394.5C 252.833,393.833 253.167,393.167 253.5,392.5C 262.498,394.876 265.165,400.209 261.5,408.5C 262.95,409.85 263.617,411.516 263.5,413.5C 265.857,413.337 268.19,413.503 270.5,414C 267.776,414.27 265.109,414.77 262.5,415.5C 260.512,414.711 260.179,413.545 261.5,412C 259.231,411.242 257.064,411.409 255,412.5C 254.333,411.833 253.667,411.167 253,410.5C 252.163,412.007 250.996,412.507 249.5,412C 248.54,410.581 247.707,409.081 247,407.5C 246.667,408.167 246.333,408.833 246,409.5C 244.63,406.009 243.13,402.675 241.5,399.5C 239.856,399.286 238.356,399.62 237,400.5C 235.364,398.45 233.198,397.45 230.5,397.5C 230.662,399.527 230.495,401.527 230,403.5C 228.812,402.437 228.312,401.103 228.5,399.5C 227.167,399.5 225.833,399.5 224.5,399.5C 224.245,404.108 224.245,408.608 224.5,413C 223.144,414.567 222.477,416.4 222.5,418.5C 221.178,418.67 220.011,418.337 219,417.5C 218.506,419.134 218.34,420.801 218.5,422.5C 244.468,423.473 270.468,423.806 296.5,423.5C 270.339,424.498 244.005,424.831 217.5,424.5C 217.333,410.163 217.5,395.829 218,381.5C 226.167,387 234.333,392.5 242.5,398C 244.167,398.833 245.833,399.667 247.5,400.5C 248.298,400.043 248.631,399.376 248.5,398.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c8094\",d:\"M 391.5,370.5 C 391.802,373.373 392.469,376.039 393.5,378.5C 394.776,403.776 394.776,429.109 393.5,454.5C 392.5,454.5 391.5,454.5 390.5,454.5C 390.169,426.328 390.502,398.328 391.5,370.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#95cb8b\",d:\"M 631.5,405.5 C 629.572,407.781 628.572,410.447 628.5,413.5C 627.078,413.291 625.745,412.791 624.5,412C 626.677,409.656 629.01,407.489 631.5,405.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb6d53\",d:\"M 704.5,419.5 C 701.245,419.986 698.578,418.986 696.5,416.5C 693.559,415.478 690.559,414.645 687.5,414C 688.624,413.751 689.624,413.251 690.5,412.5C 688.392,411.056 686.059,410.39 683.5,410.5C 683.953,409.542 684.619,408.708 685.5,408C 694.578,406.642 694.745,404.475 686,401.5C 685.409,400.517 685.743,399.85 687,399.5C 692.389,403.018 698.222,405.018 704.5,405.5C 705.19,410.226 705.19,414.893 704.5,419.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e7bb7\",d:\"M 735.5,397.5 C 734.996,404.533 734.163,411.533 733,418.5C 732.34,420.324 731.173,421.657 729.5,422.5C 729.715,420.821 729.048,419.821 727.5,419.5C 728.479,417.855 729.812,416.521 731.5,415.5C 731.043,414.702 730.376,414.369 729.5,414.5C 730.981,409.988 731.648,405.322 731.5,400.5C 731.5,399.833 731.833,399.5 732.5,399.5C 733.778,399.218 734.778,398.551 735.5,397.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d55b5a\",d:\"M 679.5,409.5 C 680.833,409.833 682.167,410.167 683.5,410.5C 686.059,410.39 688.392,411.056 690.5,412.5C 689.624,413.251 688.624,413.751 687.5,414C 690.559,414.645 693.559,415.478 696.5,416.5C 698.578,418.986 701.245,419.986 704.5,419.5C 701.117,420.879 697.784,420.546 694.5,418.5C 692.245,416.62 689.578,415.62 686.5,415.5C 683.547,414.213 681.214,412.213 679.5,409.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#251d30\",d:\"M 709.5,403.5 C 711.167,403.5 712.833,403.5 714.5,403.5C 714.5,404.167 714.167,404.5 713.5,404.5C 712.167,404.5 710.833,404.5 709.5,404.5C 709.5,409.5 709.5,414.5 709.5,419.5C 708.883,419.611 708.383,419.944 708,420.5C 707.722,419.584 707.222,418.918 706.5,418.5C 706.5,414.167 706.5,409.833 706.5,405.5C 706.821,403.952 707.821,403.285 709.5,403.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#738da4\",d:\"M 472.5,407.5 C 474.54,409.177 476.54,410.844 478.5,412.5C 477.662,412.842 477.328,413.508 477.5,414.5C 476.833,414.5 476.5,414.833 476.5,415.5C 475.66,412.639 474.327,409.973 472.5,407.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42b2e1\",d:\"M 443.5,407.5 C 446.409,412.419 449.742,417.085 453.5,421.5C 449.724,418.897 446.891,415.564 445,411.5C 444.692,412.308 444.192,412.975 443.5,413.5C 442.769,411.599 442.769,409.599 443.5,407.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dec122\",d:\"M 631.5,405.5 C 635.066,405.88 637.399,407.88 638.5,411.5C 636.179,417.247 632.845,417.914 628.5,413.5C 628.572,410.447 629.572,407.781 631.5,405.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bffbfe\",d:\"M 843.5,414.5 C 842.833,414.5 842.167,414.5 841.5,414.5C 832.5,414.5 823.5,414.5 814.5,414.5C 814.421,413.07 814.754,411.736 815.5,410.5C 824.482,409.335 833.482,409.168 842.5,410C 843.38,411.356 843.714,412.856 843.5,414.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecfefe\",d:\"M 816.5,410.5 C 824.507,410.334 832.507,410.5 840.5,411C 840.957,411.414 841.291,411.914 841.5,412.5C 833.193,413.498 824.86,413.831 816.5,413.5C 816.5,412.5 816.5,411.5 816.5,410.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c4fcfe\",d:\"M 943.5,409.5 C 944.833,411.167 944.833,412.833 943.5,414.5C 931.5,414.5 919.5,414.5 907.5,414.5C 907.286,412.856 907.62,411.356 908.5,410C 920.162,409.5 931.829,409.333 943.5,409.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1fefe\",d:\"M 911.5,411.5 C 921.855,411.168 932.188,411.501 942.5,412.5C 931.849,413.666 921.182,413.832 910.5,413C 911.056,412.617 911.389,412.117 911.5,411.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9fbfb\",d:\"M 566.5,403.5 C 565.097,408.645 562.43,412.979 558.5,416.5C 557.127,416.343 555.793,416.51 554.5,417C 547.844,423.662 540.177,428.828 531.5,432.5C 526.736,433.408 522.069,434.741 517.5,436.5C 512.559,435.938 507.559,435.938 502.5,436.5C 497.318,436.369 492.318,435.369 487.5,433.5C 489.936,431.447 489.602,429.614 486.5,428C 491.136,428.047 492.469,426.047 490.5,422C 493.324,421.657 495.991,422.157 498.5,423.5C 506.508,421.733 514.508,420.9 522.5,421C 521.833,420.667 521.167,420.333 520.5,420C 523.025,419.576 525.025,418.41 526.5,416.5C 536.168,411.438 544.001,404.438 550,395.5C 555.583,398.042 561.083,400.708 566.5,403.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7ec499\",d:\"M 637.5,407.5 C 639.727,409.874 640.06,412.541 638.5,415.5C 637.711,415.783 637.044,416.283 636.5,417C 632.494,418.421 629.828,417.254 628.5,413.5C 632.845,417.914 636.179,417.247 638.5,411.5C 637.399,407.88 635.066,405.88 631.5,405.5C 631.62,404.414 632.287,403.747 633.5,403.5C 636.189,403.545 637.523,404.879 637.5,407.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#793137\",d:\"M 530.5,411.5 C 526.633,415.082 521.966,417.248 516.5,418C 509.986,418.82 503.653,418.653 497.5,417.5C 509.191,418.822 520.191,416.822 530.5,411.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#222346\",d:\"M 676.5,344.5 C 676.328,345.492 676.662,346.158 677.5,346.5C 672.614,351.603 669.28,357.603 667.5,364.5C 666.076,366.515 665.41,368.848 665.5,371.5C 665.5,371.833 665.5,372.167 665.5,372.5C 664.167,376.167 664.167,379.833 665.5,383.5C 666.614,387.25 667.614,390.917 668.5,394.5C 671.04,400.366 674.707,405.366 679.5,409.5C 681.214,412.213 683.547,414.213 686.5,415.5C 688.617,417.655 691.284,418.655 694.5,418.5C 697.784,420.546 701.117,420.879 704.5,419.5C 705.167,419.167 705.833,418.833 706.5,418.5C 706.586,419.496 706.252,420.329 705.5,421C 703.292,421.191 701.292,421.691 699.5,422.5C 695.333,421.754 691.333,420.421 687.5,418.5C 682.851,423.154 678.518,428.154 674.5,433.5C 673.5,434.833 672.5,434.833 671.5,433.5C 675.885,428.45 679.885,423.116 683.5,417.5C 675.975,411.978 670.308,404.978 666.5,396.5C 664.307,392.105 663.307,387.438 663.5,382.5C 663.5,379.167 663.5,375.833 663.5,372.5C 663.993,370.194 664.326,367.861 664.5,365.5C 666.188,357.118 670.188,350.118 676.5,344.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f1a21\",d:\"M 549.5,389.5 C 550.167,389.833 550.833,390.167 551.5,390.5C 555.777,396.075 561.444,399.741 568.5,401.5C 567.833,402.167 567.167,402.833 566.5,403.5C 561.083,400.708 555.583,398.042 550,395.5C 544.001,404.438 536.168,411.438 526.5,416.5C 516.468,420.424 506.135,421.424 495.5,419.5C 494.833,418.833 494.167,418.167 493.5,417.5C 494.833,417.5 496.167,417.5 497.5,417.5C 503.653,418.653 509.986,418.82 516.5,418C 521.966,417.248 526.633,415.082 530.5,411.5C 533.833,408.833 537.167,406.167 540.5,403.5C 543.815,400.875 546.149,397.542 547.5,393.5C 548.674,392.486 549.34,391.153 549.5,389.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0f2248\",d:\"M 572.5,393.5 C 570.413,404.006 565.913,413.339 559,421.5C 557.296,423.373 555.463,425.04 553.5,426.5C 553.158,425.662 552.492,425.328 551.5,425.5C 554.215,422.786 556.549,419.786 558.5,416.5C 562.43,412.979 565.097,408.645 566.5,403.5C 567.167,402.833 567.833,402.167 568.5,401.5C 568.875,399.302 569.542,397.302 570.5,395.5C 571.167,394.833 571.833,394.167 572.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b8fdfe\",d:\"M 423.5,396.5 C 424.268,397.263 424.768,398.263 425,399.5C 425.167,406.167 425.333,412.833 425.5,419.5C 425.497,426.535 424.83,433.202 423.5,439.5C 423.5,438.5 423.5,437.5 423.5,436.5C 423.5,423.167 423.5,409.833 423.5,396.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#13265d\",d:\"M 729.5,414.5 C 730.376,414.369 731.043,414.702 731.5,415.5C 729.812,416.521 728.479,417.855 727.5,419.5C 722.785,421.077 718.118,422.41 713.5,423.5C 712.167,423.5 710.833,423.5 709.5,423.5C 708.833,438.167 708.167,438.167 707.5,423.5C 706.167,423.5 704.833,423.5 703.5,423.5C 701.901,423.768 700.568,423.434 699.5,422.5C 701.292,421.691 703.292,421.191 705.5,421C 706.252,420.329 706.586,419.496 706.5,418.5C 707.222,418.918 707.722,419.584 708,420.5C 708.383,419.944 708.883,419.611 709.5,419.5C 709.62,420.586 710.287,421.253 711.5,421.5C 718.109,420.628 724.109,418.295 729.5,414.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e2136\",d:\"M 477.5,414.5 C 479.649,419.465 482.316,424.132 485.5,428.5C 485.376,429.107 485.043,429.44 484.5,429.5C 483.167,428.833 481.833,428.167 480.5,427.5C 480.167,427.5 479.833,427.5 479.5,427.5C 479.167,426.833 478.833,426.167 478.5,425.5C 477.833,422.167 477.167,418.833 476.5,415.5C 476.5,414.833 476.833,414.5 477.5,414.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#112e54\",d:\"M 741.5,394.5 C 742.757,397.427 744.757,399.761 747.5,401.5C 750.619,405.957 754.619,409.291 759.5,411.5C 759.586,412.496 759.252,413.329 758.5,414C 759.094,414.464 759.761,414.631 760.5,414.5C 769.488,421.655 777.655,429.655 785,438.5C 785.333,442.833 785.667,447.167 786,451.5C 787.412,453.686 789.245,455.352 791.5,456.5C 791.5,457.167 791.5,457.833 791.5,458.5C 791.5,458.833 791.5,459.167 791.5,459.5C 791.5,460.167 791.5,460.833 791.5,461.5C 789.956,461.297 788.622,460.63 787.5,459.5C 786.912,457.089 785.745,455.089 784,453.5C 783.555,450.322 783.722,447.155 784.5,444C 783.686,440.845 782.353,438.678 780.5,437.5C 767.648,425.148 754.981,412.648 742.5,400C 741.1,398.562 739.433,397.729 737.5,397.5C 736.883,406.228 735.716,414.894 734,423.5C 731.942,424.229 730.109,425.229 728.5,426.5C 726.61,426.297 725.11,426.963 724,428.5C 723.814,431.036 723.314,433.369 722.5,435.5C 723.036,432.302 722.369,429.635 720.5,427.5C 720.5,427.167 720.5,426.833 720.5,426.5C 721.605,425.4 722.938,424.733 724.5,424.5C 726.514,424.608 728.18,423.942 729.5,422.5C 731.173,421.657 732.34,420.324 733,418.5C 734.163,411.533 734.996,404.533 735.5,397.5C 736.751,394.511 738.751,393.511 741.5,394.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41b9f0\",d:\"M 582.5,304.5 C 583.167,304.5 583.5,304.833 583.5,305.5C 583.5,350.167 583.5,394.833 583.5,439.5C 581.913,442.428 579.913,445.094 577.5,447.5C 578.762,442.414 580.262,437.414 582,432.5C 582.5,421.505 582.667,410.505 582.5,399.5C 582.5,386.833 582.5,374.167 582.5,361.5C 582.5,342.5 582.5,323.5 582.5,304.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#333f58\",d:\"M 295.5,361.5 C 296.167,361.5 296.833,361.5 297.5,361.5C 295.519,363.303 293.352,364.97 291,366.5C 290.517,367.448 290.351,368.448 290.5,369.5C 293.385,368.618 296.052,367.284 298.5,365.5C 298.472,386.625 298.472,407.958 298.5,429.5C 298.167,429.5 297.833,429.5 297.5,429.5C 285.211,427.52 272.544,426.853 259.5,427.5C 271.66,426.669 283.993,426.169 296.5,426C 269.997,425.832 243.663,425.332 217.5,424.5C 244.005,424.831 270.339,424.498 296.5,423.5C 297.497,405.674 297.83,387.674 297.5,369.5C 295.178,371.412 292.512,372.745 289.5,373.5C 287.745,367.677 289.745,363.677 295.5,361.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#28251f\",d:\"M 464.5,423.5 C 466.167,423.5 467.833,423.5 469.5,423.5C 470.5,424.167 471.5,424.833 472.5,425.5C 470.167,425.5 467.833,425.5 465.5,425.5C 465.232,427.099 465.566,428.432 466.5,429.5C 468.072,432.215 469.072,435.215 469.5,438.5C 470.552,438.649 471.552,438.483 472.5,438C 474.037,436.293 475.704,434.793 477.5,433.5C 478.167,433.5 478.5,433.833 478.5,434.5C 478.5,434.833 478.5,435.167 478.5,435.5C 476.973,435.427 475.973,436.094 475.5,437.5C 473.858,439.081 471.858,439.747 469.5,439.5C 467.837,436.871 466.171,434.204 464.5,431.5C 464.5,430.833 464.5,430.167 464.5,429.5C 464.5,427.5 464.5,425.5 464.5,423.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#777e7b\",d:\"M 469.5,423.5 C 472.228,423.171 474.562,423.837 476.5,425.5C 475.167,425.5 473.833,425.5 472.5,425.5C 471.5,424.833 470.5,424.167 469.5,423.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f96f62\",d:\"M 87.5,409.5 C 89.5716,412.411 92.2383,413.078 95.5,411.5C 96.8221,411.33 97.9887,411.663 99,412.5C 99.499,416.821 99.6657,421.154 99.5,425.5C 97.8621,426.159 96.1955,426.826 94.5,427.5C 93.8313,425.369 93.1646,423.369 92.5,421.5C 90.5,421.5 88.5,421.5 86.5,421.5C 85.1667,421.5 83.8333,421.5 82.5,421.5C 83.0138,423.512 83.1805,425.512 83,427.5C 81.9887,428.337 80.8221,428.67 79.5,428.5C 79.334,423.156 79.5006,417.823 80,412.5C 81.8484,409.959 84.3484,408.959 87.5,409.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c15960\",d:\"M 357.5,431.5 C 353.102,428.451 348.435,425.784 343.5,423.5C 340.594,424.418 337.928,425.751 335.5,427.5C 335.414,426.504 335.748,425.671 336.5,425C 345.535,420.623 352.535,422.79 357.5,431.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#421f27\",d:\"M 357.5,431.5 C 365.355,437.013 373.355,442.346 381.5,447.5C 383.349,448.593 385.016,449.926 386.5,451.5C 386.167,452.167 385.833,452.833 385.5,453.5C 373.339,444.919 361.006,436.586 348.5,428.5C 346.811,426 344.478,425.167 341.5,426C 327.804,435.51 314.138,445.01 300.5,454.5C 300.44,453.957 300.107,453.624 299.5,453.5C 298.502,462.141 298.169,470.808 298.5,479.5C 298.167,479.5 297.833,479.5 297.5,479.5C 297.5,472.833 297.5,466.167 297.5,459.5C 297.5,449.5 297.5,439.5 297.5,429.5C 297.833,429.5 298.167,429.5 298.5,429.5C 298.334,436.841 298.5,444.174 299,451.5C 299.717,450.956 300.217,450.289 300.5,449.5C 301.423,450.303 302.423,450.47 303.5,450C 314.346,442.637 325.013,435.137 335.5,427.5C 337.928,425.751 340.594,424.418 343.5,423.5C 348.435,425.784 353.102,428.451 357.5,431.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3deeb\",d:\"M 780.5,437.5 C 780.489,439.686 779.489,440.519 777.5,440C 765.082,428.585 752.916,416.751 741,404.5C 739.256,414.113 737.756,423.78 736.5,433.5C 735.313,431.928 734.313,430.261 733.5,428.5C 733.918,427.778 734.584,427.278 735.5,427C 733.19,426.503 730.857,426.337 728.5,426.5C 730.109,425.229 731.942,424.229 734,423.5C 735.716,414.894 736.883,406.228 737.5,397.5C 739.433,397.729 741.1,398.562 742.5,400C 754.981,412.648 767.648,425.148 780.5,437.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebad2c\",d:\"M 479.5,427.5 C 479.833,427.5 480.167,427.5 480.5,427.5C 480.025,429.784 479.025,431.784 477.5,433.5C 475.704,434.793 474.037,436.293 472.5,438C 471.552,438.483 470.552,438.649 469.5,438.5C 469.072,435.215 468.072,432.215 466.5,429.5C 466.5,428.5 466.5,427.5 466.5,426.5C 470.881,426.372 475.215,426.705 479.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea7b7e\",d:\"M 87.5,409.5 C 84.3484,408.959 81.8484,409.959 80,412.5C 79.5006,417.823 79.334,423.156 79.5,428.5C 80.8221,428.67 81.9887,428.337 83,427.5C 83.1805,425.512 83.0138,423.512 82.5,421.5C 83.8333,421.5 85.1667,421.5 86.5,421.5C 85.6586,423.379 85.3253,425.379 85.5,427.5C 90.186,428.016 92.5193,426.016 92.5,421.5C 93.1646,423.369 93.8313,425.369 94.5,427.5C 96.1955,426.826 97.8621,426.159 99.5,425.5C 99.5,426.833 99.5,428.167 99.5,429.5C 92.5,429.5 85.5,429.5 78.5,429.5C 78.5,424.167 78.5,418.833 78.5,413.5C 80.0673,408.751 83.0673,407.417 87.5,409.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8f0f1\",d:\"M 217.5,427.5 C 230.876,426.852 243.876,427.519 256.5,429.5C 243.5,429.5 230.5,429.5 217.5,429.5C 217.5,428.833 217.5,428.167 217.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8ebe2\",d:\"M 259.5,427.5 C 272.544,426.853 285.211,427.52 297.5,429.5C 296.167,429.5 294.833,429.5 293.5,429.5C 282.167,429.5 270.833,429.5 259.5,429.5C 259.5,428.833 259.5,428.167 259.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5c4117\",d:\"M 472.5,425.5 C 473.833,425.5 475.167,425.5 476.5,425.5C 477.167,425.5 477.833,425.5 478.5,425.5C 478.833,426.167 479.167,426.833 479.5,427.5C 475.215,426.705 470.881,426.372 466.5,426.5C 466.5,427.5 466.5,428.5 466.5,429.5C 465.566,428.432 465.232,427.099 465.5,425.5C 467.833,425.5 470.167,425.5 472.5,425.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5b4b2\",d:\"M 95.5,411.5 C 96.9187,410.549 98.5853,410.216 100.5,410.5C 100.5,417.167 100.5,423.833 100.5,430.5C 92.8333,430.5 85.1667,430.5 77.5,430.5C 77.1778,424.642 77.5111,418.975 78.5,413.5C 78.5,418.833 78.5,424.167 78.5,429.5C 85.5,429.5 92.5,429.5 99.5,429.5C 99.5,428.167 99.5,426.833 99.5,425.5C 99.6657,421.154 99.499,416.821 99,412.5C 97.9887,411.663 96.8221,411.33 95.5,411.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cee0ef\",d:\"M 558.5,416.5 C 556.549,419.786 554.215,422.786 551.5,425.5C 541.868,432.649 531.201,437.649 519.5,440.5C 507.815,440.635 496.148,440.302 484.5,439.5C 481.785,437.877 478.785,437.21 475.5,437.5C 475.973,436.094 476.973,435.427 478.5,435.5C 490.567,438.089 502.9,438.923 515.5,438C 521.277,437.117 526.611,435.283 531.5,432.5C 540.177,428.828 547.844,423.662 554.5,417C 555.793,416.51 557.127,416.343 558.5,416.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f95d1\",d:\"M 114.5,413.5 C 116.394,422.008 115.56,430.341 112,438.5C 108.109,444.331 102.609,446.665 95.5,445.5C 99.1417,443.776 102.808,441.942 106.5,440C 112.887,432.337 115.553,423.503 114.5,413.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e97c71\",d:\"M 256.5,429.5 C 257.5,429.5 258.5,429.5 259.5,429.5C 270.833,429.5 282.167,429.5 293.5,429.5C 291.708,430.309 289.708,430.809 287.5,431C 264.502,431.5 241.502,431.667 218.5,431.5C 231.167,430.833 243.833,430.167 256.5,429.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5b5434\",d:\"M 480.5,427.5 C 481.833,428.167 483.167,428.833 484.5,429.5C 482.525,431.137 480.525,432.804 478.5,434.5C 478.5,433.833 478.167,433.5 477.5,433.5C 479.025,431.784 480.025,429.784 480.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d46565\",d:\"M 385.5,365.5 C 386.498,392.662 386.831,419.995 386.5,447.5C 384.833,447.5 383.167,447.5 381.5,447.5C 373.355,442.346 365.355,437.013 357.5,431.5C 359.604,431.201 361.604,431.534 363.5,432.5C 365.538,433.754 367.204,435.421 368.5,437.5C 370.078,438.298 371.744,438.798 373.5,439C 375.913,441.333 378.246,443.667 380.5,446C 382.134,446.494 383.801,446.66 385.5,446.5C 385.5,419.5 385.5,392.5 385.5,365.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3ebcb\",d:\"M 348.5,428.5 C 361.006,436.586 373.339,444.919 385.5,453.5C 386.167,454.167 386.833,454.833 387.5,455.5C 387.5,455.833 387.5,456.167 387.5,456.5C 383.396,456.116 379.729,454.616 376.5,452C 366.372,444.177 356.038,436.844 345.5,430C 344.167,429.333 342.833,429.333 341.5,430C 340.627,431.045 339.627,431.878 338.5,432.5C 338.624,430.418 339.624,428.918 341.5,428C 343.847,427.666 346.181,427.833 348.5,428.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#974b50\",d:\"M 385.5,363.5 C 386.5,363.833 387.167,364.5 387.5,365.5C 387.831,394.338 387.498,423.005 386.5,451.5C 385.016,449.926 383.349,448.593 381.5,447.5C 383.167,447.5 384.833,447.5 386.5,447.5C 386.831,419.995 386.498,392.662 385.5,365.5C 385.5,364.833 385.5,364.167 385.5,363.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf3a4\",d:\"M 336.5,433.5 C 333.725,436.605 330.392,438.938 326.5,440.5C 328.76,438.35 331.093,436.183 333.5,434C 334.448,433.517 335.448,433.351 336.5,433.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8c20a\",d:\"M 387.5,456.5 C 388.161,496.514 387.494,536.181 385.5,575.5C 382.629,577.536 379.629,579.37 376.5,581C 351.663,581.83 326.997,581.663 302.5,580.5C 302.5,579.5 302.5,578.5 302.5,577.5C 320.2,577.261 337.867,577.094 355.5,577C 353.152,576.654 351.319,575.487 350,573.5C 345.667,573.833 341.333,574.167 337,574.5C 335.648,572.406 335.148,570.073 335.5,567.5C 331.676,569.181 327.676,569.681 323.5,569C 323.167,568 322.833,567 322.5,566C 321.552,565.517 320.552,565.351 319.5,565.5C 319.025,562.918 319.692,560.918 321.5,559.5C 321.5,560.833 321.5,562.167 321.5,563.5C 336.167,563.5 350.833,563.5 365.5,563.5C 365.768,561.901 365.434,560.568 364.5,559.5C 360.991,558.868 357.658,557.535 354.5,555.5C 352.405,556.229 350.572,555.563 349,553.5C 346.195,552.877 343.529,553.544 341,555.5C 338.298,553.7 335.465,553.034 332.5,553.5C 333.729,552.719 335.062,552.219 336.5,552C 336.043,551.586 335.709,551.086 335.5,550.5C 342.678,549.783 349.845,549.117 357,548.5C 362.771,549.595 362.605,550.761 356.5,552C 359.453,552.892 362.119,552.392 364.5,550.5C 365.086,550.709 365.586,551.043 366,551.5C 366.5,550 367,548.5 367.5,547C 367.269,540.504 367.269,533.837 367.5,527C 365.108,524.727 365.108,522.56 367.5,520.5C 367.167,520.167 366.833,519.833 366.5,519.5C 365.335,520.491 364.168,521.491 363,522.5C 361.862,522.011 360.695,521.678 359.5,521.5C 359.5,521.167 359.5,520.833 359.5,520.5C 360.048,518.468 361.381,517.468 363.5,517.5C 363.5,516.167 363.5,514.833 363.5,513.5C 361.325,513.682 359.325,514.349 357.5,515.5C 356.833,515.167 356.167,514.833 355.5,514.5C 358.395,512.593 359.728,509.926 359.5,506.5C 362.554,507.321 365.554,507.321 368.5,506.5C 366.286,504.904 365.286,502.738 365.5,500C 367.49,494.748 368.157,489.414 367.5,484C 367.333,482.833 367.167,481.667 367,480.5C 366.306,479.182 365.473,478.349 364.5,478C 365.459,475.88 365.626,473.713 365,471.5C 363,470.167 361.333,468.5 360,466.5C 358.744,465.97 357.244,465.97 355.5,466.5C 354.803,464.615 353.803,464.282 352.5,465.5C 349.481,461.647 345.981,458.313 342,455.5C 338.697,457.397 338.864,459.064 342.5,460.5C 343.246,461.736 343.579,463.07 343.5,464.5C 339.759,465.401 337.759,464.068 337.5,460.5C 334.795,460.38 334.128,461.38 335.5,463.5C 332.899,466.001 330.399,466.001 328,463.5C 326.491,465.919 324.325,466.919 321.5,466.5C 321.5,467.833 321.5,469.167 321.5,470.5C 320.5,470.5 319.5,470.5 318.5,470.5C 318.5,468.833 318.5,467.167 318.5,465.5C 319.675,465.719 320.675,465.386 321.5,464.5C 320.289,463.28 320.289,462.113 321.5,461C 319.887,458.579 318.553,456.079 317.5,453.5C 315.5,453.5 313.5,453.5 311.5,453.5C 311.384,456.91 313.05,458.244 316.5,457.5C 316.083,460.079 316.75,462.246 318.5,464C 316.167,464.667 313.833,464.667 311.5,464C 312.276,461.687 311.443,459.854 309,458.5C 306.638,459.363 305.138,461.03 304.5,463.5C 303.571,462.311 303.238,460.978 303.5,459.5C 303.5,458.833 303.5,458.167 303.5,457.5C 304.911,455.086 306.911,453.419 309.5,452.5C 313.221,450.646 316.554,448.313 319.5,445.5C 321.228,443.123 323.561,441.456 326.5,440.5C 330.392,438.938 333.725,436.605 336.5,433.5C 337.167,433.167 337.833,432.833 338.5,432.5C 339.627,431.878 340.627,431.045 341.5,430C 342.833,429.333 344.167,429.333 345.5,430C 356.038,436.844 366.372,444.177 376.5,452C 379.729,454.616 383.396,456.116 387.5,456.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5f2f4\",d:\"M 478.5,412.5 C 483.816,415.657 489.483,417.991 495.5,419.5C 506.135,421.424 516.468,420.424 526.5,416.5C 525.025,418.41 523.025,419.576 520.5,420C 521.167,420.333 521.833,420.667 522.5,421C 514.508,420.9 506.508,421.733 498.5,423.5C 495.991,422.157 493.324,421.657 490.5,422C 492.469,426.047 491.136,428.047 486.5,428C 489.602,429.614 489.936,431.447 487.5,433.5C 492.318,435.369 497.318,436.369 502.5,436.5C 507.559,435.938 512.559,435.938 517.5,436.5C 522.069,434.741 526.736,433.408 531.5,432.5C 526.611,435.283 521.277,437.117 515.5,438C 502.9,438.923 490.567,438.089 478.5,435.5C 478.5,435.167 478.5,434.833 478.5,434.5C 480.525,432.804 482.525,431.137 484.5,429.5C 485.043,429.44 485.376,429.107 485.5,428.5C 482.316,424.132 479.649,419.465 477.5,414.5C 477.328,413.508 477.662,412.842 478.5,412.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3d5a75\",d:\"M 213.5,378.5 C 214.664,407.664 214.83,436.997 214,466.5C 212.989,465.663 211.822,465.33 210.5,465.5C 210.167,464.833 209.833,464.167 209.5,463.5C 210.833,463.5 212.167,463.5 213.5,463.5C 213.5,435.167 213.5,406.833 213.5,378.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cb696c\",d:\"M 303.5,362.5 C 303.217,363.289 302.717,363.956 302,364.5C 301.167,392.506 301.333,420.506 302.5,448.5C 312.228,441.519 321.895,434.686 331.5,428C 332.793,427.51 334.127,427.343 335.5,427.5C 325.013,435.137 314.346,442.637 303.5,450C 302.423,450.47 301.423,450.303 300.5,449.5C 300.5,421.167 300.5,392.833 300.5,364.5C 300.973,363.094 301.973,362.427 303.5,362.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3395db\",d:\"M 549.5,430.5 C 549.279,431.735 548.612,432.735 547.5,433.5C 547.709,434.086 548.043,434.586 548.5,435C 541.273,439.113 533.94,442.946 526.5,446.5C 516.215,448.039 505.881,448.539 495.5,448C 488.907,447.58 482.907,445.58 477.5,442C 474.151,441.612 470.817,441.779 467.5,442.5C 466.207,438.914 465.207,435.248 464.5,431.5C 466.171,434.204 467.837,436.871 469.5,439.5C 477.557,439.917 485.557,441.417 493.5,444C 513.98,446.713 532.647,442.213 549.5,430.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a7c6e2\",d:\"M 111.5,412.5 C 115.013,431.001 107.346,441.334 88.5,443.5C 84.7007,443.268 81.034,442.435 77.5,441C 75.9069,440.051 74.5736,438.885 73.5,437.5C 78.5416,438.181 83.5416,439.181 88.5,440.5C 90.9228,440.406 93.2562,439.906 95.5,439C 98.52,437.3 101.52,435.634 104.5,434C 110.058,427.921 112.391,420.754 111.5,412.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc675d\",d:\"M 293.5,429.5 C 294.833,429.5 296.167,429.5 297.5,429.5C 297.5,439.5 297.5,449.5 297.5,459.5C 296.51,465.645 296.177,471.978 296.5,478.5C 270.833,478.5 245.167,478.5 219.5,478.5C 218.637,462.851 218.304,447.184 218.5,431.5C 241.502,431.667 264.502,431.5 287.5,431C 289.708,430.809 291.708,430.309 293.5,429.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea7971\",d:\"M 265.5,444.5 C 264.077,442.455 262.077,441.455 259.5,441.5C 259.5,443.833 259.5,446.167 259.5,448.5C 261.948,448.085 263.281,449.085 263.5,451.5C 261.306,454.554 259.639,457.888 258.5,461.5C 259.325,462.386 260.325,462.719 261.5,462.5C 261.5,462.833 261.5,463.167 261.5,463.5C 257.988,464.055 254.988,463.388 252.5,461.5C 253.708,462.234 255.041,462.567 256.5,462.5C 255.243,457.944 253.576,453.611 251.5,449.5C 252.833,449.5 254.167,449.5 255.5,449.5C 257.541,439.35 255.041,438.017 248,445.5C 246.798,447.677 246.298,450.011 246.5,452.5C 243.984,447.909 244.984,443.742 249.5,440C 254.161,439.166 258.828,438.832 263.5,439C 264.464,440.725 265.131,442.559 265.5,444.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1e4d7\",d:\"M 348.5,428.5 C 346.181,427.833 343.847,427.666 341.5,428C 339.624,428.918 338.624,430.418 338.5,432.5C 337.833,432.833 337.167,433.167 336.5,433.5C 335.448,433.351 334.448,433.517 333.5,434C 331.093,436.183 328.76,438.35 326.5,440.5C 323.561,441.456 321.228,443.123 319.5,445.5C 318.448,445.351 317.448,445.517 316.5,446C 313.638,447.735 311.304,449.902 309.5,452.5C 306.911,453.419 304.911,455.086 303.5,457.5C 302.609,458.11 301.609,458.443 300.5,458.5C 300.5,457.5 300.5,456.5 300.5,455.5C 300.5,455.167 300.5,454.833 300.5,454.5C 314.138,445.01 327.804,435.51 341.5,426C 344.478,425.167 346.811,426 348.5,428.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0c255f\",d:\"M 551.5,425.5 C 552.492,425.328 553.158,425.662 553.5,426.5C 552.473,428.194 551.139,429.527 549.5,430.5C 532.647,442.213 513.98,446.713 493.5,444C 485.557,441.417 477.557,439.917 469.5,439.5C 471.858,439.747 473.858,439.081 475.5,437.5C 478.785,437.21 481.785,437.877 484.5,439.5C 491.027,441.647 497.861,442.647 505,442.5C 510.09,442.656 514.923,441.99 519.5,440.5C 531.201,437.649 541.868,432.649 551.5,425.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9bb5dc\",d:\"M 484.5,439.5 C 496.148,440.302 507.815,440.635 519.5,440.5C 514.923,441.99 510.09,442.656 505,442.5C 497.861,442.647 491.027,441.647 484.5,439.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e2a33\",d:\"M 209.5,463.5 C 209.833,464.167 210.167,464.833 210.5,465.5C 210.5,465.833 210.5,466.167 210.5,466.5C 198.055,459.106 185.721,451.439 173.5,443.5C 159.33,451.751 145.663,460.751 132.5,470.5C 132.5,462.833 132.5,455.167 132.5,447.5C 132.833,447.5 133.167,447.5 133.5,447.5C 133.17,453.868 133.504,460.202 134.5,466.5C 144.833,459.333 155.167,452.167 165.5,445C 168.433,443.946 171.266,442.78 174,441.5C 186.083,448.457 197.917,455.79 209.5,463.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#262d46\",d:\"M 783.5,475.5 C 777.007,477.996 773.007,482.662 771.5,489.5C 770.566,490.568 770.232,491.901 770.5,493.5C 770.333,534.835 770.5,576.168 771,617.5C 772.396,620.064 773.563,622.731 774.5,625.5C 773.833,625.5 773.167,625.5 772.5,625.5C 770.489,623.333 769.322,620.666 769,617.5C 768.667,579.167 768.333,540.833 768,502.5C 767.667,500.167 767.333,497.833 767,495.5C 765.905,499.385 764.739,503.218 763.5,507C 763.504,531.208 763.504,555.375 763.5,579.5C 763.709,580.994 764.376,582.161 765.5,583C 763.862,585.133 763.029,587.633 763,590.5C 762.333,589.167 761.667,589.167 761,590.5C 759.24,587.845 759.74,586.512 762.5,586.5C 759.409,584.892 758.743,582.559 760.5,579.5C 759.888,572.615 759.221,565.781 758.5,559C 759.624,558.161 760.291,556.994 760.5,555.5C 758.151,546.568 757.984,537.568 760,528.5C 760.667,527.167 761.333,527.167 762,528.5C 763.356,520.424 762.356,512.757 759,505.5C 758.444,507.595 757.944,507.762 757.5,506C 758.846,502.491 759.179,498.991 758.5,495.5C 757.833,495.167 757.167,494.833 756.5,494.5C 755.516,497.428 755.183,500.428 755.5,503.5C 755.667,596.834 755.5,690.167 755,783.5C 754.833,687.332 754.333,591.332 753.5,495.5C 753.829,492.772 753.163,490.438 751.5,488.5C 747.744,480.452 741.411,476.118 732.5,475.5C 736.474,472.163 740.641,472.163 745,475.5C 745.308,474.692 745.808,474.025 746.5,473.5C 747.711,474.274 747.711,475.107 746.5,476C 748.209,477.916 749.543,480.082 750.5,482.5C 752.433,480.428 752.433,478.095 750.5,475.5C 751.348,473.591 751.682,471.591 751.5,469.5C 747.247,470.014 743.413,469.014 740,466.5C 735.467,469.74 734.634,469.074 737.5,464.5C 736.017,461.589 736.35,458.922 738.5,456.5C 737.675,455.614 736.675,455.281 735.5,455.5C 735.657,454.127 735.49,452.793 735,451.5C 734.333,452.833 733.667,452.833 733,451.5C 732.517,450.552 732.351,449.552 732.5,448.5C 734.911,448.863 736.411,447.863 737,445.5C 738.754,447.25 740.921,447.917 743.5,447.5C 743.5,448.5 743.5,449.5 743.5,450.5C 744.833,450.5 746.167,450.5 747.5,450.5C 747.5,452.167 747.5,453.833 747.5,455.5C 746.167,455.5 744.833,455.5 743.5,455.5C 743.762,456.978 743.429,458.311 742.5,459.5C 741.167,460.167 740.167,461.167 739.5,462.5C 743.37,462.751 747.37,462.751 751.5,462.5C 751.5,460.833 751.5,459.167 751.5,457.5C 756.833,457.5 762.167,457.5 767.5,457.5C 767.5,460.167 767.5,462.833 767.5,465.5C 771.559,463.661 775.559,462.494 779.5,462C 778.251,459.79 778.418,457.624 780,455.5C 780.667,456.833 781.333,456.833 782,455.5C 781.528,460.001 782.861,464.001 786,467.5C 787,466.833 788,466.167 789,465.5C 791.667,465.5 794.333,465.5 797,465.5C 800.648,467.074 803.981,467.407 807,466.5C 807.483,467.448 807.649,468.448 807.5,469.5C 799.692,471.157 791.692,471.824 783.5,471.5C 783.074,473.139 783.074,474.472 783.5,475.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#feede3\",d:\"M 265.5,444.5 C 266.072,445.973 266.905,447.307 268,448.5C 268.667,450.167 268.667,451.833 268,453.5C 265.615,456.379 263.448,459.379 261.5,462.5C 260.325,462.719 259.325,462.386 258.5,461.5C 259.639,457.888 261.306,454.554 263.5,451.5C 263.281,449.085 261.948,448.085 259.5,448.5C 259.5,446.167 259.5,443.833 259.5,441.5C 262.077,441.455 264.077,442.455 265.5,444.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ed0fc\",d:\"M 572.5,393.5 C 572.833,393.5 573.167,393.5 573.5,393.5C 573.244,395.792 573.577,397.959 574.5,400C 571.194,402.048 570.86,404.382 573.5,407C 573.173,411.844 573.173,416.677 573.5,421.5C 572.07,426.052 569.07,429.052 564.5,430.5C 561.807,428.533 559.14,428.367 556.5,430C 558.061,430.318 559.228,431.151 560,432.5C 561.091,437.172 562.591,441.672 564.5,446C 564.167,446.5 563.833,447 563.5,447.5C 562.833,446.5 562.167,445.5 561.5,444.5C 560.453,445.922 560.453,447.422 561.5,449C 561.05,450.285 560.383,451.452 559.5,452.5C 553.813,453.208 548.146,453.875 542.5,454.5C 532.219,453.524 521.886,453.191 511.5,453.5C 511.5,452.5 511.5,451.5 511.5,450.5C 516.373,450.12 521.206,449.453 526,448.5C 536.854,448.876 548.021,448.876 559.5,448.5C 557.887,447.573 556.221,446.739 554.5,446C 556.731,445.378 558.565,444.211 560,442.5C 560.854,440.393 560.188,439.059 558,438.5C 556.269,440.317 554.435,442.151 552.5,444C 544.875,447.846 537.042,448.346 529,445.5C 528.329,446.252 527.496,446.586 526.5,446.5C 533.94,442.946 541.273,439.113 548.5,435C 548.043,434.586 547.709,434.086 547.5,433.5C 548.612,432.735 549.279,431.735 549.5,430.5C 551.139,429.527 552.473,428.194 553.5,426.5C 555.463,425.04 557.296,423.373 559,421.5C 565.913,413.339 570.413,404.006 572.5,393.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0b325c\",d:\"M 843.5,424.5 C 858.5,424.5 873.5,424.5 888.5,424.5C 890.595,425.412 892.595,426.579 894.5,428C 895.823,428.816 896.489,429.983 896.5,431.5C 898.765,438.204 897.098,443.704 891.5,448C 873.503,448.5 855.503,448.667 837.5,448.5C 828.26,440.824 828.26,432.991 837.5,425C 839.473,424.505 841.473,424.338 843.5,424.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4b788d\",d:\"M 837.5,427.5 C 854.837,427.333 872.17,427.5 889.5,428C 894.732,430.633 896.565,434.799 895,440.5C 894.215,442.286 893.049,443.786 891.5,445C 873.167,445.667 854.833,445.667 836.5,445C 832.247,438.872 832.58,433.038 837.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a5069\",d:\"M 856.5,431.5 C 861.066,432.184 865.733,432.351 870.5,432C 872.278,434.135 872.945,436.635 872.5,439.5C 870.278,439.822 868.444,439.155 867,437.5C 866.161,438.624 864.994,439.291 863.5,439.5C 860.928,438.839 858.261,438.673 855.5,439C 854.083,436.257 854.416,433.757 856.5,431.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff4b8\",d:\"M 342.5,446.5 C 343.833,446.5 345.167,446.5 346.5,446.5C 346.5,447.833 346.5,449.167 346.5,450.5C 345.167,450.5 343.833,450.5 342.5,450.5C 342.5,449.167 342.5,447.833 342.5,446.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efe9d2\",d:\"M 210.5,466.5 C 212.142,467.803 213.809,469.136 215.5,470.5C 215.5,471.5 215.5,472.5 215.5,473.5C 214.833,473.833 214.167,474.167 213.5,474.5C 213.5,473.5 213.5,472.5 213.5,471.5C 211.692,471.509 210.025,471.009 208.5,470C 200.199,463.855 191.533,458.355 182.5,453.5C 180.488,452.476 178.822,450.976 177.5,449C 175.635,447.699 173.635,447.365 171.5,448C 163.805,453.177 156.138,458.343 148.5,463.5C 145.766,465.55 142.766,467.216 139.5,468.5C 138.807,469.518 138.141,470.518 137.5,471.5C 135.847,471.66 134.514,472.326 133.5,473.5C 133.167,473.5 132.833,473.5 132.5,473.5C 132.5,472.5 132.5,471.5 132.5,470.5C 145.663,460.751 159.33,451.751 173.5,443.5C 185.721,451.439 198.055,459.106 210.5,466.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#112969\",d:\"M 965.5,440.5 C 966.082,446.103 964.082,450.603 959.5,454C 958.552,454.483 957.552,454.649 956.5,454.5C 959.431,450.975 961.598,446.975 963,442.5C 963.708,441.619 964.542,440.953 965.5,440.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#db7c7e\",d:\"M 217.5,429.5 C 230.5,429.5 243.5,429.5 256.5,429.5C 243.833,430.167 231.167,430.833 218.5,431.5C 218.304,447.184 218.637,462.851 219.5,478.5C 245.167,478.5 270.833,478.5 296.5,478.5C 296.177,471.978 296.51,465.645 297.5,459.5C 297.5,466.167 297.5,472.833 297.5,479.5C 270.833,479.5 244.167,479.5 217.5,479.5C 217.5,462.833 217.5,446.167 217.5,429.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef29c\",d:\"M 319.5,445.5 C 316.554,448.313 313.221,450.646 309.5,452.5C 311.304,449.902 313.638,447.735 316.5,446C 317.448,445.517 318.448,445.351 319.5,445.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30a5e3\",d:\"M 896.5,431.5 C 897.117,431.611 897.617,431.944 898,432.5C 898.296,435.706 898.796,438.872 899.5,442C 899.019,445.814 897.019,448.48 893.5,450C 875.519,451.7 857.519,451.866 839.5,450.5C 838.757,449.818 838.091,449.151 837.5,448.5C 855.503,448.667 873.503,448.5 891.5,448C 897.098,443.704 898.765,438.204 896.5,431.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#feeee9\",d:\"M 252.5,461.5 C 250.467,458.477 248.467,455.477 246.5,452.5C 246.298,450.011 246.798,447.677 248,445.5C 255.041,438.017 257.541,439.35 255.5,449.5C 254.167,449.5 252.833,449.5 251.5,449.5C 253.576,453.611 255.243,457.944 256.5,462.5C 255.041,462.567 253.708,462.234 252.5,461.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3cd0fc\",d:\"M 127.5,377.5 C 129.48,389.789 130.147,402.456 129.5,415.5C 129.5,433.5 129.5,451.5 129.5,469.5C 128.758,459.645 127.925,449.645 127,439.5C 126.282,438.549 125.449,438.383 124.5,439C 124.944,440.533 125.277,442.033 125.5,443.5C 125.154,444.696 124.654,444.696 124,443.5C 123.333,446.167 122.667,448.833 122,451.5C 120.582,448.999 119.582,449.332 119,452.5C 118.517,451.552 118.351,450.552 118.5,449.5C 116.5,448.833 114.5,448.167 112.5,447.5C 112.67,448.822 112.337,449.989 111.5,451C 109.744,451.202 108.078,451.702 106.5,452.5C 106.846,453.696 107.346,453.696 108,452.5C 108.398,455.232 109.898,457.065 112.5,458C 110.36,458.973 108.693,460.473 107.5,462.5C 111.043,463.871 114.21,465.871 117,468.5C 117.333,467.167 117.667,465.833 118,464.5C 118.333,465.167 118.667,465.833 119,466.5C 121.886,462.424 123.386,463.091 123.5,468.5C 123.21,470.044 122.544,471.377 121.5,472.5C 122.167,473.167 122.833,473.833 123.5,474.5C 121.803,475.364 120.637,476.697 120,478.5C 118.748,476.999 117.748,475.332 117,473.5C 115.414,474.376 113.914,475.376 112.5,476.5C 109.911,473.895 107.411,473.895 105,476.5C 104.5,476 104,475.5 103.5,475C 93.5,474.667 83.5,474.333 73.5,474C 85.8333,473.667 98.1667,473.333 110.5,473C 111.056,472.617 111.389,472.117 111.5,471.5C 112.833,470.167 112.833,468.833 111.5,467.5C 106.577,465.683 101.243,464.683 95.5,464.5C 95.5,463.5 95.5,462.5 95.5,461.5C 95.8333,461.5 96.1667,461.5 96.5,461.5C 101.073,460.401 101.739,457.901 98.5,454C 99.8333,452.333 99.8333,450.667 98.5,449C 88.9532,450.682 79.9532,449.182 71.5,444.5C 63.9851,445.645 61.9851,442.812 65.5,436C 65.0009,433.995 63.8342,432.495 62,431.5C 61.8333,428.833 61.6667,426.167 61.5,423.5C 61.5217,420.41 62.1883,417.743 63.5,415.5C 62.5958,424.232 64.9292,431.898 70.5,438.5C 70.5394,439.583 70.8728,440.583 71.5,441.5C 73.6414,442.808 75.6414,444.308 77.5,446C 83.3487,446.818 89.0154,446.652 94.5,445.5C 94.8333,445.5 95.1667,445.5 95.5,445.5C 102.609,446.665 108.109,444.331 112,438.5C 115.56,430.341 116.394,422.008 114.5,413.5C 113.501,410.838 112.501,408.172 111.5,405.5C 114.05,405.561 115.55,406.894 116,409.5C 116.427,415.527 117.093,421.527 118,427.5C 118.758,424.389 119.925,421.556 121.5,419C 121.456,417.236 121.122,415.569 120.5,414C 121.744,413.544 122.577,414.044 123,415.5C 123.333,414.833 123.667,414.167 124,413.5C 124.605,415.481 125.605,415.815 127,414.5C 128.414,402.154 128.581,389.82 127.5,377.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffdedc\",d:\"M 86.5,421.5 C 88.5,421.5 90.5,421.5 92.5,421.5C 92.5193,426.016 90.186,428.016 85.5,427.5C 85.3253,425.379 85.6586,423.379 86.5,421.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3691d4\",d:\"M 583.5,439.5 C 581.305,448.358 575.971,454.358 567.5,457.5C 567.5,456.5 567.5,455.5 567.5,454.5C 571.389,452.942 574.722,450.609 577.5,447.5C 579.913,445.094 581.913,442.428 583.5,439.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#409ddd\",d:\"M 964.5,305.5 C 965.499,347.33 965.832,389.33 965.5,431.5C 965.5,434.167 965.5,436.833 965.5,439.5C 965.5,439.833 965.5,440.167 965.5,440.5C 964.542,440.953 963.708,441.619 963,442.5C 961.598,446.975 959.431,450.975 956.5,454.5C 953.644,456.093 950.644,457.427 947.5,458.5C 947.433,457.041 947.766,455.708 948.5,454.5C 952.711,452.469 956.544,449.802 960,446.5C 960.608,444.846 961.108,443.179 961.5,441.5C 962.558,440.4 963.392,439.066 964,437.5C 964.5,393.501 964.667,349.501 964.5,305.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e546e\",d:\"M 403.5,350.5 C 403.5,425.5 403.5,500.5 403.5,575.5C 401.883,590.781 393.55,599.448 378.5,601.5C 375.167,601.5 371.833,601.5 368.5,601.5C 370.833,600.833 373.167,600.167 375.5,599.5C 384.338,599.17 390.838,595.17 395,587.5C 395.49,586.207 395.657,584.873 395.5,583.5C 396.79,582.942 397.623,581.942 398,580.5C 398.333,580.833 398.667,581.167 399,581.5C 399.333,580.5 399.667,579.5 400,578.5C 403.116,536.303 403.282,493.97 400.5,451.5C 401.916,428.514 402.416,405.514 402,382.5C 401.586,382.957 401.086,383.291 400.5,383.5C 399.86,378.938 398.694,378.604 397,382.5C 396.598,381.128 396.098,379.795 395.5,378.5C 394.743,377.227 394.077,377.227 393.5,378.5C 392.469,376.039 391.802,373.373 391.5,370.5C 392.473,371.984 393.807,372.484 395.5,372C 394.944,371.617 394.611,371.117 394.5,370.5C 395.338,370.158 395.672,369.492 395.5,368.5C 396.268,369.263 396.768,370.263 397,371.5C 397.494,369.866 397.66,368.199 397.5,366.5C 398.708,367.234 400.041,367.567 401.5,367.5C 401.968,361.671 402.635,356.004 403.5,350.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3dbaf5\",d:\"M 431.5,452.5 C 434.273,452.812 436.607,453.978 438.5,456C 467.509,456.216 496.509,456.716 525.5,457.5C 539.588,457.142 553.588,456.142 567.5,454.5C 567.5,455.5 567.5,456.5 567.5,457.5C 565.436,457.687 563.436,458.187 561.5,459C 521.835,459.5 482.168,459.667 442.5,459.5C 437.983,458.413 434.316,456.08 431.5,452.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ebef7\",d:\"M 948.5,454.5 C 947.766,455.708 947.433,457.041 947.5,458.5C 946.167,458.833 944.833,459.167 943.5,459.5C 892.791,459.824 842.125,459.491 791.5,458.5C 791.5,457.833 791.5,457.167 791.5,456.5C 804.85,456.833 818.183,456.499 831.5,455.5C 832,454.119 833,453.453 834.5,453.5C 837.028,454.169 837.028,455.002 834.5,456C 835.873,456.875 837.373,457.375 839,457.5C 874.481,456.683 909.981,456.183 945.5,456C 946.244,454.961 947.244,454.461 948.5,454.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#292c49\",d:\"M 780.5,437.5 C 782.353,438.678 783.686,440.845 784.5,444C 783.722,447.155 783.555,450.322 784,453.5C 785.745,455.089 786.912,457.089 787.5,459.5C 788.622,460.63 789.956,461.297 791.5,461.5C 821.093,462.492 850.76,462.825 880.5,462.5C 884.982,463.326 889.649,463.826 894.5,464C 897.167,464.667 897.167,465.333 894.5,466C 892.899,466.273 891.399,466.773 890,467.5C 889.667,466.833 889.333,466.167 889,465.5C 885.333,465.833 881.667,466.167 878,466.5C 876.667,463.833 875.333,463.833 874,466.5C 869.719,465.03 865.552,465.364 861.5,467.5C 860.417,468.365 860.251,469.365 861,470.5C 866.066,469.703 871.066,469.37 876,469.5C 877.404,469.509 878.57,470.009 879.5,471C 884.086,471.145 888.586,471.311 893,471.5C 894.711,471.561 896.044,470.894 897,469.5C 898.729,472.079 900.562,472.079 902.5,469.5C 903.167,470.167 903.833,470.833 904.5,471.5C 906.5,468.833 908.5,468.833 910.5,471.5C 913.588,471.648 916.755,471.315 920,470.5C 927.421,471.316 934.921,471.816 942.5,472C 942.957,472.414 943.291,472.914 943.5,473.5C 891.002,474.167 838.668,474.833 786.5,475.5C 785.5,475.5 784.5,475.5 783.5,475.5C 783.074,474.472 783.074,473.139 783.5,471.5C 791.692,471.824 799.692,471.157 807.5,469.5C 807.649,468.448 807.483,467.448 807,466.5C 803.981,467.407 800.648,467.074 797,465.5C 794.333,465.5 791.667,465.5 789,465.5C 788,466.167 787,466.833 786,467.5C 782.861,464.001 781.528,460.001 782,455.5C 781.333,456.833 780.667,456.833 780,455.5C 778.418,457.624 778.251,459.79 779.5,462C 775.559,462.494 771.559,463.661 767.5,465.5C 767.5,462.833 767.5,460.167 767.5,457.5C 762.167,457.5 756.833,457.5 751.5,457.5C 751.5,459.167 751.5,460.833 751.5,462.5C 747.37,462.751 743.37,462.751 739.5,462.5C 740.167,461.167 741.167,460.167 742.5,459.5C 743.429,458.311 743.762,456.978 743.5,455.5C 744.833,455.5 746.167,455.5 747.5,455.5C 747.5,453.833 747.5,452.167 747.5,450.5C 746.167,450.5 744.833,450.5 743.5,450.5C 743.5,449.5 743.5,448.5 743.5,447.5C 740.921,447.917 738.754,447.25 737,445.5C 736.411,447.863 734.911,448.863 732.5,448.5C 732.351,449.552 732.517,450.552 733,451.5C 733.667,452.833 734.333,452.833 735,451.5C 735.49,452.793 735.657,454.127 735.5,455.5C 736.675,455.281 737.675,455.614 738.5,456.5C 736.35,458.922 736.017,461.589 737.5,464.5C 734.634,469.074 735.467,469.74 740,466.5C 743.413,469.014 747.247,470.014 751.5,469.5C 751.682,471.591 751.348,473.591 750.5,475.5C 752.433,478.095 752.433,480.428 750.5,482.5C 749.543,480.082 748.209,477.916 746.5,476C 747.711,475.107 747.711,474.274 746.5,473.5C 745.808,474.025 745.308,474.692 745,475.5C 740.641,472.163 736.474,472.163 732.5,475.5C 731.833,475.5 731.5,475.833 731.5,476.5C 730.508,476.328 729.842,476.662 729.5,477.5C 729.167,477.5 728.833,477.5 728.5,477.5C 633.172,475.502 537.506,474.836 441.5,475.5C 434.862,475.753 434.195,474.253 439.5,471C 442.154,470.059 444.821,469.226 447.5,468.5C 448.884,469.801 450.384,469.801 452,468.5C 452.333,469.167 452.667,469.833 453,470.5C 453.667,467.833 454.333,467.833 455,470.5C 455.667,469.167 456.333,469.167 457,470.5C 457.494,468.866 457.66,467.199 457.5,465.5C 461.42,465.043 463.92,466.709 465,470.5C 477.252,470.383 488.585,470.383 499,470.5C 499.667,469.167 499.667,467.833 499,466.5C 495.025,466.251 491.358,466.585 488,467.5C 486.806,466.57 485.473,465.903 484,465.5C 480.347,468.343 478.18,467.343 477.5,462.5C 506.542,462.959 535.542,462.459 564.5,461C 576.554,457.45 583.888,449.616 586.5,437.5C 587.397,438.598 588.23,438.598 589,437.5C 589.191,431.917 589.691,426.417 590.5,421C 589.919,420.107 589.585,419.107 589.5,418C 590.39,414.96 591.39,415.127 592.5,418.5C 591.39,423.111 591.223,427.778 592,432.5C 593.117,432.335 594.284,432.002 595.5,431.5C 596.895,435.335 596.562,439.001 594.5,442.5C 593.033,442.277 591.533,441.944 590,441.5C 589.505,443.473 589.338,445.473 589.5,447.5C 587.712,447.215 586.045,447.548 584.5,448.5C 583.833,450.5 583.167,452.5 582.5,454.5C 580.234,455.432 578.234,456.766 576.5,458.5C 577.946,460.725 579.946,461.558 582.5,461C 586.026,457.464 588.693,453.297 590.5,448.5C 591.748,447.96 592.915,447.293 594,446.5C 595.049,447.517 596.216,447.684 597.5,447C 598.833,446 598.833,445 597.5,444C 598.094,443.536 598.761,443.369 599.5,443.5C 599.938,444.506 600.604,444.506 601.5,443.5C 602.167,444.167 602.833,444.833 603.5,445.5C 603.427,447.027 604.094,448.027 605.5,448.5C 606.167,449.5 606.833,450.5 607.5,451.5C 606.233,450.913 605.233,450.913 604.5,451.5C 607.123,453.962 609.456,456.629 611.5,459.5C 614.5,460.333 617.5,461.167 620.5,462C 636.167,462.167 651.833,462.333 667.5,462.5C 683.515,462.499 699.181,461.833 714.5,460.5C 715.5,460.5 716.5,460.5 717.5,460.5C 719.028,459.198 720.028,457.531 720.5,455.5C 720.5,456.833 720.5,458.167 720.5,459.5C 723.48,460.653 726.48,460.32 729.5,458.5C 730.289,452.885 730.789,447.218 731,441.5C 731.153,438.849 731.987,436.516 733.5,434.5C 734.791,434.737 735.791,434.404 736.5,433.5C 737.756,423.78 739.256,414.113 741,404.5C 752.916,416.751 765.082,428.585 777.5,440C 779.489,440.519 780.489,439.686 780.5,437.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38c2f7\",d:\"M 720.5,426.5 C 720.5,426.833 720.5,427.167 720.5,427.5C 720.907,437.668 719.907,447.668 717.5,457.5C 716.833,457.5 716.5,457.833 716.5,458.5C 684.16,458.833 651.826,458.5 619.5,457.5C 617.116,456.989 615.116,455.989 613.5,454.5C 615.989,454.298 618.323,454.798 620.5,456C 651.833,456.667 683.167,456.667 714.5,456C 717.186,446.229 719.186,436.396 720.5,426.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5e273d\",d:\"M 732.5,434.5 C 732.833,434.5 733.167,434.5 733.5,434.5C 731.987,436.516 731.153,438.849 731,441.5C 730.789,447.218 730.289,452.885 729.5,458.5C 726.48,460.32 723.48,460.653 720.5,459.5C 722.099,459.768 723.432,459.434 724.5,458.5C 725.496,458.586 726.329,458.252 727,457.5C 728.517,451.248 729.517,444.914 730,438.5C 730.2,436.68 731.034,435.347 732.5,434.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#677189\",d:\"M 722.5,447.5 C 722.59,450.152 721.924,452.485 720.5,454.5C 720.41,451.848 721.076,449.515 722.5,447.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d2962\",d:\"M 720.5,427.5 C 722.369,429.635 723.036,432.302 722.5,435.5C 722.5,439.5 722.5,443.5 722.5,447.5C 721.076,449.515 720.41,451.848 720.5,454.5C 720.5,454.833 720.5,455.167 720.5,455.5C 720.028,457.531 719.028,459.198 717.5,460.5C 717.5,459.5 717.5,458.5 717.5,457.5C 719.907,447.668 720.907,437.668 720.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e55463\",d:\"M 732.5,434.5 C 731.034,435.347 730.2,436.68 730,438.5C 729.517,444.914 728.517,451.248 727,457.5C 726.329,458.252 725.496,458.586 724.5,458.5C 725.167,452.167 725.833,445.833 726.5,439.5C 727.317,437.031 727.817,434.365 728,431.5C 729.356,430.62 730.856,430.286 732.5,430.5C 732.5,431.833 732.5,433.167 732.5,434.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec919a\",d:\"M 733.5,428.5 C 734.313,430.261 735.313,431.928 736.5,433.5C 735.791,434.404 734.791,434.737 733.5,434.5C 733.167,434.5 732.833,434.5 732.5,434.5C 732.5,433.167 732.5,431.833 732.5,430.5C 730.856,430.286 729.356,430.62 728,431.5C 727.817,434.365 727.317,437.031 726.5,439.5C 726.335,436.482 726.502,433.482 727,430.5C 729.007,429.331 731.173,428.665 733.5,428.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ece2e3\",d:\"M 728.5,426.5 C 730.857,426.337 733.19,426.503 735.5,427C 734.584,427.278 733.918,427.778 733.5,428.5C 731.173,428.665 729.007,429.331 727,430.5C 726.502,433.482 726.335,436.482 726.5,439.5C 725.833,445.833 725.167,452.167 724.5,458.5C 723.432,459.434 722.099,459.768 720.5,459.5C 720.5,458.167 720.5,456.833 720.5,455.5C 720.5,455.167 720.5,454.833 720.5,454.5C 721.924,452.485 722.59,450.152 722.5,447.5C 722.5,443.5 722.5,439.5 722.5,435.5C 723.314,433.369 723.814,431.036 724,428.5C 725.11,426.963 726.61,426.297 728.5,426.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3998d3\",d:\"M 703.5,423.5 C 704.833,423.5 706.167,423.5 707.5,423.5C 708.167,438.167 708.833,438.167 709.5,423.5C 710.833,423.5 712.167,423.5 713.5,423.5C 712.791,424.404 711.791,424.737 710.5,424.5C 710.5,428.167 710.5,431.833 710.5,435.5C 709.167,435.5 707.833,435.5 706.5,435.5C 706.557,431.118 705.557,427.118 703.5,423.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41a2d0\",d:\"M 727.5,419.5 C 729.048,419.821 729.715,420.821 729.5,422.5C 728.18,423.942 726.514,424.608 724.5,424.5C 725.091,423.849 725.757,423.182 726.5,422.5C 726,422.167 725.5,421.833 725,421.5C 721.362,423.185 717.529,423.851 713.5,423.5C 718.118,422.41 722.785,421.077 727.5,419.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7e273a\",d:\"M 686.5,415.5 C 689.578,415.62 692.245,416.62 694.5,418.5C 691.284,418.655 688.617,417.655 686.5,415.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42a7e2\",d:\"M 611.5,454.5 C 612.167,454.5 612.833,454.5 613.5,454.5C 615.116,455.989 617.116,456.989 619.5,457.5C 651.826,458.5 684.16,458.833 716.5,458.5C 685.004,459.498 653.338,459.832 621.5,459.5C 618.769,458.973 616.102,458.14 613.5,457C 612.619,456.292 611.953,455.458 611.5,454.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#145694\",d:\"M 567.5,457.5 C 566.4,458.558 565.066,459.392 563.5,460C 522.998,460.831 482.665,460.665 442.5,459.5C 482.168,459.667 521.835,459.5 561.5,459C 563.436,458.187 565.436,457.687 567.5,457.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#175b92\",d:\"M 717.5,457.5 C 717.5,458.5 717.5,459.5 717.5,460.5C 716.5,460.5 715.5,460.5 714.5,460.5C 683.329,460.831 652.329,460.498 621.5,459.5C 653.338,459.832 685.004,459.498 716.5,458.5C 716.5,457.833 716.833,457.5 717.5,457.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#185a95\",d:\"M 791.5,459.5 C 791.5,459.167 791.5,458.833 791.5,458.5C 842.125,459.491 892.791,459.824 943.5,459.5C 892.931,460.83 842.264,460.83 791.5,459.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0c214e\",d:\"M 607.5,451.5 C 608.262,453.262 609.596,454.262 611.5,454.5C 611.953,455.458 612.619,456.292 613.5,457C 616.102,458.14 618.769,458.973 621.5,459.5C 652.329,460.498 683.329,460.831 714.5,460.5C 699.181,461.833 683.515,462.499 667.5,462.5C 651.833,462.333 636.167,462.167 620.5,462C 617.5,461.167 614.5,460.333 611.5,459.5C 609.456,456.629 607.123,453.962 604.5,451.5C 605.233,450.913 606.233,450.913 607.5,451.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d234f\",d:\"M 956.5,454.5 C 955.853,456.141 954.853,457.474 953.5,458.5C 950.452,460.357 947.118,461.524 943.5,462C 922.503,462.5 901.503,462.667 880.5,462.5C 850.76,462.825 821.093,462.492 791.5,461.5C 791.5,460.833 791.5,460.167 791.5,459.5C 842.264,460.83 892.931,460.83 943.5,459.5C 944.833,459.167 946.167,458.833 947.5,458.5C 950.644,457.427 953.644,456.093 956.5,454.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc106\",d:\"M 359.5,506.5 C 359.728,509.926 358.395,512.593 355.5,514.5C 356.167,514.833 356.833,515.167 357.5,515.5C 359.325,514.349 361.325,513.682 363.5,513.5C 363.5,514.833 363.5,516.167 363.5,517.5C 361.381,517.468 360.048,518.468 359.5,520.5C 357.519,518.856 355.519,517.19 353.5,515.5C 345.53,514.296 337.863,514.296 330.5,515.5C 328.424,517.288 326.257,518.954 324,520.5C 323.377,524.932 322.377,525.265 321,521.5C 320.879,527.003 321.379,532.337 322.5,537.5C 322.5,537.833 322.5,538.167 322.5,538.5C 322.223,541.448 322.556,544.281 323.5,547C 328.101,548.683 330.601,547.183 331,542.5C 331.743,544.441 331.576,546.274 330.5,548C 338.493,548.5 346.493,548.666 354.5,548.5C 354.338,546.473 354.505,544.473 355,542.5C 356.553,546.293 359.053,547.293 362.5,545.5C 362.5,544.833 362.5,544.167 362.5,543.5C 364.537,538.137 364.87,532.803 363.5,527.5C 362.585,525.246 361.252,523.246 359.5,521.5C 360.695,521.678 361.862,522.011 363,522.5C 364.168,521.491 365.335,520.491 366.5,519.5C 366.833,519.833 367.167,520.167 367.5,520.5C 365.108,522.56 365.108,524.727 367.5,527C 367.269,533.837 367.269,540.504 367.5,547C 367,548.5 366.5,550 366,551.5C 365.586,551.043 365.086,550.709 364.5,550.5C 362.119,552.392 359.453,552.892 356.5,552C 362.605,550.761 362.771,549.595 357,548.5C 349.845,549.117 342.678,549.783 335.5,550.5C 335.709,551.086 336.043,551.586 336.5,552C 335.062,552.219 333.729,552.719 332.5,553.5C 335.465,553.034 338.298,553.7 341,555.5C 343.529,553.544 346.195,552.877 349,553.5C 350.572,555.563 352.405,556.229 354.5,555.5C 357.658,557.535 360.991,558.868 364.5,559.5C 350.167,559.5 335.833,559.5 321.5,559.5C 319.692,560.918 319.025,562.918 319.5,565.5C 320.552,565.351 321.552,565.517 322.5,566C 322.833,567 323.167,568 323.5,569C 327.676,569.681 331.676,569.181 335.5,567.5C 335.148,570.073 335.648,572.406 337,574.5C 341.333,574.167 345.667,573.833 350,573.5C 351.319,575.487 353.152,576.654 355.5,577C 337.867,577.094 320.2,577.261 302.5,577.5C 302.5,578.5 302.5,579.5 302.5,580.5C 302.167,580.5 301.833,580.5 301.5,580.5C 300.839,539.82 301.506,499.486 303.5,459.5C 303.238,460.978 303.571,462.311 304.5,463.5C 305.138,461.03 306.638,459.363 309,458.5C 311.443,459.854 312.276,461.687 311.5,464C 313.833,464.667 316.167,464.667 318.5,464C 316.75,462.246 316.083,460.079 316.5,457.5C 313.05,458.244 311.384,456.91 311.5,453.5C 313.5,453.5 315.5,453.5 317.5,453.5C 318.553,456.079 319.887,458.579 321.5,461C 320.289,462.113 320.289,463.28 321.5,464.5C 320.675,465.386 319.675,465.719 318.5,465.5C 318.5,467.167 318.5,468.833 318.5,470.5C 319.5,470.5 320.5,470.5 321.5,470.5C 321.5,469.167 321.5,467.833 321.5,466.5C 324.325,466.919 326.491,465.919 328,463.5C 330.399,466.001 332.899,466.001 335.5,463.5C 334.128,461.38 334.795,460.38 337.5,460.5C 337.759,464.068 339.759,465.401 343.5,464.5C 343.579,463.07 343.246,461.736 342.5,460.5C 338.864,459.064 338.697,457.397 342,455.5C 345.981,458.313 349.481,461.647 352.5,465.5C 353.803,464.282 354.803,464.615 355.5,466.5C 357.244,465.97 358.744,465.97 360,466.5C 361.333,468.5 363,470.167 365,471.5C 365.626,473.713 365.459,475.88 364.5,478C 365.473,478.349 366.306,479.182 367,480.5C 367.167,481.667 367.333,482.833 367.5,484C 368.157,489.414 367.49,494.748 365.5,500C 365.286,502.738 366.286,504.904 368.5,506.5C 365.554,507.321 362.554,507.321 359.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eec837\",d:\"M 182.5,453.5 C 179.308,452.778 176.474,451.444 174,449.5C 169.938,449.511 167.105,451.345 165.5,455C 162.102,455.851 159.768,457.851 158.5,461C 154.553,462.431 151.219,464.764 148.5,468C 147.423,468.47 146.423,468.303 145.5,467.5C 146.5,466.167 147.5,464.833 148.5,463.5C 156.138,458.343 163.805,453.177 171.5,448C 173.635,447.365 175.635,447.699 177.5,449C 178.822,450.976 180.488,452.476 182.5,453.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d49b26\",d:\"M 356.5,471.5 C 350.399,467.89 343.733,466.557 336.5,467.5C 342.496,464.759 348.496,465.092 354.5,468.5C 355.425,469.357 356.092,470.357 356.5,471.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5d77a\",d:\"M 148.5,463.5 C 147.5,464.833 146.5,466.167 145.5,467.5C 142.498,468.334 139.832,469.667 137.5,471.5C 138.141,470.518 138.807,469.518 139.5,468.5C 142.766,467.216 145.766,465.55 148.5,463.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc306\",d:\"M 182.5,453.5 C 191.533,458.355 200.199,463.855 208.5,470C 210.025,471.009 211.692,471.509 213.5,471.5C 213.5,472.5 213.5,473.5 213.5,474.5C 213.5,510.167 213.5,545.833 213.5,581.5C 186.812,582.158 160.479,581.491 134.5,579.5C 134.5,544.167 134.5,508.833 134.5,473.5C 136.179,473.715 137.179,473.048 137.5,471.5C 139.832,469.667 142.498,468.334 145.5,467.5C 146.423,468.303 147.423,468.47 148.5,468C 151.219,464.764 154.553,462.431 158.5,461C 159.768,457.851 162.102,455.851 165.5,455C 167.105,451.345 169.938,449.511 174,449.5C 176.474,451.444 179.308,452.778 182.5,453.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff9c0\",d:\"M 173.5,467.5 C 175.256,468.552 175.923,470.219 175.5,472.5C 174.5,472.5 173.5,472.5 172.5,472.5C 172.366,470.708 172.699,469.042 173.5,467.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ef726d\",d:\"M 246.5,452.5 C 248.467,455.477 250.467,458.477 252.5,461.5C 254.988,463.388 257.988,464.055 261.5,463.5C 259.631,464.165 257.631,464.831 255.5,465.5C 255.709,466.086 256.043,466.586 256.5,467C 263.826,467.5 271.159,467.666 278.5,467.5C 278.682,469.591 278.348,471.591 277.5,473.5C 264.271,474.175 251.104,474.842 238,475.5C 235.093,473.267 233.926,470.267 234.5,466.5C 240.173,467.752 245.84,467.752 251.5,466.5C 252.093,463.404 251.093,461.071 248.5,459.5C 247.054,457.382 246.387,455.049 246.5,452.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fde5dd\",d:\"M 238.5,469.5 C 250.833,469.5 263.167,469.5 275.5,469.5C 275.67,470.822 275.337,471.989 274.5,473C 262.505,473.5 250.505,473.667 238.5,473.5C 238.5,472.167 238.5,470.833 238.5,469.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#51c9fc\",d:\"M 985.5,159.5 C 990.833,162.833 995.167,167.167 998.5,172.5C 1000.12,175.62 1001.95,178.62 1004,181.5C 1004.88,184.789 1005.55,188.123 1006,191.5C 1006.67,436.833 1006.67,682.167 1006,927.5C 1000.07,950.26 986.233,965.927 964.5,974.5C 964.414,973.504 964.748,972.671 965.5,972C 968.505,970.83 971.505,969.664 974.5,968.5C 975.006,965.329 976.672,962.996 979.5,961.5C 976.954,960.454 975.287,958.621 974.5,956C 975.022,955.05 975.689,954.216 976.5,953.5C 975.45,951.898 976.117,951.065 978.5,951C 979.071,949.795 979.738,948.628 980.5,947.5C 981.192,948.025 981.692,948.692 982,949.5C 983.902,947.13 984.569,944.464 984,941.5C 983.667,942.5 983.333,943.5 983,944.5C 982.667,944.167 982.333,943.833 982,943.5C 981.57,940.808 981.737,938.141 982.5,935.5C 978.828,934.955 979.162,934.622 983.5,934.5C 983.351,935.552 983.517,936.552 984,937.5C 985.312,935.342 986.978,935.009 989,936.5C 991.177,934.66 993.011,932.493 994.5,930C 994.07,928.566 993.236,927.399 992,926.5C 988.429,929.533 985.762,928.866 984,924.5C 982.887,926.329 981.387,927.163 979.5,927C 980.202,926.036 980.202,924.202 979.5,921.5C 982.805,921.427 983.805,919.594 982.5,916C 984.118,910.932 985.285,905.765 986,900.5C 986.827,653.488 986.66,406.488 985.5,159.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ced6e6\",d:\"M 441.5,476.5 C 441.5,476.167 441.5,475.833 441.5,475.5C 537.506,474.836 633.172,475.502 728.5,477.5C 728.5,478.167 728.167,478.5 727.5,478.5C 632.506,476.502 537.173,475.836 441.5,476.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2ddeb\",d:\"M 783.5,475.5 C 784.5,475.5 785.5,475.5 786.5,475.5C 840.003,475.168 893.336,475.501 946.5,476.5C 892.832,476.333 839.166,476.5 785.5,477C 784.328,477.419 783.328,478.085 782.5,479C 782.728,479.399 783.062,479.565 783.5,479.5C 778.69,482.504 774.857,486.504 772,491.5C 771.536,490.906 771.369,490.239 771.5,489.5C 773.007,482.662 777.007,477.996 783.5,475.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dff0f2\",d:\"M 441.5,476.5 C 537.173,475.836 632.506,476.502 727.5,478.5C 632.499,478.333 537.499,478.5 442.5,479C 435.281,481.862 429.781,486.696 426,493.5C 425.333,526.167 425.333,558.833 426,591.5C 426.21,593.058 426.71,594.391 427.5,595.5C 427.833,596.833 428.167,598.167 428.5,599.5C 427.542,599.047 426.708,598.381 426,597.5C 425.197,594.756 424.197,592.089 423,589.5C 422.333,557.5 422.333,525.5 423,493.5C 423.573,491.359 424.406,489.359 425.5,487.5C 429.217,481.445 434.55,477.778 441.5,476.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4f4f7\",d:\"M 946.5,476.5 C 953.814,477.809 959.147,481.809 962.5,488.5C 962.631,489.239 962.464,489.906 962,490.5C 958.277,483.442 952.444,479.609 944.5,479C 890.792,478.175 837.126,478.342 783.5,479.5C 783.062,479.565 782.728,479.399 782.5,479C 783.328,478.085 784.328,477.419 785.5,477C 839.166,476.5 892.832,476.333 946.5,476.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e5d7a\",d:\"M 47.5,376.5 C 47.5,377.167 47.5,377.833 47.5,378.5C 47.5,423.167 47.5,467.833 47.5,512.5C 47.2053,514.735 47.5386,516.735 48.5,518.5C 48.5,518.833 48.5,519.167 48.5,519.5C 47.8333,519.5 47.1667,519.5 46.5,519.5C 46.1679,471.664 46.5012,423.997 47.5,376.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8598b6\",d:\"M 217.5,479.5 C 244.167,479.5 270.833,479.5 297.5,479.5C 297.5,479.833 297.5,480.167 297.5,480.5C 288.167,480.5 278.833,480.5 269.5,480.5C 253.143,480.243 236.809,480.576 220.5,481.5C 218.539,488.087 217.872,495.087 218.5,502.5C 218.672,503.492 218.338,504.158 217.5,504.5C 217.5,500.833 217.5,497.167 217.5,493.5C 217.5,488.833 217.5,484.167 217.5,479.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#412b1b\",d:\"M 336.5,467.5 C 343.733,466.557 350.399,467.89 356.5,471.5C 360.317,474.598 362.65,478.598 363.5,483.5C 364.897,492.694 361.564,499.361 353.5,503.5C 352.833,503.5 352.167,503.5 351.5,503.5C 357.52,499.625 360.854,494.125 361.5,487C 361.399,478.741 357.399,473.574 349.5,471.5C 338.432,467.253 330.265,470.586 325,481.5C 324.341,484.888 324.508,488.221 325.5,491.5C 325.893,493.284 326.559,494.95 327.5,496.5C 326.833,496.5 326.167,496.5 325.5,496.5C 325.068,495.29 324.401,494.29 323.5,493.5C 320.916,481.335 325.249,472.669 336.5,467.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd5fd\",d:\"M 64.5,409.5 C 63.8505,411.435 63.5172,413.435 63.5,415.5C 62.1883,417.743 61.5217,420.41 61.5,423.5C 61.6667,426.167 61.8333,428.833 62,431.5C 63.8342,432.495 65.0009,433.995 65.5,436C 61.9851,442.812 63.9851,445.645 71.5,444.5C 79.9532,449.182 88.9532,450.682 98.5,449C 99.8333,450.667 99.8333,452.333 98.5,454C 101.739,457.901 101.073,460.401 96.5,461.5C 96.5,461.167 96.5,460.833 96.5,460.5C 98.4663,459.745 98.7996,458.579 97.5,457C 91.5092,456.501 85.5092,456.334 79.5,456.5C 79.5,458.167 79.5,459.833 79.5,461.5C 84.8333,461.5 90.1667,461.5 95.5,461.5C 95.5,462.5 95.5,463.5 95.5,464.5C 101.243,464.683 106.577,465.683 111.5,467.5C 96.8295,467.333 82.1629,467.5 67.5,468C 66.6634,469.011 66.33,470.178 66.5,471.5C 81.5,471.5 96.5,471.5 111.5,471.5C 111.389,472.117 111.056,472.617 110.5,473C 98.1667,473.333 85.8333,473.667 73.5,474C 83.5,474.333 93.5,474.667 103.5,475C 104,475.5 104.5,476 105,476.5C 107.411,473.895 109.911,473.895 112.5,476.5C 113.914,475.376 115.414,474.376 117,473.5C 117.748,475.332 118.748,476.999 120,478.5C 120.637,476.697 121.803,475.364 123.5,474.5C 122.833,473.833 122.167,473.167 121.5,472.5C 122.544,471.377 123.21,470.044 123.5,468.5C 123.386,463.091 121.886,462.424 119,466.5C 118.667,465.833 118.333,465.167 118,464.5C 117.667,465.833 117.333,467.167 117,468.5C 114.21,465.871 111.043,463.871 107.5,462.5C 108.693,460.473 110.36,458.973 112.5,458C 109.898,457.065 108.398,455.232 108,452.5C 107.346,453.696 106.846,453.696 106.5,452.5C 108.078,451.702 109.744,451.202 111.5,451C 112.337,449.989 112.67,448.822 112.5,447.5C 114.5,448.167 116.5,448.833 118.5,449.5C 118.351,450.552 118.517,451.552 119,452.5C 119.582,449.332 120.582,448.999 122,451.5C 122.667,448.833 123.333,446.167 124,443.5C 124.654,444.696 125.154,444.696 125.5,443.5C 125.277,442.033 124.944,440.533 124.5,439C 125.449,438.383 126.282,438.549 127,439.5C 127.925,449.645 128.758,459.645 129.5,469.5C 129.667,480.505 129.5,491.505 129,502.5C 128.691,503.766 128.191,504.933 127.5,506C 120.378,504.205 113.712,501.205 107.5,497C 105.26,496.023 102.927,495.523 100.5,495.5C 98.8333,494.833 97.1667,494.167 95.5,493.5C 93.4335,492.023 91.1002,491.023 88.5,490.5C 85.4707,491.676 82.8041,493.343 80.5,495.5C 72.5626,497.811 64.8959,500.644 57.5,504C 54.2444,505.116 51.5777,506.949 49.5,509.5C 48.3357,473.669 48.169,437.669 49,401.5C 49.3333,406.5 49.6667,411.5 50,416.5C 50.6054,414.519 51.6054,414.185 53,415.5C 53.3333,410.167 53.6667,404.833 54,399.5C 54.1858,401.9 54.6858,404.234 55.5,406.5C 57.0863,404.827 57.7529,402.827 57.5,400.5C 59.8211,400.229 61.8211,400.896 63.5,402.5C 64.3333,401.5 65.1667,400.5 66,399.5C 65.712,402.791 65.212,406.125 64.5,409.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#effdfe\",d:\"M 111.5,467.5 C 112.833,468.833 112.833,470.167 111.5,471.5C 96.5,471.5 81.5,471.5 66.5,471.5C 66.33,470.178 66.6634,469.011 67.5,468C 82.1629,467.5 96.8295,467.333 111.5,467.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#99e9f3\",d:\"M 96.5,460.5 C 96.5,460.833 96.5,461.167 96.5,461.5C 96.1667,461.5 95.8333,461.5 95.5,461.5C 90.1667,461.5 84.8333,461.5 79.5,461.5C 79.5,459.833 79.5,458.167 79.5,456.5C 85.5092,456.334 91.5092,456.501 97.5,457C 98.7996,458.579 98.4663,459.745 96.5,460.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e8fefe\",d:\"M 96.5,460.5 C 90.9963,460.932 85.6629,460.265 80.5,458.5C 85.7921,457.505 91.1254,457.172 96.5,457.5C 96.5,458.5 96.5,459.5 96.5,460.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3797d2\",d:\"M 70.5,438.5 C 77.3354,444.441 85.3354,446.775 94.5,445.5C 89.0154,446.652 83.3487,446.818 77.5,446C 75.6414,444.308 73.6414,442.808 71.5,441.5C 70.8728,440.583 70.5394,439.583 70.5,438.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cbf2f3\",d:\"M 349.5,471.5 C 345.154,471.334 340.821,471.501 336.5,472C 336.833,472.333 337.167,472.667 337.5,473C 336.234,473.309 335.067,473.809 334,474.5C 333.182,477.227 333.348,479.894 334.5,482.5C 336.664,482.002 338.331,480.836 339.5,479C 341.066,478.235 342.399,478.402 343.5,479.5C 342.5,479.5 341.5,479.5 340.5,479.5C 340.616,482.91 338.95,484.244 335.5,483.5C 335.5,484.833 335.5,486.167 335.5,487.5C 336.833,487.5 338.167,487.5 339.5,487.5C 339.5,489.5 339.5,491.5 339.5,493.5C 340.833,493.5 342.167,493.5 343.5,493.5C 342.341,495.377 340.674,495.877 338.5,495C 337.897,493.175 337.23,491.341 336.5,489.5C 335.549,490.326 334.549,490.492 333.5,490C 332.253,488.054 330.92,486.22 329.5,484.5C 328.417,487.138 327.084,489.471 325.5,491.5C 324.508,488.221 324.341,484.888 325,481.5C 330.265,470.586 338.432,467.253 349.5,471.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0f9f7\",d:\"M 349.5,471.5 C 357.399,473.574 361.399,478.741 361.5,487C 360.854,494.125 357.52,499.625 351.5,503.5C 341.649,506.716 333.649,504.382 327.5,496.5C 326.559,494.95 325.893,493.284 325.5,491.5C 327.084,489.471 328.417,487.138 329.5,484.5C 330.92,486.22 332.253,488.054 333.5,490C 334.549,490.492 335.549,490.326 336.5,489.5C 337.23,491.341 337.897,493.175 338.5,495C 340.674,495.877 342.341,495.377 343.5,493.5C 345.626,492.897 347.959,492.897 350.5,493.5C 350.448,489.802 350.114,486.135 349.5,482.5C 347.833,482.5 346.167,482.5 344.5,482.5C 344.737,481.209 344.404,480.209 343.5,479.5C 342.399,478.402 341.066,478.235 339.5,479C 338.331,480.836 336.664,482.002 334.5,482.5C 333.348,479.894 333.182,477.227 334,474.5C 335.067,473.809 336.234,473.309 337.5,473C 337.167,472.667 336.833,472.333 336.5,472C 340.821,471.501 345.154,471.334 349.5,471.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a8f7fe\",d:\"M 220.5,481.5 C 220.795,488.588 220.462,495.588 219.5,502.5C 219.167,502.5 218.833,502.5 218.5,502.5C 217.872,495.087 218.539,488.087 220.5,481.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0f0b15\",d:\"M 300.5,454.5 C 300.5,454.833 300.5,455.167 300.5,455.5C 299.833,474.833 299.167,494.167 298.5,513.5C 298.5,502.167 298.5,490.833 298.5,479.5C 298.169,470.808 298.502,462.141 299.5,453.5C 300.107,453.624 300.44,453.957 300.5,454.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ddaf1\",d:\"M 343.5,479.5 C 344.404,480.209 344.737,481.209 344.5,482.5C 346.167,482.5 347.833,482.5 349.5,482.5C 350.114,486.135 350.448,489.802 350.5,493.5C 347.959,492.897 345.626,492.897 343.5,493.5C 342.167,493.5 340.833,493.5 339.5,493.5C 339.5,491.5 339.5,489.5 339.5,487.5C 338.167,487.5 336.833,487.5 335.5,487.5C 335.5,486.167 335.5,484.833 335.5,483.5C 338.95,484.244 340.616,482.91 340.5,479.5C 341.5,479.5 342.5,479.5 343.5,479.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39dafb\",d:\"M 269.5,481.5 C 278.5,481.5 287.5,481.5 296.5,481.5C 296.812,488.422 296.479,495.256 295.5,502C 287.684,501.863 280.017,501.03 272.5,499.5C 267.357,496.425 262.357,493.092 257.5,489.5C 251.861,492.499 246.527,495.832 241.5,499.5C 239.05,499.298 236.717,499.631 234.5,500.5C 233.325,500.719 232.325,500.386 231.5,499.5C 232.262,499.089 233.262,498.923 234.5,499C 233.195,496.852 231.362,495.352 229,494.5C 227.395,497.274 225.228,497.94 222.5,496.5C 223.853,494.262 225.853,492.929 228.5,492.5C 229.386,491.675 229.719,490.675 229.5,489.5C 227.833,489.5 226.167,489.5 224.5,489.5C 224.5,488.167 224.5,486.833 224.5,485.5C 227.545,485.704 230.379,485.704 233,485.5C 235,486.167 237,486.833 239,487.5C 239.49,486.207 239.657,484.873 239.5,483.5C 244.783,482.269 254.783,481.603 269.5,481.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#221318\",d:\"M 217.5,427.5 C 217.5,428.167 217.5,428.833 217.5,429.5C 217.5,446.167 217.5,462.833 217.5,479.5C 217.5,484.167 217.5,488.833 217.5,493.5C 216.212,502.038 216.212,510.705 217.5,519.5C 216.833,519.833 216.167,520.167 215.5,520.5C 215.5,504.833 215.5,489.167 215.5,473.5C 215.5,472.5 215.5,471.5 215.5,470.5C 215.333,456.496 215.5,442.496 216,428.5C 216.383,427.944 216.883,427.611 217.5,427.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#477287\",d:\"M 730.5,480.5 C 734.392,481.446 738.059,482.946 741.5,485C 743.77,488.27 745.604,491.77 747,495.5C 747.5,529.165 747.667,562.832 747.5,596.5C 745.93,599.314 744.597,602.314 743.5,605.5C 738.753,609.409 733.419,612.242 727.5,614C 719.507,614.5 711.507,614.666 703.5,614.5C 645.167,613.833 586.833,613.167 528.5,612.5C 536.798,613.011 544.965,612.345 553,610.5C 554.301,610.96 555.634,611.294 557,611.5C 560.367,610.117 563.867,609.283 567.5,609C 565.19,608.503 562.857,608.337 560.5,608.5C 560.5,607.5 560.5,606.5 560.5,605.5C 557.167,605.5 553.833,605.5 550.5,605.5C 550.5,604.167 550.5,602.833 550.5,601.5C 557.37,599.979 563.87,600.646 570,603.5C 571.092,602.704 572.259,602.037 573.5,601.5C 577.847,603.651 582.347,603.984 587,602.5C 593.528,605.522 600.362,606.188 607.5,604.5C 607,604.167 606.5,603.833 606,603.5C 601.219,602.581 596.385,602.248 591.5,602.5C 591.5,601.5 591.5,600.5 591.5,599.5C 602.172,599.333 612.839,599.5 623.5,600C 624.944,601.064 626.611,601.564 628.5,601.5C 631.45,600.087 635.117,599.087 639.5,598.5C 647.167,598.5 654.833,598.5 662.5,598.5C 685.833,598.5 709.167,598.5 732.5,598.5C 732.5,597.5 732.5,596.5 732.5,595.5C 728.833,595.5 725.167,595.5 721.5,595.5C 721.082,594.778 720.416,594.278 719.5,594C 716.518,593.502 713.518,593.335 710.5,593.5C 710.5,592.167 710.5,590.833 710.5,589.5C 712.199,589.34 713.866,589.506 715.5,590C 718.512,592.667 721.845,592.834 725.5,590.5C 728.003,590.285 730.503,590.952 733,592.5C 737.026,591.346 738.859,593.013 738.5,597.5C 739.833,597.5 741.167,597.5 742.5,597.5C 742.636,594.65 742.969,591.817 743.5,589C 743.325,587.342 742.658,586.009 741.5,585C 743.658,583.688 743.991,582.022 742.5,580C 743.167,578.667 743.833,577.333 744.5,576C 742.747,569.074 742.414,561.907 743.5,554.5C 743.148,548.704 742.481,543.204 741.5,538C 741.611,536.278 742.111,536.112 743,537.5C 743.875,536.127 744.375,534.627 744.5,533C 743.115,519.726 742.615,506.559 743,493.5C 740.563,489.494 738.73,489.661 737.5,494C 738.746,509.782 738.746,525.448 737.5,541C 739.41,549.462 739.41,557.795 737.5,566C 738.645,572.752 738.811,579.586 738,586.5C 736.632,588.815 735.799,588.815 735.5,586.5C 735.818,585.353 736.484,584.519 737.5,584C 735.977,581.566 734.977,578.899 734.5,576C 730.167,575.333 725.833,575.333 721.5,576C 720.692,577.706 719.359,578.539 717.5,578.5C 718.167,581.167 718.833,583.833 719.5,586.5C 716.5,586.833 715.167,585.5 715.5,582.5C 713.142,582.253 711.142,582.919 709.5,584.5C 709.966,578.341 709.299,572.341 707.5,566.5C 703.345,564.815 699.012,564.149 694.5,564.5C 694.822,552.253 694.488,540.086 693.5,528C 686.409,526.888 679.242,526.388 672,526.5C 665.657,526.5 659.491,526.834 653.5,527.5C 652.597,533.189 652.264,538.856 652.5,544.5C 642.145,544.168 631.812,544.501 621.5,545.5C 620.546,551.104 620.212,556.771 620.5,562.5C 611.167,562.5 601.833,562.5 592.5,562.5C 595.349,558.855 598.682,558.521 602.5,561.5C 603.5,561.167 604.5,560.833 605.5,560.5C 606.629,558.725 607.629,557.058 608.5,555.5C 609.722,557.978 611.722,558.978 614.5,558.5C 614.855,555.933 615.521,553.433 616.5,551C 615.262,548.285 615.262,545.618 616.5,543C 614.744,542.798 613.078,542.298 611.5,541.5C 609.663,537.787 608.163,537.787 607,541.5C 605.071,539.315 605.571,537.649 608.5,536.5C 610.772,537.441 612.772,538.774 614.5,540.5C 615.287,539.758 615.953,538.925 616.5,538C 614.568,536.648 613.234,534.815 612.5,532.5C 611.614,533.325 611.281,534.325 611.5,535.5C 610.5,535.5 609.5,535.5 608.5,535.5C 608.244,533.063 607.577,530.729 606.5,528.5C 607.325,527.614 608.325,527.281 609.5,527.5C 610.167,531.5 610.833,531.5 611.5,527.5C 612.5,527.5 613.5,527.5 614.5,527.5C 615.131,531.319 616.464,534.319 618.5,536.5C 623.21,537.081 627.71,537.081 632,536.5C 632.333,537.167 632.667,537.833 633,538.5C 633.368,537.09 634.201,536.09 635.5,535.5C 639.348,537.328 642.515,539.328 645,541.5C 648.707,536.344 648.207,531.677 643.5,527.5C 642.52,524.914 642.187,522.247 642.5,519.5C 638.837,519.048 635.17,518.548 631.5,518C 634.146,517.503 636.813,517.336 639.5,517.5C 639.5,515.833 639.5,514.167 639.5,512.5C 636.833,512.5 634.167,512.5 631.5,512.5C 631.5,511.5 631.5,510.5 631.5,509.5C 632.817,507.713 632.484,506.046 630.5,504.5C 631.95,503.15 632.617,501.484 632.5,499.5C 633.675,499.281 634.675,499.614 635.5,500.5C 636.074,503.177 636.741,505.843 637.5,508.5C 638.578,504.096 640.245,500.096 642.5,496.5C 630.17,496.6 617.837,496.6 605.5,496.5C 605.5,497.833 605.5,499.167 605.5,500.5C 604.833,500.167 604.167,499.833 603.5,499.5C 601.354,495.971 598.687,495.638 595.5,498.5C 594.833,498.5 594.167,498.5 593.5,498.5C 593.5,497.833 593.167,497.5 592.5,497.5C 592.389,496.883 592.056,496.383 591.5,496C 586.511,495.501 581.511,495.334 576.5,495.5C 575.587,490.26 574.587,490.26 573.5,495.5C 572.833,492.833 572.167,490.167 571.5,487.5C 570.667,489.5 569.833,491.5 569,493.5C 568.97,490.385 567.803,487.885 565.5,486C 566.167,485.333 566.833,484.667 567.5,484C 562.136,483.171 556.802,483.337 551.5,484.5C 554.107,485.318 556.774,485.818 559.5,486C 556.443,486.256 553.443,486.756 550.5,487.5C 551.016,486.242 550.35,485.242 548.5,484.5C 547.289,485.274 547.289,486.107 548.5,487C 547.207,487.49 545.873,487.657 544.5,487.5C 544.034,485.799 544.034,484.299 544.5,483C 543.056,481.936 541.389,481.436 539.5,481.5C 536.453,481.562 533.786,482.562 531.5,484.5C 529.971,484.471 528.804,483.804 528,482.5C 523.069,483.099 517.569,483.432 511.5,483.5C 511.5,482.5 511.5,481.5 511.5,480.5C 532.844,480.167 554.177,480.5 575.5,481.5C 576.304,483.729 577.637,484.062 579.5,482.5C 581.441,482.804 583.107,483.637 584.5,485C 583.833,485.667 583.167,486.333 582.5,487C 584.727,487.121 586.56,487.954 588,489.5C 588.64,487.602 589.973,487.268 592,488.5C 598.237,486.976 604.57,485.976 611,485.5C 620.694,485.891 629.36,485.891 637,485.5C 638.955,484.547 640.622,483.213 642,481.5C 652.632,481.7 663.299,481.7 674,481.5C 677.061,483.576 679.895,483.576 682.5,481.5C 689.727,482.629 696.727,482.463 703.5,481C 712.704,480.574 721.704,480.407 730.5,480.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7a127\",d:\"M 177.5,488.5 C 180.482,488.963 183.482,489.296 186.5,489.5C 186.5,490.5 186.5,491.5 186.5,492.5C 183.314,491.403 180.314,490.07 177.5,488.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4fd0f9\",d:\"M 269.5,480.5 C 269.5,480.833 269.5,481.167 269.5,481.5C 254.783,481.603 244.783,482.269 239.5,483.5C 239.657,484.873 239.49,486.207 239,487.5C 237,486.833 235,486.167 233,485.5C 230.379,485.704 227.545,485.704 224.5,485.5C 224.5,486.833 224.5,488.167 224.5,489.5C 226.167,489.5 227.833,489.5 229.5,489.5C 229.719,490.675 229.386,491.675 228.5,492.5C 225.853,492.929 223.853,494.262 222.5,496.5C 225.228,497.94 227.395,497.274 229,494.5C 231.362,495.352 233.195,496.852 234.5,499C 233.262,498.923 232.262,499.089 231.5,499.5C 232.325,500.386 233.325,500.719 234.5,500.5C 229.668,501.4 224.668,502.066 219.5,502.5C 220.462,495.588 220.795,488.588 220.5,481.5C 236.809,480.576 253.143,480.243 269.5,480.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#98c6de\",d:\"M 20.5,149.5 C 20.5,349.833 20.5,550.167 20.5,750.5C 20.3333,801.501 20.5,852.501 21,903.5C 21.5046,905.518 22.0046,907.518 22.5,909.5C 23.5347,913.909 24.868,918.242 26.5,922.5C 25.3303,920.721 23.6636,919.721 21.5,919.5C 21.7682,915.574 20.9349,911.907 19,908.5C 18.3333,656.167 18.3333,403.833 19,151.5C 19.2784,150.584 19.7784,149.918 20.5,149.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eedfe3\",d:\"M 297.5,519.5 C 297.5,520.167 297.5,520.833 297.5,521.5C 295.046,520.773 292.713,519.773 290.5,518.5C 290.047,517.542 289.381,516.708 288.5,516C 285.46,515.404 282.794,514.237 280.5,512.5C 273.076,506.919 265.242,501.919 257,497.5C 246.062,503.956 235.562,510.956 225.5,518.5C 222.736,519.643 220.069,520.977 217.5,522.5C 217.5,521.5 217.5,520.5 217.5,519.5C 230.162,509.834 243.495,501.167 257.5,493.5C 270.823,502.163 284.156,510.829 297.5,519.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#172f5e\",d:\"M 297.5,479.5 C 297.833,479.5 298.167,479.5 298.5,479.5C 298.5,490.833 298.5,502.167 298.5,513.5C 298.795,515.735 298.461,517.735 297.5,519.5C 284.156,510.829 270.823,502.163 257.5,493.5C 243.495,501.167 230.162,509.834 217.5,519.5C 216.212,510.705 216.212,502.038 217.5,493.5C 217.5,497.167 217.5,500.833 217.5,504.5C 217.5,506.833 217.5,509.167 217.5,511.5C 217.5,512.833 217.5,514.167 217.5,515.5C 219.308,515.509 220.975,515.009 222.5,514C 226.399,510.589 230.399,507.422 234.5,504.5C 237.117,503.214 239.45,501.547 241.5,499.5C 246.527,495.832 251.861,492.499 257.5,489.5C 262.357,493.092 267.357,496.425 272.5,499.5C 278.628,504.322 284.961,508.656 291.5,512.5C 293.123,513.779 294.79,515.113 296.5,516.5C 297.492,512.217 297.826,507.884 297.5,503.5C 297.5,495.833 297.5,488.167 297.5,480.5C 297.5,480.167 297.5,479.833 297.5,479.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8e3eb\",d:\"M 704.5,499.5 C 706.514,507.657 703.681,510.324 696,507.5C 694.426,504.508 694.259,501.508 695.5,498.5C 698.935,495.527 701.935,495.86 704.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#342315\",d:\"M 176.5,488.5 C 176.833,488.5 177.167,488.5 177.5,488.5C 180.314,490.07 183.314,491.403 186.5,492.5C 187.401,494.727 189.067,495.727 191.5,495.5C 193.427,499.123 195.427,502.789 197.5,506.5C 197.756,510.269 197.423,513.936 196.5,517.5C 195.075,519.031 194.409,518.698 194.5,516.5C 196.136,505.164 191.802,497.164 181.5,492.5C 177.956,490.431 174.29,490.098 170.5,491.5C 158.349,494.98 153.015,502.98 154.5,515.5C 155.167,517.5 155.833,519.5 156.5,521.5C 156.5,522.167 156.167,522.5 155.5,522.5C 153.043,518.235 152.043,513.568 152.5,508.5C 154.718,494.952 162.718,488.285 176.5,488.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3f3f4\",d:\"M 170.5,491.5 C 174.198,491.552 177.865,491.886 181.5,492.5C 191.802,497.164 196.136,505.164 194.5,516.5C 193.833,516.5 193.5,516.833 193.5,517.5C 189.064,514.106 184.397,510.939 179.5,508C 178.215,505.577 176.382,503.744 174,502.5C 170.354,504.979 167.188,507.979 164.5,511.5C 161.112,512.348 158.779,514.348 157.5,517.5C 156.5,516.833 155.5,516.167 154.5,515.5C 153.015,502.98 158.349,494.98 170.5,491.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#66666d\",d:\"M 170.5,491.5 C 174.29,490.098 177.956,490.431 181.5,492.5C 177.865,491.886 174.198,491.552 170.5,491.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#caebf2\",d:\"M 603.5,499.5 C 606.109,506.392 603.775,509.225 596.5,508C 595.748,507.329 595.414,506.496 595.5,505.5C 595.369,504.624 595.702,503.957 596.5,503.5C 597.386,504.325 597.719,505.325 597.5,506.5C 599.144,506.714 600.644,506.38 602,505.5C 602.495,503.527 602.662,501.527 602.5,499.5C 599.675,499.162 597.508,500.162 596,502.5C 595.51,501.207 595.343,499.873 595.5,498.5C 598.687,495.638 601.354,495.971 603.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0ecf3\",d:\"M 713.5,499.5 C 712.142,499.822 710.475,499.822 708.5,499.5C 708.36,501.124 709.027,502.29 710.5,503C 709.692,503.308 709.025,503.808 708.5,504.5C 709.499,506.505 708.832,507.838 706.5,508.5C 706.5,504.833 706.5,501.167 706.5,497.5C 708.288,496.378 710.288,496.211 712.5,497C 713.252,497.671 713.586,498.504 713.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e2f0f8\",d:\"M 732.5,475.5 C 741.411,476.118 747.744,480.452 751.5,488.5C 751.963,491.482 752.296,494.482 752.5,497.5C 751.833,576.833 751.167,656.167 750.5,735.5C 750.833,654.665 750.499,573.998 749.5,493.5C 746.667,484.33 740.667,478.664 731.5,476.5C 731.5,475.833 731.833,475.5 732.5,475.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4af25\",d:\"M 176.5,488.5 C 162.718,488.285 154.718,494.952 152.5,508.5C 151.532,510.607 151.198,512.941 151.5,515.5C 150.844,514.378 150.511,513.045 150.5,511.5C 151.132,504.612 153.132,498.279 156.5,492.5C 157.192,493.025 157.692,493.692 158,494.5C 158.333,492.5 158.667,490.5 159,488.5C 164.387,488.103 170.22,488.103 176.5,488.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a3049\",d:\"M 447.5,468.5 C 444.821,469.226 442.154,470.059 439.5,471C 434.195,474.253 434.862,475.753 441.5,475.5C 441.5,475.833 441.5,476.167 441.5,476.5C 434.55,477.778 429.217,481.445 425.5,487.5C 425.631,486.761 425.464,486.094 425,485.5C 423.107,488.618 421.774,491.951 421,495.5C 420.551,527.027 420.384,558.36 420.5,589.5C 419.432,588.566 418.099,588.232 416.5,588.5C 416.649,589.552 416.483,590.552 416,591.5C 414.414,590.624 412.914,589.624 411.5,588.5C 410.614,589.325 410.281,590.325 410.5,591.5C 409.325,591.719 408.325,591.386 407.5,590.5C 407.846,589.304 408.346,589.304 409,590.5C 409.798,588.741 409.631,587.074 408.5,585.5C 407.742,586.811 406.742,587.311 405.5,587C 406.337,585.989 406.67,584.822 406.5,583.5C 408.849,583.542 410.182,582.375 410.5,580C 409.077,578.588 409.244,577.421 411,576.5C 411.167,573.833 411.333,571.167 411.5,568.5C 409.489,559.788 408.156,550.788 407.5,541.5C 407.943,539.152 408.276,536.485 408.5,533.5C 406.463,521.01 405.963,508.343 407,495.5C 408.306,498.612 409.472,501.779 410.5,505C 409.006,509.36 408.34,513.86 408.5,518.5C 410.74,528.192 412.406,538.859 413.5,550.5C 413.476,553.421 413.143,556.254 412.5,559C 413.448,559.483 414.448,559.649 415.5,559.5C 415.5,564.5 415.5,569.5 415.5,574.5C 416.5,574.5 417.5,574.5 418.5,574.5C 418.333,547.498 418.5,520.498 419,493.5C 420.229,489.613 420.396,485.613 419.5,481.5C 417.876,481.64 416.71,480.973 416,479.5C 415.169,472.144 415.335,464.811 416.5,457.5C 419.167,454.5 419.167,451.5 416.5,448.5C 418.045,447.548 419.712,447.215 421.5,447.5C 422.138,449.46 422.138,451.293 421.5,453C 424.695,456.023 428.028,458.69 431.5,461C 431.355,461.772 431.022,462.439 430.5,463C 428.833,463.333 427.167,463.667 425.5,464C 427.727,464.121 429.56,464.954 431,466.5C 431.725,465.941 432.558,465.608 433.5,465.5C 437.1,465.769 440.433,466.769 443.5,468.5C 444.748,467.96 445.915,467.293 447,466.5C 447.464,467.094 447.631,467.761 447.5,468.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cfecf2\",d:\"M 631.5,509.5 C 630.5,509.5 629.5,509.5 628.5,509.5C 627.167,505.833 627.167,502.167 628.5,498.5C 627.5,498.5 626.5,498.5 625.5,498.5C 625.5,501.833 625.5,505.167 625.5,508.5C 622.167,508.5 618.833,508.5 615.5,508.5C 615.339,505.472 616.006,502.639 617.5,500C 617.167,499.5 616.833,499 616.5,498.5C 615.976,502.597 613.642,504.597 609.5,504.5C 609.762,505.978 609.429,507.311 608.5,508.5C 606.599,506.272 605.599,503.605 605.5,500.5C 605.5,499.167 605.5,497.833 605.5,496.5C 617.837,496.6 630.17,496.6 642.5,496.5C 640.245,500.096 638.578,504.096 637.5,508.5C 636.741,505.843 636.074,503.177 635.5,500.5C 634.675,499.614 633.675,499.281 632.5,499.5C 632.617,501.484 631.95,503.15 630.5,504.5C 632.484,506.046 632.817,507.713 631.5,509.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea9f16\",d:\"M 323.5,493.5 C 324.401,494.29 325.068,495.29 325.5,496.5C 327.146,499.81 329.48,502.477 332.5,504.5C 333.544,506.843 335.21,508.51 337.5,509.5C 335.473,509.662 333.473,509.495 331.5,509C 329.589,506.378 327.255,504.211 324.5,502.5C 322.531,499.61 322.198,496.61 323.5,493.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#97b9c3\",d:\"M 713.5,499.5 C 714.167,499.5 714.833,499.5 715.5,499.5C 715.693,502.308 716.36,504.975 717.5,507.5C 715.265,507.205 713.265,507.539 711.5,508.5C 709.931,508.815 708.265,508.815 706.5,508.5C 708.832,507.838 709.499,506.505 708.5,504.5C 709.025,503.808 709.692,503.308 710.5,503C 709.027,502.29 708.36,501.124 708.5,499.5C 710.475,499.822 712.142,499.822 713.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#309dea\",d:\"M 80.5,495.5 C 77.7861,498.215 74.7861,500.549 71.5,502.5C 66.6997,503.967 62.6997,506.634 59.5,510.5C 57.6115,511.322 55.6115,512.155 53.5,513C 52.2381,515.276 50.5714,517.109 48.5,518.5C 47.5386,516.735 47.2053,514.735 47.5,512.5C 49.0481,512.179 49.7148,511.179 49.5,509.5C 51.5777,506.949 54.2444,505.116 57.5,504C 64.8959,500.644 72.5626,497.811 80.5,495.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bf515c\",d:\"M 79.5,500.5 C 78.0452,504.786 75.0452,506.953 70.5,507C 68.7885,509.519 66.4552,511.019 63.5,511.5C 65.8061,509.861 67.8061,507.861 69.5,505.5C 72.8333,503.833 76.1667,502.167 79.5,500.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#132d5a\",d:\"M 130.5,376.5 C 131.552,376.351 132.552,376.517 133.5,377C 132.506,400.425 132.173,423.925 132.5,447.5C 132.5,455.167 132.5,462.833 132.5,470.5C 132.5,471.5 132.5,472.5 132.5,473.5C 131.833,488.833 131.167,504.167 130.5,519.5C 116.861,510.342 102.861,501.676 88.5,493.5C 87.2867,493.747 86.62,494.414 86.5,495.5C 85.1667,495.5 84.5,496.167 84.5,497.5C 82.5659,498.11 80.8993,499.11 79.5,500.5C 76.1667,502.167 72.8333,503.833 69.5,505.5C 70.1667,504.5 70.8333,503.5 71.5,502.5C 74.7861,500.549 77.7861,498.215 80.5,495.5C 82.8041,493.343 85.4707,491.676 88.5,490.5C 91.1002,491.023 93.4335,492.023 95.5,493.5C 98.4751,496.323 101.808,498.656 105.5,500.5C 113.744,505.394 121.91,510.728 130,516.5C 130.5,482.835 130.667,449.168 130.5,415.5C 130.5,402.5 130.5,389.5 130.5,376.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f739f\",d:\"M 95.5,493.5 C 97.1667,494.167 98.8333,494.833 100.5,495.5C 102.473,496.806 104.139,498.473 105.5,500.5C 101.808,498.656 98.4751,496.323 95.5,493.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3d153\",d:\"M 137.5,471.5 C 137.179,473.048 136.179,473.715 134.5,473.5C 134.5,508.833 134.5,544.167 134.5,579.5C 134.167,579.5 133.833,579.5 133.5,579.5C 133.5,544.167 133.5,508.833 133.5,473.5C 134.514,472.326 135.847,471.66 137.5,471.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e5f78\",d:\"M 395.5,583.5 C 394.96,540.486 394.293,497.486 393.5,454.5C 394.776,429.109 394.776,403.776 393.5,378.5C 394.077,377.227 394.743,377.227 395.5,378.5C 396.098,379.795 396.598,381.128 397,382.5C 398.694,378.604 399.86,378.938 400.5,383.5C 401.086,383.291 401.586,382.957 402,382.5C 402.416,405.514 401.916,428.514 400.5,451.5C 403.282,493.97 403.116,536.303 400,578.5C 399.667,579.5 399.333,580.5 399,581.5C 398.667,581.167 398.333,580.833 398,580.5C 397.623,581.942 396.79,582.942 395.5,583.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cee7ec\",d:\"M 592.5,497.5 C 593.167,497.5 593.5,497.833 593.5,498.5C 593.5,500.5 593.5,502.5 593.5,504.5C 593.5,505.833 593.5,507.167 593.5,508.5C 592.5,508.5 591.5,508.5 590.5,508.5C 589.889,502.108 588.555,502.108 586.5,508.5C 585.833,506.167 585.167,503.833 584.5,501.5C 582.344,503.629 580.677,505.962 579.5,508.5C 578.5,508.5 577.5,508.5 576.5,508.5C 576.5,504.833 576.5,501.167 576.5,497.5C 581.833,497.5 587.167,497.5 592.5,497.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1e3f1\",d:\"M 716.5,509.5 C 714.585,509.784 712.919,509.451 711.5,508.5C 713.265,507.539 715.265,507.205 717.5,507.5C 716.36,504.975 715.693,502.308 715.5,499.5C 715.414,498.504 715.748,497.671 716.5,497C 718.473,496.505 720.473,496.338 722.5,496.5C 722.5,497.5 722.5,498.5 722.5,499.5C 720.833,499.5 719.167,499.5 717.5,499.5C 717.231,501.429 717.731,503.095 719,504.5C 719.71,503.027 720.876,502.36 722.5,502.5C 722.601,506.727 720.601,509.061 716.5,509.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#31abea\",d:\"M 269.5,481.5 C 269.5,481.167 269.5,480.833 269.5,480.5C 278.833,480.5 288.167,480.5 297.5,480.5C 297.5,488.167 297.5,495.833 297.5,503.5C 296.883,503.611 296.383,503.944 296,504.5C 295.667,506.5 295.333,508.5 295,510.5C 294.184,511.823 293.017,512.489 291.5,512.5C 284.961,508.656 278.628,504.322 272.5,499.5C 280.017,501.03 287.684,501.863 295.5,502C 296.479,495.256 296.812,488.422 296.5,481.5C 287.5,481.5 278.5,481.5 269.5,481.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6a370d\",d:\"M 325.5,496.5 C 326.167,496.5 326.833,496.5 327.5,496.5C 333.649,504.382 341.649,506.716 351.5,503.5C 352.167,503.5 352.833,503.5 353.5,503.5C 350.245,505.566 346.579,506.566 342.5,506.5C 339.02,506.418 335.687,505.752 332.5,504.5C 329.48,502.477 327.146,499.81 325.5,496.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d1ecf1\",d:\"M 666.5,499.5 C 668.057,506.442 665.39,509.275 658.5,508C 656.867,505.14 655.2,504.973 653.5,507.5C 651.257,508.474 648.924,508.808 646.5,508.5C 646.351,507.448 646.517,506.448 647,505.5C 648.699,506.406 650.533,506.739 652.5,506.5C 652.616,503.09 650.95,501.756 647.5,502.5C 647.5,500.5 647.5,498.5 647.5,496.5C 649.5,496.5 651.5,496.5 653.5,496.5C 653.5,497.5 653.5,498.5 653.5,499.5C 652.022,499.238 650.689,499.571 649.5,500.5C 651.108,501.318 652.775,501.985 654.5,502.5C 656.201,499.965 658.367,497.965 661,496.5C 663.215,496.9 665.048,497.9 666.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42747b\",d:\"M 659.5,499.5 C 660.833,499.5 662.167,499.5 663.5,499.5C 663.5,501.833 663.5,504.167 663.5,506.5C 662.167,506.5 660.833,506.5 659.5,506.5C 659.5,504.167 659.5,501.833 659.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#269aee\",d:\"M 234.5,504.5 C 230.399,507.422 226.399,510.589 222.5,514C 220.975,515.009 219.308,515.509 217.5,515.5C 217.5,514.167 217.5,512.833 217.5,511.5C 218.833,511.5 220.167,511.5 221.5,511.5C 221.192,509.076 221.526,506.743 222.5,504.5C 224.773,506.663 227.107,506.829 229.5,505C 226.059,504.164 225.892,503.331 229,502.5C 230.939,502.954 232.772,503.621 234.5,504.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3eaf0\",d:\"M 676.5,507.5 C 674.833,508.167 673.167,508.833 671.5,509.5C 669.824,508.817 669.157,507.483 669.5,505.5C 669.54,502.119 669.207,498.786 668.5,495.5C 669.833,495.5 671.167,495.5 672.5,495.5C 672.5,499.167 672.5,502.833 672.5,506.5C 674.099,506.232 675.432,506.566 676.5,507.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3ebec\",d:\"M 692.5,497.5 C 692.719,498.675 692.386,499.675 691.5,500.5C 690.264,499.754 688.93,499.421 687.5,499.5C 687.5,500.5 687.5,501.5 687.5,502.5C 691.176,501.92 693.176,503.42 693.5,507C 693.316,508.376 692.649,509.209 691.5,509.5C 688.929,508.238 688.929,506.905 691.5,505.5C 690.758,504.713 689.925,504.047 689,503.5C 688.727,505.101 688.227,506.601 687.5,508C 684.304,508.805 681.304,508.638 678.5,507.5C 678.448,503.802 678.114,500.135 677.5,496.5C 682.702,497.182 687.702,497.516 692.5,497.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#319ddf\",d:\"M 129.5,415.5 C 129.833,415.5 130.167,415.5 130.5,415.5C 130.667,449.168 130.5,482.835 130,516.5C 121.91,510.728 113.744,505.394 105.5,500.5C 104.139,498.473 102.473,496.806 100.5,495.5C 102.927,495.523 105.26,496.023 107.5,497C 113.712,501.205 120.378,504.205 127.5,506C 128.191,504.933 128.691,503.766 129,502.5C 129.5,491.505 129.667,480.505 129.5,469.5C 129.5,451.5 129.5,433.5 129.5,415.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f282d\",d:\"M 86.5,495.5 C 100.995,503.913 115.328,512.58 129.5,521.5C 129.5,522.167 129.5,522.833 129.5,523.5C 126.705,522.937 124.372,521.604 122.5,519.5C 116.936,516.616 111.602,513.282 106.5,509.5C 104.885,508.846 103.218,508.346 101.5,508C 96.4355,503.471 90.7688,499.971 84.5,497.5C 84.5,496.167 85.1667,495.5 86.5,495.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2bb2e9\",d:\"M 241.5,499.5 C 239.45,501.547 237.117,503.214 234.5,504.5C 232.772,503.621 230.939,502.954 229,502.5C 225.892,503.331 226.059,504.164 229.5,505C 227.107,506.829 224.773,506.663 222.5,504.5C 221.526,506.743 221.192,509.076 221.5,511.5C 220.167,511.5 218.833,511.5 217.5,511.5C 217.5,509.167 217.5,506.833 217.5,504.5C 218.338,504.158 218.672,503.492 218.5,502.5C 218.833,502.5 219.167,502.5 219.5,502.5C 224.668,502.066 229.668,501.4 234.5,500.5C 236.717,499.631 239.05,499.298 241.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d38114\",d:\"M 363.5,483.5 C 364.651,488.65 364.817,493.984 364,499.5C 362.479,501.89 360.979,504.223 359.5,506.5C 352.436,509.103 345.102,510.103 337.5,509.5C 335.21,508.51 333.544,506.843 332.5,504.5C 335.687,505.752 339.02,506.418 342.5,506.5C 346.579,506.566 350.245,505.566 353.5,503.5C 361.564,499.361 364.897,492.694 363.5,483.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#234990\",d:\"M 71.5,502.5 C 70.8333,503.5 70.1667,504.5 69.5,505.5C 66.1933,507.12 62.86,508.787 59.5,510.5C 62.6997,506.634 66.6997,503.967 71.5,502.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cedbe8\",d:\"M 130.5,519.5 C 130.672,520.492 130.338,521.158 129.5,521.5C 115.328,512.58 100.995,503.913 86.5,495.5C 86.62,494.414 87.2867,493.747 88.5,493.5C 102.861,501.676 116.861,510.342 130.5,519.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#218ada\",d:\"M 297.5,503.5 C 297.826,507.884 297.492,512.217 296.5,516.5C 294.79,515.113 293.123,513.779 291.5,512.5C 293.017,512.489 294.184,511.823 295,510.5C 295.333,508.5 295.667,506.5 296,504.5C 296.383,503.944 296.883,503.611 297.5,503.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc685c\",d:\"M 84.5,497.5 C 90.7688,499.971 96.4355,503.471 101.5,508C 103.218,508.346 104.885,508.846 106.5,509.5C 111.602,513.282 116.936,516.616 122.5,519.5C 122.968,522.966 124.968,524.632 128.5,524.5C 128.5,539.5 128.5,554.5 128.5,569.5C 127.819,571.158 126.985,572.825 126,574.5C 124.667,573.833 123.667,572.833 123,571.5C 122.586,571.957 122.086,572.291 121.5,572.5C 120.289,571.726 120.289,570.893 121.5,570C 119.667,568.833 118.167,567.333 117,565.5C 113.598,566.789 109.931,567.456 106,567.5C 92.6624,567.071 79.4957,566.405 66.5,565.5C 81.5,565.5 96.5,565.5 111.5,565.5C 111.5,564.167 111.5,562.833 111.5,561.5C 112.043,561.44 112.376,561.107 112.5,560.5C 111.846,558.885 111.346,557.218 111,555.5C 110.424,558.124 109.09,558.791 107,557.5C 106.059,554.185 105.226,550.852 104.5,547.5C 107.216,543.841 106.55,540.841 102.5,538.5C 101.208,536.745 100.208,534.745 99.5,532.5C 94.5255,529.766 89.1921,528.933 83.5,530C 82.944,530.383 82.6107,530.883 82.5,531.5C 80.4176,531.472 78.5843,532.139 77,533.5C 75.3578,539.145 75.1912,544.812 76.5,550.5C 77.5,550.5 78.5,550.5 79.5,550.5C 79.8333,551.5 80.5,552.167 81.5,552.5C 82.4132,554.086 82.4132,555.586 81.5,557C 80.2575,557.311 79.2575,556.811 78.5,555.5C 77.0488,557.559 75.0488,558.559 72.5,558.5C 71.9114,555.496 70.9114,552.663 69.5,550C 70.9634,544.438 70.7967,538.938 69,533.5C 68.3109,534.357 67.4776,535.023 66.5,535.5C 64.4802,555.359 63.3136,555.359 63,535.5C 64.6279,534.181 64.4613,532.848 62.5,531.5C 64.1029,528.656 64.6029,525.656 64,522.5C 61.631,522.273 59.131,522.107 56.5,522C 55.6634,520.989 55.33,519.822 55.5,518.5C 56.8816,517.199 58.5483,516.366 60.5,516C 61.2666,514.53 61.9332,513.03 62.5,511.5C 62.8333,511.5 63.1667,511.5 63.5,511.5C 66.4552,511.019 68.7885,509.519 70.5,507C 75.0452,506.953 78.0452,504.786 79.5,500.5C 80.8993,499.11 82.5659,498.11 84.5,497.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#447896\",d:\"M 390.5,454.5 C 391.5,454.5 392.5,454.5 393.5,454.5C 394.293,497.486 394.96,540.486 395.5,583.5C 395.657,584.873 395.49,586.207 395,587.5C 390.838,595.17 384.338,599.17 375.5,599.5C 376.974,598.325 378.64,597.325 380.5,596.5C 378.726,593.15 379.726,591.484 383.5,591.5C 383.5,590.5 383.5,589.5 383.5,588.5C 384.189,587.226 385.023,587.226 386,588.5C 388.312,584.52 389.478,580.186 389.5,575.5C 389.5,574.5 389.5,573.5 389.5,572.5C 390.499,533.337 390.832,494.004 390.5,454.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#487688\",d:\"M 511.5,483.5 C 517.569,483.432 523.069,483.099 528,482.5C 528.804,483.804 529.971,484.471 531.5,484.5C 533.786,482.562 536.453,481.562 539.5,481.5C 541.389,481.436 543.056,481.936 544.5,483C 544.034,484.299 544.034,485.799 544.5,487.5C 545.873,487.657 547.207,487.49 548.5,487C 547.289,486.107 547.289,485.274 548.5,484.5C 550.35,485.242 551.016,486.242 550.5,487.5C 553.443,486.756 556.443,486.256 559.5,486C 556.774,485.818 554.107,485.318 551.5,484.5C 556.802,483.337 562.136,483.171 567.5,484C 566.833,484.667 566.167,485.333 565.5,486C 567.803,487.885 568.97,490.385 569,493.5C 569.833,491.5 570.667,489.5 571.5,487.5C 572.167,490.167 572.833,492.833 573.5,495.5C 574.587,490.26 575.587,490.26 576.5,495.5C 581.511,495.334 586.511,495.501 591.5,496C 592.056,496.383 592.389,496.883 592.5,497.5C 587.167,497.5 581.833,497.5 576.5,497.5C 576.5,501.167 576.5,504.833 576.5,508.5C 577.5,508.5 578.5,508.5 579.5,508.5C 580.677,505.962 582.344,503.629 584.5,501.5C 585.167,503.833 585.833,506.167 586.5,508.5C 588.555,502.108 589.889,502.108 590.5,508.5C 591.5,508.5 592.5,508.5 593.5,508.5C 593.5,507.167 593.5,505.833 593.5,504.5C 594.167,504.833 594.833,505.167 595.5,505.5C 595.414,506.496 595.748,507.329 596.5,508C 603.775,509.225 606.109,506.392 603.5,499.5C 604.167,499.833 604.833,500.167 605.5,500.5C 605.599,503.605 606.599,506.272 608.5,508.5C 609.429,507.311 609.762,505.978 609.5,504.5C 613.642,504.597 615.976,502.597 616.5,498.5C 616.833,499 617.167,499.5 617.5,500C 616.006,502.639 615.339,505.472 615.5,508.5C 618.833,508.5 622.167,508.5 625.5,508.5C 625.5,505.167 625.5,501.833 625.5,498.5C 626.5,498.5 627.5,498.5 628.5,498.5C 627.167,502.167 627.167,505.833 628.5,509.5C 629.5,509.5 630.5,509.5 631.5,509.5C 631.5,510.5 631.5,511.5 631.5,512.5C 634.167,512.5 636.833,512.5 639.5,512.5C 639.5,514.167 639.5,515.833 639.5,517.5C 636.813,517.336 634.146,517.503 631.5,518C 635.17,518.548 638.837,519.048 642.5,519.5C 642.187,522.247 642.52,524.914 643.5,527.5C 648.207,531.677 648.707,536.344 645,541.5C 642.515,539.328 639.348,537.328 635.5,535.5C 634.201,536.09 633.368,537.09 633,538.5C 632.667,537.833 632.333,537.167 632,536.5C 627.71,537.081 623.21,537.081 618.5,536.5C 616.464,534.319 615.131,531.319 614.5,527.5C 613.5,527.5 612.5,527.5 611.5,527.5C 610.833,531.5 610.167,531.5 609.5,527.5C 608.325,527.281 607.325,527.614 606.5,528.5C 607.577,530.729 608.244,533.063 608.5,535.5C 609.5,535.5 610.5,535.5 611.5,535.5C 611.281,534.325 611.614,533.325 612.5,532.5C 613.234,534.815 614.568,536.648 616.5,538C 615.953,538.925 615.287,539.758 614.5,540.5C 612.772,538.774 610.772,537.441 608.5,536.5C 605.571,537.649 605.071,539.315 607,541.5C 608.163,537.787 609.663,537.787 611.5,541.5C 613.078,542.298 614.744,542.798 616.5,543C 615.262,545.618 615.262,548.285 616.5,551C 615.521,553.433 614.855,555.933 614.5,558.5C 611.722,558.978 609.722,557.978 608.5,555.5C 607.629,557.058 606.629,558.725 605.5,560.5C 604.5,560.833 603.5,561.167 602.5,561.5C 598.682,558.521 595.349,558.855 592.5,562.5C 592.189,563.478 591.522,564.145 590.5,564.5C 589.502,574.144 589.168,583.81 589.5,593.5C 581.981,593.175 574.648,593.508 567.5,594.5C 564.05,593.756 562.384,595.09 562.5,598.5C 588.167,598.5 613.833,598.5 639.5,598.5C 635.117,599.087 631.45,600.087 628.5,601.5C 626.611,601.564 624.944,601.064 623.5,600C 612.839,599.5 602.172,599.333 591.5,599.5C 591.5,600.5 591.5,601.5 591.5,602.5C 596.385,602.248 601.219,602.581 606,603.5C 606.5,603.833 607,604.167 607.5,604.5C 600.362,606.188 593.528,605.522 587,602.5C 582.347,603.984 577.847,603.651 573.5,601.5C 572.259,602.037 571.092,602.704 570,603.5C 563.87,600.646 557.37,599.979 550.5,601.5C 550.5,602.833 550.5,604.167 550.5,605.5C 553.833,605.5 557.167,605.5 560.5,605.5C 560.5,606.5 560.5,607.5 560.5,608.5C 562.857,608.337 565.19,608.503 567.5,609C 563.867,609.283 560.367,610.117 557,611.5C 555.634,611.294 554.301,610.96 553,610.5C 544.965,612.345 536.798,613.011 528.5,612.5C 501.49,612.706 474.49,612.372 447.5,611.5C 439.788,610.789 433.455,607.455 428.5,601.5C 428.5,600.833 428.5,600.167 428.5,599.5C 428.167,598.167 427.833,596.833 427.5,595.5C 428.231,595.058 429.231,594.891 430.5,595C 431.022,594.439 431.355,593.772 431.5,593C 430.211,584.625 429.544,576.125 429.5,567.5C 429.667,559.5 429.833,551.5 430,543.5C 430.029,556.917 430.862,570.25 432.5,583.5C 432.291,584.086 431.957,584.586 431.5,585C 434.362,585.24 436.695,586.407 438.5,588.5C 439.298,586.922 439.798,585.256 440,583.5C 440.333,584.833 440.667,586.167 441,587.5C 441.174,569.26 441.674,551.093 442.5,533C 441.009,530.978 441.342,529.312 443.5,528C 441.967,523.012 440.967,517.846 440.5,512.5C 438.685,512.354 436.685,512.188 434.5,512C 434.985,514.68 435.318,517.347 435.5,520C 433.662,521.325 432.662,523.159 432.5,525.5C 436.637,531.619 436.47,537.619 432,543.5C 430.266,535.485 429.766,527.485 430.5,519.5C 428.761,510.865 428.428,502.198 429.5,493.5C 431.415,495.071 432.415,497.071 432.5,499.5C 434.638,499.703 436.305,500.703 437.5,502.5C 438.316,499.453 440.316,497.787 443.5,497.5C 441.922,496.702 440.256,496.202 438.5,496C 439.337,494.989 439.67,493.822 439.5,492.5C 440.833,492.5 442.167,492.5 443.5,492.5C 443.5,493.5 443.5,494.5 443.5,495.5C 446.489,494.917 449.155,493.584 451.5,491.5C 452.78,493.724 452.447,495.724 450.5,497.5C 447.01,499.455 443.344,500.955 439.5,502C 442.167,502.333 444.833,502.667 447.5,503C 448.451,503.718 448.617,504.551 448,505.5C 445.141,502.978 442.308,502.978 439.5,505.5C 441.743,506.474 444.076,506.808 446.5,506.5C 446.351,507.552 446.517,508.552 447,509.5C 447.69,508.262 448.19,508.262 448.5,509.5C 447.851,523.124 447.517,536.79 447.5,550.5C 447.501,563.851 448.167,576.851 449.5,589.5C 450.226,592.288 451.893,594.288 454.5,595.5C 455.609,596.29 456.942,596.79 458.5,597C 489.669,597.831 520.669,597.664 551.5,596.5C 552.959,596.567 554.292,596.234 555.5,595.5C 560.079,594.255 563.079,591.255 564.5,586.5C 562.899,564.545 562.065,542.545 562,520.5C 561.626,518.509 560.793,516.842 559.5,515.5C 558.985,513.106 558.319,510.772 557.5,508.5C 557.592,504.636 558.092,500.97 559,497.5C 557.745,498.211 556.579,499.044 555.5,500C 551.514,500.499 547.514,500.666 543.5,500.5C 543.719,499.325 543.386,498.325 542.5,497.5C 541.571,498.689 541.238,500.022 541.5,501.5C 540.167,501.5 538.833,501.5 537.5,501.5C 537.898,496.537 536.231,495.537 532.5,498.5C 533.246,499.736 533.579,501.07 533.5,502.5C 527.813,501.935 522.146,501.268 516.5,500.5C 503.219,501.133 489.719,501.799 476,502.5C 473.966,502.646 472.299,501.98 471,500.5C 467.76,502.036 464.76,501.703 462,499.5C 459.959,500.423 457.792,500.756 455.5,500.5C 458.023,499.616 460.69,498.782 463.5,498C 463.043,497.586 462.709,497.086 462.5,496.5C 463.63,493.387 464.13,490.387 464,487.5C 466.064,488.591 468.231,488.758 470.5,488C 468.833,487.667 467.167,487.333 465.5,487C 466.167,486.667 466.833,486.333 467.5,486C 465.956,485.71 464.623,485.044 463.5,484C 467.288,483.565 470.788,483.731 474,484.5C 480.93,481.656 488.097,480.989 495.5,482.5C 497.453,488.804 499.287,489.137 501,483.5C 502.648,485.028 504.648,485.695 507,485.5C 508.986,485.431 510.486,484.765 511.5,483.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#416370\",d:\"M 618.5,504.5 C 619.978,504.238 621.311,504.571 622.5,505.5C 621.833,505.833 621.167,506.167 620.5,506.5C 619.287,506.253 618.62,505.586 618.5,504.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#94b3be\",d:\"M 593.5,498.5 C 594.167,498.5 594.833,498.5 595.5,498.5C 595.343,499.873 595.51,501.207 596,502.5C 597.508,500.162 599.675,499.162 602.5,499.5C 602.662,501.527 602.495,503.527 602,505.5C 600.644,506.38 599.144,506.714 597.5,506.5C 597.719,505.325 597.386,504.325 596.5,503.5C 595.702,503.957 595.369,504.624 595.5,505.5C 594.833,505.167 594.167,504.833 593.5,504.5C 593.5,502.5 593.5,500.5 593.5,498.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c6d84\",d:\"M 557.5,508.5 C 555.567,506.404 553.233,504.904 550.5,504C 518.5,503.333 486.5,503.333 454.5,504C 453.627,505.045 452.627,505.878 451.5,506.5C 451.684,503.663 453.018,501.663 455.5,500.5C 457.792,500.756 459.959,500.423 462,499.5C 464.76,501.703 467.76,502.036 471,500.5C 472.299,501.98 473.966,502.646 476,502.5C 489.719,501.799 503.219,501.133 516.5,500.5C 522.146,501.268 527.813,501.935 533.5,502.5C 533.579,501.07 533.246,499.736 532.5,498.5C 536.231,495.537 537.898,496.537 537.5,501.5C 538.833,501.5 540.167,501.5 541.5,501.5C 541.238,500.022 541.571,498.689 542.5,497.5C 543.386,498.325 543.719,499.325 543.5,500.5C 547.514,500.666 551.514,500.499 555.5,500C 556.579,499.044 557.745,498.211 559,497.5C 558.092,500.97 557.592,504.636 557.5,508.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec8e80\",d:\"M 280.5,512.5 C 282.794,514.237 285.46,515.404 288.5,516C 289.381,516.708 290.047,517.542 290.5,518.5C 287.747,517.978 285.08,517.144 282.5,516C 281.177,515.184 280.511,514.017 280.5,512.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#281d53\",d:\"M 69.5,505.5 C 67.8061,507.861 65.8061,509.861 63.5,511.5C 63.1667,511.5 62.8333,511.5 62.5,511.5C 57.7437,513.425 53.4104,516.092 49.5,519.5C 49.1667,519.5 48.8333,519.5 48.5,519.5C 48.5,519.167 48.5,518.833 48.5,518.5C 50.5714,517.109 52.2381,515.276 53.5,513C 55.6115,512.155 57.6115,511.322 59.5,510.5C 62.86,508.787 66.1933,507.12 69.5,505.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e47e79\",d:\"M 87.5,508.5 C 89.5,508.5 91.5,508.5 93.5,508.5C 93.6633,510.857 93.4966,513.19 93,515.5C 86.9863,516.863 85.1529,514.53 87.5,508.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffe5dd\",d:\"M 89.5,510.5 C 91.9118,510.694 92.9118,512.027 92.5,514.5C 91.1667,514.5 89.8333,514.5 88.5,514.5C 88.4326,513.041 88.7659,511.708 89.5,510.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#876017\",d:\"M 152.5,508.5 C 152.043,513.568 153.043,518.235 155.5,522.5C 155.5,522.833 155.5,523.167 155.5,523.5C 154.833,523.167 154.167,522.833 153.5,522.5C 152.388,520.401 151.721,518.067 151.5,515.5C 151.198,512.941 151.532,510.607 152.5,508.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#14253a\",d:\"M 557.5,508.5 C 558.319,510.772 558.985,513.106 559.5,515.5C 559.5,516.833 559.5,518.167 559.5,519.5C 559.785,521.288 559.452,522.955 558.5,524.5C 557.833,521.023 557.166,517.689 556.5,514.5C 556.784,512.585 556.451,510.919 555.5,509.5C 555.167,508.5 554.5,507.833 553.5,507.5C 553.389,506.883 553.056,506.383 552.5,506C 519.664,505.169 486.997,505.336 454.5,506.5C 452.413,507.585 451.08,509.251 450.5,511.5C 449.514,515.97 449.181,520.637 449.5,525.5C 459.5,525.5 469.5,525.5 479.5,525.5C 479.5,525.833 479.5,526.167 479.5,526.5C 469.652,526.173 459.986,526.506 450.5,527.5C 449.662,527.842 449.328,528.508 449.5,529.5C 448.175,549.402 448.175,569.402 449.5,589.5C 448.167,576.851 447.501,563.851 447.5,550.5C 447.517,536.79 447.851,523.124 448.5,509.5C 449.833,508.833 450.833,507.833 451.5,506.5C 452.627,505.878 453.627,505.045 454.5,504C 486.5,503.333 518.5,503.333 550.5,504C 553.233,504.904 555.567,506.404 557.5,508.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f685b\",d:\"M 473.5,509.5 C 474.167,509.5 474.833,509.5 475.5,509.5C 481.458,509.48 483.458,512.147 481.5,517.5C 481.66,515.801 481.494,514.134 481,512.5C 480.79,514.058 480.29,515.391 479.5,516.5C 479.5,514.833 479.5,513.167 479.5,511.5C 477.833,511.5 476.167,511.5 474.5,511.5C 474.5,512.5 474.5,513.5 474.5,514.5C 473.609,513.89 472.609,513.557 471.5,513.5C 472.6,512.395 473.267,511.062 473.5,509.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#75c8b6\",d:\"M 469.5,509.5 C 470.702,510.405 472.036,510.405 473.5,509.5C 473.267,511.062 472.6,512.395 471.5,513.5C 469.814,515.016 467.981,516.35 466,517.5C 465.228,517.355 464.561,517.022 464,516.5C 463.506,514.866 463.34,513.199 463.5,511.5C 465.679,509.836 467.512,510.17 469,512.5C 469.483,511.552 469.649,510.552 469.5,509.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#196c48\",d:\"M 463.5,508.5 C 465.735,508.205 467.735,508.539 469.5,509.5C 469.649,510.552 469.483,511.552 469,512.5C 467.512,510.17 465.679,509.836 463.5,511.5C 463.5,511.167 463.5,510.833 463.5,510.5C 463.5,509.833 463.5,509.167 463.5,508.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c1f6fb\",d:\"M 455.5,506.5 C 482.175,506.167 508.842,506.5 535.5,507.5C 535.043,508.298 534.376,508.631 533.5,508.5C 531.435,508.517 529.435,508.85 527.5,509.5C 510.069,508.176 492.736,508.176 475.5,509.5C 474.833,509.5 474.167,509.5 473.5,509.5C 472.036,510.405 470.702,510.405 469.5,509.5C 467.735,508.539 465.735,508.205 463.5,508.5C 460.72,507.922 458.053,507.255 455.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#83a7c0\",d:\"M 454.5,506.5 C 486.997,505.336 519.664,505.169 552.5,506C 553.056,506.383 553.389,506.883 553.5,507.5C 551.194,507.007 548.861,506.674 546.5,506.5C 543.5,506.5 540.5,506.5 537.5,506.5C 537.473,508.199 536.806,509.533 535.5,510.5C 534.5,510.167 533.833,509.5 533.5,508.5C 534.376,508.631 535.043,508.298 535.5,507.5C 508.842,506.5 482.175,506.167 455.5,506.5C 455.167,506.5 454.833,506.5 454.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#083543\",d:\"M 463.5,510.5 C 463.5,510.833 463.5,511.167 463.5,511.5C 463.34,513.199 463.506,514.866 464,516.5C 464.561,517.022 465.228,517.355 466,517.5C 467.981,516.35 469.814,515.016 471.5,513.5C 472.609,513.557 473.609,513.89 474.5,514.5C 475.591,517.192 477.257,517.858 479.5,516.5C 480.29,515.391 480.79,514.058 481,512.5C 481.494,514.134 481.66,515.801 481.5,517.5C 479.18,519.226 476.513,519.893 473.5,519.5C 472.88,513.083 471.547,512.916 469.5,519C 467.527,519.495 465.527,519.662 463.5,519.5C 460.851,517.441 460.018,514.775 461,511.5C 461.671,510.748 462.504,510.414 463.5,510.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#161114\",d:\"M 387.5,365.5 C 390.112,366.779 392.445,368.445 394.5,370.5C 394.611,371.117 394.944,371.617 395.5,372C 393.807,372.484 392.473,371.984 391.5,370.5C 391.44,369.957 391.107,369.624 390.5,369.5C 389.5,437.163 389.167,504.83 389.5,572.5C 389.5,573.5 389.5,574.5 389.5,575.5C 389.167,575.5 388.833,575.5 388.5,575.5C 388.832,535.33 388.499,495.33 387.5,455.5C 386.833,454.833 386.167,454.167 385.5,453.5C 385.833,452.833 386.167,452.167 386.5,451.5C 387.498,423.005 387.831,394.338 387.5,365.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#497888\",d:\"M 692.5,497.5 C 693.391,498.11 694.391,498.443 695.5,498.5C 694.259,501.508 694.426,504.508 696,507.5C 703.681,510.324 706.514,507.657 704.5,499.5C 705.167,498.833 705.833,498.167 706.5,497.5C 706.5,501.167 706.5,504.833 706.5,508.5C 708.265,508.815 709.931,508.815 711.5,508.5C 712.919,509.451 714.585,509.784 716.5,509.5C 717.833,509.5 719.167,509.5 720.5,509.5C 720.227,511.958 721.227,513.625 723.5,514.5C 725.062,510.607 726.395,510.774 727.5,515C 729.81,515.497 732.143,515.663 734.5,515.5C 736.104,525.127 735.771,534.627 733.5,544C 735.003,545.921 735.669,548.088 735.5,550.5C 734.07,550.579 732.736,550.246 731.5,549.5C 731.026,552.217 730.026,554.55 728.5,556.5C 729.422,552.541 727.922,550.208 724,549.5C 720.722,550.668 719.889,552.668 721.5,555.5C 722.122,558.776 724.122,560.109 727.5,559.5C 724.815,560.776 722.148,560.442 719.5,558.5C 717.339,559.035 715.339,559.868 713.5,561C 714.536,562.617 715.703,562.784 717,561.5C 718.063,562.438 719.23,563.438 720.5,564.5C 718.103,567.754 717.103,571.42 717.5,575.5C 715.516,575.383 713.85,576.05 712.5,577.5C 711.554,575.925 711.554,574.258 712.5,572.5C 711.939,569.465 711.273,566.465 710.5,563.5C 705.933,562.066 701.267,561.066 696.5,560.5C 695.167,555.5 695.167,550.5 696.5,545.5C 697.203,549.87 698.036,554.204 699,558.5C 700.509,557.91 702.009,557.244 703.5,556.5C 699.996,553.656 699.663,550.489 702.5,547C 701.643,546.311 700.977,545.478 700.5,544.5C 700.914,541.59 701.914,538.923 703.5,536.5C 700.961,533.816 700.961,531.149 703.5,528.5C 702.311,527.571 700.978,527.238 699.5,527.5C 699.665,531.182 699.499,534.848 699,538.5C 698.586,538.957 698.086,539.291 697.5,539.5C 696.132,536.932 696.466,534.599 698.5,532.5C 696.83,529.965 694.83,527.799 692.5,526C 693.5,525.667 694.5,525.333 695.5,525C 689.14,522.156 682.473,520.489 675.5,520C 673.462,518.764 672.295,516.931 672,514.5C 671.667,514.833 671.333,515.167 671,515.5C 666.212,514.669 661.379,513.836 656.5,513C 653.683,510.299 650.35,508.799 646.5,508.5C 648.924,508.808 651.257,508.474 653.5,507.5C 655.2,504.973 656.867,505.14 658.5,508C 665.39,509.275 668.057,506.442 666.5,499.5C 667.317,501.969 667.817,504.635 668,507.5C 668.278,506.584 668.778,505.918 669.5,505.5C 669.157,507.483 669.824,508.817 671.5,509.5C 678.167,509.5 684.833,509.5 691.5,509.5C 692.649,509.209 693.316,508.376 693.5,507C 693.176,503.42 691.176,501.92 687.5,502.5C 687.5,501.5 687.5,500.5 687.5,499.5C 688.93,499.421 690.264,499.754 691.5,500.5C 692.386,499.675 692.719,498.675 692.5,497.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#769691\",d:\"M 691.5,509.5 C 684.833,509.5 678.167,509.5 671.5,509.5C 673.167,508.833 674.833,508.167 676.5,507.5C 677.167,507.5 677.833,507.5 678.5,507.5C 681.304,508.638 684.304,508.805 687.5,508C 688.227,506.601 688.727,505.101 689,503.5C 689.925,504.047 690.758,504.713 691.5,505.5C 688.929,506.905 688.929,508.238 691.5,509.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#51677d\",d:\"M 681.5,504.5 C 682.978,504.238 684.311,504.571 685.5,505.5C 684.833,505.833 684.167,506.167 683.5,506.5C 682.287,506.253 681.62,505.586 681.5,504.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5f8691\",d:\"M 698.5,503.5 C 699.833,503.5 701.167,503.5 702.5,503.5C 702.5,504.5 702.5,505.5 702.5,506.5C 701.167,506.5 699.833,506.5 698.5,506.5C 698.5,505.5 698.5,504.5 698.5,503.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#718f98\",d:\"M 697.5,499.5 C 699.665,499.116 701.332,499.783 702.5,501.5C 700.5,502.833 698.5,502.833 696.5,501.5C 696.863,500.817 697.196,500.15 697.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5a7483\",d:\"M 680.5,499.5 C 682.167,499.5 683.833,499.5 685.5,499.5C 685.719,500.675 685.386,501.675 684.5,502.5C 682.517,502.185 681.184,501.185 680.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a77882\",d:\"M 154.5,515.5 C 155.5,516.167 156.5,516.833 157.5,517.5C 157.5,518.833 157.5,520.167 157.5,521.5C 157.167,521.5 156.833,521.5 156.5,521.5C 155.833,519.5 155.167,517.5 154.5,515.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfa32a\",d:\"M 359.5,520.5 C 359.5,520.833 359.5,521.167 359.5,521.5C 356.862,519.878 354.196,518.211 351.5,516.5C 344.245,514.837 337.245,515.337 330.5,518C 328.707,520.795 326.54,523.295 324,525.5C 322.646,529.363 322.146,533.363 322.5,537.5C 321.379,532.337 320.879,527.003 321,521.5C 322.377,525.265 323.377,524.932 324,520.5C 326.257,518.954 328.424,517.288 330.5,515.5C 337.863,514.296 345.53,514.296 353.5,515.5C 355.519,517.19 357.519,518.856 359.5,520.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b4b60\",d:\"M 391.5,370.5 C 390.502,398.328 390.169,426.328 390.5,454.5C 390.832,494.004 390.499,533.337 389.5,572.5C 389.167,504.83 389.5,437.163 390.5,369.5C 391.107,369.624 391.44,369.957 391.5,370.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8ef2f5\",d:\"M 454.5,506.5 C 454.833,506.5 455.167,506.5 455.5,506.5C 458.053,507.255 460.72,507.922 463.5,508.5C 463.5,509.167 463.5,509.833 463.5,510.5C 462.504,510.414 461.671,510.748 461,511.5C 460.018,514.775 460.851,517.441 463.5,519.5C 465.833,520.167 468.167,520.833 470.5,521.5C 463.745,521.793 457.078,521.46 450.5,520.5C 450.5,517.5 450.5,514.5 450.5,511.5C 451.08,509.251 452.413,507.585 454.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#81daf6\",d:\"M 546.5,506.5 C 548.861,506.674 551.194,507.007 553.5,507.5C 554.5,507.833 555.167,508.5 555.5,509.5C 555.5,514.5 555.5,519.5 555.5,524.5C 546.167,524.5 536.833,524.5 527.5,524.5C 512.339,523.669 497.005,523.169 481.5,523C 480.224,521.788 478.724,520.955 477,520.5C 474.863,521.077 472.696,521.41 470.5,521.5C 468.167,520.833 465.833,520.167 463.5,519.5C 465.527,519.662 467.527,519.495 469.5,519C 471.547,512.916 472.88,513.083 473.5,519.5C 476.513,519.893 479.18,519.226 481.5,517.5C 483.458,512.147 481.458,509.48 475.5,509.5C 492.736,508.176 510.069,508.176 527.5,509.5C 526.418,510.594 525.752,511.927 525.5,513.5C 526.432,515.765 527.765,517.765 529.5,519.5C 529.5,520.5 529.5,521.5 529.5,522.5C 536.796,523.408 542.962,521.408 548,516.5C 550.367,512.658 549.867,509.325 546.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#301e29\",d:\"M 533.5,508.5 C 533.833,509.5 534.5,510.167 535.5,510.5C 535.369,511.376 535.702,512.043 536.5,512.5C 537.852,511.476 539.185,510.476 540.5,509.5C 540.5,510.167 540.5,510.833 540.5,511.5C 539.662,511.842 539.328,512.508 539.5,513.5C 537.027,513.088 535.694,514.088 535.5,516.5C 533.947,518.385 531.947,519.385 529.5,519.5C 527.765,517.765 526.432,515.765 525.5,513.5C 525.752,511.927 526.418,510.594 527.5,509.5C 529.435,508.85 531.435,508.517 533.5,508.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#642433\",d:\"M 535.5,516.5 C 535.694,514.088 537.027,513.088 539.5,513.5C 540.356,516.513 542.189,517.18 545,515.5C 546.081,511.077 544.581,509.744 540.5,511.5C 540.5,510.833 540.5,510.167 540.5,509.5C 545.845,507.67 548.012,509.67 547,515.5C 543.483,519.168 539.65,519.501 535.5,516.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dea1a9\",d:\"M 529.5,510.5 C 532.966,511.109 533.966,512.942 532.5,516C 528.537,516.118 527.537,514.284 529.5,510.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4a3a0\",d:\"M 539.5,513.5 C 539.328,512.508 539.662,511.842 540.5,511.5C 544.581,509.744 546.081,511.077 545,515.5C 542.189,517.18 540.356,516.513 539.5,513.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#afd2ee\",d:\"M 546.5,506.5 C 549.867,509.325 550.367,512.658 548,516.5C 542.962,521.408 536.796,523.408 529.5,522.5C 529.5,521.5 529.5,520.5 529.5,519.5C 531.947,519.385 533.947,518.385 535.5,516.5C 539.65,519.501 543.483,519.168 547,515.5C 548.012,509.67 545.845,507.67 540.5,509.5C 539.185,510.476 537.852,511.476 536.5,512.5C 535.702,512.043 535.369,511.376 535.5,510.5C 536.806,509.533 537.473,508.199 537.5,506.5C 540.5,506.5 543.5,506.5 546.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc665f\",d:\"M 55.5,518.5 C 55.33,519.822 55.6634,520.989 56.5,522C 59.131,522.107 61.631,522.273 64,522.5C 64.6029,525.656 64.1029,528.656 62.5,531.5C 64.4613,532.848 64.6279,534.181 63,535.5C 63.3136,555.359 64.4802,555.359 66.5,535.5C 67.4776,535.023 68.3109,534.357 69,533.5C 70.7967,538.938 70.9634,544.438 69.5,550C 70.9114,552.663 71.9114,555.496 72.5,558.5C 75.0488,558.559 77.0488,557.559 78.5,555.5C 79.2575,556.811 80.2575,557.311 81.5,557C 82.4132,555.586 82.4132,554.086 81.5,552.5C 86.4709,556.092 91.8043,556.425 97.5,553.5C 99.1288,552.375 100.629,551.041 102,549.5C 102.499,545.848 102.665,542.182 102.5,538.5C 106.55,540.841 107.216,543.841 104.5,547.5C 105.226,550.852 106.059,554.185 107,557.5C 109.09,558.791 110.424,558.124 111,555.5C 111.346,557.218 111.846,558.885 112.5,560.5C 112.376,561.107 112.043,561.44 111.5,561.5C 96.1667,561.5 80.8333,561.5 65.5,561.5C 65.2322,563.099 65.5655,564.432 66.5,565.5C 79.4957,566.405 92.6624,567.071 106,567.5C 109.931,567.456 113.598,566.789 117,565.5C 118.167,567.333 119.667,568.833 121.5,570C 120.289,570.893 120.289,571.726 121.5,572.5C 122.086,572.291 122.586,571.957 123,571.5C 123.667,572.833 124.667,573.833 126,574.5C 126.985,572.825 127.819,571.158 128.5,569.5C 128.185,573.371 128.518,577.038 129.5,580.5C 129.5,581.833 129.5,583.167 129.5,584.5C 129.167,584.5 128.833,584.5 128.5,584.5C 128.5,583.5 128.5,582.5 128.5,581.5C 104.164,581.667 79.8311,581.5 55.5,581C 55,580.5 54.5,580 54,579.5C 53.678,581.689 54.178,583.689 55.5,585.5C 52.2078,582.943 49.8744,579.609 48.5,575.5C 48.5,557.833 48.5,540.167 48.5,522.5C 49.8734,522.657 51.2068,522.49 52.5,522C 53.1634,520.482 54.1634,519.315 55.5,518.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0f3f7\",d:\"M 362.5,527.5 C 362.693,531.566 362.36,535.566 361.5,539.5C 360.778,539.918 360.278,540.584 360,541.5C 356.569,537.585 353.402,533.585 350.5,529.5C 349.564,528.026 348.23,527.026 346.5,526.5C 346.389,525.883 346.056,525.383 345.5,525C 340.736,523.645 337.403,525.145 335.5,529.5C 334.29,529.932 333.29,530.599 332.5,531.5C 330.983,531.511 329.816,532.177 329,533.5C 327.789,535.921 326.623,538.255 325.5,540.5C 322.554,530.162 325.887,522.662 335.5,518C 346.735,515.353 355.735,518.52 362.5,527.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#51a8d5\",d:\"M 984.5,148.5 C 985.482,151.962 985.815,155.629 985.5,159.5C 986.66,406.488 986.827,653.488 986,900.5C 985.285,905.765 984.118,910.932 982.5,916C 983.805,919.594 982.805,921.427 979.5,921.5C 981.101,916.283 982.601,910.95 984,905.5C 984.5,656.834 984.667,408.167 984.5,159.5C 984.5,155.833 984.5,152.167 984.5,148.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#501309\",d:\"M 194.5,516.5 C 194.409,518.698 195.075,519.031 196.5,517.5C 193.742,524.759 188.742,529.926 181.5,533C 176.556,533.873 171.89,533.373 167.5,531.5C 174.615,532.543 181.115,531.21 187,527.5C 189.022,523.997 191.189,520.663 193.5,517.5C 193.5,516.833 193.833,516.5 194.5,516.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#372e21\",d:\"M 359.5,521.5 C 361.252,523.246 362.585,525.246 363.5,527.5C 363.167,527.5 362.833,527.5 362.5,527.5C 355.735,518.52 346.735,515.353 335.5,518C 325.887,522.662 322.554,530.162 325.5,540.5C 325.263,541.791 325.596,542.791 326.5,543.5C 326.5,543.833 326.5,544.167 326.5,544.5C 326.217,545.289 325.717,545.956 325,546.5C 324.218,543.69 323.384,541.023 322.5,538.5C 322.5,538.167 322.5,537.833 322.5,537.5C 322.146,533.363 322.646,529.363 324,525.5C 326.54,523.295 328.707,520.795 330.5,518C 337.245,515.337 344.245,514.837 351.5,516.5C 354.196,518.211 356.862,519.878 359.5,521.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5706c\",d:\"M 193.5,517.5 C 191.189,520.663 189.022,523.997 187,527.5C 181.115,531.21 174.615,532.543 167.5,531.5C 163.194,529.194 159.861,525.861 157.5,521.5C 157.5,520.167 157.5,518.833 157.5,517.5C 158.779,514.348 161.112,512.348 164.5,511.5C 167.188,507.979 170.354,504.979 174,502.5C 176.382,503.744 178.215,505.577 179.5,508C 184.397,510.939 189.064,514.106 193.5,517.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fa7068\",d:\"M 178.5,516.5 C 177.145,513.482 174.812,512.149 171.5,512.5C 165.429,513.295 162.762,516.795 163.5,523C 162.207,523.49 160.873,523.657 159.5,523.5C 159.149,521.131 158.982,518.797 159,516.5C 160.399,515.773 161.899,515.273 163.5,515C 164.337,513.989 164.67,512.822 164.5,511.5C 166.736,510.611 168.736,509.278 170.5,507.5C 172.214,508.609 172.881,507.942 172.5,505.5C 173.978,505.238 175.311,505.571 176.5,506.5C 177.364,508.197 178.697,509.363 180.5,510C 182.607,511.264 183.607,513.097 183.5,515.5C 186.5,515.167 187.833,516.5 187.5,519.5C 184.257,519.086 181.257,518.086 178.5,516.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fde0d9\",d:\"M 171.5,512.5 C 174.812,512.149 177.145,513.482 178.5,516.5C 179.508,518.339 181.008,519.672 183,520.5C 183.483,521.448 183.649,522.448 183.5,523.5C 181.114,523.741 179.114,523.075 177.5,521.5C 177.5,521.167 177.5,520.833 177.5,520.5C 176.868,517.508 175.201,516.841 172.5,518.5C 171.534,522.138 169.201,523.805 165.5,523.5C 166.718,519.396 168.718,515.729 171.5,512.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7aa3be\",d:\"M 555.5,509.5 C 556.451,510.919 556.784,512.585 556.5,514.5C 556.5,518.167 556.5,521.833 556.5,525.5C 530.833,525.5 505.167,525.5 479.5,525.5C 469.5,525.5 459.5,525.5 449.5,525.5C 449.181,520.637 449.514,515.97 450.5,511.5C 450.5,514.5 450.5,517.5 450.5,520.5C 450.5,521.833 450.5,523.167 450.5,524.5C 476.167,524.5 501.833,524.5 527.5,524.5C 536.833,524.5 546.167,524.5 555.5,524.5C 555.5,519.5 555.5,514.5 555.5,509.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b5f6fe\",d:\"M 450.5,520.5 C 457.078,521.46 463.745,521.793 470.5,521.5C 472.696,521.41 474.863,521.077 477,520.5C 478.724,520.955 480.224,521.788 481.5,523C 497.005,523.169 512.339,523.669 527.5,524.5C 501.833,524.5 476.167,524.5 450.5,524.5C 450.5,523.167 450.5,521.833 450.5,520.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8bd3b6\",d:\"M 479.5,516.5 C 477.257,517.858 475.591,517.192 474.5,514.5C 474.5,513.5 474.5,512.5 474.5,511.5C 476.167,511.5 477.833,511.5 479.5,511.5C 479.5,513.167 479.5,514.833 479.5,516.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f55053\",d:\"M 177.5,520.5 C 177.5,520.833 177.5,521.167 177.5,521.5C 177.5,522.5 177.5,523.5 177.5,524.5C 180.254,524.784 182.92,525.451 185.5,526.5C 179.878,529.387 173.878,530.22 167.5,529C 166.5,528.167 165.5,527.333 164.5,526.5C 166.862,526.026 169.195,525.692 171.5,525.5C 173.104,523.821 173.771,521.821 173.5,519.5C 174.959,519.433 176.292,519.766 177.5,520.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4d7786\",d:\"M 962.5,488.5 C 963.338,488.842 963.672,489.508 963.5,490.5C 963.047,532.507 962.214,574.507 961,616.5C 960.166,619.172 959.332,621.839 958.5,624.5C 954.21,627.091 949.543,628.091 944.5,627.5C 943.632,623.192 943.466,618.859 944,614.5C 946.454,612.559 948.287,610.225 949.5,607.5C 951.296,606.206 953.296,605.206 955.5,604.5C 955.998,602.336 957.164,600.669 959,599.5C 959.769,596.901 959.602,594.401 958.5,592C 955.518,591.502 952.518,591.335 949.5,591.5C 949.565,566.193 949.065,540.859 948,515.5C 947.924,511.204 947.091,507.204 945.5,503.5C 944.833,502.833 944.167,502.167 943.5,501.5C 943.672,500.508 943.338,499.842 942.5,499.5C 941.942,498.21 940.942,497.377 939.5,497C 933.433,495.953 927.433,495.787 921.5,496.5C 922.747,494.822 924.414,493.489 926.5,492.5C 927.474,490.257 927.808,487.924 927.5,485.5C 920.833,485.167 920.833,484.833 927.5,484.5C 927.5,483.167 927.5,481.833 927.5,480.5C 892.832,480.333 858.165,480.5 823.5,481C 817.859,482.142 812.193,483.142 806.5,484C 807.833,484.333 809.167,484.667 810.5,485C 805.304,485.09 800.137,484.59 795,483.5C 793.354,485.141 792.354,484.807 792,482.5C 791.517,483.448 791.351,484.448 791.5,485.5C 792.552,485.351 793.552,485.517 794.5,486C 793.443,488.29 791.443,490.123 788.5,491.5C 789.246,492.736 789.579,494.07 789.5,495.5C 790.552,495.351 791.552,495.517 792.5,496C 790.081,497.93 788.414,497.597 787.5,495C 786.207,494.51 784.873,494.343 783.5,494.5C 783.5,495.5 783.5,496.5 783.5,497.5C 784.978,497.238 786.311,497.571 787.5,498.5C 786.617,499.548 785.95,500.715 785.5,502C 785.836,503.03 786.503,503.53 787.5,503.5C 787.674,532.842 787.34,562.175 786.5,591.5C 782.116,591.826 777.783,591.492 773.5,590.5C 774.506,589.604 774.506,588.938 773.5,588.5C 772.749,589.376 772.249,590.376 772,591.5C 771.344,564.496 771.51,537.496 772.5,510.5C 772.496,504.458 771.829,498.792 770.5,493.5C 770.232,491.901 770.566,490.568 771.5,489.5C 771.369,490.239 771.536,490.906 772,491.5C 774.857,486.504 778.69,482.504 783.5,479.5C 837.126,478.342 890.792,478.175 944.5,479C 952.444,479.609 958.277,483.442 962,490.5C 962.464,489.906 962.631,489.239 962.5,488.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#457387\",d:\"M 921.5,496.5 C 879.33,496.168 837.33,496.501 795.5,497.5C 791.911,498.092 789.578,500.092 788.5,503.5C 788.167,503.5 787.833,503.5 787.5,503.5C 786.503,503.53 785.836,503.03 785.5,502C 785.95,500.715 786.617,499.548 787.5,498.5C 786.311,497.571 784.978,497.238 783.5,497.5C 783.5,496.5 783.5,495.5 783.5,494.5C 784.873,494.343 786.207,494.51 787.5,495C 788.414,497.597 790.081,497.93 792.5,496C 791.552,495.517 790.552,495.351 789.5,495.5C 789.579,494.07 789.246,492.736 788.5,491.5C 791.443,490.123 793.443,488.29 794.5,486C 793.552,485.517 792.552,485.351 791.5,485.5C 791.351,484.448 791.517,483.448 792,482.5C 792.354,484.807 793.354,485.141 795,483.5C 800.137,484.59 805.304,485.09 810.5,485C 809.167,484.667 807.833,484.333 806.5,484C 812.193,483.142 817.859,482.142 823.5,481C 858.165,480.5 892.832,480.333 927.5,480.5C 927.5,481.833 927.5,483.167 927.5,484.5C 920.833,484.833 920.833,485.167 927.5,485.5C 927.808,487.924 927.474,490.257 926.5,492.5C 924.414,493.489 922.747,494.822 921.5,496.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d56e6c\",d:\"M 290.5,518.5 C 292.713,519.773 295.046,520.773 297.5,521.5C 297.5,540.833 297.5,560.167 297.5,579.5C 296.668,561.004 296.168,542.338 296,523.5C 294.829,522.107 293.329,521.273 291.5,521C 290.748,520.329 290.414,519.496 290.5,518.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebc738\",d:\"M 450.5,527.5 C 485.833,527.5 521.167,527.5 556.5,527.5C 556.83,547.007 556.497,566.341 555.5,585.5C 555.667,566.497 555.5,547.497 555,528.5C 553.352,529.717 551.519,530.55 549.5,531C 524.17,530.813 498.836,530.313 473.5,529.5C 465.992,529.5 458.659,529.834 451.5,530.5C 451.5,549.167 451.5,567.833 451.5,586.5C 451.167,586.5 450.833,586.5 450.5,586.5C 449.503,567.674 449.17,548.674 449.5,529.5C 449.328,528.508 449.662,527.842 450.5,527.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4e5a9\",d:\"M 677.5,529.5 C 671.167,530.167 664.833,530.833 658.5,531.5C 658.5,532.5 658.5,533.5 658.5,534.5C 658.5,534.833 658.5,535.167 658.5,535.5C 657.662,535.842 657.328,536.508 657.5,537.5C 656.539,539.265 656.205,541.265 656.5,543.5C 656.167,543.5 655.833,543.5 655.5,543.5C 655.5,539.5 655.5,535.5 655.5,531.5C 656.289,531.217 656.956,530.717 657.5,530C 664.158,529.5 670.825,529.334 677.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea7771\",d:\"M 102.5,538.5 C 102.665,542.182 102.499,545.848 102,549.5C 100.629,551.041 99.1288,552.375 97.5,553.5C 104.172,543.707 102.172,536.207 91.5,531C 88.4453,530.366 85.4453,530.532 82.5,531.5C 82.6107,530.883 82.944,530.383 83.5,530C 89.1921,528.933 94.5255,529.766 99.5,532.5C 100.208,534.745 101.208,536.745 102.5,538.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4e0804\",d:\"M 156.5,521.5 C 156.833,521.5 157.167,521.5 157.5,521.5C 159.861,525.861 163.194,529.194 167.5,531.5C 165.692,531.509 164.025,531.009 162.5,530C 159.833,528.138 157.5,525.972 155.5,523.5C 155.5,523.167 155.5,522.833 155.5,522.5C 156.167,522.5 156.5,522.167 156.5,521.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48d8f6\",d:\"M 335.5,529.5 C 336.586,529.62 337.253,530.287 337.5,531.5C 337.167,532.167 336.833,532.833 336.5,533.5C 334.156,534.337 332.156,535.671 330.5,537.5C 330.167,537 329.833,536.5 329.5,536C 330.315,534.357 331.315,532.857 332.5,531.5C 333.29,530.599 334.29,529.932 335.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#57d1ec\",d:\"M 346.5,526.5 C 348.23,527.026 349.564,528.026 350.5,529.5C 348.952,529.821 348.285,530.821 348.5,532.5C 347.844,531.722 347.011,531.056 346,530.5C 343.953,531.609 341.787,532.276 339.5,532.5C 341.193,529.81 343.527,527.81 346.5,526.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b1cecb\",d:\"M 348.5,532.5 C 349.075,534.411 350.075,536.078 351.5,537.5C 349.122,535.959 346.622,534.625 344,533.5C 341.355,535.239 338.522,536.573 335.5,537.5C 336.474,535.52 337.807,533.853 339.5,532.5C 341.787,532.276 343.953,531.609 346,530.5C 347.011,531.056 347.844,531.722 348.5,532.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#251f29\",d:\"M 479.5,526.5 C 479.5,526.167 479.5,525.833 479.5,525.5C 505.167,525.5 530.833,525.5 556.5,525.5C 557.5,525.5 558.5,525.5 559.5,525.5C 559.5,546.833 559.5,568.167 559.5,589.5C 558.833,590.5 558.167,591.5 557.5,592.5C 555.5,592.5 553.5,592.5 551.5,592.5C 551.5,592.167 551.5,591.833 551.5,591.5C 552.167,591.5 552.833,591.5 553.5,591.5C 555.371,591.141 556.871,590.141 558,588.5C 558.5,567.836 558.667,547.169 558.5,526.5C 532.167,526.5 505.833,526.5 479.5,526.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fde9dc\",d:\"M 97.5,553.5 C 91.8043,556.425 86.4709,556.092 81.5,552.5C 80.5,552.167 79.8333,551.5 79.5,550.5C 76.0664,543.369 77.0664,537.036 82.5,531.5C 85.4453,530.532 88.4453,530.366 91.5,531C 102.172,536.207 104.172,543.707 97.5,553.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d7961d\",d:\"M 197.5,506.5 C 198.193,510.565 198.86,514.732 199.5,519C 193.147,535.643 181.48,540.976 164.5,535C 158.856,532.526 155.189,528.359 153.5,522.5C 154.167,522.833 154.833,523.167 155.5,523.5C 157.5,525.972 159.833,528.138 162.5,530C 164.025,531.009 165.692,531.509 167.5,531.5C 171.89,533.373 176.556,533.873 181.5,533C 188.742,529.926 193.742,524.759 196.5,517.5C 197.423,513.936 197.756,510.269 197.5,506.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e0a291\",d:\"M 92.5,535.5 C 84.9904,534.678 81.3237,538.012 81.5,545.5C 79.6117,541.306 80.6117,537.806 84.5,535C 87.367,534.199 90.0336,534.366 92.5,535.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b141d\",d:\"M 362.5,527.5 C 362.833,527.5 363.167,527.5 363.5,527.5C 364.87,532.803 364.537,538.137 362.5,543.5C 362.167,543.5 361.833,543.5 361.5,543.5C 361.5,542.167 361.5,540.833 361.5,539.5C 362.36,535.566 362.693,531.566 362.5,527.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#240e1f\",d:\"M 46.5,519.5 C 47.1667,519.5 47.8333,519.5 48.5,519.5C 48.8333,519.5 49.1667,519.5 49.5,519.5C 48.5313,520.309 47.6979,521.309 47,522.5C 46.5001,540.164 46.3334,557.83 46.5,575.5C 45.6618,575.158 45.3284,574.492 45.5,573.5C 45.5,555.833 45.5,538.167 45.5,520.5C 46.1667,520.5 46.5,520.167 46.5,519.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c56065\",d:\"M 62.5,511.5 C 61.9332,513.03 61.2666,514.53 60.5,516C 58.5483,516.366 56.8816,517.199 55.5,518.5C 54.1634,519.315 53.1634,520.482 52.5,522C 51.2068,522.49 49.8734,522.657 48.5,522.5C 48.5,540.167 48.5,557.833 48.5,575.5C 48.1667,575.5 47.8333,575.5 47.5,575.5C 47.1667,575.5 46.8333,575.5 46.5,575.5C 46.3334,557.83 46.5001,540.164 47,522.5C 47.6979,521.309 48.5313,520.309 49.5,519.5C 53.4104,516.092 57.7437,513.425 62.5,511.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#84eef1\",d:\"M 346.5,526.5 C 343.527,527.81 341.193,529.81 339.5,532.5C 337.807,533.853 336.474,535.52 335.5,537.5C 333.938,537.733 332.605,538.4 331.5,539.5C 329.427,540.3 327.76,541.633 326.5,543.5C 325.596,542.791 325.263,541.791 325.5,540.5C 326.623,538.255 327.789,535.921 329,533.5C 329.816,532.177 330.983,531.511 332.5,531.5C 331.315,532.857 330.315,534.357 329.5,536C 329.833,536.5 330.167,537 330.5,537.5C 332.156,535.671 334.156,534.337 336.5,533.5C 336.833,532.833 337.167,532.167 337.5,531.5C 337.253,530.287 336.586,529.62 335.5,529.5C 337.403,525.145 340.736,523.645 345.5,525C 346.056,525.383 346.389,525.883 346.5,526.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#303f47\",d:\"M 653.5,527.5 C 653.334,532.179 653.501,536.845 654,541.5C 654.175,536.981 654.675,532.647 655.5,528.5C 655.5,529.5 655.5,530.5 655.5,531.5C 655.5,535.5 655.5,539.5 655.5,543.5C 655.5,543.833 655.5,544.167 655.5,544.5C 654.5,544.5 653.5,544.5 652.5,544.5C 652.264,538.856 652.597,533.189 653.5,527.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8e7618\",d:\"M 658.5,535.5 C 669.116,537.477 680.116,538.144 691.5,537.5C 692.468,539.607 692.802,541.941 692.5,544.5C 692.167,544.5 691.833,544.5 691.5,544.5C 691.795,542.265 691.461,540.265 690.5,538.5C 679.321,538.828 668.321,538.495 657.5,537.5C 657.328,536.508 657.662,535.842 658.5,535.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3aabe4\",d:\"M 350.5,529.5 C 353.402,533.585 356.569,537.585 360,541.5C 360.278,540.584 360.778,539.918 361.5,539.5C 361.5,540.833 361.5,542.167 361.5,543.5C 360.167,543.5 358.833,543.5 357.5,543.5C 357.672,542.508 357.338,541.842 356.5,541.5C 355.415,539.413 353.749,538.08 351.5,537.5C 350.075,536.078 349.075,534.411 348.5,532.5C 348.285,530.821 348.952,529.821 350.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#90a794\",d:\"M 351.5,537.5 C 353.749,538.08 355.415,539.413 356.5,541.5C 354.251,540.92 352.585,539.587 351.5,537.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#303f5c\",d:\"M 556.5,514.5 C 557.166,517.689 557.833,521.023 558.5,524.5C 559.452,522.955 559.785,521.288 559.5,519.5C 560.222,519.918 560.722,520.584 561,521.5C 561.167,530.667 561.333,539.833 561.5,549C 561.677,562.7 561.01,576.2 559.5,589.5C 559.5,568.167 559.5,546.833 559.5,525.5C 558.5,525.5 557.5,525.5 556.5,525.5C 556.5,521.833 556.5,518.167 556.5,514.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5d028\",d:\"M 657.5,537.5 C 668.321,538.495 679.321,538.828 690.5,538.5C 690.5,539.167 690.5,539.833 690.5,540.5C 683.563,539.716 676.563,539.883 669.5,541C 666.325,540.947 663.658,541.78 661.5,543.5C 659.833,543.5 658.167,543.5 656.5,543.5C 656.205,541.265 656.539,539.265 657.5,537.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e77570\",d:\"M 82.5,531.5 C 77.0664,537.036 76.0664,543.369 79.5,550.5C 78.5,550.5 77.5,550.5 76.5,550.5C 75.1912,544.812 75.3578,539.145 77,533.5C 78.5843,532.139 80.4176,531.472 82.5,531.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#405772\",d:\"M 42.5,379.5 C 44.1657,443.994 45.1657,508.66 45.5,573.5C 45.3284,574.492 45.6618,575.158 46.5,575.5C 46.8333,575.5 47.1667,575.5 47.5,575.5C 47.5,576.833 47.5,578.167 47.5,579.5C 45.2239,579.244 44.0572,577.91 44,575.5C 43.5065,577.134 43.3398,578.801 43.5,580.5C 42.5008,513.669 42.1675,446.669 42.5,379.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7a614\",d:\"M 351.5,537.5 C 352.585,539.587 354.251,540.92 356.5,541.5C 357.338,541.842 357.672,542.508 357.5,543.5C 358.78,544.931 360.447,545.598 362.5,545.5C 359.053,547.293 356.553,546.293 355,542.5C 354.505,544.473 354.338,546.473 354.5,548.5C 346.493,548.666 338.493,548.5 330.5,548C 331.576,546.274 331.743,544.441 331,542.5C 330.601,547.183 328.101,548.683 323.5,547C 322.556,544.281 322.223,541.448 322.5,538.5C 323.384,541.023 324.218,543.69 325,546.5C 325.717,545.956 326.217,545.289 326.5,544.5C 328.816,543.578 330.483,541.911 331.5,539.5C 332.605,538.4 333.938,537.733 335.5,537.5C 338.522,536.573 341.355,535.239 344,533.5C 346.622,534.625 349.122,535.959 351.5,537.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6736a\",d:\"M 92.5,535.5 C 98.2883,539.35 98.955,544.017 94.5,549.5C 88.2707,553.26 83.9374,551.927 81.5,545.5C 81.3237,538.012 84.9904,534.678 92.5,535.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3a848\",d:\"M 303.5,457.5 C 303.5,458.167 303.5,458.833 303.5,459.5C 301.506,499.486 300.839,539.82 301.5,580.5C 301.194,583.385 301.527,586.052 302.5,588.5C 302.5,588.833 302.5,589.167 302.5,589.5C 302.167,589.5 301.833,589.5 301.5,589.5C 300.833,589.5 300.5,589.167 300.5,588.5C 300.5,545.167 300.5,501.833 300.5,458.5C 301.609,458.443 302.609,458.11 303.5,457.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c0cf8d\",d:\"M 331.5,539.5 C 330.483,541.911 328.816,543.578 326.5,544.5C 326.5,544.167 326.5,543.833 326.5,543.5C 327.76,541.633 329.427,540.3 331.5,539.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#311d0e\",d:\"M 387.5,455.5 C 388.499,495.33 388.832,535.33 388.5,575.5C 385.999,585.267 379.665,590.6 369.5,591.5C 346.475,592.156 323.809,591.49 301.5,589.5C 301.833,589.5 302.167,589.5 302.5,589.5C 325.167,589.5 347.833,589.5 370.5,589.5C 373.716,589.655 376.383,588.655 378.5,586.5C 380.467,584.507 382.467,582.507 384.5,580.5C 385.452,578.955 385.785,577.288 385.5,575.5C 387.494,536.181 388.161,496.514 387.5,456.5C 387.5,456.167 387.5,455.833 387.5,455.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e2d3c\",d:\"M 425.5,487.5 C 424.406,489.359 423.573,491.359 423,493.5C 422.333,525.5 422.333,557.5 423,589.5C 424.197,592.089 425.197,594.756 426,597.5C 426.708,598.381 427.542,599.047 428.5,599.5C 428.5,600.167 428.5,600.833 428.5,601.5C 427.542,601.047 426.708,600.381 426,599.5C 425.601,599.728 425.435,600.062 425.5,600.5C 421.053,598.239 419.386,594.572 420.5,589.5C 420.384,558.36 420.551,527.027 421,495.5C 421.774,491.951 423.107,488.618 425,485.5C 425.464,486.094 425.631,486.761 425.5,487.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eda710\",d:\"M 690.5,540.5 C 690.5,541.833 690.5,543.167 690.5,544.5C 680.781,544.782 671.114,544.449 661.5,543.5C 663.658,541.78 666.325,540.947 669.5,541C 676.563,539.883 683.563,539.716 690.5,540.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d26368\",d:\"M 225.5,518.5 C 224.024,520.5 222.191,522.167 220,523.5C 218.464,544.988 218.297,566.322 219.5,587.5C 245.328,588.498 271.328,588.831 297.5,588.5C 297.5,588.833 297.5,589.167 297.5,589.5C 270.833,589.5 244.167,589.5 217.5,589.5C 217.5,567.167 217.5,544.833 217.5,522.5C 220.069,520.977 222.736,519.643 225.5,518.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6d4626\",d:\"M 357.5,543.5 C 358.833,543.5 360.167,543.5 361.5,543.5C 361.833,543.5 362.167,543.5 362.5,543.5C 362.5,544.167 362.5,544.833 362.5,545.5C 360.447,545.598 358.78,544.931 357.5,543.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3c92d\",d:\"M 545.5,549.5 C 518.167,549.5 490.833,549.5 463.5,549.5C 462.566,550.568 462.232,551.901 462.5,553.5C 461.307,553.03 460.64,552.03 460.5,550.5C 461.715,547.163 462.715,543.83 463.5,540.5C 468.774,538.863 474.441,537.863 480.5,537.5C 480.855,536.478 481.522,535.811 482.5,535.5C 487.42,533.933 492.087,534.433 496.5,537C 492.388,536.574 488.388,537.241 484.5,539C 487.093,541.479 487.093,543.979 484.5,546.5C 504.951,548.018 525.284,549.018 545.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef7c4\",d:\"M 463.5,540.5 C 470.167,540.5 476.833,540.5 483.5,540.5C 483.5,541.5 483.5,542.5 483.5,543.5C 476.833,543.5 470.167,543.5 463.5,543.5C 463.5,542.5 463.5,541.5 463.5,540.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b6761c\",d:\"M 690.5,538.5 C 691.461,540.265 691.795,542.265 691.5,544.5C 682.014,545.494 672.348,545.827 662.5,545.5C 660.194,545.007 657.861,544.674 655.5,544.5C 655.5,544.167 655.5,543.833 655.5,543.5C 655.833,543.5 656.167,543.5 656.5,543.5C 658.167,543.5 659.833,543.5 661.5,543.5C 671.114,544.449 680.781,544.782 690.5,544.5C 690.5,543.167 690.5,541.833 690.5,540.5C 690.5,539.833 690.5,539.167 690.5,538.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37100d\",d:\"M 217.5,519.5 C 217.5,520.5 217.5,521.5 217.5,522.5C 217.5,544.833 217.5,567.167 217.5,589.5C 216.833,589.5 216.167,589.5 215.5,589.5C 215.5,566.5 215.5,543.5 215.5,520.5C 216.167,520.167 216.833,519.833 217.5,519.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a1b06\",d:\"M 691.5,544.5 C 691.833,544.5 692.167,544.5 692.5,544.5C 693.925,548.417 693.592,552.084 691.5,555.5C 691.5,553.167 691.5,550.833 691.5,548.5C 682.682,547.507 673.682,547.173 664.5,547.5C 663.833,546.833 663.167,546.167 662.5,545.5C 672.348,545.827 682.014,545.494 691.5,544.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a67723\",d:\"M 664.5,547.5 C 673.682,547.173 682.682,547.507 691.5,548.5C 690.167,548.5 688.833,548.5 687.5,548.5C 680.167,548.5 672.833,548.5 665.5,548.5C 665.263,549.791 665.596,550.791 666.5,551.5C 666.5,552.833 666.5,554.167 666.5,555.5C 664.631,553.365 663.964,550.698 664.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#110a0a\",d:\"M 132.5,473.5 C 132.667,508.835 132.5,544.168 132,579.5C 131.667,561.5 131.333,543.5 131,525.5C 130.617,524.944 130.117,524.611 129.5,524.5C 129.5,524.167 129.5,523.833 129.5,523.5C 129.5,522.833 129.5,522.167 129.5,521.5C 130.338,521.158 130.672,520.492 130.5,519.5C 131.167,504.167 131.833,488.833 132.5,473.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7a5a0b\",d:\"M 556.5,527.5 C 557.662,546.996 557.829,566.662 557,586.5C 556.623,587.942 555.79,588.942 554.5,589.5C 554.557,588.391 554.89,587.391 555.5,586.5C 555.5,586.167 555.5,585.833 555.5,585.5C 556.497,566.341 556.83,547.007 556.5,527.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fad634\",d:\"M 687.5,548.5 C 686.77,550.045 685.437,550.878 683.5,551C 677.843,551.499 672.176,551.666 666.5,551.5C 665.596,550.791 665.263,549.791 665.5,548.5C 672.833,548.5 680.167,548.5 687.5,548.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#624125\",d:\"M 132.5,473.5 C 132.833,473.5 133.167,473.5 133.5,473.5C 133.5,508.833 133.5,544.167 133.5,579.5C 133.5,581.167 133.5,582.833 133.5,584.5C 133.5,586.167 133.5,587.833 133.5,589.5C 132.167,588.167 130.833,588.167 129.5,589.5C 129.5,587.833 129.5,586.167 129.5,584.5C 129.5,583.167 129.5,581.833 129.5,580.5C 129.5,561.833 129.5,543.167 129.5,524.5C 130.117,524.611 130.617,524.944 131,525.5C 131.333,543.5 131.667,561.5 132,579.5C 132.5,544.168 132.667,508.835 132.5,473.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3d2212\",d:\"M 300.5,455.5 C 300.5,456.5 300.5,457.5 300.5,458.5C 300.5,501.833 300.5,545.167 300.5,588.5C 299.5,588.5 298.5,588.5 297.5,588.5C 297.5,585.5 297.5,582.5 297.5,579.5C 297.5,560.167 297.5,540.833 297.5,521.5C 297.5,520.833 297.5,520.167 297.5,519.5C 298.461,517.735 298.795,515.735 298.5,513.5C 299.167,494.167 299.833,474.833 300.5,455.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdfbd8\",d:\"M 463.5,549.5 C 490.833,549.5 518.167,549.5 545.5,549.5C 545.5,549.833 545.5,550.167 545.5,550.5C 518.52,552.491 491.187,553.158 463.5,552.5C 463.5,551.5 463.5,550.5 463.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbefa4\",d:\"M 166.5,549.5 C 166.5,550.5 166.5,551.5 166.5,552.5C 171.833,552.5 177.167,552.5 182.5,552.5C 182.5,551.5 182.5,550.5 182.5,549.5C 184.466,550.255 184.8,551.421 183.5,553C 177.509,553.499 171.509,553.666 165.5,553.5C 165.232,551.901 165.566,550.568 166.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fefade\",d:\"M 166.5,549.5 C 171.833,549.5 177.167,549.5 182.5,549.5C 182.5,550.5 182.5,551.5 182.5,552.5C 177.167,552.5 171.833,552.5 166.5,552.5C 166.5,551.5 166.5,550.5 166.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9eda6\",d:\"M 463.5,549.5 C 463.5,550.5 463.5,551.5 463.5,552.5C 491.187,553.158 518.52,552.491 545.5,550.5C 546.404,551.209 546.737,552.209 546.5,553.5C 518.5,553.5 490.5,553.5 462.5,553.5C 462.232,551.901 462.566,550.568 463.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7a115\",d:\"M 687.5,548.5 C 688.833,548.5 690.167,548.5 691.5,548.5C 691.5,550.833 691.5,553.167 691.5,555.5C 683.167,555.5 674.833,555.5 666.5,555.5C 666.5,554.167 666.5,552.833 666.5,551.5C 672.176,551.666 677.843,551.499 683.5,551C 685.437,550.878 686.77,550.045 687.5,548.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#073e83\",d:\"M 629.5,554.5 C 638.833,554.5 648.167,554.5 657.5,554.5C 656.833,555.5 656.167,556.5 655.5,557.5C 645.833,557.5 636.167,557.5 626.5,557.5C 626.5,557.167 626.5,556.833 626.5,556.5C 627.5,555.833 628.5,555.167 629.5,554.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#663b0f\",d:\"M 664.5,547.5 C 663.964,550.698 664.631,553.365 666.5,555.5C 674.833,555.5 683.167,555.5 691.5,555.5C 691.5,556.5 691.5,557.5 691.5,558.5C 690.167,558.5 688.833,558.5 687.5,558.5C 679.833,558.5 672.167,558.5 664.5,558.5C 672.99,557.67 681.657,557.17 690.5,557C 681.506,556.5 672.506,556.334 663.5,556.5C 663.5,555.167 663.5,553.833 663.5,552.5C 663.216,550.585 663.549,548.919 664.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44697a\",d:\"M 623.5,546.5 C 623.5,546.833 623.5,547.167 623.5,547.5C 623.5,549.5 623.5,551.5 623.5,553.5C 623.804,555.796 624.804,556.129 626.5,554.5C 627.5,554.5 628.5,554.5 629.5,554.5C 628.5,555.167 627.5,555.833 626.5,556.5C 625.5,556.5 624.5,556.5 623.5,556.5C 623.5,557.833 623.5,559.167 623.5,560.5C 622.167,555.833 622.167,551.167 623.5,546.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0c42d\",d:\"M 525.5,558.5 C 532.354,558.176 539.021,558.509 545.5,559.5C 535.5,559.5 525.5,559.5 515.5,559.5C 515.5,560.833 515.5,562.167 515.5,563.5C 513.926,563.063 512.759,562.063 512,560.5C 511.51,561.793 511.343,563.127 511.5,564.5C 509.453,564.511 507.453,564.844 505.5,565.5C 499.093,565.105 493.093,563.772 487.5,561.5C 487.67,562.822 487.337,563.989 486.5,565C 478.841,565.5 471.174,565.666 463.5,565.5C 462.766,564.292 462.433,562.959 462.5,561.5C 462.328,560.508 462.662,559.842 463.5,559.5C 483.857,559.1 504.524,558.766 525.5,558.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bbeef8\",d:\"M 626.5,556.5 C 626.5,556.833 626.5,557.167 626.5,557.5C 626.5,558.167 626.833,558.5 627.5,558.5C 627.737,559.791 627.404,560.791 626.5,561.5C 625.209,561.737 624.209,561.404 623.5,560.5C 623.5,559.167 623.5,557.833 623.5,556.5C 624.5,556.5 625.5,556.5 626.5,556.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2bc2f2\",d:\"M 628.5,558.5 C 638.167,558.5 647.833,558.5 657.5,558.5C 657.5,560.167 657.5,561.833 657.5,563.5C 651.523,564.165 645.523,564.498 639.5,564.5C 644.596,563.988 649.596,562.655 654.5,560.5C 645.676,559.833 637.009,559.167 628.5,558.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7c7373\",d:\"M 728.5,556.5 C 728.443,557.609 728.11,558.609 727.5,559.5C 724.122,560.109 722.122,558.776 721.5,555.5C 719.889,552.668 720.722,550.668 724,549.5C 727.922,550.208 729.422,552.541 728.5,556.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4757b\",d:\"M 721.5,555.5 C 721.384,552.09 723.05,550.756 726.5,551.5C 726.5,553.167 726.5,554.833 726.5,556.5C 724.708,556.634 723.042,556.301 721.5,555.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbbf04\",d:\"M 451.5,530.5 C 462.07,530.496 472.737,530.663 483.5,531C 482.366,532.016 482.699,532.683 484.5,533C 483.244,533.417 482.577,534.25 482.5,535.5C 481.522,535.811 480.855,536.478 480.5,537.5C 474.441,537.863 468.774,538.863 463.5,540.5C 462.715,543.83 461.715,547.163 460.5,550.5C 460.64,552.03 461.307,553.03 462.5,553.5C 490.664,554.332 518.997,554.832 547.5,555C 540.167,555.333 532.833,555.667 525.5,556C 524.402,556.77 524.402,557.603 525.5,558.5C 504.524,558.766 483.857,559.1 463.5,559.5C 462.662,559.842 462.328,560.508 462.5,561.5C 461.188,566.015 461.188,570.682 462.5,575.5C 465.081,576.68 464.914,577.68 462,578.5C 461.503,581.146 461.336,583.813 461.5,586.5C 489.852,586.809 518.185,586.475 546.5,585.5C 548.03,585.64 549.03,586.307 549.5,587.5C 516.802,587.812 484.136,587.479 451.5,586.5C 451.5,567.833 451.5,549.167 451.5,530.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff9bf\",d:\"M 463.5,559.5 C 471.167,559.5 478.833,559.5 486.5,559.5C 486.5,560.833 486.5,562.167 486.5,563.5C 478.833,563.5 471.167,563.5 463.5,563.5C 463.5,562.167 463.5,560.833 463.5,559.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff6ae\",d:\"M 495.5,562.5 C 494.596,561.791 494.263,560.791 494.5,559.5C 499.5,559.5 504.5,559.5 509.5,559.5C 509.5,560.833 509.5,562.167 509.5,563.5C 504.637,563.819 499.97,563.486 495.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef1a1\",d:\"M 545.5,559.5 C 546.167,559.5 546.833,559.5 547.5,559.5C 547.5,560.833 547.5,562.167 547.5,563.5C 538.833,563.5 530.167,563.5 521.5,563.5C 519.5,563.5 517.5,563.5 515.5,563.5C 515.5,562.167 515.5,560.833 515.5,559.5C 525.5,559.5 535.5,559.5 545.5,559.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdfbcf\",d:\"M 518.5,560.5 C 527.857,560.168 537.19,560.502 546.5,561.5C 541.833,561.833 537.167,562.167 532.5,562.5C 527.449,562.493 522.783,561.827 518.5,560.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdccc5\",d:\"M 111.5,561.5 C 111.5,562.833 111.5,564.167 111.5,565.5C 96.5,565.5 81.5,565.5 66.5,565.5C 65.5655,564.432 65.2322,563.099 65.5,561.5C 80.8333,561.5 96.1667,561.5 111.5,561.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf7e8\",d:\"M 464.5,560.5 C 471.2,560.17 477.866,560.503 484.5,561.5C 481.167,561.833 477.833,562.167 474.5,562.5C 470.761,562.486 467.428,561.82 464.5,560.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef6e0\",d:\"M 495.5,562.5 C 496.871,561.213 498.705,560.547 501,560.5C 502.833,560.833 504.667,561.167 506.5,561.5C 502.893,562.489 499.226,562.823 495.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3fddfd\",d:\"M 627.5,558.5 C 627.833,558.5 628.167,558.5 628.5,558.5C 637.009,559.167 645.676,559.833 654.5,560.5C 649.596,562.655 644.596,563.988 639.5,564.5C 635.731,564.756 632.064,564.423 628.5,563.5C 627.5,563.167 626.833,562.5 626.5,561.5C 627.404,560.791 627.737,559.791 627.5,558.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9766b\",d:\"M 122.5,519.5 C 124.372,521.604 126.705,522.937 129.5,523.5C 129.5,523.833 129.5,524.167 129.5,524.5C 129.5,543.167 129.5,561.833 129.5,580.5C 128.518,577.038 128.185,573.371 128.5,569.5C 128.5,554.5 128.5,539.5 128.5,524.5C 124.968,524.632 122.968,522.966 122.5,519.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef1ac\",d:\"M 321.5,559.5 C 335.833,559.5 350.167,559.5 364.5,559.5C 365.434,560.568 365.768,561.901 365.5,563.5C 350.833,563.5 336.167,563.5 321.5,563.5C 321.5,562.167 321.5,560.833 321.5,559.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef9da\",d:\"M 323.5,560.5 C 336.879,560.119 350.212,560.619 363.5,562C 356.833,562.167 350.167,562.333 343.5,562.5C 336.465,562.497 329.798,561.83 323.5,560.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff7ed\",d:\"M 66.5,562.5 C 80.8488,562.167 95.1821,562.501 109.5,563.5C 102.333,563.833 95.1667,564.167 88,564.5C 80.4675,564.497 73.3008,563.831 66.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#292d36\",d:\"M 652.5,544.5 C 653.5,544.5 654.5,544.5 655.5,544.5C 657.861,544.674 660.194,545.007 662.5,545.5C 663.167,546.167 663.833,546.833 664.5,547.5C 663.549,548.919 663.216,550.585 663.5,552.5C 662.566,553.568 662.232,554.901 662.5,556.5C 661.833,553.5 661.167,550.5 660.5,547.5C 648.345,546.505 636.011,546.171 623.5,546.5C 622.167,551.167 622.167,555.833 623.5,560.5C 624.209,561.404 625.209,561.737 626.5,561.5C 626.833,562.5 627.5,563.167 628.5,563.5C 628.5,564.167 628.5,564.833 628.5,565.5C 628.583,572.575 629.249,579.575 630.5,586.5C 629.532,588.607 629.198,590.941 629.5,593.5C 631.635,595.369 634.302,596.036 637.5,595.5C 665.167,595.5 692.833,595.5 720.5,595.5C 670.669,596.499 620.669,596.832 570.5,596.5C 570.179,594.952 569.179,594.285 567.5,594.5C 574.648,593.508 581.981,593.175 589.5,593.5C 589.168,583.81 589.502,574.144 590.5,564.5C 591.522,564.145 592.189,563.478 592.5,562.5C 601.833,562.5 611.167,562.5 620.5,562.5C 620.212,556.771 620.546,551.104 621.5,545.5C 631.812,544.501 642.145,544.168 652.5,544.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#65bbe0\",d:\"M 623.5,547.5 C 623.5,547.167 623.5,546.833 623.5,546.5C 636.011,546.171 648.345,546.505 660.5,547.5C 660.662,549.527 660.495,551.527 660,553.5C 659.329,554.252 658.496,554.586 657.5,554.5C 648.167,554.5 638.833,554.5 629.5,554.5C 628.5,554.5 627.5,554.5 626.5,554.5C 634.657,553.671 642.99,553.171 651.5,553C 652.167,552.667 652.833,552.333 653.5,552C 652.058,551.623 651.058,550.79 650.5,549.5C 653.572,549.817 656.572,549.484 659.5,548.5C 647.518,547.501 635.518,547.168 623.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6be1ee\",d:\"M 650.5,549.5 C 651.058,550.79 652.058,551.623 653.5,552C 652.833,552.333 652.167,552.667 651.5,553C 642.99,553.171 634.657,553.671 626.5,554.5C 624.804,556.129 623.804,555.796 623.5,553.5C 625.176,552.817 625.843,551.483 625.5,549.5C 633.833,549.5 642.167,549.5 650.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2fcfd\",d:\"M 623.5,547.5 C 635.518,547.168 647.518,547.501 659.5,548.5C 656.572,549.484 653.572,549.817 650.5,549.5C 642.167,549.5 633.833,549.5 625.5,549.5C 625.843,551.483 625.176,552.817 623.5,553.5C 623.5,551.5 623.5,549.5 623.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fff8b8\",d:\"M 152.5,561.5 C 166.833,561.5 181.167,561.5 195.5,561.5C 195.67,562.822 195.337,563.989 194.5,565C 180.171,565.5 165.837,565.667 151.5,565.5C 151.433,564.041 151.766,562.708 152.5,561.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbfce1\",d:\"M 155.5,562.5 C 168.184,562.168 180.851,562.501 193.5,563.5C 187.167,563.833 180.833,564.167 174.5,564.5C 167.796,564.496 161.463,563.83 155.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3c932\",d:\"M 463.5,573.5 C 482.503,573.667 501.503,573.5 520.5,573C 521.337,571.989 521.67,570.822 521.5,569.5C 502.167,569.5 482.833,569.5 463.5,569.5C 463.5,568.833 463.5,568.167 463.5,567.5C 482.5,567.5 501.5,567.5 520.5,567.5C 520.433,566.041 520.766,564.708 521.5,563.5C 530.167,563.5 538.833,563.5 547.5,563.5C 547.5,562.167 547.5,560.833 547.5,559.5C 552.295,558.048 553.628,559.715 551.5,564.5C 548.383,564.642 545.883,565.976 544,568.5C 543.311,567.643 542.478,566.977 541.5,566.5C 539.352,567.758 537.185,567.758 535,566.5C 532.059,568.896 529.225,568.896 526.5,566.5C 525.056,568.608 524.39,570.941 524.5,573.5C 504.027,574.804 483.693,574.804 463.5,573.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d82bd\",d:\"M 626.5,557.5 C 636.167,557.5 645.833,557.5 655.5,557.5C 657.167,557.5 658.833,557.5 660.5,557.5C 660.868,560.533 660.202,563.2 658.5,565.5C 648.5,565.5 638.5,565.5 628.5,565.5C 628.5,564.833 628.5,564.167 628.5,563.5C 632.064,564.423 635.731,564.756 639.5,564.5C 645.523,564.498 651.523,564.165 657.5,563.5C 657.5,561.833 657.5,560.167 657.5,558.5C 647.833,558.5 638.167,558.5 628.5,558.5C 628.167,558.5 627.833,558.5 627.5,558.5C 626.833,558.5 626.5,558.167 626.5,557.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#203a5a\",d:\"M 660.5,547.5 C 661.167,550.5 661.833,553.5 662.5,556.5C 662.5,557.5 662.5,558.5 662.5,559.5C 661.513,564.305 661.179,569.305 661.5,574.5C 661.167,574.5 660.833,574.5 660.5,574.5C 660.5,572.167 660.5,569.833 660.5,567.5C 660.5,566.167 659.833,565.5 658.5,565.5C 660.202,563.2 660.868,560.533 660.5,557.5C 658.833,557.5 657.167,557.5 655.5,557.5C 656.167,556.5 656.833,555.5 657.5,554.5C 658.496,554.586 659.329,554.252 660,553.5C 660.495,551.527 660.662,549.527 660.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efe3a1\",d:\"M 626.5,566.5 C 626.167,566.5 625.833,566.5 625.5,566.5C 625.5,565.833 625.167,565.5 624.5,565.5C 614.976,565.601 605.643,566.267 596.5,567.5C 595.833,567.5 595.5,567.833 595.5,568.5C 592.116,569.244 591.782,570.577 594.5,572.5C 593.5,572.5 592.5,572.5 591.5,572.5C 591.232,569.881 591.565,567.381 592.5,565C 598.167,564.833 603.833,564.667 609.5,564.5C 615.542,564.504 621.208,565.171 626.5,566.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbbc14\",d:\"M 515.5,563.5 C 517.5,563.5 519.5,563.5 521.5,563.5C 520.766,564.708 520.433,566.041 520.5,567.5C 501.5,567.5 482.5,567.5 463.5,567.5C 463.5,566.833 463.5,566.167 463.5,565.5C 471.174,565.666 478.841,565.5 486.5,565C 487.337,563.989 487.67,562.822 487.5,561.5C 493.093,563.772 499.093,565.105 505.5,565.5C 507.453,564.844 509.453,564.511 511.5,564.5C 511.343,563.127 511.51,561.793 512,560.5C 512.759,562.063 513.926,563.063 515.5,563.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdfd85\",d:\"M 624.5,565.5 C 615.398,567.27 606.065,567.937 596.5,567.5C 605.643,566.267 614.976,565.601 624.5,565.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d316b\",d:\"M 628.5,565.5 C 638.5,565.5 648.5,565.5 658.5,565.5C 659.833,565.5 660.5,566.167 660.5,567.5C 657.5,567.5 654.5,567.5 651.5,567.5C 644.833,567.5 638.167,567.5 631.5,567.5C 630.532,569.607 630.198,571.941 630.5,574.5C 630.5,575.167 630.5,575.833 630.5,576.5C 630.337,578.857 630.503,581.19 631,583.5C 632.011,584.337 633.178,584.67 634.5,584.5C 634.167,585.167 633.833,585.833 633.5,586.5C 632.5,586.5 631.5,586.5 630.5,586.5C 629.249,579.575 628.583,572.575 628.5,565.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#477785\",d:\"M 710.5,593.5 C 709.523,590.713 709.19,587.713 709.5,584.5C 711.142,582.919 713.142,582.253 715.5,582.5C 715.167,585.5 716.5,586.833 719.5,586.5C 718.833,583.833 718.167,581.167 717.5,578.5C 719.359,578.539 720.692,577.706 721.5,576C 725.833,575.333 730.167,575.333 734.5,576C 734.977,578.899 735.977,581.566 737.5,584C 736.484,584.519 735.818,585.353 735.5,586.5C 735.799,588.815 736.632,588.815 738,586.5C 738.811,579.586 738.645,572.752 737.5,566C 739.41,557.795 739.41,549.462 737.5,541C 738.746,525.448 738.746,509.782 737.5,494C 738.73,489.661 740.563,489.494 743,493.5C 742.615,506.559 743.115,519.726 744.5,533C 744.375,534.627 743.875,536.127 743,537.5C 742.111,536.112 741.611,536.278 741.5,538C 742.481,543.204 743.148,548.704 743.5,554.5C 742.414,561.907 742.747,569.074 744.5,576C 743.833,577.333 743.167,578.667 742.5,580C 743.991,582.022 743.658,583.688 741.5,585C 742.658,586.009 743.325,587.342 743.5,589C 742.969,591.817 742.636,594.65 742.5,597.5C 741.167,597.5 739.833,597.5 738.5,597.5C 738.859,593.013 737.026,591.346 733,592.5C 730.503,590.952 728.003,590.285 725.5,590.5C 721.845,592.834 718.512,592.667 715.5,590C 713.866,589.506 712.199,589.34 710.5,589.5C 710.5,590.833 710.5,592.167 710.5,593.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f7b88\",d:\"M 728.5,477.5 C 728.833,477.5 729.167,477.5 729.5,477.5C 729.557,478.609 729.89,479.609 730.5,480.5C 721.704,480.407 712.704,480.574 703.5,481C 696.727,482.463 689.727,482.629 682.5,481.5C 679.895,483.576 677.061,483.576 674,481.5C 663.299,481.7 652.632,481.7 642,481.5C 640.622,483.213 638.955,484.547 637,485.5C 629.36,485.891 620.694,485.891 611,485.5C 604.57,485.976 598.237,486.976 592,488.5C 589.973,487.268 588.64,487.602 588,489.5C 586.56,487.954 584.727,487.121 582.5,487C 583.167,486.333 583.833,485.667 584.5,485C 583.107,483.637 581.441,482.804 579.5,482.5C 577.637,484.062 576.304,483.729 575.5,481.5C 554.177,480.5 532.844,480.167 511.5,480.5C 511.5,481.5 511.5,482.5 511.5,483.5C 510.486,484.765 508.986,485.431 507,485.5C 504.648,485.695 502.648,485.028 501,483.5C 499.287,489.137 497.453,488.804 495.5,482.5C 488.097,480.989 480.93,481.656 474,484.5C 470.788,483.731 467.288,483.565 463.5,484C 464.623,485.044 465.956,485.71 467.5,486C 466.833,486.333 466.167,486.667 465.5,487C 467.167,487.333 468.833,487.667 470.5,488C 468.231,488.758 466.064,488.591 464,487.5C 464.13,490.387 463.63,493.387 462.5,496.5C 462.709,497.086 463.043,497.586 463.5,498C 460.69,498.782 458.023,499.616 455.5,500.5C 453.018,501.663 451.684,503.663 451.5,506.5C 450.833,507.833 449.833,508.833 448.5,509.5C 448.19,508.262 447.69,508.262 447,509.5C 446.517,508.552 446.351,507.552 446.5,506.5C 444.076,506.808 441.743,506.474 439.5,505.5C 442.308,502.978 445.141,502.978 448,505.5C 448.617,504.551 448.451,503.718 447.5,503C 444.833,502.667 442.167,502.333 439.5,502C 443.344,500.955 447.01,499.455 450.5,497.5C 452.447,495.724 452.78,493.724 451.5,491.5C 449.155,493.584 446.489,494.917 443.5,495.5C 443.5,494.5 443.5,493.5 443.5,492.5C 442.167,492.5 440.833,492.5 439.5,492.5C 439.67,493.822 439.337,494.989 438.5,496C 440.256,496.202 441.922,496.702 443.5,497.5C 440.316,497.787 438.316,499.453 437.5,502.5C 436.305,500.703 434.638,499.703 432.5,499.5C 432.415,497.071 431.415,495.071 429.5,493.5C 428.428,502.198 428.761,510.865 430.5,519.5C 429.766,527.485 430.266,535.485 432,543.5C 436.47,537.619 436.637,531.619 432.5,525.5C 432.662,523.159 433.662,521.325 435.5,520C 435.318,517.347 434.985,514.68 434.5,512C 436.685,512.188 438.685,512.354 440.5,512.5C 440.967,517.846 441.967,523.012 443.5,528C 441.342,529.312 441.009,530.978 442.5,533C 441.674,551.093 441.174,569.26 441,587.5C 440.667,586.167 440.333,584.833 440,583.5C 439.798,585.256 439.298,586.922 438.5,588.5C 436.695,586.407 434.362,585.24 431.5,585C 431.957,584.586 432.291,584.086 432.5,583.5C 430.862,570.25 430.029,556.917 430,543.5C 429.833,551.5 429.667,559.5 429.5,567.5C 429.544,576.125 430.211,584.625 431.5,593C 431.355,593.772 431.022,594.439 430.5,595C 429.231,594.891 428.231,595.058 427.5,595.5C 426.71,594.391 426.21,593.058 426,591.5C 425.333,558.833 425.333,526.167 426,493.5C 429.781,486.696 435.281,481.862 442.5,479C 537.499,478.5 632.499,478.333 727.5,478.5C 728.167,478.5 728.5,478.167 728.5,477.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fde948\",d:\"M 624.5,565.5 C 625.167,565.5 625.5,565.833 625.5,566.5C 625.5,566.833 625.5,567.167 625.5,567.5C 615.552,568.45 605.552,568.784 595.5,568.5C 595.5,567.833 595.833,567.5 596.5,567.5C 606.065,567.937 615.398,567.27 624.5,565.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfb017\",d:\"M 625.5,567.5 C 625.67,568.822 625.337,569.989 624.5,571C 621.305,571.181 618.305,571.681 615.5,572.5C 608.5,572.5 601.5,572.5 594.5,572.5C 591.782,570.577 592.116,569.244 595.5,568.5C 605.552,568.784 615.552,568.45 625.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#301706\",d:\"M 663.5,552.5 C 663.5,553.833 663.5,555.167 663.5,556.5C 672.506,556.334 681.506,556.5 690.5,557C 681.657,557.17 672.99,557.67 664.5,558.5C 663.505,569.988 663.172,581.655 663.5,593.5C 662.505,582.346 662.172,571.012 662.5,559.5C 662.5,558.5 662.5,557.5 662.5,556.5C 662.232,554.901 662.566,553.568 663.5,552.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc675e\",d:\"M 280.5,512.5 C 280.511,514.017 281.177,515.184 282.5,516C 285.08,517.144 287.747,517.978 290.5,518.5C 290.414,519.496 290.748,520.329 291.5,521C 293.329,521.273 294.829,522.107 296,523.5C 296.168,542.338 296.668,561.004 297.5,579.5C 297.5,582.5 297.5,585.5 297.5,588.5C 271.328,588.831 245.328,588.498 219.5,587.5C 218.297,566.322 218.464,544.988 220,523.5C 222.191,522.167 224.024,520.5 225.5,518.5C 235.562,510.956 246.062,503.956 257,497.5C 265.242,501.919 273.076,506.919 280.5,512.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffe4d8\",d:\"M 236.5,561.5 C 250.171,561.333 263.837,561.5 277.5,562C 278.684,563.145 278.684,564.312 277.5,565.5C 264.163,565.667 250.829,565.5 237.5,565C 236.663,563.989 236.33,562.822 236.5,561.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7786e\",d:\"M 236.5,561.5 C 250.327,560.339 264.327,560.173 278.5,561C 280.043,563.045 279.71,564.545 277.5,565.5C 278.684,564.312 278.684,563.145 277.5,562C 263.837,561.5 250.171,561.333 236.5,561.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f79c92\",d:\"M 269.5,540.5 C 270.489,545.975 270.822,551.642 270.5,557.5C 269.209,557.737 268.209,557.404 267.5,556.5C 269.446,551.604 270.113,546.271 269.5,540.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eb7a71\",d:\"M 248.5,537.5 C 247.587,543.441 247.254,549.441 247.5,555.5C 251.137,555.513 254.137,554.18 256.5,551.5C 251.003,549.842 249.17,546.175 251,540.5C 252.129,538.859 253.629,537.859 255.5,537.5C 252.429,540.643 251.762,544.31 253.5,548.5C 257.12,549.293 260.787,549.293 264.5,548.5C 263.791,549.404 262.791,549.737 261.5,549.5C 261.259,551.886 261.925,553.886 263.5,555.5C 259.791,553.716 256.458,554.216 253.5,557C 251.167,557.667 248.833,557.667 246.5,557C 245.522,550.59 245.189,544.09 245.5,537.5C 246.5,537.5 247.5,537.5 248.5,537.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fce9d8\",d:\"M 269.5,540.5 C 270.113,546.271 269.446,551.604 267.5,556.5C 266.167,556.167 264.833,555.833 263.5,555.5C 261.925,553.886 261.259,551.886 261.5,549.5C 262.791,549.737 263.791,549.404 264.5,548.5C 267.667,539.672 264.667,536.006 255.5,537.5C 253.629,537.859 252.129,538.859 251,540.5C 249.17,546.175 251.003,549.842 256.5,551.5C 254.137,554.18 251.137,555.513 247.5,555.5C 247.254,549.441 247.587,543.441 248.5,537.5C 250.386,533.456 253.552,531.789 258,532.5C 261.682,532.562 264.849,533.728 267.5,536C 268.267,537.47 268.933,538.97 269.5,540.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f86d60\",d:\"M 264.5,548.5 C 260.787,549.293 257.12,549.293 253.5,548.5C 251.762,544.31 252.429,540.643 255.5,537.5C 264.667,536.006 267.667,539.672 264.5,548.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fed1c9\",d:\"M 255.5,511.5 C 259.138,510.737 260.638,512.07 260,515.5C 256.331,517.009 254.831,515.676 255.5,511.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3b2b0f\",d:\"M 449.5,529.5 C 449.17,548.674 449.503,567.674 450.5,586.5C 450.557,587.609 450.89,588.609 451.5,589.5C 450.833,589.5 450.167,589.5 449.5,589.5C 448.175,569.402 448.175,549.402 449.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#425e7d\",d:\"M 559.5,515.5 C 560.793,516.842 561.626,518.509 562,520.5C 562.065,542.545 562.899,564.545 564.5,586.5C 563.079,591.255 560.079,594.255 555.5,595.5C 556.167,594.5 556.833,593.5 557.5,592.5C 558.167,591.5 558.833,590.5 559.5,589.5C 561.01,576.2 561.677,562.7 561.5,549C 561.333,539.833 561.167,530.667 561,521.5C 560.722,520.584 560.222,519.918 559.5,519.5C 559.5,518.167 559.5,516.833 559.5,515.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7d4714\",d:\"M 664.5,558.5 C 664.5,559.833 664.5,561.167 664.5,562.5C 667.428,563.82 670.761,564.486 674.5,564.5C 679.755,564.666 684.755,563.999 689.5,562.5C 691.104,561.713 691.771,560.38 691.5,558.5C 692.811,560.56 692.811,562.726 691.5,565C 684.167,565.333 676.833,565.667 669.5,566C 670.056,566.383 670.389,566.883 670.5,567.5C 671.001,569.246 671.668,570.246 672.5,570.5C 672.833,570.5 673.167,570.5 673.5,570.5C 673.5,570.833 673.5,571.167 673.5,571.5C 673.433,572.959 673.766,574.292 674.5,575.5C 673.833,575.5 673.167,575.5 672.5,575.5C 672.607,573.621 672.107,573.288 671,574.5C 670.5,580.825 670.334,587.158 670.5,593.5C 670.167,593.5 669.833,593.5 669.5,593.5C 669.5,593.167 669.5,592.833 669.5,592.5C 669.5,590.167 669.5,587.833 669.5,585.5C 669.5,583.833 669.5,582.167 669.5,580.5C 669.5,578.167 669.5,575.833 669.5,573.5C 667.219,573.077 665.552,573.744 664.5,575.5C 664.211,581.591 664.545,587.591 665.5,593.5C 664.833,593.5 664.167,593.5 663.5,593.5C 663.172,581.655 663.505,569.988 664.5,558.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1a213\",d:\"M 687.5,559.5 C 687.5,559.167 687.5,558.833 687.5,558.5C 688.833,558.5 690.167,558.5 691.5,558.5C 691.771,560.38 691.104,561.713 689.5,562.5C 681.5,562.5 673.5,562.5 665.5,562.5C 665.285,560.821 665.952,559.821 667.5,559.5C 670.428,560.82 673.761,561.486 677.5,561.5C 680.833,561.333 684.167,561.167 687.5,561C 688.738,560.31 688.738,559.81 687.5,559.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d4ab4b\",d:\"M 664.5,558.5 C 672.167,558.5 679.833,558.5 687.5,558.5C 687.5,558.833 687.5,559.167 687.5,559.5C 680.833,559.5 674.167,559.5 667.5,559.5C 665.952,559.821 665.285,560.821 665.5,562.5C 665.167,562.5 664.833,562.5 664.5,562.5C 664.5,561.167 664.5,559.833 664.5,558.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b47224\",d:\"M 625.5,566.5 C 625.833,566.5 626.167,566.5 626.5,566.5C 626.5,568.5 626.5,570.5 626.5,572.5C 622.833,572.5 619.167,572.5 615.5,572.5C 618.305,571.681 621.305,571.181 624.5,571C 625.337,569.989 625.67,568.822 625.5,567.5C 625.5,567.167 625.5,566.833 625.5,566.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#643506\",d:\"M 626.5,566.5 C 627.477,569.287 627.81,572.287 627.5,575.5C 622.5,575.5 617.5,575.5 612.5,575.5C 615.977,574.677 619.644,574.177 623.5,574C 614.173,573.5 604.839,573.334 595.5,573.5C 593.901,573.768 592.568,573.434 591.5,572.5C 592.5,572.5 593.5,572.5 594.5,572.5C 601.5,572.5 608.5,572.5 615.5,572.5C 619.167,572.5 622.833,572.5 626.5,572.5C 626.5,570.5 626.5,568.5 626.5,566.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc506\",d:\"M 555.5,585.5 C 555.5,585.833 555.5,586.167 555.5,586.5C 553.5,586.833 551.5,587.167 549.5,587.5C 549.03,586.307 548.03,585.64 546.5,585.5C 518.185,586.475 489.852,586.809 461.5,586.5C 461.336,583.813 461.503,581.146 462,578.5C 464.914,577.68 465.081,576.68 462.5,575.5C 461.188,570.682 461.188,566.015 462.5,561.5C 462.433,562.959 462.766,564.292 463.5,565.5C 463.5,566.167 463.5,566.833 463.5,567.5C 463.5,568.167 463.5,568.833 463.5,569.5C 463.5,570.833 463.5,572.167 463.5,573.5C 483.693,574.804 504.027,574.804 524.5,573.5C 524.39,570.941 525.056,568.608 526.5,566.5C 529.225,568.896 532.059,568.896 535,566.5C 537.185,567.758 539.352,567.758 541.5,566.5C 542.478,566.977 543.311,567.643 544,568.5C 545.883,565.976 548.383,564.642 551.5,564.5C 553.628,559.715 552.295,558.048 547.5,559.5C 546.833,559.5 546.167,559.5 545.5,559.5C 539.021,558.509 532.354,558.176 525.5,558.5C 524.402,557.603 524.402,556.77 525.5,556C 532.833,555.667 540.167,555.333 547.5,555C 518.997,554.832 490.664,554.332 462.5,553.5C 490.5,553.5 518.5,553.5 546.5,553.5C 546.737,552.209 546.404,551.209 545.5,550.5C 545.5,550.167 545.5,549.833 545.5,549.5C 525.284,549.018 504.951,548.018 484.5,546.5C 487.093,543.979 487.093,541.479 484.5,539C 488.388,537.241 492.388,536.574 496.5,537C 492.087,534.433 487.42,533.933 482.5,535.5C 482.577,534.25 483.244,533.417 484.5,533C 482.699,532.683 482.366,532.016 483.5,531C 472.737,530.663 462.07,530.496 451.5,530.5C 458.659,529.834 465.992,529.5 473.5,529.5C 498.836,530.313 524.17,530.813 549.5,531C 551.519,530.55 553.352,529.717 555,528.5C 555.5,547.497 555.667,566.497 555.5,585.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf7cc\",d:\"M 463.5,569.5 C 482.833,569.5 502.167,569.5 521.5,569.5C 521.67,570.822 521.337,571.989 520.5,573C 501.503,573.5 482.503,573.667 463.5,573.5C 463.5,572.167 463.5,570.833 463.5,569.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3b1909\",d:\"M 595.5,573.5 C 604.839,573.334 614.173,573.5 623.5,574C 619.644,574.177 615.977,574.677 612.5,575.5C 608.167,575.5 603.833,575.5 599.5,575.5C 596.833,575.5 594.167,575.5 591.5,575.5C 592.833,574.833 594.167,574.167 595.5,573.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#297dc0\",d:\"M 631.5,567.5 C 631.5,569.5 631.5,571.5 631.5,573.5C 638.167,573.5 644.833,573.5 651.5,573.5C 654.167,573.5 656.833,573.5 659.5,573.5C 659.5,571.833 659.5,570.167 659.5,568.5C 656.833,568.5 654.167,568.5 651.5,568.5C 651.5,568.167 651.5,567.833 651.5,567.5C 654.5,567.5 657.5,567.5 660.5,567.5C 660.5,569.833 660.5,572.167 660.5,574.5C 655.5,574.5 650.5,574.5 645.5,574.5C 640.5,574.5 635.5,574.5 630.5,574.5C 630.198,571.941 630.532,569.607 631.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48d3fb\",d:\"M 631.5,567.5 C 638.167,567.5 644.833,567.5 651.5,567.5C 651.5,567.833 651.5,568.167 651.5,568.5C 651.5,570.167 651.5,571.833 651.5,573.5C 644.833,573.5 638.167,573.5 631.5,573.5C 631.5,571.5 631.5,569.5 631.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2dade7\",d:\"M 651.5,568.5 C 654.167,568.5 656.833,568.5 659.5,568.5C 659.5,570.167 659.5,571.833 659.5,573.5C 656.833,573.5 654.167,573.5 651.5,573.5C 651.5,571.833 651.5,570.167 651.5,568.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#49f3fe\",d:\"M 634.5,569.5 C 639.5,569.5 644.5,569.5 649.5,569.5C 649.5,570.5 649.5,571.5 649.5,572.5C 644.5,572.5 639.5,572.5 634.5,572.5C 634.5,571.5 634.5,570.5 634.5,569.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#023491\",d:\"M 630.5,574.5 C 635.5,574.5 640.5,574.5 645.5,574.5C 645.833,575.167 646.167,575.833 646.5,576.5C 641.167,576.5 635.833,576.5 630.5,576.5C 630.5,575.833 630.5,575.167 630.5,574.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#473421\",d:\"M 450.5,527.5 C 459.986,526.506 469.652,526.173 479.5,526.5C 505.833,526.5 532.167,526.5 558.5,526.5C 558.667,547.169 558.5,567.836 558,588.5C 556.871,590.141 555.371,591.141 553.5,591.5C 553.5,591.167 553.5,590.833 553.5,590.5C 553.5,589.833 553.833,589.5 554.5,589.5C 555.79,588.942 556.623,587.942 557,586.5C 557.829,566.662 557.662,546.996 556.5,527.5C 521.167,527.5 485.833,527.5 450.5,527.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2f0c5\",d:\"M 591.5,575.5 C 594.167,575.5 596.833,575.5 599.5,575.5C 599.5,575.833 599.5,576.167 599.5,576.5C 597.066,577.131 594.732,578.131 592.5,579.5C 592.5,578.833 592.167,578.5 591.5,578.5C 591.5,577.5 591.5,576.5 591.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffe765\",d:\"M 599.5,576.5 C 607.5,576.5 615.5,576.5 623.5,576.5C 614.554,578.311 605.22,579.145 595.5,579C 594.177,579.816 593.511,580.983 593.5,582.5C 593.167,582.5 592.833,582.5 592.5,582.5C 592.5,581.5 592.5,580.5 592.5,579.5C 594.732,578.131 597.066,577.131 599.5,576.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39a6e7\",d:\"M 630.5,576.5 C 635.833,576.5 641.167,576.5 646.5,576.5C 647.833,576.5 649.167,576.5 650.5,576.5C 650.5,576.833 650.5,577.167 650.5,577.5C 646.167,577.5 641.833,577.5 637.5,577.5C 635.744,578.552 635.077,580.219 635.5,582.5C 640.833,582.5 646.167,582.5 651.5,582.5C 651.5,580.833 651.5,579.167 651.5,577.5C 654.167,577.5 656.833,577.5 659.5,577.5C 659.739,579.467 659.406,581.301 658.5,583C 650.989,583.171 643.655,583.671 636.5,584.5C 635.833,584.5 635.167,584.5 634.5,584.5C 633.178,584.67 632.011,584.337 631,583.5C 630.503,581.19 630.337,578.857 630.5,576.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eaae16\",d:\"M 623.5,576.5 C 624.5,576.5 625.5,576.5 626.5,576.5C 626.5,577.5 626.5,578.5 626.5,579.5C 615.666,581.986 604.666,582.986 593.5,582.5C 593.511,580.983 594.177,579.816 595.5,579C 605.22,579.145 614.554,578.311 623.5,576.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#40d9f8\",d:\"M 637.5,577.5 C 637.5,578.5 637.5,579.5 637.5,580.5C 640.867,580.543 644.201,580.21 647.5,579.5C 649.03,579.36 650.03,578.693 650.5,577.5C 650.833,577.5 651.167,577.5 651.5,577.5C 651.5,579.167 651.5,580.833 651.5,582.5C 646.167,582.5 640.833,582.5 635.5,582.5C 635.077,580.219 635.744,578.552 637.5,577.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#60f5fc\",d:\"M 637.5,577.5 C 641.833,577.5 646.167,577.5 650.5,577.5C 650.03,578.693 649.03,579.36 647.5,579.5C 644.201,580.21 640.867,580.543 637.5,580.5C 637.5,579.5 637.5,578.5 637.5,577.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a06417\",d:\"M 599.5,576.5 C 599.5,576.167 599.5,575.833 599.5,575.5C 603.833,575.5 608.167,575.5 612.5,575.5C 617.5,575.5 622.5,575.5 627.5,575.5C 627.5,577.5 627.5,579.5 627.5,581.5C 626.711,581.783 626.044,582.283 625.5,583C 615.172,583.5 604.839,583.666 594.5,583.5C 593.508,583.672 592.842,583.338 592.5,582.5C 592.833,582.5 593.167,582.5 593.5,582.5C 604.666,582.986 615.666,581.986 626.5,579.5C 626.5,578.5 626.5,577.5 626.5,576.5C 625.5,576.5 624.5,576.5 623.5,576.5C 615.5,576.5 607.5,576.5 599.5,576.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e2961\",d:\"M 645.5,574.5 C 650.5,574.5 655.5,574.5 660.5,574.5C 660.833,574.5 661.167,574.5 661.5,574.5C 661.5,581.167 661.5,587.833 661.5,594.5C 653.316,594.174 645.316,594.508 637.5,595.5C 634.302,596.036 631.635,595.369 629.5,593.5C 639.833,593.5 650.167,593.5 660.5,593.5C 660.5,592.167 660.5,590.833 660.5,589.5C 658.159,587.149 655.159,586.149 651.5,586.5C 649.167,586.5 646.833,586.5 644.5,586.5C 649.833,585.833 655.167,585.167 660.5,584.5C 660.5,581.833 660.5,579.167 660.5,576.5C 657.167,576.5 653.833,576.5 650.5,576.5C 649.167,576.5 647.833,576.5 646.5,576.5C 646.167,575.833 645.833,575.167 645.5,574.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e99c06\",d:\"M 385.5,575.5 C 385.785,577.288 385.452,578.955 384.5,580.5C 382.467,582.507 380.467,584.507 378.5,586.5C 376.883,587.038 375.216,587.371 373.5,587.5C 349.852,588.438 326.186,588.771 302.5,588.5C 301.527,586.052 301.194,583.385 301.5,580.5C 301.833,580.5 302.167,580.5 302.5,580.5C 326.997,581.663 351.663,581.83 376.5,581C 379.629,579.37 382.629,577.536 385.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f2003\",d:\"M 627.5,581.5 C 627.817,585.702 627.483,589.702 626.5,593.5C 626.5,590.833 626.5,588.167 626.5,585.5C 623.5,585.5 620.5,585.5 617.5,585.5C 611.5,585.5 605.5,585.5 599.5,585.5C 597.302,585.88 595.635,585.213 594.5,583.5C 604.839,583.666 615.172,583.5 625.5,583C 626.044,582.283 626.711,581.783 627.5,581.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2864ba\",d:\"M 650.5,577.5 C 650.5,577.167 650.5,576.833 650.5,576.5C 653.833,576.5 657.167,576.5 660.5,576.5C 660.5,579.167 660.5,581.833 660.5,584.5C 652.5,584.5 644.5,584.5 636.5,584.5C 643.655,583.671 650.989,583.171 658.5,583C 659.406,581.301 659.739,579.467 659.5,577.5C 656.833,577.5 654.167,577.5 651.5,577.5C 651.167,577.5 650.833,577.5 650.5,577.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36191f\",d:\"M 47.5,575.5 C 47.8333,575.5 48.1667,575.5 48.5,575.5C 49.8744,579.609 52.2078,582.943 55.5,585.5C 56.1667,586.5 56.8333,587.5 57.5,588.5C 56.8333,588.5 56.1667,588.5 55.5,588.5C 52.0969,586.1 49.4302,583.1 47.5,579.5C 47.5,578.167 47.5,576.833 47.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fa4644\",d:\"M 219.5,587.5 C 219.5,585.5 219.5,583.5 219.5,581.5C 245.074,581.828 270.574,581.495 296,580.5C 296.497,582.81 296.663,585.143 296.5,587.5C 270.833,587.5 245.167,587.5 219.5,587.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#012884\",d:\"M 634.5,584.5 C 635.167,584.5 635.833,584.5 636.5,584.5C 644.5,584.5 652.5,584.5 660.5,584.5C 655.167,585.167 649.833,585.833 644.5,586.5C 642.833,586.5 641.167,586.5 639.5,586.5C 637.5,586.5 635.5,586.5 633.5,586.5C 633.833,585.833 634.167,585.167 634.5,584.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f74a4a\",d:\"M 128.5,584.5 C 128.5,585.833 128.5,587.167 128.5,588.5C 106.833,588.5 85.1667,588.5 63.5,588.5C 62.1667,588.5 60.8333,588.5 59.5,588.5C 58.8333,588.5 58.1667,588.5 57.5,588.5C 56.8333,587.5 56.1667,586.5 55.5,585.5C 54.178,583.689 53.678,581.689 54,579.5C 54.5,580 55,580.5 55.5,581C 79.8311,581.5 104.164,581.667 128.5,581.5C 128.5,582.5 128.5,583.5 128.5,584.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc4240\",d:\"M 59.5,583.5 C 81.9939,582.503 104.661,582.169 127.5,582.5C 127.67,583.822 127.337,584.989 126.5,586C 104.816,586.764 83.1497,586.43 61.5,585C 60.9558,584.283 60.2891,583.783 59.5,583.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eb9c0b\",d:\"M 133.5,579.5 C 133.833,579.5 134.167,579.5 134.5,579.5C 160.479,581.491 186.812,582.158 213.5,581.5C 213.5,583.833 213.5,586.167 213.5,588.5C 187.167,588.5 160.833,588.5 134.5,588.5C 134.768,586.901 134.434,585.568 133.5,584.5C 133.5,582.833 133.5,581.167 133.5,579.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cd4b59\",d:\"M 128.5,584.5 C 128.833,584.5 129.167,584.5 129.5,584.5C 129.5,586.167 129.5,587.833 129.5,589.5C 107.327,589.831 85.327,589.497 63.5,588.5C 85.1667,588.5 106.833,588.5 128.5,588.5C 128.5,587.167 128.5,585.833 128.5,584.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bf8926\",d:\"M 215.5,473.5 C 215.5,489.167 215.5,504.833 215.5,520.5C 215.5,543.5 215.5,566.5 215.5,589.5C 215.167,589.5 214.833,589.5 214.5,589.5C 187.5,589.5 160.5,589.5 133.5,589.5C 133.5,587.833 133.5,586.167 133.5,584.5C 134.434,585.568 134.768,586.901 134.5,588.5C 160.833,588.5 187.167,588.5 213.5,588.5C 213.5,586.167 213.5,583.833 213.5,581.5C 213.5,545.833 213.5,510.167 213.5,474.5C 214.167,474.167 214.833,473.833 215.5,473.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cd9224\",d:\"M 373.5,587.5 C 372.5,588.167 371.5,588.833 370.5,589.5C 347.833,589.5 325.167,589.5 302.5,589.5C 302.5,589.167 302.5,588.833 302.5,588.5C 326.186,588.771 349.852,588.438 373.5,587.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#704822\",d:\"M 378.5,586.5 C 376.383,588.655 373.716,589.655 370.5,589.5C 371.5,588.833 372.5,588.167 373.5,587.5C 375.216,587.371 376.883,587.038 378.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e49c13\",d:\"M 451.5,586.5 C 484.136,587.479 516.802,587.812 549.5,587.5C 551.5,587.167 553.5,586.833 555.5,586.5C 554.89,587.391 554.557,588.391 554.5,589.5C 553.833,589.5 553.5,589.833 553.5,590.5C 520.498,590.667 487.498,590.5 454.5,590C 453.635,588.641 452.635,587.474 451.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#af9d69\",d:\"M 591.5,578.5 C 592.167,578.5 592.5,578.833 592.5,579.5C 592.5,580.5 592.5,581.5 592.5,582.5C 592.842,583.338 593.508,583.672 594.5,583.5C 595.635,585.213 597.302,585.88 599.5,585.5C 597.657,586.283 595.657,586.95 593.5,587.5C 592.571,588.689 592.238,590.022 592.5,591.5C 592.5,591.833 592.5,592.167 592.5,592.5C 592.167,592.5 591.833,592.5 591.5,592.5C 591.5,587.833 591.5,583.167 591.5,578.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1c82b\",d:\"M 599.5,585.5 C 605.5,585.5 611.5,585.5 617.5,585.5C 617.5,585.833 617.5,586.167 617.5,586.5C 616.909,587.151 616.243,587.818 615.5,588.5C 608.524,589.331 601.524,589.831 594.5,590C 593.944,590.383 593.611,590.883 593.5,591.5C 593.167,591.5 592.833,591.5 592.5,591.5C 592.238,590.022 592.571,588.689 593.5,587.5C 595.657,586.95 597.657,586.283 599.5,585.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#486c7f\",d:\"M 770.5,493.5 C 771.829,498.792 772.496,504.458 772.5,510.5C 771.51,537.496 771.344,564.496 772,591.5C 772.249,590.376 772.749,589.376 773.5,588.5C 774.506,588.938 774.506,589.604 773.5,590.5C 777.783,591.492 782.116,591.826 786.5,591.5C 787.34,562.175 787.674,532.842 787.5,503.5C 787.833,503.5 788.167,503.5 788.5,503.5C 788.5,522.167 788.5,540.833 788.5,559.5C 788.828,570.679 788.495,581.679 787.5,592.5C 775.016,591.144 773.35,595.144 782.5,604.5C 783.038,606.117 783.371,607.784 783.5,609.5C 791.323,610.615 798.99,612.282 806.5,614.5C 804.5,614.5 802.5,614.5 800.5,614.5C 800.177,618.226 800.511,621.893 801.5,625.5C 803.944,622.929 806.444,622.929 809,625.5C 810.225,625.138 811.391,624.638 812.5,624C 813.453,622.045 814.787,620.378 816.5,619C 815.906,618.536 815.239,618.369 814.5,618.5C 815.919,617.549 817.585,617.216 819.5,617.5C 821.044,620.248 821.71,623.248 821.5,626.5C 820.022,626.238 818.689,626.571 817.5,627.5C 819.135,628.681 820.802,628.681 822.5,627.5C 823.932,624.673 824.599,621.673 824.5,618.5C 825.167,618.833 825.833,619.167 826.5,619.5C 826.5,621.167 826.5,622.833 826.5,624.5C 825.624,624.369 824.957,624.702 824.5,625.5C 827.951,627.048 828.284,629.048 825.5,631.5C 824.28,630.289 823.113,630.289 822,631.5C 821.612,630.572 820.945,629.905 820,629.5C 816.857,630.642 813.69,630.642 810.5,629.5C 807.445,629.737 804.779,630.737 802.5,632.5C 796.824,632.666 791.157,632.499 785.5,632C 783.559,630.097 781.226,629.264 778.5,629.5C 776.806,628.473 775.473,627.139 774.5,625.5C 773.563,622.731 772.396,620.064 771,617.5C 770.5,576.168 770.333,534.835 770.5,493.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1a50d\",d:\"M 617.5,586.5 C 620.167,586.5 622.833,586.5 625.5,586.5C 625.5,587.5 625.5,588.5 625.5,589.5C 614.833,590.167 604.167,590.833 593.5,591.5C 593.611,590.883 593.944,590.383 594.5,590C 601.524,589.831 608.524,589.331 615.5,588.5C 616.243,587.818 616.909,587.151 617.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a8cd4\",d:\"M 630.5,586.5 C 631.5,586.5 632.5,586.5 633.5,586.5C 635.5,586.5 637.5,586.5 639.5,586.5C 639.5,586.833 639.5,587.167 639.5,587.5C 638.833,587.5 638.167,587.5 637.5,587.5C 636.167,587.5 634.833,587.5 633.5,587.5C 633.5,588.833 633.5,590.167 633.5,591.5C 640.508,591.666 647.508,591.5 654.5,591C 655.167,590.667 655.833,590.333 656.5,590C 654.569,589.098 652.903,587.931 651.5,586.5C 655.159,586.149 658.159,587.149 660.5,589.5C 658.916,590.382 657.249,591.215 655.5,592C 647.833,592.667 640.167,592.667 632.5,592C 630.845,590.556 630.178,588.722 630.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a16214\",d:\"M 450.5,586.5 C 450.833,586.5 451.167,586.5 451.5,586.5C 452.635,587.474 453.635,588.641 454.5,590C 487.498,590.5 520.498,590.667 553.5,590.5C 553.5,590.833 553.5,591.167 553.5,591.5C 552.833,591.5 552.167,591.5 551.5,591.5C 518.832,591.667 486.165,591.5 453.5,591C 452.956,590.283 452.289,589.783 451.5,589.5C 450.89,588.609 450.557,587.609 450.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d17c12\",d:\"M 625.5,589.5 C 622.913,590.816 619.913,591.483 616.5,591.5C 608.509,592.099 600.509,592.433 592.5,592.5C 592.5,592.167 592.5,591.833 592.5,591.5C 592.833,591.5 593.167,591.5 593.5,591.5C 604.167,590.833 614.833,590.167 625.5,589.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#50c7f3\",d:\"M 639.5,587.5 C 639.5,587.167 639.5,586.833 639.5,586.5C 641.167,586.5 642.833,586.5 644.5,586.5C 646.833,586.5 649.167,586.5 651.5,586.5C 652.903,587.931 654.569,589.098 656.5,590C 655.833,590.333 655.167,590.667 654.5,591C 647.508,591.5 640.508,591.666 633.5,591.5C 633.5,590.167 633.5,588.833 633.5,587.5C 634.833,587.5 636.167,587.5 637.5,587.5C 637.196,588.15 636.863,588.817 636.5,589.5C 641.5,590.833 646.5,590.833 651.5,589.5C 651.167,589.167 650.833,588.833 650.5,588.5C 646.906,587.574 643.24,587.241 639.5,587.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#64f4fc\",d:\"M 637.5,587.5 C 638.167,587.5 638.833,587.5 639.5,587.5C 643.24,587.241 646.906,587.574 650.5,588.5C 650.833,588.833 651.167,589.167 651.5,589.5C 646.5,590.833 641.5,590.833 636.5,589.5C 636.863,588.817 637.196,588.15 637.5,587.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a1d0b\",d:\"M 451.5,589.5 C 452.289,589.783 452.956,590.283 453.5,591C 486.165,591.5 518.832,591.667 551.5,591.5C 551.5,591.833 551.5,592.167 551.5,592.5C 518.498,592.667 485.498,592.5 452.5,592C 451.748,591.329 451.414,590.496 451.5,589.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a05919\",d:\"M 617.5,586.5 C 617.5,586.167 617.5,585.833 617.5,585.5C 620.5,585.5 623.5,585.5 626.5,585.5C 626.5,588.167 626.5,590.833 626.5,593.5C 614.655,593.828 602.988,593.495 591.5,592.5C 591.833,592.5 592.167,592.5 592.5,592.5C 600.509,592.433 608.509,592.099 616.5,591.5C 619.913,591.483 622.913,590.816 625.5,589.5C 625.5,588.5 625.5,587.5 625.5,586.5C 622.833,586.5 620.167,586.5 617.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a405f\",d:\"M 388.5,575.5 C 388.833,575.5 389.167,575.5 389.5,575.5C 389.478,580.186 388.312,584.52 386,588.5C 385.023,587.226 384.189,587.226 383.5,588.5C 379.661,590.245 375.661,591.745 371.5,593C 367.514,593.499 363.514,593.666 359.5,593.5C 260.005,594.2 160.672,593.867 61.5,592.5C 164.335,592.833 267.001,592.499 369.5,591.5C 379.665,590.6 385.999,585.267 388.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3061a7\",d:\"M 630.5,586.5 C 630.178,588.722 630.845,590.556 632.5,592C 640.167,592.667 647.833,592.667 655.5,592C 657.249,591.215 658.916,590.382 660.5,589.5C 660.5,590.833 660.5,592.167 660.5,593.5C 650.167,593.5 639.833,593.5 629.5,593.5C 629.198,590.941 629.532,588.607 630.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c2948\",d:\"M 449.5,589.5 C 450.167,589.5 450.833,589.5 451.5,589.5C 451.414,590.496 451.748,591.329 452.5,592C 485.498,592.5 518.498,592.667 551.5,592.5C 553.5,592.5 555.5,592.5 557.5,592.5C 556.833,593.5 556.167,594.5 555.5,595.5C 554.292,596.234 552.959,596.567 551.5,596.5C 536.682,595.167 521.515,594.501 506,594.5C 490.663,594.5 475.496,594.833 460.5,595.5C 458.5,595.5 456.5,595.5 454.5,595.5C 451.893,594.288 450.226,592.288 449.5,589.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#231d24\",d:\"M 709.5,584.5 C 709.19,587.713 709.523,590.713 710.5,593.5C 713.518,593.335 716.518,593.502 719.5,594C 720.416,594.278 721.082,594.778 721.5,595.5C 721.167,595.5 720.833,595.5 720.5,595.5C 692.833,595.5 665.167,595.5 637.5,595.5C 645.316,594.508 653.316,594.174 661.5,594.5C 661.5,587.833 661.5,581.167 661.5,574.5C 661.179,569.305 661.513,564.305 662.5,559.5C 662.172,571.012 662.505,582.346 663.5,593.5C 664.167,593.5 664.833,593.5 665.5,593.5C 666.833,593.5 668.167,593.5 669.5,593.5C 669.833,593.5 670.167,593.5 670.5,593.5C 671.167,592.5 671.833,591.5 672.5,590.5C 672.5,591.5 672.5,592.5 672.5,593.5C 684.167,593.5 695.833,593.5 707.5,593.5C 707.806,590.615 707.473,587.948 706.5,585.5C 707.681,582.362 707.681,579.362 706.5,576.5C 706.81,573.287 706.477,570.287 705.5,567.5C 704.833,567.5 704.167,567.5 703.5,567.5C 693.167,567.5 682.833,567.5 672.5,567.5C 672.5,568.5 672.5,569.5 672.5,570.5C 671.668,570.246 671.001,569.246 670.5,567.5C 670.389,566.883 670.056,566.383 669.5,566C 676.833,565.667 684.167,565.333 691.5,565C 692.811,562.726 692.811,560.56 691.5,558.5C 691.5,557.5 691.5,556.5 691.5,555.5C 693.592,552.084 693.925,548.417 692.5,544.5C 692.802,541.941 692.468,539.607 691.5,537.5C 691.5,536.833 691.5,536.167 691.5,535.5C 691.802,532.941 691.468,530.607 690.5,528.5C 678.833,528.5 667.167,528.5 655.5,528.5C 654.675,532.647 654.175,536.981 654,541.5C 653.501,536.845 653.334,532.179 653.5,527.5C 659.491,526.834 665.657,526.5 672,526.5C 679.242,526.388 686.409,526.888 693.5,528C 694.488,540.086 694.822,552.253 694.5,564.5C 699.012,564.149 703.345,564.815 707.5,566.5C 709.299,572.341 709.966,578.341 709.5,584.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8a6222\",d:\"M 706.5,585.5 C 707.473,587.948 707.806,590.615 707.5,593.5C 695.833,593.5 684.167,593.5 672.5,593.5C 672.5,592.5 672.5,591.5 672.5,590.5C 672.5,590.167 672.5,589.833 672.5,589.5C 673.167,590.167 673.833,590.833 674.5,591.5C 684.833,591.5 695.167,591.5 705.5,591.5C 706.461,589.735 706.795,587.735 706.5,585.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eeb01b\",d:\"M 675.5,586.5 C 685.5,586.5 695.5,586.5 705.5,586.5C 705.5,588.167 705.5,589.833 705.5,591.5C 695.167,591.5 684.833,591.5 674.5,591.5C 674.216,589.585 674.549,587.919 675.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efd499\",d:\"M 674.5,585.5 C 674.833,585.5 675.167,585.5 675.5,585.5C 675.5,585.833 675.5,586.167 675.5,586.5C 674.549,587.919 674.216,589.585 674.5,591.5C 673.833,590.833 673.167,590.167 672.5,589.5C 672.157,587.517 672.824,586.183 674.5,585.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e1b0f\",d:\"M 672.5,575.5 C 672.5,576.833 672.5,578.167 672.5,579.5C 672.157,581.483 672.824,582.817 674.5,583.5C 674.5,584.167 674.5,584.833 674.5,585.5C 672.824,586.183 672.157,587.517 672.5,589.5C 672.5,589.833 672.5,590.167 672.5,590.5C 671.833,591.5 671.167,592.5 670.5,593.5C 670.334,587.158 670.5,580.825 671,574.5C 672.107,573.288 672.607,573.621 672.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eda62d\",d:\"M 669.5,585.5 C 669.5,587.833 669.5,590.167 669.5,592.5C 665.527,591.925 664.527,589.758 666.5,586C 667.448,585.517 668.448,585.351 669.5,585.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#946b14\",d:\"M 675.5,586.5 C 675.5,586.167 675.5,585.833 675.5,585.5C 685.833,585.5 696.167,585.5 706.5,585.5C 706.795,587.735 706.461,589.735 705.5,591.5C 705.5,589.833 705.5,588.167 705.5,586.5C 695.5,586.5 685.5,586.5 675.5,586.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#421c07\",d:\"M 706.5,576.5 C 707.681,579.362 707.681,582.362 706.5,585.5C 696.167,585.5 685.833,585.5 675.5,585.5C 685.5,584.833 695.5,584.167 705.5,583.5C 705.5,582.833 705.5,582.167 705.5,581.5C 706.451,580.081 706.784,578.415 706.5,576.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ae6a1a\",d:\"M 664.5,575.5 C 665.477,578.287 665.81,581.287 665.5,584.5C 666.5,584.5 667.5,584.5 668.5,584.5C 668.232,582.901 668.566,581.568 669.5,580.5C 669.5,582.167 669.5,583.833 669.5,585.5C 668.448,585.351 667.448,585.517 666.5,586C 664.527,589.758 665.527,591.925 669.5,592.5C 669.5,592.833 669.5,593.167 669.5,593.5C 668.167,593.5 666.833,593.5 665.5,593.5C 664.545,587.591 664.211,581.591 664.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#663007\",d:\"M 674.5,583.5 C 684.833,583.5 695.167,583.5 705.5,583.5C 695.5,584.167 685.5,584.833 675.5,585.5C 675.167,585.5 674.833,585.5 674.5,585.5C 674.5,584.833 674.5,584.167 674.5,583.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#da8d30\",d:\"M 672.5,579.5 C 673.833,579.5 675.167,579.5 676.5,579.5C 676.5,580.167 676.833,580.5 677.5,580.5C 681.614,581.826 686.114,582.493 691,582.5C 695.68,582.499 700.18,582.166 704.5,581.5C 704.833,581.5 705.167,581.5 705.5,581.5C 705.5,582.167 705.5,582.833 705.5,583.5C 695.167,583.5 684.833,583.5 674.5,583.5C 672.824,582.817 672.157,581.483 672.5,579.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f59a0f\",d:\"M 704.5,581.5 C 700.18,582.166 695.68,582.499 691,582.5C 686.114,582.493 681.614,581.826 677.5,580.5C 685.806,579.462 694.139,579.295 702.5,580C 703.044,580.717 703.711,581.217 704.5,581.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#de8b19\",d:\"M 669.5,580.5 C 668.566,581.568 668.232,582.901 668.5,584.5C 667.5,584.5 666.5,584.5 665.5,584.5C 665.81,581.287 665.477,578.287 664.5,575.5C 665.552,573.744 667.219,573.077 669.5,573.5C 669.5,575.833 669.5,578.167 669.5,580.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0ae18\",d:\"M 676.5,577.5 C 686.167,577.5 695.833,577.5 705.5,577.5C 705.5,578.833 705.5,580.167 705.5,581.5C 705.167,581.5 704.833,581.5 704.5,581.5C 703.711,581.217 703.044,580.717 702.5,580C 694.139,579.295 685.806,579.462 677.5,580.5C 676.833,580.5 676.5,580.167 676.5,579.5C 676.5,578.833 676.5,578.167 676.5,577.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4e1bf\",d:\"M 672.5,575.5 C 673.167,575.5 673.833,575.5 674.5,575.5C 674.833,575.5 675.167,575.5 675.5,575.5C 675.5,576.167 675.833,576.5 676.5,576.5C 676.5,576.833 676.5,577.167 676.5,577.5C 676.5,578.167 676.5,578.833 676.5,579.5C 675.167,579.5 673.833,579.5 672.5,579.5C 672.5,578.167 672.5,576.833 672.5,575.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#db9a3e\",d:\"M 676.5,577.5 C 676.5,577.167 676.5,576.833 676.5,576.5C 686.5,576.5 696.5,576.5 706.5,576.5C 706.784,578.415 706.451,580.081 705.5,581.5C 705.5,580.167 705.5,578.833 705.5,577.5C 695.833,577.5 686.167,577.5 676.5,577.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#753907\",d:\"M 705.5,567.5 C 706.477,570.287 706.81,573.287 706.5,576.5C 696.5,576.5 686.5,576.5 676.5,576.5C 675.833,576.5 675.5,576.167 675.5,575.5C 685.319,574.506 695.319,574.173 705.5,574.5C 705.5,572.833 705.5,571.167 705.5,569.5C 705.5,568.833 705.5,568.167 705.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#daa43d\",d:\"M 705.5,569.5 C 705.5,571.167 705.5,572.833 705.5,574.5C 695.319,574.173 685.319,574.506 675.5,575.5C 675.167,575.5 674.833,575.5 674.5,575.5C 673.766,574.292 673.433,572.959 673.5,571.5C 683.98,569.602 694.647,568.935 705.5,569.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7a916\",d:\"M 676.5,571.5 C 685.525,571.168 694.525,571.502 703.5,572.5C 699,572.833 694.5,573.167 690,573.5C 685.114,573.493 680.614,572.826 676.5,571.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#da8a26\",d:\"M 670.5,567.5 C 670.5,568.833 670.5,570.167 670.5,571.5C 668.5,571.5 666.5,571.5 664.5,571.5C 664.5,570.167 664.5,568.833 664.5,567.5C 666.5,567.5 668.5,567.5 670.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef6d2\",d:\"M 703.5,567.5 C 704.167,567.5 704.833,567.5 705.5,567.5C 705.5,568.167 705.5,568.833 705.5,569.5C 694.647,568.935 683.98,569.602 673.5,571.5C 673.5,571.167 673.5,570.833 673.5,570.5C 683.292,568.842 693.292,567.842 703.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4eded\",d:\"M 703.5,567.5 C 693.292,567.842 683.292,568.842 673.5,570.5C 673.167,570.5 672.833,570.5 672.5,570.5C 672.5,569.5 672.5,568.5 672.5,567.5C 682.833,567.5 693.167,567.5 703.5,567.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5780f\",d:\"M 664.5,562.5 C 664.833,562.5 665.167,562.5 665.5,562.5C 673.5,562.5 681.5,562.5 689.5,562.5C 684.755,563.999 679.755,564.666 674.5,564.5C 670.761,564.486 667.428,563.82 664.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fccd1e\",d:\"M 667.5,559.5 C 674.167,559.5 680.833,559.5 687.5,559.5C 688.738,559.81 688.738,560.31 687.5,561C 684.167,561.167 680.833,561.333 677.5,561.5C 673.761,561.486 670.428,560.82 667.5,559.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#491d03\",d:\"M 658.5,535.5 C 669.5,535.5 680.5,535.5 691.5,535.5C 691.5,536.167 691.5,536.833 691.5,537.5C 680.116,538.144 669.116,537.477 658.5,535.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b67d24\",d:\"M 690.5,528.5 C 691.468,530.607 691.802,532.941 691.5,535.5C 680.5,535.5 669.5,535.5 658.5,535.5C 658.5,535.167 658.5,534.833 658.5,534.5C 669.167,534.5 679.833,534.5 690.5,534.5C 690.5,533.167 690.5,531.833 690.5,530.5C 690.5,530.167 690.5,529.833 690.5,529.5C 690.5,529.167 690.5,528.833 690.5,528.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3bb21\",d:\"M 690.5,530.5 C 690.5,531.833 690.5,533.167 690.5,534.5C 679.833,534.5 669.167,534.5 658.5,534.5C 658.5,533.5 658.5,532.5 658.5,531.5C 669.179,531.484 679.846,531.15 690.5,530.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3da6f\",d:\"M 677.5,529.5 C 681.833,529.5 686.167,529.5 690.5,529.5C 690.5,529.833 690.5,530.167 690.5,530.5C 679.846,531.15 669.179,531.484 658.5,531.5C 664.833,530.833 671.167,530.167 677.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9e6d9\",d:\"M 655.5,528.5 C 667.167,528.5 678.833,528.5 690.5,528.5C 690.5,528.833 690.5,529.167 690.5,529.5C 686.167,529.5 681.833,529.5 677.5,529.5C 670.825,529.334 664.158,529.5 657.5,530C 656.956,530.717 656.289,531.217 655.5,531.5C 655.5,530.5 655.5,529.5 655.5,528.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#40617c\",d:\"M 47.5,579.5 C 49.4302,583.1 52.0969,586.1 55.5,588.5C 57.5324,591.531 60.1991,593.864 63.5,595.5C 68.7136,595.123 73.8803,594.789 79,594.5C 94.1546,594.992 109.321,595.992 124.5,597.5C 125.5,597.167 126.5,596.833 127.5,596.5C 126.494,595.604 126.494,594.938 127.5,594.5C 142.129,595.599 156.796,595.599 171.5,594.5C 190.835,595.13 210.168,595.796 229.5,596.5C 252.63,594.578 275.63,595.245 298.5,598.5C 312.869,595.404 327.369,594.737 342,596.5C 348.223,596.233 354.057,595.233 359.5,593.5C 363.514,593.666 367.514,593.499 371.5,593C 375.661,591.745 379.661,590.245 383.5,588.5C 383.5,589.5 383.5,590.5 383.5,591.5C 379.726,591.484 378.726,593.15 380.5,596.5C 378.64,597.325 376.974,598.325 375.5,599.5C 373.167,600.167 370.833,600.833 368.5,601.5C 272.166,601.667 175.833,601.5 79.5,601C 72.1242,600.747 64.7908,600.081 57.5,599C 54.2896,596.283 50.9563,593.783 47.5,591.5C 46.8826,591.389 46.3826,591.056 46,590.5C 45.0572,587.176 44.2239,583.843 43.5,580.5C 43.3398,578.801 43.5065,577.134 44,575.5C 44.0572,577.91 45.2239,579.244 47.5,579.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#365472\",d:\"M 55.5,588.5 C 56.1667,588.5 56.8333,588.5 57.5,588.5C 58.2623,590.262 59.5956,591.262 61.5,591.5C 61.5,591.833 61.5,592.167 61.5,592.5C 160.672,593.867 260.005,594.2 359.5,593.5C 354.057,595.233 348.223,596.233 342,596.5C 327.369,594.737 312.869,595.404 298.5,598.5C 275.63,595.245 252.63,594.578 229.5,596.5C 210.168,595.796 190.835,595.13 171.5,594.5C 156.796,595.599 142.129,595.599 127.5,594.5C 126.494,594.938 126.494,595.604 127.5,596.5C 126.5,596.833 125.5,597.167 124.5,597.5C 109.321,595.992 94.1546,594.992 79,594.5C 73.8803,594.789 68.7136,595.123 63.5,595.5C 60.1991,593.864 57.5324,591.531 55.5,588.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a243d\",d:\"M 133.5,589.5 C 146.483,590.833 159.816,591.499 173.5,591.5C 186.833,591.333 200.167,591.167 213.5,591C 214.056,590.617 214.389,590.117 214.5,589.5C 214.833,589.5 215.167,589.5 215.5,589.5C 216.167,589.5 216.833,589.5 217.5,589.5C 217.611,590.117 217.944,590.617 218.5,591C 231.667,591.167 244.833,591.333 258,591.5C 271.517,591.499 284.684,590.833 297.5,589.5C 297.5,589.167 297.5,588.833 297.5,588.5C 298.5,588.5 299.5,588.5 300.5,588.5C 300.5,589.167 300.833,589.5 301.5,589.5C 323.809,591.49 346.475,592.156 369.5,591.5C 267.001,592.499 164.335,592.833 61.5,592.5C 61.5,592.167 61.5,591.833 61.5,591.5C 84.3395,591.831 107.006,591.497 129.5,590.5C 129.5,590.167 129.5,589.833 129.5,589.5C 130.833,588.167 132.167,588.167 133.5,589.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3f182a\",d:\"M 217.5,589.5 C 244.167,589.5 270.833,589.5 297.5,589.5C 284.684,590.833 271.517,591.499 258,591.5C 244.833,591.333 231.667,591.167 218.5,591C 217.944,590.617 217.611,590.117 217.5,589.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a201b\",d:\"M 133.5,589.5 C 160.5,589.5 187.5,589.5 214.5,589.5C 214.389,590.117 214.056,590.617 213.5,591C 200.167,591.167 186.833,591.333 173.5,591.5C 159.816,591.499 146.483,590.833 133.5,589.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#251024\",d:\"M 57.5,588.5 C 58.1667,588.5 58.8333,588.5 59.5,588.5C 60.2625,589.268 61.2625,589.768 62.5,590C 84.8308,590.5 107.164,590.667 129.5,590.5C 107.006,591.497 84.3395,591.831 61.5,591.5C 59.5956,591.262 58.2623,590.262 57.5,588.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#652232\",d:\"M 59.5,588.5 C 60.8333,588.5 62.1667,588.5 63.5,588.5C 85.327,589.497 107.327,589.831 129.5,589.5C 129.5,589.833 129.5,590.167 129.5,590.5C 107.164,590.667 84.8308,590.5 62.5,590C 61.2625,589.768 60.2625,589.268 59.5,588.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a3569\",d:\"M 460.5,595.5 C 475.496,594.833 490.663,594.5 506,594.5C 521.515,594.501 536.682,595.167 551.5,596.5C 521.155,596.742 490.822,596.408 460.5,595.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3d5b89\",d:\"M 454.5,595.5 C 456.5,595.5 458.5,595.5 460.5,595.5C 490.822,596.408 521.155,596.742 551.5,596.5C 520.669,597.664 489.669,597.831 458.5,597C 456.942,596.79 455.609,596.29 454.5,595.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4f7fb\",d:\"M 720.5,595.5 C 720.833,595.5 721.167,595.5 721.5,595.5C 725.167,595.5 728.833,595.5 732.5,595.5C 732.5,596.5 732.5,597.5 732.5,598.5C 709.167,598.5 685.833,598.5 662.5,598.5C 629.972,597.856 599.306,597.189 570.5,596.5C 620.669,596.832 670.669,596.499 720.5,595.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c4d9e6\",d:\"M 567.5,594.5 C 569.179,594.285 570.179,594.952 570.5,596.5C 599.306,597.189 629.972,597.856 662.5,598.5C 654.833,598.5 647.167,598.5 639.5,598.5C 613.833,598.5 588.167,598.5 562.5,598.5C 562.384,595.09 564.05,593.756 567.5,594.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#304360\",d:\"M 47.5,591.5 C 50.9563,593.783 54.2896,596.283 57.5,599C 64.7908,600.081 72.1242,600.747 79.5,601C 175.833,601.5 272.166,601.667 368.5,601.5C 371.833,601.5 375.167,601.5 378.5,601.5C 272.667,602.666 166.667,602.833 60.5,602C 56.996,600.746 53.6626,599.246 50.5,597.5C 48.6833,595.988 47.6833,593.988 47.5,591.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#15203f\",d:\"M 381.5,604.5 C 274.499,604.667 167.499,604.5 60.5,604C 55.6359,603.912 52.3026,601.746 50.5,597.5C 53.6626,599.246 56.996,600.746 60.5,602C 166.667,602.833 272.667,602.666 378.5,601.5C 393.55,599.448 401.883,590.781 403.5,575.5C 404.331,559.672 404.831,543.672 405,527.5C 405.667,545.167 405.667,562.833 405,580.5C 404.586,584.351 403.752,588.017 402.5,591.5C 401.325,591.281 400.325,591.614 399.5,592.5C 398.747,594.753 397.414,596.587 395.5,598C 392.166,599.331 389.166,601.165 386.5,603.5C 384.955,604.452 383.288,604.785 381.5,604.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#171d3e\",d:\"M 428.5,601.5 C 433.455,607.455 439.788,610.789 447.5,611.5C 447.5,611.833 447.5,612.167 447.5,612.5C 451.16,613.473 454.827,614.639 458.5,616C 548.331,617.527 637.997,617.694 727.5,616.5C 735.036,615.754 740.369,612.087 743.5,605.5C 744.376,605.369 745.043,605.702 745.5,606.5C 744.218,608.179 743.218,610.013 742.5,612C 738.326,614.588 733.993,616.921 729.5,619C 720.173,619.5 710.839,619.666 701.5,619.5C 640.857,619.324 580.19,619.324 519.5,619.5C 498.806,619.189 478.14,619.523 457.5,620.5C 452.43,620.295 447.763,618.961 443.5,616.5C 444.729,615.719 446.062,615.219 447.5,615C 443.489,613.665 439.489,612.331 435.5,611C 432.045,607.88 428.711,604.714 425.5,601.5C 425.5,601.167 425.5,600.833 425.5,600.5C 425.435,600.062 425.601,599.728 426,599.5C 426.708,600.381 427.542,601.047 428.5,601.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36506c\",d:\"M 743.5,605.5 C 740.369,612.087 735.036,615.754 727.5,616.5C 670.499,616.667 613.499,616.5 556.5,616C 546.658,615.83 536.991,615.33 527.5,614.5C 586.167,614.5 644.833,614.5 703.5,614.5C 711.507,614.666 719.507,614.5 727.5,614C 733.419,612.242 738.753,609.409 743.5,605.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c3c5d\",d:\"M 447.5,612.5 C 474.228,613.091 500.894,613.757 527.5,614.5C 536.991,615.33 546.658,615.83 556.5,616C 613.499,616.5 670.499,616.667 727.5,616.5C 637.997,617.694 548.331,617.527 458.5,616C 454.827,614.639 451.16,613.473 447.5,612.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41637e\",d:\"M 447.5,612.5 C 447.5,612.167 447.5,611.833 447.5,611.5C 474.49,612.372 501.49,612.706 528.5,612.5C 586.833,613.167 645.167,613.833 703.5,614.5C 644.833,614.5 586.167,614.5 527.5,614.5C 500.894,613.757 474.228,613.091 447.5,612.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#262d45\",d:\"M 701.5,619.5 C 701.577,620.75 702.244,621.583 703.5,622C 706.226,622.182 708.893,622.682 711.5,623.5C 707.558,624.493 703.558,625.16 699.5,625.5C 684.477,625.398 669.477,625.398 654.5,625.5C 650.833,625.333 647.167,625.167 643.5,625C 642.5,624.5 641.5,624 640.5,623.5C 633.372,624.311 626.206,624.977 619,625.5C 612.912,624.724 607.246,624.391 602,624.5C 601.333,627.167 600.667,627.167 600,624.5C 588.32,624.673 576.153,625.173 563.5,626C 570.499,627.249 577.499,628.416 584.5,629.5C 601.345,628.858 618.345,628.525 635.5,628.5C 665.151,629.88 694.817,630.714 724.5,631C 726.506,631.083 727.506,631.583 727.5,632.5C 663.442,632.011 599.442,632.511 535.5,634C 529.469,637.694 525.303,642.861 523,649.5C 522.333,684.5 522.333,719.5 523,754.5C 523.608,756.154 524.108,757.821 524.5,759.5C 523.637,758.537 522.97,758.537 522.5,759.5C 523.747,761.323 524.414,763.323 524.5,765.5C 522.876,765.64 521.71,764.973 521,763.5C 520.667,764.167 520.333,764.833 520,765.5C 519.71,763.048 519.044,760.715 518,758.5C 517.746,755.805 517.579,753.305 517.5,751C 518.167,750 518.833,749 519.5,748C 518.861,743.879 518.195,739.713 517.5,735.5C 516.914,735.291 516.414,734.957 516,734.5C 514.928,724.132 513.761,713.799 512.5,703.5C 511.5,703.5 510.5,703.5 509.5,703.5C 508.959,711.236 509.959,718.736 512.5,726C 511.102,727.649 511.436,728.982 513.5,730C 510.895,731.931 510.895,733.764 513.5,735.5C 514.662,740.467 514.829,745.467 514,750.5C 512.301,751.406 510.467,751.739 508.5,751.5C 508.828,740.654 508.494,729.987 507.5,719.5C 507.5,698.167 507.5,676.833 507.5,655.5C 509.153,665.802 510.153,676.468 510.5,687.5C 512.72,685.337 513.053,682.837 511.5,680C 513.8,677.995 513.8,675.828 511.5,673.5C 511.862,666.97 512.195,660.47 512.5,654C 509.827,647.532 508.827,640.699 509.5,633.5C 510.5,633.5 511.5,633.5 512.5,633.5C 512.5,631.167 512.5,628.833 512.5,626.5C 509.09,626.384 507.756,628.05 508.5,631.5C 504.676,631.265 502.676,629.265 502.5,625.5C 504.199,625.66 505.866,625.494 507.5,625C 510.856,621.668 514.856,619.835 519.5,619.5C 580.19,619.324 640.857,619.324 701.5,619.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dbe6ed\",d:\"M 486.5,624.5 C 343.001,625.5 199.334,625.833 55.5,625.5C 57.1484,624.073 59.1484,623.24 61.5,623C 201.833,622.333 342.167,622.333 482.5,623C 483.901,623.41 485.234,623.91 486.5,624.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c3fbfc\",d:\"M 486.5,624.5 C 487.492,624.328 488.158,624.662 488.5,625.5C 475.01,626.496 461.344,626.829 447.5,626.5C 318.833,626.333 190.166,626.5 61.5,627C 56.1534,628.336 51.8201,631.17 48.5,635.5C 47.6548,638.412 45.9882,639.412 43.5,638.5C 45.4342,632.233 49.4342,627.9 55.5,625.5C 199.334,625.833 343.001,625.5 486.5,624.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48657e\",d:\"M 963.5,490.5 C 964.167,491.167 964.833,491.833 965.5,492.5C 965.667,533.168 965.5,573.835 965,614.5C 962.787,625.215 956.287,631.215 945.5,632.5C 942.5,632.5 939.5,632.5 936.5,632.5C 936.845,629.512 935.512,628.179 932.5,628.5C 930.34,628.766 928.674,629.766 927.5,631.5C 925.672,630.205 923.672,629.205 921.5,628.5C 921.137,627.817 920.804,627.15 920.5,626.5C 922.698,625.933 925.031,625.933 927.5,626.5C 929.099,626.768 930.432,626.434 931.5,625.5C 931.004,619.175 932.171,618.841 935,624.5C 935.333,623.167 935.667,621.833 936,620.5C 936.495,622.473 936.662,624.473 936.5,626.5C 937.5,626.5 938.5,626.5 939.5,626.5C 939.483,622.466 938.483,618.799 936.5,615.5C 936.47,614.503 936.97,613.836 938,613.5C 940.135,612.873 942.302,612.373 944.5,612C 946.037,610.293 947.704,608.793 949.5,607.5C 948.287,610.225 946.454,612.559 944,614.5C 943.466,618.859 943.632,623.192 944.5,627.5C 949.543,628.091 954.21,627.091 958.5,624.5C 959.332,621.839 960.166,619.172 961,616.5C 962.214,574.507 963.047,532.507 963.5,490.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#52cde4\",d:\"M 447.5,626.5 C 340.839,628.498 233.839,629.165 126.5,628.5C 105.497,628.333 84.4974,628.5 63.5,629C 58.1414,630.717 53.1414,632.883 48.5,635.5C 51.8201,631.17 56.1534,628.336 61.5,627C 190.166,626.5 318.833,626.333 447.5,626.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39d4f8\",d:\"M 488.5,625.5 C 489.167,625.5 489.833,625.5 490.5,625.5C 493.765,627.584 496.932,629.917 500,632.5C 501.705,634.577 502.872,636.91 503.5,639.5C 503.832,678.337 503.499,717.004 502.5,755.5C 501.5,755.5 500.5,755.5 499.5,755.5C 499.659,758.187 498.825,760.52 497,762.5C 496.009,761.57 495.509,760.404 495.5,759C 496.611,755.676 498.111,752.51 500,749.5C 500.167,747.167 500.333,744.833 500.5,742.5C 499.459,729.516 498.793,716.516 498.5,703.5C 497.448,703.649 496.448,703.483 495.5,703C 496.552,701.881 497.719,701.381 499,701.5C 499.667,686.167 499.667,670.833 499,655.5C 497.916,654.335 497.083,653.002 496.5,651.5C 497.202,647.683 497.869,643.85 498.5,640C 497.394,637.72 496.061,635.553 494.5,633.5C 490.833,636.12 487.667,635.453 485,631.5C 483.301,632.406 481.467,632.739 479.5,632.5C 479.657,631.127 479.49,629.793 479,628.5C 413.571,629.498 348.071,629.831 282.5,629.5C 230.331,629.832 178.331,629.499 126.5,628.5C 233.839,629.165 340.839,628.498 447.5,626.5C 461.344,626.829 475.01,626.496 488.5,625.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#252d49\",d:\"M 747.5,596.5 C 748.819,614.837 748.819,633.171 747.5,651.5C 745.441,647.729 743.108,644.062 740.5,640.5C 738.971,639.237 737.305,638.237 735.5,637.5C 734.341,635.75 732.674,634.75 730.5,634.5C 728.973,634.573 727.973,633.906 727.5,632.5C 727.506,631.583 726.506,631.083 724.5,631C 694.817,630.714 665.151,629.88 635.5,628.5C 618.345,628.525 601.345,628.858 584.5,629.5C 577.499,628.416 570.499,627.249 563.5,626C 576.153,625.173 588.32,624.673 600,624.5C 600.667,627.167 601.333,627.167 602,624.5C 607.246,624.391 612.912,624.724 619,625.5C 626.206,624.977 633.372,624.311 640.5,623.5C 641.5,624 642.5,624.5 643.5,625C 647.167,625.167 650.833,625.333 654.5,625.5C 669.477,625.398 684.477,625.398 699.5,625.5C 703.558,625.16 707.558,624.493 711.5,623.5C 708.893,622.682 706.226,622.182 703.5,622C 702.244,621.583 701.577,620.75 701.5,619.5C 710.839,619.666 720.173,619.5 729.5,619C 733.993,616.921 738.326,614.588 742.5,612C 743.218,610.013 744.218,608.179 745.5,606.5C 745.043,605.702 744.376,605.369 743.5,605.5C 744.597,602.314 745.93,599.314 747.5,596.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7f9fab\",d:\"M 730.5,634.5 C 732.674,634.75 734.341,635.75 735.5,637.5C 730.87,636.771 726.203,636.437 721.5,636.5C 661.5,636.5 601.5,636.5 541.5,636.5C 604.5,635.833 667.5,635.167 730.5,634.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#16213f\",d:\"M 965.5,492.5 C 966.222,492.918 966.722,493.584 967,494.5C 967.178,536.189 967.678,577.856 968.5,619.5C 964.142,627.019 957.809,632.185 949.5,635C 924.501,635.542 899.501,636.042 874.5,636.5C 845.512,636.099 816.512,635.932 787.5,636C 780.385,635.367 775.385,631.867 772.5,625.5C 773.167,625.5 773.833,625.5 774.5,625.5C 775.473,627.139 776.806,628.473 778.5,629.5C 779.749,631.136 781.416,632.303 783.5,633C 837.668,633.832 891.668,633.665 945.5,632.5C 956.287,631.215 962.787,625.215 965,614.5C 965.5,573.835 965.667,533.168 965.5,492.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#49788b\",d:\"M 721.5,636.5 C 726.203,636.437 730.87,636.771 735.5,637.5C 737.305,638.237 738.971,639.237 740.5,640.5C 743.108,644.062 745.441,647.729 747.5,651.5C 747.5,686.5 747.5,721.5 747.5,756.5C 746.857,758.076 745.857,759.41 744.5,760.5C 742.521,761.812 740.855,763.479 739.5,765.5C 741.399,761.432 743.066,757.265 744.5,753C 743.822,743.197 743.155,733.364 742.5,723.5C 745.11,716.258 745.11,709.092 742.5,702C 743.035,700.463 743.368,698.963 743.5,697.5C 741.103,687.658 741.103,677.825 743.5,668C 742.763,663.863 742.429,659.697 742.5,655.5C 741.178,655.33 740.011,655.663 739,656.5C 738.833,659.833 738.667,663.167 738.5,666.5C 738.611,670.481 739.278,674.314 740.5,678C 739.012,680.625 738.178,683.458 738,686.5C 737.667,683.167 737.333,679.833 737,676.5C 736.667,682.833 736.333,689.167 736,695.5C 735.503,693.19 735.337,690.857 735.5,688.5C 730.167,688.167 724.833,687.833 719.5,687.5C 719.551,689.57 718.885,691.403 717.5,693C 718.456,694.365 719.122,695.865 719.5,697.5C 718.888,699.338 718.888,701.005 719.5,702.5C 717.154,703.015 714.487,703.348 711.5,703.5C 711.657,704.873 711.49,706.207 711,707.5C 710.107,706.289 709.274,706.289 708.5,707.5C 709.129,710.277 710.129,712.11 711.5,713C 711.245,714.326 710.578,715.326 709.5,716C 712.185,718.795 715.519,720.461 719.5,721C 718.234,721.309 717.067,721.809 716,722.5C 713.395,721.186 710.895,721.186 708.5,722.5C 708.5,724.167 708.5,725.833 708.5,727.5C 706.5,727.5 704.5,727.5 702.5,727.5C 702.5,719.5 702.5,711.5 702.5,703.5C 702.5,702.167 702.5,700.833 702.5,699.5C 702.863,697.089 701.863,695.589 699.5,695C 692.286,695.004 685.286,694.171 678.5,692.5C 678.659,689.813 677.825,687.48 676,685.5C 666.341,676.935 656.841,668.269 647.5,659.5C 645.099,655.933 641.932,653.266 638,651.5C 631.347,656.654 624.847,661.987 618.5,667.5C 617.322,663.548 617.322,659.548 618.5,655.5C 613.505,654.582 611.172,656.582 611.5,661.5C 610.127,661.657 608.793,661.49 607.5,661C 605.49,658.571 602.99,656.737 600,655.5C 598.291,656.57 596.791,657.903 595.5,659.5C 594.5,657.5 593.5,655.5 592.5,653.5C 589.338,655.19 586.172,655.856 583,655.5C 582.727,654.005 581.561,652.671 579.5,651.5C 577.853,652.278 576.52,653.444 575.5,655C 574.552,655.483 573.552,655.649 572.5,655.5C 571.833,644.833 571.167,644.833 570.5,655.5C 566.116,655.174 561.783,655.508 557.5,656.5C 558.04,657.748 558.707,658.915 559.5,660C 558.975,660.692 558.308,661.192 557.5,661.5C 556.437,659.565 555.103,657.899 553.5,656.5C 555.023,654.717 557.023,654.051 559.5,654.5C 560.425,649.724 560.258,645.057 559,640.5C 554.666,640.303 549.832,639.803 544.5,639C 603.654,637.895 662.654,637.062 721.5,636.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f314f\",d:\"M 114.5,650.5 C 114.167,650.5 113.833,650.5 113.5,650.5C 113.167,650.5 112.833,650.5 112.5,650.5C 111.833,650.167 111.167,649.833 110.5,649.5C 101.944,642.495 92.2776,640.661 81.5,644C 77.106,645.582 73.4393,648.082 70.5,651.5C 66.2156,655.736 63.2156,660.736 61.5,666.5C 60.5166,670.298 60.1832,674.298 60.5,678.5C 58.1424,659.773 66.1424,647.273 84.5,641C 96.3607,638.9 106.361,642.067 114.5,650.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0808f\",d:\"M 133.5,645.5 C 143.653,644.506 153.986,644.172 164.5,644.5C 165.239,644.369 165.906,644.536 166.5,645C 167.036,647.508 168.369,649.341 170.5,650.5C 170.5,653.833 170.5,657.167 170.5,660.5C 170.167,660.5 169.833,660.5 169.5,660.5C 169.167,660.5 168.833,660.5 168.5,660.5C 168.884,655.412 167.884,650.746 165.5,646.5C 155.013,645.506 144.346,645.172 133.5,645.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#081a2d\",d:\"M 731.5,476.5 C 740.667,478.664 746.667,484.33 749.5,493.5C 749.667,590.167 749.5,686.834 749,783.5C 748.827,777.984 748.327,772.651 747.5,767.5C 747.5,763.833 747.5,760.167 747.5,756.5C 747.5,721.5 747.5,686.5 747.5,651.5C 748.819,633.171 748.819,614.837 747.5,596.5C 747.667,562.832 747.5,529.165 747,495.5C 745.604,491.77 743.77,488.27 741.5,485C 738.059,482.946 734.392,481.446 730.5,480.5C 729.89,479.609 729.557,478.609 729.5,477.5C 729.842,476.662 730.508,476.328 731.5,476.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ed6d6c\",d:\"M 133.5,645.5 C 144.346,645.172 155.013,645.506 165.5,646.5C 154.833,646.5 144.167,646.5 133.5,646.5C 133.5,647.5 133.5,648.5 133.5,649.5C 136.665,648.964 139.331,649.797 141.5,652C 137.353,652.844 133.353,654.01 129.5,655.5C 129.167,655.833 128.833,656.167 128.5,656.5C 130.523,657.855 132.523,658.188 134.5,657.5C 136.959,659.806 139.959,660.973 143.5,661C 151.528,661.698 159.528,661.532 167.5,660.5C 167.167,661.167 166.833,661.833 166.5,662.5C 153.803,662.754 141.137,662.421 128.5,661.5C 126.913,658.081 126.247,654.415 126.5,650.5C 126.66,648.847 127.326,647.514 128.5,646.5C 130.117,645.962 131.784,645.629 133.5,645.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc675e\",d:\"M 165.5,646.5 C 167.884,650.746 168.884,655.412 168.5,660.5C 168.167,660.5 167.833,660.5 167.5,660.5C 159.528,661.532 151.528,661.698 143.5,661C 139.959,660.973 136.959,659.806 134.5,657.5C 132.523,658.188 130.523,657.855 128.5,656.5C 128.833,656.167 129.167,655.833 129.5,655.5C 133.353,654.01 137.353,652.844 141.5,652C 139.331,649.797 136.665,648.964 133.5,649.5C 133.5,648.5 133.5,647.5 133.5,646.5C 144.167,646.5 154.833,646.5 165.5,646.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#84e0f2\",d:\"M 257.5,651.5 C 279.836,651.333 302.169,651.5 324.5,652C 325.801,653.616 325.801,655.116 324.5,656.5C 324.67,655.178 324.337,654.011 323.5,653C 301.33,652.832 279.33,652.332 257.5,651.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#effefd\",d:\"M 257.5,657.5 C 256.504,657.414 255.671,657.748 255,658.5C 253.905,663.8 250.738,665.633 245.5,664C 243.713,662.681 241.713,661.848 239.5,661.5C 216.673,660.502 193.673,660.169 170.5,660.5C 170.5,657.167 170.5,653.833 170.5,650.5C 193.5,650.5 216.5,650.5 239.5,650.5C 243.851,647.332 248.518,646.832 253.5,649C 254.293,650.085 254.96,651.252 255.5,652.5C 277.833,653.167 300.167,653.833 322.5,654.5C 301.508,655.333 280.508,655.833 259.5,656C 258.584,656.278 257.918,656.778 257.5,657.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efdb85\",d:\"M 95.5,653.5 C 93.9898,656.489 91.4898,658.156 88,658.5C 84.5515,665.322 86.5515,668.656 94,668.5C 96.5506,668.375 99.0506,668.042 101.5,667.5C 101.5,668.167 101.5,668.833 101.5,669.5C 96.1667,669.5 90.8333,669.5 85.5,669.5C 85.5,666.833 85.5,664.167 85.5,661.5C 85.7373,660.209 85.404,659.209 84.5,658.5C 86.4727,657.194 88.1394,655.527 89.5,653.5C 91.6907,652.709 93.6907,652.709 95.5,653.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7f9fc\",d:\"M 257.5,651.5 C 279.33,652.332 301.33,652.832 323.5,653C 324.337,654.011 324.67,655.178 324.5,656.5C 302.856,657.444 281.189,657.777 259.5,657.5C 258.833,657.5 258.167,657.5 257.5,657.5C 257.918,656.778 258.584,656.278 259.5,656C 280.508,655.833 301.508,655.333 322.5,654.5C 300.167,653.833 277.833,653.167 255.5,652.5C 254.96,651.252 254.293,650.085 253.5,649C 248.518,646.832 243.851,647.332 239.5,650.5C 239.511,648.983 240.177,647.816 241.5,647C 248.303,643.976 253.637,645.476 257.5,651.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a7787\",d:\"M 541.5,636.5 C 601.5,636.5 661.5,636.5 721.5,636.5C 662.654,637.062 603.654,637.895 544.5,639C 549.832,639.803 554.666,640.303 559,640.5C 560.258,645.057 560.425,649.724 559.5,654.5C 557.023,654.051 555.023,654.717 553.5,656.5C 555.103,657.899 556.437,659.565 557.5,661.5C 558.308,661.192 558.975,660.692 559.5,660C 558.707,658.915 558.04,657.748 557.5,656.5C 561.783,655.508 566.116,655.174 570.5,655.5C 571.167,644.833 571.833,644.833 572.5,655.5C 573.552,655.649 574.552,655.483 575.5,655C 576.52,653.444 577.853,652.278 579.5,651.5C 581.561,652.671 582.727,654.005 583,655.5C 586.172,655.856 589.338,655.19 592.5,653.5C 593.5,655.5 594.5,657.5 595.5,659.5C 596.791,657.903 598.291,656.57 600,655.5C 602.99,656.737 605.49,658.571 607.5,661C 608.793,661.49 610.127,661.657 611.5,661.5C 611.172,656.582 613.505,654.582 618.5,655.5C 617.322,659.548 617.322,663.548 618.5,667.5C 611.505,675.329 604.005,682.662 596,689.5C 595.51,690.793 595.343,692.127 595.5,693.5C 588.137,693.169 580.803,693.503 573.5,694.5C 572.855,695.646 572.022,696.646 571,697.5C 570.832,706.851 570.332,716.184 569.5,725.5C 565.365,726.109 561.365,726.776 557.5,727.5C 552.637,727.181 547.97,727.514 543.5,728.5C 542.596,729.209 542.263,730.209 542.5,731.5C 553.5,731.5 564.5,731.5 575.5,731.5C 575.5,732.833 575.5,734.167 575.5,735.5C 572.056,738.247 570.722,741.914 571.5,746.5C 571.667,748.833 571.833,751.167 572,753.5C 572.816,754.823 573.983,755.489 575.5,755.5C 575.5,756.167 575.5,756.833 575.5,757.5C 593.993,758.497 612.659,758.83 631.5,758.5C 631.791,759.649 632.624,760.316 634,760.5C 636.137,759.923 638.304,759.59 640.5,759.5C 641.549,763.831 639.882,765.997 635.5,766C 636.833,767 638.167,768 639.5,769C 628.659,769.17 617.992,769.67 607.5,770.5C 584.337,771.663 561.004,771.83 537.5,771C 536.084,768.735 534.084,767.569 531.5,767.5C 528.637,766.508 526.637,764.508 525.5,761.5C 525.363,724.707 525.53,687.707 526,650.5C 528.847,643.148 534.014,638.481 541.5,636.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cacabb\",d:\"M 70.5,651.5 C 69.8333,653.5 69.1667,655.5 68.5,657.5C 63.7445,663.971 61.7445,671.304 62.5,679.5C 61.5151,675.366 61.1818,671.032 61.5,666.5C 63.2156,660.736 66.2156,655.736 70.5,651.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#51c8e1\",d:\"M 169.5,660.5 C 169.833,660.5 170.167,660.5 170.5,660.5C 193.673,660.169 216.673,660.502 239.5,661.5C 239.5,661.833 239.5,662.167 239.5,662.5C 239.5,662.833 239.5,663.167 239.5,663.5C 216.553,662.791 193.553,662.125 170.5,661.5C 169.833,661.5 169.5,661.167 169.5,660.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4b5570\",d:\"M 640.5,656.5 C 643.431,658.091 646.098,660.091 648.5,662.5C 656.495,671.328 664.995,679.662 674,687.5C 674.591,688.483 674.257,689.15 673,689.5C 671.005,687.77 668.838,686.437 666.5,685.5C 657.514,676.516 648.181,667.849 638.5,659.5C 629.502,667.49 620.502,675.49 611.5,683.5C 609.833,684.833 608.167,686.167 606.5,687.5C 606.167,687.5 605.833,687.5 605.5,687.5C 616.326,675.994 627.993,665.661 640.5,656.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#552105\",d:\"M 98.5,654.5 C 98.8333,655.5 99.5,656.167 100.5,656.5C 102.578,659.251 104.245,662.251 105.5,665.5C 104.731,668.115 104.397,670.781 104.5,673.5C 104.167,673.5 103.833,673.5 103.5,673.5C 103.784,671.585 103.451,669.919 102.5,668.5C 102.784,666.585 102.451,664.919 101.5,663.5C 100.486,660.311 98.8196,657.478 96.5,655C 97.0944,654.536 97.7611,654.369 98.5,654.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ad8499\",d:\"M 126.5,650.5 C 126.247,654.415 126.913,658.081 128.5,661.5C 141.137,662.421 153.803,662.754 166.5,662.5C 154.011,663.495 141.344,663.829 128.5,663.5C 127.833,662.833 127.167,662.167 126.5,661.5C 125.285,657.699 125.285,654.033 126.5,650.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#79accd\",d:\"M 167.5,660.5 C 167.833,660.5 168.167,660.5 168.5,660.5C 168.833,660.5 169.167,660.5 169.5,660.5C 169.5,661.167 169.833,661.5 170.5,661.5C 169.942,662.79 168.942,663.623 167.5,664C 162.845,664.499 158.179,664.666 153.5,664.5C 144.983,664.826 136.65,664.493 128.5,663.5C 141.344,663.829 154.011,663.495 166.5,662.5C 166.833,661.833 167.167,661.167 167.5,660.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aedbf2\",d:\"M 257.5,657.5 C 256.137,664.849 251.804,667.683 244.5,666C 242.677,665.003 241.01,663.836 239.5,662.5C 239.5,662.167 239.5,661.833 239.5,661.5C 241.713,661.848 243.713,662.681 245.5,664C 250.738,665.633 253.905,663.8 255,658.5C 255.671,657.748 256.504,657.414 257.5,657.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9b22a\",d:\"M 95.5,653.5 C 96.791,653.263 97.791,653.596 98.5,654.5C 97.7611,654.369 97.0944,654.536 96.5,655C 98.8196,657.478 100.486,660.311 101.5,663.5C 101.5,664.833 101.5,666.167 101.5,667.5C 99.0506,668.042 96.5506,668.375 94,668.5C 86.5515,668.656 84.5515,665.322 88,658.5C 91.4898,658.156 93.9898,656.489 95.5,653.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#faa903\",d:\"M 91.5,658.5 C 96.9452,658.832 98.9452,661.499 97.5,666.5C 96.7065,666.931 95.8732,667.265 95,667.5C 92.9011,666.713 90.7345,666.38 88.5,666.5C 87.8285,663.014 88.8285,660.347 91.5,658.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a7ca6\",d:\"M 257.5,657.5 C 258.167,657.5 258.833,657.5 259.5,657.5C 257.628,665.547 252.628,669.047 244.5,668C 242.34,667.004 240.673,665.504 239.5,663.5C 239.5,663.167 239.5,662.833 239.5,662.5C 241.01,663.836 242.677,665.003 244.5,666C 251.804,667.683 256.137,664.849 257.5,657.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#938437\",d:\"M 549.5,664.5 C 550.458,665.962 551.624,667.295 553,668.5C 553.74,669.749 553.573,670.749 552.5,671.5C 549.5,664.833 546.5,664.833 543.5,671.5C 542.427,670.749 542.26,669.749 543,668.5C 544.571,666.077 546.737,664.744 549.5,664.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d2d1e\",d:\"M 84.5,658.5 C 85.404,659.209 85.7373,660.209 85.5,661.5C 84.8333,661.5 84.5,661.833 84.5,662.5C 83.5318,664.607 83.1984,666.941 83.5,669.5C 83.1667,669.5 82.8333,669.5 82.5,669.5C 82.5,668.833 82.1667,668.5 81.5,668.5C 79.6558,667.796 79.1558,666.463 80,664.5C 81.7564,662.593 83.2564,660.593 84.5,658.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#35d9fc\",d:\"M 126.5,661.5 C 127.167,662.167 127.833,662.833 128.5,663.5C 136.65,664.493 144.983,664.826 153.5,664.5C 158.65,665.651 163.984,665.817 169.5,665C 170.646,664.355 171.646,663.522 172.5,662.5C 174.283,663.348 174.783,664.681 174,666.5C 166.96,668.48 167.46,669.48 175.5,669.5C 175.281,668.325 175.614,667.325 176.5,666.5C 180.992,666.816 185.158,666.816 189,666.5C 190.399,667.227 191.899,667.727 193.5,668C 187.842,668.74 182.175,669.406 176.5,670C 175.185,671.395 175.519,672.395 177.5,673C 176.619,673.708 175.953,674.542 175.5,675.5C 159.167,675.5 142.833,675.5 126.5,675.5C 126.784,673.585 126.451,671.919 125.5,670.5C 125.634,668.708 125.301,667.042 124.5,665.5C 124.34,663.801 124.506,662.134 125,660.5C 125.383,661.056 125.883,661.389 126.5,661.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9a01a\",d:\"M 552.5,671.5 C 551.272,672.306 550.272,673.306 549.5,674.5C 546.923,674.545 544.923,673.545 543.5,671.5C 546.5,664.833 549.5,664.833 552.5,671.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#647c63\",d:\"M 549.5,664.5 C 546.737,664.744 544.571,666.077 543,668.5C 542.26,669.749 542.427,670.749 543.5,671.5C 544.923,673.545 546.923,674.545 549.5,674.5C 549.5,675.833 549.5,677.167 549.5,678.5C 546.07,678.214 543.736,676.38 542.5,673C 541.552,672.517 540.552,672.351 539.5,672.5C 539.327,668.168 541.327,665.334 545.5,664C 547.066,663.235 548.399,663.402 549.5,664.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5c715\",d:\"M 98.5,645.5 C 102.093,646.002 105.426,647.335 108.5,649.5C 107.122,650.234 105.622,650.901 104,651.5C 102.383,650.464 102.216,649.297 103.5,648C 100.258,647.014 97.5917,647.848 95.5,650.5C 97.396,651.466 99.396,651.799 101.5,651.5C 101.421,652.93 101.754,654.264 102.5,655.5C 102.043,656.298 101.376,656.631 100.5,656.5C 99.5,656.167 98.8333,655.5 98.5,654.5C 97.791,653.596 96.791,653.263 95.5,653.5C 93.6907,652.709 91.6907,652.709 89.5,653.5C 89.9175,652.778 90.5842,652.278 91.5,652C 77.8763,647.653 71.043,652.486 71,666.5C 73.5572,667.646 74.8905,666.646 75,663.5C 76.8402,662.167 77.3402,662.334 76.5,664C 78.431,667.513 79.7643,671.18 80.5,675C 79.5841,678.77 77.5841,681.936 74.5,684.5C 74.0773,673.098 72.5773,672.765 70,683.5C 69,680.833 68,680.833 67,683.5C 67.284,685.679 67.1174,687.679 66.5,689.5C 66.1667,688.167 65.8333,686.833 65.5,685.5C 64.3213,680.172 64.3213,674.838 65.5,669.5C 67.0029,664.974 68.6696,660.64 70.5,656.5C 74.3287,650.917 79.662,647.417 86.5,646C 90.4862,645.501 94.4862,645.334 98.5,645.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebf5f1\",d:\"M 85.5,661.5 C 85.5,664.167 85.5,666.833 85.5,669.5C 90.8333,669.5 96.1667,669.5 101.5,669.5C 101.5,671.5 101.5,673.5 101.5,675.5C 95.8333,675.5 90.1667,675.5 84.5,675.5C 84.5,671.167 84.5,666.833 84.5,662.5C 84.5,661.833 84.8333,661.5 85.5,661.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9bb0b\",d:\"M 108.5,649.5 C 109.167,649.5 109.833,649.5 110.5,649.5C 111.167,649.833 111.833,650.167 112.5,650.5C 113.08,652.749 114.413,654.415 116.5,655.5C 117.5,656.833 118.5,658.167 119.5,659.5C 120.989,666.099 121.489,672.765 121,679.5C 118.556,682.054 116.889,685.054 116,688.5C 115.667,688.167 115.333,687.833 115,687.5C 114.161,688.624 112.994,689.291 111.5,689.5C 108.631,688.469 105.964,687.136 103.5,685.5C 103.517,683.435 103.85,681.435 104.5,679.5C 104.5,677.5 104.5,675.5 104.5,673.5C 104.397,670.781 104.731,668.115 105.5,665.5C 104.245,662.251 102.578,659.251 100.5,656.5C 101.376,656.631 102.043,656.298 102.5,655.5C 101.754,654.264 101.421,652.93 101.5,651.5C 99.396,651.799 97.396,651.466 95.5,650.5C 97.5917,647.848 100.258,647.014 103.5,648C 102.216,649.297 102.383,650.464 104,651.5C 105.622,650.901 107.122,650.234 108.5,649.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d6eaf0\",d:\"M 727.5,632.5 C 727.973,633.906 728.973,634.573 730.5,634.5C 667.5,635.167 604.5,635.833 541.5,636.5C 534.014,638.481 528.847,643.148 526,650.5C 525.53,687.707 525.363,724.707 525.5,761.5C 525.167,760.833 524.833,760.167 524.5,759.5C 524.108,757.821 523.608,756.154 523,754.5C 522.333,719.5 522.333,684.5 523,649.5C 525.303,642.861 529.469,637.694 535.5,634C 599.442,632.511 663.442,632.011 727.5,632.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3b813\",d:\"M 642.5,665.5 C 646.859,669.528 651.193,673.528 655.5,677.5C 656.5,678.833 657.5,680.167 658.5,681.5C 656.362,681.297 654.695,680.297 653.5,678.5C 651.717,680.023 651.051,682.023 651.5,684.5C 649.84,682.752 647.84,682.252 645.5,683C 644.246,685.337 642.913,687.504 641.5,689.5C 640.778,689.082 640.278,688.416 640,687.5C 639.685,690.147 638.518,690.813 636.5,689.5C 634.068,690.4 631.568,691.066 629,691.5C 625.997,687.664 622.497,684.331 618.5,681.5C 618.5,681.167 618.5,680.833 618.5,680.5C 619.833,678.5 621.5,676.833 623.5,675.5C 624.873,675.657 626.207,675.49 627.5,675C 630.13,671.368 633.13,668.035 636.5,665C 638.545,664.51 640.545,664.677 642.5,665.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#badce3\",d:\"M 592.5,671.5 C 593.5,671.5 594.5,671.5 595.5,671.5C 595.5,672.5 595.5,673.5 595.5,674.5C 594.5,674.5 593.5,674.5 592.5,674.5C 592.5,673.5 592.5,672.5 592.5,671.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b9b1ab\",d:\"M 84.5,662.5 C 84.5,666.833 84.5,671.167 84.5,675.5C 90.1667,675.5 95.8333,675.5 101.5,675.5C 96.0247,676.489 90.358,676.822 84.5,676.5C 83.5318,674.393 83.1984,672.059 83.5,669.5C 83.1984,666.941 83.5318,664.607 84.5,662.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#331b0e\",d:\"M 666.5,685.5 C 666.5,686.167 666.5,686.833 666.5,687.5C 665.167,686.5 663.833,685.5 662.5,684.5C 661.167,681.167 658.833,678.833 655.5,677.5C 651.193,673.528 646.859,669.528 642.5,665.5C 640.823,662.223 638.49,661.723 635.5,664C 631.605,668.065 627.605,671.898 623.5,675.5C 621.5,676.833 619.833,678.5 618.5,680.5C 616.187,682.374 613.854,684.374 611.5,686.5C 611.5,685.5 611.5,684.5 611.5,683.5C 620.502,675.49 629.502,667.49 638.5,659.5C 648.181,667.849 657.514,676.516 666.5,685.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c4912c\",d:\"M 642.5,665.5 C 640.545,664.677 638.545,664.51 636.5,665C 633.13,668.035 630.13,671.368 627.5,675C 626.207,675.49 624.873,675.657 623.5,675.5C 627.605,671.898 631.605,668.065 635.5,664C 638.49,661.723 640.823,662.223 642.5,665.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#735b3d\",d:\"M 101.5,663.5 C 102.451,664.919 102.784,666.585 102.5,668.5C 102.5,671.5 102.5,674.5 102.5,677.5C 96.31,677.823 90.31,677.49 84.5,676.5C 90.358,676.822 96.0247,676.489 101.5,675.5C 101.5,673.5 101.5,671.5 101.5,669.5C 101.5,668.833 101.5,668.167 101.5,667.5C 101.5,666.167 101.5,664.833 101.5,663.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#487888\",d:\"M 739.5,765.5 C 736.742,762.997 735.075,763.83 734.5,768C 731.116,769.96 727.45,770.793 723.5,770.5C 706.163,769.815 688.829,769.149 671.5,768.5C 671.5,767.5 671.5,766.5 671.5,765.5C 666.167,765.5 660.833,765.5 655.5,765.5C 655.5,766.5 655.5,767.5 655.5,768.5C 650.44,768.508 645.44,768.674 640.5,769C 641.806,766.976 643.64,765.143 646,763.5C 649.105,764.367 652.272,764.701 655.5,764.5C 655.33,763.178 655.663,762.011 656.5,761C 670.724,759.32 685.058,757.987 699.5,757C 701.333,755.833 702.833,754.333 704,752.5C 704.333,748.833 704.667,745.167 705,741.5C 706.299,741.034 707.799,741.034 709.5,741.5C 709.64,739.876 708.973,738.71 707.5,738C 708.634,736.984 708.301,736.317 706.5,736C 708.301,735.683 708.634,735.016 707.5,734C 703.514,733.501 699.514,733.334 695.5,733.5C 694.662,733.158 694.328,732.492 694.5,731.5C 703.506,731.334 712.506,731.5 721.5,732C 722.5,734 723.5,734 724.5,732C 727.146,731.503 729.813,731.336 732.5,731.5C 732.719,730.325 732.386,729.325 731.5,728.5C 729.253,727.626 726.92,727.292 724.5,727.5C 724.5,725.833 724.5,724.167 724.5,722.5C 723.167,722.5 721.833,722.5 720.5,722.5C 720.739,724.467 720.406,726.301 719.5,728C 716.854,728.497 714.187,728.664 711.5,728.5C 711.5,726.5 711.5,724.5 711.5,722.5C 710.5,722.5 709.5,722.5 708.5,722.5C 710.895,721.186 713.395,721.186 716,722.5C 717.067,721.809 718.234,721.309 719.5,721C 715.519,720.461 712.185,718.795 709.5,716C 710.578,715.326 711.245,714.326 711.5,713C 710.129,712.11 709.129,710.277 708.5,707.5C 709.274,706.289 710.107,706.289 711,707.5C 711.49,706.207 711.657,704.873 711.5,703.5C 714.487,703.348 717.154,703.015 719.5,702.5C 718.888,701.005 718.888,699.338 719.5,697.5C 719.122,695.865 718.456,694.365 717.5,693C 718.885,691.403 719.551,689.57 719.5,687.5C 724.833,687.833 730.167,688.167 735.5,688.5C 735.337,690.857 735.503,693.19 736,695.5C 736.333,689.167 736.667,682.833 737,676.5C 737.333,679.833 737.667,683.167 738,686.5C 738.178,683.458 739.012,680.625 740.5,678C 739.278,674.314 738.611,670.481 738.5,666.5C 738.667,663.167 738.833,659.833 739,656.5C 740.011,655.663 741.178,655.33 742.5,655.5C 742.429,659.697 742.763,663.863 743.5,668C 741.103,677.825 741.103,687.658 743.5,697.5C 743.368,698.963 743.035,700.463 742.5,702C 745.11,709.092 745.11,716.258 742.5,723.5C 743.155,733.364 743.822,743.197 744.5,753C 743.066,757.265 741.399,761.432 739.5,765.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#784a09\",d:\"M 655.5,677.5 C 658.833,678.833 661.167,681.167 662.5,684.5C 661.167,683.5 659.833,682.5 658.5,681.5C 657.5,680.167 656.5,678.833 655.5,677.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1d869\",d:\"M 70.5,656.5 C 68.6696,660.64 67.0029,664.974 65.5,669.5C 64.3213,674.838 64.3213,680.172 65.5,685.5C 64.8333,684.833 64.1667,684.167 63.5,683.5C 63.1667,682.167 62.8333,680.833 62.5,679.5C 61.7445,671.304 63.7445,663.971 68.5,657.5C 69.1667,657.167 69.8333,656.833 70.5,656.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dcfefe\",d:\"M 323.5,676.5 C 324.404,677.209 324.737,678.209 324.5,679.5C 258.541,680.493 192.541,680.826 126.5,680.5C 126.5,679.167 126.5,677.833 126.5,676.5C 192.167,676.5 257.833,676.5 323.5,676.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6fd3eb\",d:\"M 125.5,670.5 C 126.451,671.919 126.784,673.585 126.5,675.5C 142.833,675.5 159.167,675.5 175.5,675.5C 225.003,675.168 274.336,675.501 323.5,676.5C 257.833,676.5 192.167,676.5 126.5,676.5C 126.5,677.833 126.5,679.167 126.5,680.5C 192.541,680.826 258.541,680.493 324.5,679.5C 258.8,681.171 192.8,682.171 126.5,682.5C 125.702,682.043 125.369,681.376 125.5,680.5C 125.5,677.167 125.5,673.833 125.5,670.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5ba16\",d:\"M 89.5,653.5 C 88.1394,655.527 86.4727,657.194 84.5,658.5C 83.2564,660.593 81.7564,662.593 80,664.5C 79.1558,666.463 79.6558,667.796 81.5,668.5C 81.5,672.167 81.5,675.833 81.5,679.5C 83.3691,680.165 85.3691,680.831 87.5,681.5C 86.8256,683.195 86.1589,684.862 85.5,686.5C 85.1583,687.338 84.4916,687.672 83.5,687.5C 80.6874,687.025 78.6874,688.025 77.5,690.5C 74.9312,691.629 72.7645,693.296 71,695.5C 70.6174,694.944 70.1174,694.611 69.5,694.5C 68.925,692.589 67.925,690.922 66.5,689.5C 67.1174,687.679 67.284,685.679 67,683.5C 68,680.833 69,680.833 70,683.5C 72.5773,672.765 74.0773,673.098 74.5,684.5C 77.5841,681.936 79.5841,678.77 80.5,675C 79.7643,671.18 78.431,667.513 76.5,664C 77.3402,662.334 76.8402,662.167 75,663.5C 74.8905,666.646 73.5572,667.646 71,666.5C 71.043,652.486 77.8763,647.653 91.5,652C 90.5842,652.278 89.9175,652.778 89.5,653.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ccdfea\",d:\"M 640.5,656.5 C 627.993,665.661 616.326,675.994 605.5,687.5C 604.027,688.74 602.36,689.74 600.5,690.5C 599.479,689.998 599.312,689.332 600,688.5C 612.361,676.471 625.028,664.804 638,653.5C 639.31,654.13 640.144,655.13 640.5,656.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9f5dd\",d:\"M 634.5,680.5 C 638.938,679.425 640.938,681.092 640.5,685.5C 638.409,685.318 636.409,685.652 634.5,686.5C 633.481,684.54 633.481,682.54 634.5,680.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#093359\",d:\"M 41.5,642.5 C 41.5,678.833 41.5,715.167 41.5,751.5C 40.1674,738.517 39.5008,725.184 39.5,711.5C 39.9004,688.811 40.0671,666.144 40,643.5C 40.3826,642.944 40.8826,642.611 41.5,642.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d38f26\",d:\"M 119.5,659.5 C 123.081,665.623 124.248,672.29 123,679.5C 120.948,685.434 118.115,691.101 114.5,696.5C 108.258,688.27 99.9242,684.937 89.5,686.5C 93.97,685.514 98.6367,685.181 103.5,685.5C 105.964,687.136 108.631,688.469 111.5,689.5C 112.994,689.291 114.161,688.624 115,687.5C 115.333,687.833 115.667,688.167 116,688.5C 116.889,685.054 118.556,682.054 121,679.5C 121.489,672.765 120.989,666.099 119.5,659.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a2e4e\",d:\"M 647.5,659.5 C 656.841,668.269 666.341,676.935 676,685.5C 677.825,687.48 678.659,689.813 678.5,692.5C 685.286,694.171 692.286,695.004 699.5,695C 701.863,695.589 702.863,697.089 702.5,699.5C 701.222,699.218 700.222,698.551 699.5,697.5C 691.35,696.507 683.017,696.174 674.5,696.5C 670.51,695.824 668.843,697.49 669.5,701.5C 669.585,703.333 670.252,704.666 671.5,705.5C 671.5,706.167 671.5,706.833 671.5,707.5C 670.235,708.514 669.569,710.014 669.5,712C 669.508,713.707 669.842,715.207 670.5,716.5C 670.833,717.167 671.167,717.833 671.5,718.5C 669.656,720.279 668.99,722.612 669.5,725.5C 669.16,712.634 668.16,699.967 666.5,687.5C 666.5,686.833 666.5,686.167 666.5,685.5C 668.838,686.437 671.005,687.77 673,689.5C 674.257,689.15 674.591,688.483 674,687.5C 664.995,679.662 656.495,671.328 648.5,662.5C 648.443,661.391 648.11,660.391 647.5,659.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fac208\",d:\"M 658.5,681.5 C 659.833,682.5 661.167,683.5 662.5,684.5C 662.733,686.062 663.4,687.395 664.5,688.5C 664.649,689.552 664.483,690.552 664,691.5C 663.71,689.956 663.044,688.623 662,687.5C 660.383,688.536 660.216,689.703 661.5,691C 660.217,695.065 659.217,699.231 658.5,703.5C 656.578,702.04 655.911,700.373 656.5,698.5C 655.692,698.808 655.025,699.308 654.5,700C 655.928,703.474 655.428,703.974 653,701.5C 652.667,702.167 652.333,702.833 652,703.5C 651.5,710.158 651.334,716.825 651.5,723.5C 654.713,723.19 657.713,723.523 660.5,724.5C 657.167,724.5 653.833,724.5 650.5,724.5C 649.863,716.734 649.196,709.067 648.5,701.5C 641.833,700.167 635.167,700.167 628.5,701.5C 627.883,701.611 627.383,701.944 627,702.5C 626.796,709.217 626.296,715.883 625.5,722.5C 621.555,723.491 617.555,723.824 613.5,723.5C 613.333,711.829 613.5,700.162 614,688.5C 615.781,686.276 617.281,683.942 618.5,681.5C 622.497,684.331 625.997,687.664 629,691.5C 631.568,691.066 634.068,690.4 636.5,689.5C 638.518,690.813 639.685,690.147 640,687.5C 640.278,688.416 640.778,689.082 641.5,689.5C 642.334,690.748 643.667,691.415 645.5,691.5C 650.02,691.507 652.02,689.173 651.5,684.5C 651.051,682.023 651.717,680.023 653.5,678.5C 654.695,680.297 656.362,681.297 658.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec9707\",d:\"M 651.5,684.5 C 652.02,689.173 650.02,691.507 645.5,691.5C 643.667,691.415 642.334,690.748 641.5,689.5C 642.913,687.504 644.246,685.337 645.5,683C 647.84,682.252 649.84,682.752 651.5,684.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a2729\",d:\"M 113.5,650.5 C 113.833,650.5 114.167,650.5 114.5,650.5C 114.833,650.5 115.167,650.5 115.5,650.5C 116.833,651.833 118.167,653.167 119.5,654.5C 120.989,658.323 122.656,661.99 124.5,665.5C 125.301,667.042 125.634,668.708 125.5,670.5C 125.5,673.833 125.5,677.167 125.5,680.5C 123.794,686.267 121.127,691.601 117.5,696.5C 116.778,697.551 115.778,698.218 114.5,698.5C 113.5,697.833 112.5,697.167 111.5,696.5C 97.9172,685.519 84.5838,685.853 71.5,697.5C 70.3285,696.655 68.9952,695.989 67.5,695.5C 63.2163,690.768 60.883,685.101 60.5,678.5C 60.1832,674.298 60.5166,670.298 61.5,666.5C 61.1818,671.032 61.5151,675.366 62.5,679.5C 62.8333,680.833 63.1667,682.167 63.5,683.5C 63.6847,688.206 65.6847,691.873 69.5,694.5C 70.1174,694.611 70.6174,694.944 71,695.5C 72.7645,693.296 74.9312,691.629 77.5,690.5C 79.5439,689.492 81.5439,688.492 83.5,687.5C 84.4916,687.672 85.1583,687.338 85.5,686.5C 86.8333,686.5 88.1667,686.5 89.5,686.5C 99.9242,684.937 108.258,688.27 114.5,696.5C 118.115,691.101 120.948,685.434 123,679.5C 124.248,672.29 123.081,665.623 119.5,659.5C 118.5,658.167 117.5,656.833 116.5,655.5C 115.925,653.589 114.925,651.922 113.5,650.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7a515\",d:\"M 81.5,679.5 C 89.1667,679.5 96.8333,679.5 104.5,679.5C 103.85,681.435 103.517,683.435 103.5,685.5C 98.6367,685.181 93.97,685.514 89.5,686.5C 88.1667,686.5 86.8333,686.5 85.5,686.5C 86.1589,684.862 86.8256,683.195 87.5,681.5C 85.3691,680.831 83.3691,680.165 81.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7e460c\",d:\"M 81.5,668.5 C 82.1667,668.5 82.5,668.833 82.5,669.5C 82.5,672.5 82.5,675.5 82.5,678.5C 89.5,678.5 96.5,678.5 103.5,678.5C 103.5,676.833 103.5,675.167 103.5,673.5C 103.833,673.5 104.167,673.5 104.5,673.5C 104.5,675.5 104.5,677.5 104.5,679.5C 96.8333,679.5 89.1667,679.5 81.5,679.5C 81.5,675.833 81.5,672.167 81.5,668.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b0701\",d:\"M 102.5,668.5 C 103.451,669.919 103.784,671.585 103.5,673.5C 103.5,675.167 103.5,676.833 103.5,678.5C 96.5,678.5 89.5,678.5 82.5,678.5C 82.5,675.5 82.5,672.5 82.5,669.5C 82.8333,669.5 83.1667,669.5 83.5,669.5C 83.1984,672.059 83.5318,674.393 84.5,676.5C 90.31,677.49 96.31,677.823 102.5,677.5C 102.5,674.5 102.5,671.5 102.5,668.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d2334\",d:\"M 647.5,659.5 C 648.11,660.391 648.443,661.391 648.5,662.5C 646.098,660.091 643.431,658.091 640.5,656.5C 640.144,655.13 639.31,654.13 638,653.5C 625.028,664.804 612.361,676.471 600,688.5C 599.312,689.332 599.479,689.998 600.5,690.5C 602.36,689.74 604.027,688.74 605.5,687.5C 605.833,687.5 606.167,687.5 606.5,687.5C 604.406,689.551 604.073,691.884 605.5,694.5C 604.398,695.176 603.398,695.842 602.5,696.5C 600.5,696.5 598.5,696.5 596.5,696.5C 588.833,696.5 581.167,696.5 573.5,696.5C 572.945,700.012 573.612,703.012 575.5,705.5C 574.833,706.167 574.167,706.833 573.5,707.5C 573.5,710.167 573.5,712.833 573.5,715.5C 573.5,716.167 573.5,716.833 573.5,717.5C 573.054,720.01 573.72,722.01 575.5,723.5C 575.5,723.833 575.5,724.167 575.5,724.5C 583.057,724.848 590.39,725.848 597.5,727.5C 584.167,727.5 570.833,727.5 557.5,727.5C 561.365,726.776 565.365,726.109 569.5,725.5C 570.332,716.184 570.832,706.851 571,697.5C 572.022,696.646 572.855,695.646 573.5,694.5C 580.803,693.503 588.137,693.169 595.5,693.5C 595.343,692.127 595.51,690.793 596,689.5C 604.005,682.662 611.505,675.329 618.5,667.5C 624.847,661.987 631.347,656.654 638,651.5C 641.932,653.266 645.099,655.933 647.5,659.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3f2de\",d:\"M 611.5,687.5 C 611.5,699.833 611.5,712.167 611.5,724.5C 610.5,724.5 609.5,724.5 608.5,724.5C 608.168,712.482 608.501,700.482 609.5,688.5C 610.183,688.137 610.85,687.804 611.5,687.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcb805\",d:\"M 664.5,688.5 C 665.495,700.322 665.828,712.322 665.5,724.5C 663.833,724.5 662.167,724.5 660.5,724.5C 657.713,723.523 654.713,723.19 651.5,723.5C 651.334,716.825 651.5,710.158 652,703.5C 652.333,702.833 652.667,702.167 653,701.5C 655.428,703.974 655.928,703.474 654.5,700C 655.025,699.308 655.692,698.808 656.5,698.5C 655.911,700.373 656.578,702.04 658.5,703.5C 659.217,699.231 660.217,695.065 661.5,691C 660.216,689.703 660.383,688.536 662,687.5C 663.044,688.623 663.71,689.956 664,691.5C 664.483,690.552 664.649,689.552 664.5,688.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e19eb4\",d:\"M 596.5,697.5 C 599.247,697.187 601.914,697.52 604.5,698.5C 604.376,699.107 604.043,699.44 603.5,699.5C 601.167,699.5 598.833,699.5 596.5,699.5C 596.5,698.833 596.5,698.167 596.5,697.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a4761e\",d:\"M 662.5,684.5 C 663.833,685.5 665.167,686.5 666.5,687.5C 667.462,700.117 667.795,712.784 667.5,725.5C 660.978,725.823 654.645,725.49 648.5,724.5C 649.167,724.5 649.833,724.5 650.5,724.5C 653.833,724.5 657.167,724.5 660.5,724.5C 662.167,724.5 663.833,724.5 665.5,724.5C 665.828,712.322 665.495,700.322 664.5,688.5C 663.4,687.395 662.733,686.062 662.5,684.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4dee3\",d:\"M 596.5,696.5 C 596.5,696.833 596.5,697.167 596.5,697.5C 596.5,698.167 596.5,698.833 596.5,699.5C 589.5,699.5 582.5,699.5 575.5,699.5C 575.5,701.167 575.5,702.833 575.5,704.5C 575.5,704.833 575.5,705.167 575.5,705.5C 573.612,703.012 572.945,700.012 573.5,696.5C 581.167,696.5 588.833,696.5 596.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cdf8fd\",d:\"M 674.5,696.5 C 683.017,696.174 691.35,696.507 699.5,697.5C 699.5,698.167 699.5,698.833 699.5,699.5C 699.167,699.5 698.833,699.5 698.5,699.5C 691.492,699.666 684.492,699.5 677.5,699C 675.942,698.79 674.609,698.29 673.5,697.5C 674.167,697.5 674.5,697.167 674.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec9d8c\",d:\"M 596.5,699.5 C 591.788,701.155 586.788,701.988 581.5,702C 579.189,702.236 577.189,703.069 575.5,704.5C 575.5,702.833 575.5,701.167 575.5,699.5C 582.5,699.5 589.5,699.5 596.5,699.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#55d8f8\",d:\"M 673.5,697.5 C 674.609,698.29 675.942,698.79 677.5,699C 684.492,699.5 691.492,699.666 698.5,699.5C 698.53,700.497 698.03,701.164 697,701.5C 694,702.167 691,702.833 688,703.5C 684.397,701.576 680.564,700.576 676.5,700.5C 674.805,699.989 673.139,699.322 671.5,698.5C 671.957,697.702 672.624,697.369 673.5,697.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#96555f\",d:\"M 596.5,697.5 C 596.5,697.167 596.5,696.833 596.5,696.5C 598.5,696.5 600.5,696.5 602.5,696.5C 603.5,696.5 604.5,696.5 605.5,696.5C 605.5,698.833 605.5,701.167 605.5,703.5C 604.833,703.833 604.167,704.167 603.5,704.5C 603.5,702.833 603.5,701.167 603.5,699.5C 604.043,699.44 604.376,699.107 604.5,698.5C 601.914,697.52 599.247,697.187 596.5,697.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#df5053\",d:\"M 596.5,699.5 C 598.833,699.5 601.167,699.5 603.5,699.5C 603.5,701.167 603.5,702.833 603.5,704.5C 594.348,705.494 585.015,705.827 575.5,705.5C 575.5,705.167 575.5,704.833 575.5,704.5C 577.189,703.069 579.189,702.236 581.5,702C 586.788,701.988 591.788,701.155 596.5,699.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48c0fb\",d:\"M 698.5,699.5 C 698.833,699.5 699.167,699.5 699.5,699.5C 699.5,701.167 699.5,702.833 699.5,704.5C 692.159,704.666 684.826,704.5 677.5,704C 676.663,702.989 676.33,701.822 676.5,700.5C 680.564,700.576 684.397,701.576 688,703.5C 691,702.833 694,702.167 697,701.5C 698.03,701.164 698.53,700.497 698.5,699.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9e0e3\",d:\"M 751.5,488.5 C 753.163,490.438 753.829,492.772 753.5,495.5C 753.5,591.5 753.5,687.5 753.5,783.5C 752.209,783.737 751.209,783.404 750.5,782.5C 752.498,687.839 753.164,592.839 752.5,497.5C 752.296,494.482 751.963,491.482 751.5,488.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3287d7\",d:\"M 674.5,696.5 C 674.5,697.167 674.167,697.5 673.5,697.5C 672.624,697.369 671.957,697.702 671.5,698.5C 673.139,699.322 674.805,699.989 676.5,700.5C 676.33,701.822 676.663,702.989 677.5,704C 684.826,704.5 692.159,704.666 699.5,704.5C 690.348,705.494 681.015,705.827 671.5,705.5C 670.252,704.666 669.585,703.333 669.5,701.5C 668.843,697.49 670.51,695.824 674.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#09347b\",d:\"M 699.5,697.5 C 700.222,698.551 701.222,699.218 702.5,699.5C 702.5,700.833 702.5,702.167 702.5,703.5C 700.896,707.9 700.229,712.566 700.5,717.5C 700.167,717.5 699.833,717.5 699.5,717.5C 697.265,717.205 695.265,717.539 693.5,718.5C 691.5,718.5 689.5,718.5 687.5,718.5C 682.167,718.5 676.833,718.5 671.5,718.5C 671.167,717.833 670.833,717.167 670.5,716.5C 672.379,715.659 674.379,715.325 676.5,715.5C 684.167,715.5 691.833,715.5 699.5,715.5C 699.5,712.833 699.5,710.167 699.5,707.5C 692.167,707.5 684.833,707.5 677.5,707.5C 675.5,707.5 673.5,707.5 671.5,707.5C 671.5,706.833 671.5,706.167 671.5,705.5C 681.015,705.827 690.348,705.494 699.5,704.5C 699.5,702.833 699.5,701.167 699.5,699.5C 699.5,698.833 699.5,698.167 699.5,697.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#102f59\",d:\"M 984.5,159.5 C 984.667,408.167 984.5,656.834 984,905.5C 982.601,910.95 981.101,916.283 979.5,921.5C 971.694,936.087 959.694,945.42 943.5,949.5C 943.5,949.167 943.5,948.833 943.5,948.5C 943.5,948.167 943.5,947.833 943.5,947.5C 951.061,946.15 957.728,942.983 963.5,938C 963.167,937.667 962.833,937.333 962.5,937C 966.68,933.65 970.68,930.15 974.5,926.5C 975.051,923.944 976.051,921.611 977.5,919.5C 978.48,916.914 978.813,914.247 978.5,911.5C 979.5,911.5 980.5,911.5 981.5,911.5C 982.166,900.513 982.499,889.513 982.5,878.5C 982.5,878.167 982.5,877.833 982.5,877.5C 983.053,712.822 983.053,548.155 982.5,383.5C 982.5,348.833 982.5,314.167 982.5,279.5C 981.839,239.153 982.506,199.153 984.5,159.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#211a1e\",d:\"M 611.5,683.5 C 611.5,684.5 611.5,685.5 611.5,686.5C 611.5,686.833 611.5,687.167 611.5,687.5C 610.85,687.804 610.183,688.137 609.5,688.5C 608.501,700.482 608.168,712.482 608.5,724.5C 615.313,725.491 622.313,725.825 629.5,725.5C 629.5,717.5 629.5,709.5 629.5,701.5C 635.5,701.5 641.5,701.5 647.5,701.5C 647.5,708.167 647.5,714.833 647.5,721.5C 647.167,721.5 646.833,721.5 646.5,721.5C 647.12,715.074 646.453,709.074 644.5,703.5C 644.167,703.5 643.833,703.5 643.5,703.5C 639.5,703.5 635.5,703.5 631.5,703.5C 631.5,710.833 631.5,718.167 631.5,725.5C 634.833,725.5 638.167,725.5 641.5,725.5C 642.5,726.167 643.5,726.833 644.5,727.5C 631.167,727.5 617.833,727.5 604.5,727.5C 606.707,724.402 607.04,721.068 605.5,717.5C 605.5,716.833 605.5,716.167 605.5,715.5C 605.5,711.5 605.5,707.5 605.5,703.5C 605.5,701.167 605.5,698.833 605.5,696.5C 604.5,696.5 603.5,696.5 602.5,696.5C 603.398,695.842 604.398,695.176 605.5,694.5C 604.073,691.884 604.406,689.551 606.5,687.5C 608.167,686.167 609.833,684.833 611.5,683.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6b62c\",d:\"M 618.5,680.5 C 618.5,680.833 618.5,681.167 618.5,681.5C 617.281,683.942 615.781,686.276 614,688.5C 613.5,700.162 613.333,711.829 613.5,723.5C 617.555,723.824 621.555,723.491 625.5,722.5C 626.296,715.883 626.796,709.217 627,702.5C 627.383,701.944 627.883,701.611 628.5,701.5C 628.5,709.167 628.5,716.833 628.5,724.5C 622.833,724.5 617.167,724.5 611.5,724.5C 611.5,712.167 611.5,699.833 611.5,687.5C 611.5,687.167 611.5,686.833 611.5,686.5C 613.854,684.374 616.187,682.374 618.5,680.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7d5a23\",d:\"M 648.5,701.5 C 648.5,709.167 648.5,716.833 648.5,724.5C 647.596,723.791 647.263,722.791 647.5,721.5C 647.5,714.833 647.5,708.167 647.5,701.5C 641.5,701.5 635.5,701.5 629.5,701.5C 629.5,709.5 629.5,717.5 629.5,725.5C 622.313,725.825 615.313,725.491 608.5,724.5C 609.5,724.5 610.5,724.5 611.5,724.5C 617.167,724.5 622.833,724.5 628.5,724.5C 628.5,716.833 628.5,709.167 628.5,701.5C 635.167,700.167 641.833,700.167 648.5,701.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39d3fc\",d:\"M 502.5,755.5 C 501.955,757.593 501.122,759.593 500,761.5C 497.154,763.915 494.32,766.249 491.5,768.5C 489.254,769.455 486.921,770.122 484.5,770.5C 365.833,770.667 247.166,770.5 128.5,770C 117.833,769.667 107.167,769.333 96.5,769C 103.167,768.667 109.833,768.333 116.5,768C 117.854,766.706 119.188,766.54 120.5,767.5C 121.308,767.192 121.975,766.692 122.5,766C 121.549,765.282 121.383,764.449 122,763.5C 123.707,764.138 125.54,764.138 127.5,763.5C 127.977,767.073 129.644,767.906 132.5,766C 129.956,764.901 129.956,763.735 132.5,762.5C 133.167,763.167 133.833,763.833 134.5,764.5C 137.593,761.992 140.093,762.659 142,766.5C 201.763,765.669 261.596,765.169 321.5,765C 324.232,764.587 326.899,763.92 329.5,763C 331.3,759.216 333.967,758.55 337.5,761C 336.663,762.011 336.33,763.178 336.5,764.5C 333.68,764.248 331.014,764.748 328.5,766C 329.873,766.875 331.373,767.375 333,767.5C 344.114,767.245 355.114,767.245 366,767.5C 372.333,766.833 378.667,766.167 385,765.5C 394.309,766.748 403.643,767.415 413,767.5C 415.02,766.968 415.853,765.635 415.5,763.5C 417.308,763.509 418.975,763.009 420.5,762C 416.677,760.925 413.344,759.091 410.5,756.5C 411.776,755.355 413.109,755.355 414.5,756.5C 417.567,751.223 416.401,750.223 411,753.5C 410.5,753.167 410,752.833 409.5,752.5C 412.183,749.229 411.85,746.229 408.5,743.5C 404.939,743.899 404.605,745.732 407.5,749C 406.207,749.49 404.873,749.657 403.5,749.5C 403.646,751.942 402.813,752.609 401,751.5C 400.5,752 400,752.5 399.5,753C 400.517,754.049 400.684,755.216 400,756.5C 399.667,755.833 399.333,755.167 399,754.5C 397.559,755.87 395.892,756.87 394,757.5C 392.75,755.807 391.25,754.473 389.5,753.5C 391.153,753.34 392.486,752.674 393.5,751.5C 396.323,750.008 397.99,747.674 398.5,744.5C 399.856,731.021 400.69,717.354 401,703.5C 401.256,699.053 402.089,694.72 403.5,690.5C 403.14,687.298 402.474,684.298 401.5,681.5C 401.167,680.167 400.833,678.833 400.5,677.5C 400.769,675.571 400.269,673.905 399,672.5C 378.559,674.154 358.059,675.154 337.5,675.5C 337.167,675.5 336.833,675.5 336.5,675.5C 334.876,673.863 333.876,674.197 333.5,676.5C 332.869,680.677 332.203,684.844 331.5,689C 333.08,690.723 334.58,692.556 336,694.5C 336.761,711.33 337.594,727.996 338.5,744.5C 339.014,746.698 340.014,748.698 341.5,750.5C 339.635,751.666 337.968,751.333 336.5,749.5C 333.821,752.744 330.988,755.077 328,756.5C 326.762,753.074 327.929,751.408 331.5,751.5C 331.552,748.781 332.218,746.281 333.5,744C 333.676,742.34 333.009,740.674 331.5,739C 332.645,732.248 332.811,725.414 332,718.5C 331.549,720.929 330.715,721.096 329.5,719C 330.747,717.542 330.747,716.042 329.5,714.5C 330.376,713.749 331.376,713.249 332.5,713C 330.164,709.789 329.831,706.289 331.5,702.5C 331.444,701.263 330.944,700.263 330,699.5C 328.048,700.7 326.548,700.2 325.5,698C 329.414,694.826 329.414,691.66 325.5,688.5C 326.325,687.614 327.325,687.281 328.5,687.5C 328.785,685.712 328.452,684.045 327.5,682.5C 302.895,682.416 278.229,682.583 253.5,683C 254.308,683.308 254.975,683.808 255.5,684.5C 268.997,685.682 282.497,685.682 296,684.5C 304.829,685.07 313.663,685.57 322.5,686C 324.901,686.805 324.734,687.638 322,688.5C 319.205,687.217 316.372,687.217 313.5,688.5C 314.582,688.749 315.915,688.915 317.5,689C 316.112,689.889 316.278,690.389 318,690.5C 319.667,688.993 320.834,689.327 321.5,691.5C 259.33,691.642 197.33,692.309 135.5,693.5C 129.073,691.762 126.406,694.095 127.5,700.5C 127.088,702.973 128.088,704.306 130.5,704.5C 130.5,705.833 130.5,707.167 130.5,708.5C 135.848,707.83 141.182,708.496 146.5,710.5C 152.692,709.661 159.025,709.661 165.5,710.5C 167.717,709.428 170.05,708.761 172.5,708.5C 184.549,709.663 196.382,709.663 208,708.5C 208.492,709.549 208.326,710.549 207.5,711.5C 213.003,713.763 218.669,714.096 224.5,712.5C 227.301,714.526 230.301,714.859 233.5,713.5C 234.287,714.242 234.953,715.075 235.5,716C 234.177,716.816 233.511,717.983 233.5,719.5C 232.395,718.4 231.062,717.733 229.5,717.5C 229.389,716.883 229.056,716.383 228.5,716C 196.167,715.333 163.833,715.333 131.5,716C 130.944,716.383 130.611,716.883 130.5,717.5C 129.5,717.833 128.833,718.5 128.5,719.5C 128.167,719.5 127.833,719.5 127.5,719.5C 126.833,719.5 126.167,719.5 125.5,719.5C 125.044,716.094 124.378,712.761 123.5,709.5C 121.452,705.14 119.452,700.807 117.5,696.5C 121.127,691.601 123.794,686.267 125.5,680.5C 125.369,681.376 125.702,682.043 126.5,682.5C 192.8,682.171 258.8,681.171 324.5,679.5C 324.737,678.209 324.404,677.209 323.5,676.5C 274.336,675.501 225.003,675.168 175.5,675.5C 175.953,674.542 176.619,673.708 177.5,673C 175.519,672.395 175.185,671.395 176.5,670C 182.175,669.406 187.842,668.74 193.5,668C 191.899,667.727 190.399,667.227 189,666.5C 185.158,666.816 180.992,666.816 176.5,666.5C 175.614,667.325 175.281,668.325 175.5,669.5C 167.46,669.48 166.96,668.48 174,666.5C 174.783,664.681 174.283,663.348 172.5,662.5C 171.646,663.522 170.646,664.355 169.5,665C 163.984,665.817 158.65,665.651 153.5,664.5C 158.179,664.666 162.845,664.499 167.5,664C 168.942,663.623 169.942,662.79 170.5,661.5C 193.553,662.125 216.553,662.791 239.5,663.5C 240.673,665.504 242.34,667.004 244.5,668C 252.628,669.047 257.628,665.547 259.5,657.5C 281.189,657.777 302.856,657.444 324.5,656.5C 325.801,655.116 325.801,653.616 324.5,652C 302.169,651.5 279.836,651.333 257.5,651.5C 253.637,645.476 248.303,643.976 241.5,647C 240.177,647.816 239.511,648.983 239.5,650.5C 216.5,650.5 193.5,650.5 170.5,650.5C 168.369,649.341 167.036,647.508 166.5,645C 165.906,644.536 165.239,644.369 164.5,644.5C 164.5,644.167 164.5,643.833 164.5,643.5C 164.082,642.778 163.416,642.278 162.5,642C 156.472,641.83 150.472,641.33 144.5,640.5C 145,640.167 145.5,639.833 146,639.5C 153.34,638.918 161.007,639.585 169,641.5C 171.145,641.604 172.979,640.937 174.5,639.5C 175.308,639.808 175.975,640.308 176.5,641C 182.167,641.167 187.833,641.333 193.5,641.5C 199.577,641.475 205.41,640.809 211,639.5C 211.5,640 212,640.5 212.5,641C 221.678,640.572 230.844,641.072 240,642.5C 245,641.833 250,641.167 255,640.5C 259.74,643.861 265.073,645.861 271,646.5C 271.215,642.872 269.381,640.872 265.5,640.5C 266.736,639.643 268.069,638.977 269.5,638.5C 269.736,639.247 270.07,640.08 270.5,641C 274.333,641.167 278.167,641.333 282,641.5C 287.921,640.985 293.754,640.985 299.5,641.5C 301.384,641.284 303.051,640.617 304.5,639.5C 310.605,641.859 316.605,641.859 322.5,639.5C 323.167,639.667 323.833,639.833 324.5,640C 322.077,640.732 320.91,642.232 321,644.5C 323.571,643.599 325.904,642.266 328,640.5C 331.486,640.341 335.152,640.675 339,641.5C 341.667,640.833 344.333,640.167 347,639.5C 349.693,639.36 351.86,640.36 353.5,642.5C 359.491,640.82 365.324,640.486 371,641.5C 373.198,639.625 375.031,639.625 376.5,641.5C 378.061,640.653 379.561,640.986 381,642.5C 382.062,641.101 383.395,640.101 385,639.5C 386.136,640.783 387.469,641.783 389,642.5C 392.248,640.584 395.748,639.584 399.5,639.5C 399.351,640.552 399.517,641.552 400,642.5C 402.627,641.686 404.96,640.353 407,638.5C 408.793,640.806 410.96,641.139 413.5,639.5C 414.604,640.631 414.271,641.465 412.5,642C 415.726,642.093 418.726,641.26 421.5,639.5C 423.38,639.925 424.88,640.925 426,642.5C 427.657,641.516 429.323,640.516 431,639.5C 431.414,639.957 431.914,640.291 432.5,640.5C 436.148,638.646 439.482,638.646 442.5,640.5C 437.094,641.229 432.094,643.062 427.5,646C 426.167,646.667 426.167,647.333 427.5,648C 423.43,648.719 421.764,650.886 422.5,654.5C 420.322,656.858 418.655,659.525 417.5,662.5C 415.926,664.102 415.259,666.102 415.5,668.5C 415.5,668.833 415.5,669.167 415.5,669.5C 414.778,669.918 414.278,670.584 414,671.5C 413.333,675.833 413.333,680.167 414,684.5C 414.383,685.056 414.883,685.389 415.5,685.5C 416.167,686.167 416.833,686.833 417.5,687.5C 419.749,696.088 424.416,703.088 431.5,708.5C 431.414,709.496 431.748,710.329 432.5,711C 444.783,718.165 457.117,718.332 469.5,711.5C 473.408,710.25 476.408,707.917 478.5,704.5C 480.965,700.933 483.465,697.266 486,693.5C 486.463,686.092 486.297,678.759 485.5,671.5C 485.047,667.307 483.881,663.307 482,659.5C 478.664,655.332 475.164,651.332 471.5,647.5C 470.972,646.279 470.305,645.113 469.5,644C 467.616,643.784 465.949,643.117 464.5,642C 464.833,641.667 465.167,641.333 465.5,641C 437.262,636.588 409.096,635.755 381,638.5C 370.984,638.444 360.817,637.777 350.5,636.5C 336.223,637.381 322.057,637.381 308,636.5C 305.667,637.167 303.333,637.833 301,638.5C 300,637.833 299,637.167 298,636.5C 293,637.167 288,637.833 283,638.5C 257.333,637.833 231.667,637.167 206,636.5C 205,636.833 204,637.167 203,637.5C 202.228,636.151 201.061,635.318 199.5,635C 200.025,634.308 200.692,633.808 201.5,633.5C 202.941,634.304 204.441,634.971 206,635.5C 211.618,634.654 217.118,634.654 222.5,635.5C 224.059,634.926 225.559,634.26 227,633.5C 229.333,633.833 231.667,634.167 234,634.5C 235.791,632.487 237.125,632.487 238,634.5C 239.119,633.448 239.619,632.281 239.5,631C 253.287,631.172 266.954,631.339 280.5,631.5C 281.522,631.145 282.189,630.478 282.5,629.5C 348.071,629.831 413.571,629.498 479,628.5C 479.49,629.793 479.657,631.127 479.5,632.5C 481.467,632.739 483.301,632.406 485,631.5C 487.667,635.453 490.833,636.12 494.5,633.5C 496.061,635.553 497.394,637.72 498.5,640C 497.869,643.85 497.202,647.683 496.5,651.5C 497.083,653.002 497.916,654.335 499,655.5C 499.667,670.833 499.667,686.167 499,701.5C 497.719,701.381 496.552,701.881 495.5,703C 496.448,703.483 497.448,703.649 498.5,703.5C 498.793,716.516 499.459,729.516 500.5,742.5C 500.333,744.833 500.167,747.167 500,749.5C 498.111,752.51 496.611,755.676 495.5,759C 495.509,760.404 496.009,761.57 497,762.5C 498.825,760.52 499.659,758.187 499.5,755.5C 500.5,755.5 501.5,755.5 502.5,755.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6ece5\",d:\"M 339.5,690.5 C 340.5,690.5 341.5,690.5 342.5,690.5C 342.5,691.167 342.5,691.833 342.5,692.5C 342.5,708.5 342.5,724.5 342.5,740.5C 341.178,724.006 340.178,707.339 339.5,690.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef7c5\",d:\"M 342.5,692.5 C 343.461,694.265 343.795,696.265 343.5,698.5C 343.917,713.498 344.25,728.498 344.5,743.5C 343.094,743.027 342.427,742.027 342.5,740.5C 342.5,724.5 342.5,708.5 342.5,692.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e4694\",d:\"M 467.5,707.5 C 465.264,709.906 462.597,711.572 459.5,712.5C 458.167,712.5 456.833,712.5 455.5,712.5C 457.5,711.5 459.5,710.5 461.5,709.5C 463.315,708.37 465.315,707.704 467.5,707.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2489cc\",d:\"M 431.5,708.5 C 439.154,711.713 447.154,713.046 455.5,712.5C 456.833,712.5 458.167,712.5 459.5,712.5C 459.735,713.097 460.235,713.43 461,713.5C 463.547,711.823 466.38,711.156 469.5,711.5C 457.117,718.332 444.783,718.165 432.5,711C 431.748,710.329 431.414,709.496 431.5,708.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3289e1\",d:\"M 478.5,704.5 C 476.408,707.917 473.408,710.25 469.5,711.5C 466.38,711.156 463.547,711.823 461,713.5C 460.235,713.43 459.735,713.097 459.5,712.5C 462.597,711.572 465.264,709.906 467.5,707.5C 468.708,706.766 470.041,706.433 471.5,706.5C 473.436,705.741 475.269,704.741 477,703.5C 477.765,703.57 478.265,703.903 478.5,704.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#28a5da\",d:\"M 401.5,681.5 C 402.474,684.298 403.14,687.298 403.5,690.5C 402.089,694.72 401.256,699.053 401,703.5C 400.69,717.354 399.856,731.021 398.5,744.5C 398.573,742.973 397.906,741.973 396.5,741.5C 396.706,724.137 397.373,706.803 398.5,689.5C 399.75,689.423 400.583,688.756 401,687.5C 401.495,685.527 401.662,683.527 401.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7f2d1f\",d:\"M 469.5,703.5 C 468.313,705.975 466.313,706.975 463.5,706.5C 465.456,705.508 467.456,704.508 469.5,703.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2515c\",d:\"M 421.5,690.5 C 423.734,691.819 425.068,693.819 425.5,696.5C 430.832,701.839 437.165,705.673 444.5,708C 448.821,708.499 453.154,708.666 457.5,708.5C 457.5,708.833 457.5,709.167 457.5,709.5C 452.167,709.5 446.833,709.5 441.5,709.5C 437.753,707.122 433.753,704.955 429.5,703C 425.377,700.066 422.71,696.232 421.5,691.5C 421.5,691.167 421.5,690.833 421.5,690.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4a015\",d:\"M 463.5,679.5 C 464.47,684.69 464.636,690.024 464,695.5C 464.973,697.392 465.64,699.392 466,701.5C 467.011,700.663 468.178,700.33 469.5,700.5C 469.5,701.167 469.5,701.833 469.5,702.5C 466.11,703.023 462.777,703.857 459.5,705C 457.167,705.667 454.833,705.667 452.5,705C 451.833,703.333 451.167,701.667 450.5,700C 451.737,699.768 452.737,699.268 453.5,698.5C 456.216,698.614 458.216,697.614 459.5,695.5C 460.925,694.078 461.925,692.411 462.5,690.5C 463.482,687.038 463.815,683.371 463.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#381931\",d:\"M 482.5,687.5 C 481.977,690.89 481.143,694.223 480,697.5C 476.99,700.343 474.157,703.343 471.5,706.5C 470.041,706.433 468.708,706.766 467.5,707.5C 465.315,707.704 463.315,708.37 461.5,709.5C 460.167,709.5 458.833,709.5 457.5,709.5C 457.5,709.167 457.5,708.833 457.5,708.5C 460.01,708.946 462.01,708.28 463.5,706.5C 466.313,706.975 468.313,705.975 469.5,703.5C 472.292,703.378 474.292,702.044 475.5,699.5C 477.692,696.45 479.358,693.117 480.5,689.5C 481.167,688.833 481.833,688.167 482.5,687.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f57e30\",d:\"M 443.5,698.5 C 446.833,698.5 450.167,698.5 453.5,698.5C 452.737,699.268 451.737,699.768 450.5,700C 451.167,701.667 451.833,703.333 452.5,705C 454.833,705.667 457.167,705.667 459.5,705C 462.777,703.857 466.11,703.023 469.5,702.5C 469.5,702.833 469.5,703.167 469.5,703.5C 467.456,704.508 465.456,705.508 463.5,706.5C 456.641,708.293 449.974,707.793 443.5,705C 442.643,704.311 441.977,703.478 441.5,702.5C 442.63,701.378 443.297,700.044 443.5,698.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fabd09\",d:\"M 393.5,719.5 C 393.824,726.354 393.491,733.021 392.5,739.5C 385.243,740.15 377.91,740.484 370.5,740.5C 363.133,740.497 356.133,739.83 349.5,738.5C 359.839,738.666 370.172,738.5 380.5,738C 380.167,737.667 379.833,737.333 379.5,737C 381.044,736.71 382.377,736.044 383.5,735C 381.269,733.853 378.935,732.853 376.5,732C 375.138,729.966 374.138,727.799 373.5,725.5C 377.469,723.905 379.135,720.905 378.5,716.5C 377.545,708.062 372.878,704.895 364.5,707C 358.433,711.224 357.099,716.391 360.5,722.5C 362.262,723.262 363.262,724.596 363.5,726.5C 362.448,726.351 361.448,726.517 360.5,727C 361.888,727.889 361.722,728.389 360,728.5C 358.237,728.025 356.57,727.358 355,726.5C 354.726,729.647 353.226,731.481 350.5,732C 349.368,727.587 349.201,723.087 350,718.5C 350.497,720.81 350.663,723.143 350.5,725.5C 351.5,725.5 352.5,725.5 353.5,725.5C 353.442,722.336 352.776,719.336 351.5,716.5C 352.5,716.5 353.5,716.5 354.5,716.5C 354.986,713.245 353.986,710.578 351.5,708.5C 354.382,706.111 357.382,703.944 360.5,702C 357.149,701.943 354.149,701.109 351.5,699.5C 364.851,699.666 378.185,699.333 391.5,698.5C 392.748,705.076 393.415,712.076 393.5,719.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdfbc7\",d:\"M 360.5,715.5 C 361.229,723.884 365.563,726.55 373.5,723.5C 373.5,724.167 373.5,724.833 373.5,725.5C 370.236,726.324 366.902,726.658 363.5,726.5C 363.262,724.596 362.262,723.262 360.5,722.5C 359.377,720.021 359.377,717.688 360.5,715.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fefad1\",d:\"M 365.5,708.5 C 370.327,706.428 374.16,707.762 377,712.5C 377.667,715.167 377.667,717.833 377,720.5C 376.623,721.942 375.79,722.942 374.5,723.5C 378.712,714.352 375.712,709.352 365.5,708.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fce58f\",d:\"M 373.5,725.5 C 373.5,724.833 373.5,724.167 373.5,723.5C 373.833,723.5 374.167,723.5 374.5,723.5C 375.79,722.942 376.623,721.942 377,720.5C 377.667,717.833 377.667,715.167 377,712.5C 374.16,707.762 370.327,706.428 365.5,708.5C 362.636,710.023 360.969,712.357 360.5,715.5C 359.377,717.688 359.377,720.021 360.5,722.5C 357.099,716.391 358.433,711.224 364.5,707C 372.878,704.895 377.545,708.062 378.5,716.5C 379.135,720.905 377.469,723.905 373.5,725.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7d2c14\",d:\"M 475.5,699.5 C 474.292,702.044 472.292,703.378 469.5,703.5C 469.5,703.167 469.5,702.833 469.5,702.5C 471.5,701.5 473.5,700.5 475.5,699.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3587cc\",d:\"M 485.5,671.5 C 486.297,678.759 486.463,686.092 486,693.5C 483.465,697.266 480.965,700.933 478.5,704.5C 478.265,703.903 477.765,703.57 477,703.5C 475.269,704.741 473.436,705.741 471.5,706.5C 474.157,703.343 476.99,700.343 480,697.5C 481.143,694.223 481.977,690.89 482.5,687.5C 482.833,687.5 483.167,687.5 483.5,687.5C 484.268,686.737 484.768,685.737 485,684.5C 485.499,680.179 485.666,675.846 485.5,671.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4841e\",d:\"M 480.5,687.5 C 480.5,688.167 480.5,688.833 480.5,689.5C 479.358,693.117 477.692,696.45 475.5,699.5C 473.5,700.5 471.5,701.5 469.5,702.5C 469.5,701.833 469.5,701.167 469.5,700.5C 471.47,698.366 473.637,696.366 476,694.5C 477.054,691.686 478.554,689.353 480.5,687.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a26125\",d:\"M 459.5,695.5 C 458.216,697.614 456.216,698.614 453.5,698.5C 450.167,698.5 446.833,698.5 443.5,698.5C 443.5,698.167 443.5,697.833 443.5,697.5C 449.023,697.931 454.356,697.264 459.5,695.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#43170e\",d:\"M 461.5,690.5 C 461.833,690.5 462.167,690.5 462.5,690.5C 461.925,692.411 460.925,694.078 459.5,695.5C 454.356,697.264 449.023,697.931 443.5,697.5C 442.167,696.5 440.833,695.5 439.5,694.5C 440.5,694.5 441.5,694.5 442.5,694.5C 449.709,696.757 456.042,695.424 461.5,690.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0a40b\",d:\"M 342.5,690.5 C 344.167,690.5 345.833,690.5 347.5,690.5C 347.192,692.924 347.526,695.257 348.5,697.5C 349.308,697.192 349.975,696.692 350.5,696C 349.269,694.817 349.269,693.651 350.5,692.5C 365.118,693.483 379.785,693.817 394.5,693.5C 394.5,695.5 394.5,697.5 394.5,699.5C 394.824,706.354 394.491,713.021 393.5,719.5C 393.415,712.076 392.748,705.076 391.5,698.5C 378.185,699.333 364.851,699.666 351.5,699.5C 348.721,699.721 346.054,699.388 343.5,698.5C 343.795,696.265 343.461,694.265 342.5,692.5C 342.5,691.833 342.5,691.167 342.5,690.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e214e\",d:\"M 417.5,683.5 C 418.338,683.842 418.672,684.508 418.5,685.5C 418.992,687.819 419.992,689.819 421.5,691.5C 422.71,696.232 425.377,700.066 429.5,703C 433.753,704.955 437.753,707.122 441.5,709.5C 443.055,710.633 444.889,711.299 447,711.5C 450.677,711.028 454.177,710.362 457.5,709.5C 458.833,709.5 460.167,709.5 461.5,709.5C 459.5,710.5 457.5,711.5 455.5,712.5C 447.154,713.046 439.154,711.713 431.5,708.5C 424.416,703.088 419.749,696.088 417.5,687.5C 417.5,686.167 417.5,684.833 417.5,683.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#430732\",d:\"M 441.5,709.5 C 446.833,709.5 452.167,709.5 457.5,709.5C 454.177,710.362 450.677,711.028 447,711.5C 444.889,711.299 443.055,710.633 441.5,709.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d67d11\",d:\"M 339.5,690.5 C 339.5,690.167 339.5,689.833 339.5,689.5C 358.167,689.5 376.833,689.5 395.5,689.5C 395.5,692.833 395.5,696.167 395.5,699.5C 395.167,699.5 394.833,699.5 394.5,699.5C 394.5,697.5 394.5,695.5 394.5,693.5C 379.785,693.817 365.118,693.483 350.5,692.5C 349.269,693.651 349.269,694.817 350.5,696C 349.975,696.692 349.308,697.192 348.5,697.5C 347.526,695.257 347.192,692.924 347.5,690.5C 345.833,690.5 344.167,690.5 342.5,690.5C 341.5,690.5 340.5,690.5 339.5,690.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5e9ec\",d:\"M 445.5,667.5 C 445.5,669.833 445.5,672.167 445.5,674.5C 450.527,674.503 455.527,674.836 460.5,675.5C 461.254,680.463 461.587,685.463 461.5,690.5C 456.042,695.424 449.709,696.757 442.5,694.5C 439.967,691.396 438.967,687.729 439.5,683.5C 439.667,680.833 439.833,678.167 440,675.5C 441.067,674.809 442.234,674.309 443.5,674C 442.619,673.292 441.953,672.458 441.5,671.5C 441.5,670.833 441.5,670.167 441.5,669.5C 442.833,668.833 444.167,668.167 445.5,667.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ab0e2\",d:\"M 336.5,675.5 C 332.35,680.969 332.517,686.303 337,691.5C 338.305,709.145 339.138,726.812 339.5,744.5C 339.167,744.5 338.833,744.5 338.5,744.5C 337.594,727.996 336.761,711.33 336,694.5C 334.58,692.556 333.08,690.723 331.5,689C 332.203,684.844 332.869,680.677 333.5,676.5C 333.876,674.197 334.876,673.863 336.5,675.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#311e22\",d:\"M 445.5,667.5 C 448.5,667.5 451.5,667.5 454.5,667.5C 454.5,668.833 454.5,670.167 454.5,671.5C 452.143,671.337 449.81,671.503 447.5,672C 451.486,672.499 455.486,672.666 459.5,672.5C 460.609,672.557 461.609,672.89 462.5,673.5C 463.461,675.265 463.795,677.265 463.5,679.5C 463.815,683.371 463.482,687.038 462.5,690.5C 462.167,690.5 461.833,690.5 461.5,690.5C 461.587,685.463 461.254,680.463 460.5,675.5C 455.527,674.836 450.527,674.503 445.5,674.5C 445.5,672.167 445.5,669.833 445.5,667.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#353c65\",d:\"M 447.5,680.5 C 453.313,680.062 454.98,682.562 452.5,688C 450.559,688.743 448.726,688.576 447,687.5C 446.444,685.115 446.61,682.782 447.5,680.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c46b56\",d:\"M 436.5,671.5 C 437.167,671.5 437.833,671.5 438.5,671.5C 436.92,679.291 437.253,686.958 439.5,694.5C 440.833,695.5 442.167,696.5 443.5,697.5C 441.533,697.739 439.699,697.406 438,696.5C 437.083,692.751 435.917,689.085 434.5,685.5C 435.162,682.532 435.495,679.532 435.5,676.5C 435.366,674.708 435.699,673.042 436.5,671.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb6d57\",d:\"M 421.5,670.5 C 421.176,674.555 421.509,678.555 422.5,682.5C 423.91,678.66 425.744,674.993 428,671.5C 429.437,674.708 431.937,676.375 435.5,676.5C 435.495,679.532 435.162,682.532 434.5,685.5C 435.917,689.085 437.083,692.751 438,696.5C 439.699,697.406 441.533,697.739 443.5,697.5C 443.5,697.833 443.5,698.167 443.5,698.5C 443.297,700.044 442.63,701.378 441.5,702.5C 441.977,703.478 442.643,704.311 443.5,705C 449.974,707.793 456.641,708.293 463.5,706.5C 462.01,708.28 460.01,708.946 457.5,708.5C 453.154,708.666 448.821,708.499 444.5,708C 437.165,705.673 430.832,701.839 425.5,696.5C 425.068,693.819 423.734,691.819 421.5,690.5C 420.501,683.671 420.501,677.005 421.5,670.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272725\",d:\"M 438.5,671.5 C 438.833,671.5 439.167,671.5 439.5,671.5C 440.167,671.5 440.833,671.5 441.5,671.5C 441.953,672.458 442.619,673.292 443.5,674C 442.234,674.309 441.067,674.809 440,675.5C 439.833,678.167 439.667,680.833 439.5,683.5C 438.967,687.729 439.967,691.396 442.5,694.5C 441.5,694.5 440.5,694.5 439.5,694.5C 437.253,686.958 436.92,679.291 438.5,671.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4a68f\",d:\"M 422.5,665.5 C 421.962,667.117 421.629,668.784 421.5,670.5C 420.501,677.005 420.501,683.671 421.5,690.5C 421.5,690.833 421.5,691.167 421.5,691.5C 419.992,689.819 418.992,687.819 418.5,685.5C 419.327,680.349 419.827,675.016 420,669.5C 420.2,667.68 421.034,666.347 422.5,665.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f9be1\",d:\"M 415.5,669.5 C 414.167,674.833 414.167,680.167 415.5,685.5C 414.883,685.389 414.383,685.056 414,684.5C 413.333,680.167 413.333,675.833 414,671.5C 414.278,670.584 414.778,669.918 415.5,669.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#986121\",d:\"M 482.5,669.5 C 483.49,675.31 483.823,681.31 483.5,687.5C 483.167,687.5 482.833,687.5 482.5,687.5C 481.833,688.167 481.167,688.833 480.5,689.5C 480.5,688.833 480.5,688.167 480.5,687.5C 481.038,685.883 481.371,684.216 481.5,682.5C 482.485,678.366 482.818,674.032 482.5,669.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#43a6d3\",d:\"M 400.5,677.5 C 399.711,677.217 399.044,676.717 398.5,676C 378.169,675.5 357.836,675.333 337.5,675.5C 358.059,675.154 378.559,674.154 399,672.5C 400.269,673.905 400.769,675.571 400.5,677.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb7744\",d:\"M 436.5,671.5 C 435.699,673.042 435.366,674.708 435.5,676.5C 431.937,676.375 429.437,674.708 428,671.5C 425.744,674.993 423.91,678.66 422.5,682.5C 421.509,678.555 421.176,674.555 421.5,670.5C 421.629,668.784 421.962,667.117 422.5,665.5C 422.738,663.596 423.738,662.262 425.5,661.5C 428.331,658.638 428.998,659.138 427.5,663C 428.653,664.654 429.987,666.154 431.5,667.5C 431.291,668.086 430.957,668.586 430.5,669C 432.169,670.669 434.169,671.502 436.5,671.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2e8dd\",d:\"M 431.5,649.5 C 430.805,651.978 429.305,653.978 427,655.5C 426.517,656.448 426.351,657.448 426.5,658.5C 425.89,659.391 425.557,660.391 425.5,661.5C 423.738,662.262 422.738,663.596 422.5,665.5C 421.034,666.347 420.2,667.68 420,669.5C 419.827,675.016 419.327,680.349 418.5,685.5C 418.672,684.508 418.338,683.842 417.5,683.5C 415.029,669.123 419.695,657.789 431.5,649.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#206cae\",d:\"M 417.5,662.5 C 417.741,664.898 417.074,666.898 415.5,668.5C 415.259,666.102 415.926,664.102 417.5,662.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7af32\",d:\"M 475.5,655.5 C 479.597,659.269 481.93,663.936 482.5,669.5C 482.818,674.032 482.485,678.366 481.5,682.5C 482.326,676.649 481.159,671.316 478,666.5C 477.593,662.715 476.759,659.048 475.5,655.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f79820\",d:\"M 455.5,655.5 C 455.167,655.5 454.833,655.5 454.5,655.5C 450.252,653.726 446.919,654.726 444.5,658.5C 444.631,657.761 444.464,657.094 444,656.5C 441.724,661.271 440.224,666.271 439.5,671.5C 439.167,671.5 438.833,671.5 438.5,671.5C 437.833,671.5 437.167,671.5 436.5,671.5C 434.169,671.502 432.169,670.669 430.5,669C 430.957,668.586 431.291,668.086 431.5,667.5C 429.987,666.154 428.653,664.654 427.5,663C 428.998,659.138 428.331,658.638 425.5,661.5C 425.557,660.391 425.89,659.391 426.5,658.5C 427.833,657.5 429.167,656.5 430.5,655.5C 434.414,654.041 436.914,655.375 438,659.5C 441.012,655.737 444.845,653.07 449.5,651.5C 451.786,652.579 453.786,653.913 455.5,655.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5e350f\",d:\"M 454.5,655.5 C 454.833,655.5 455.167,655.5 455.5,655.5C 456.885,656.574 458.051,657.907 459,659.5C 459.938,664.256 461.105,668.923 462.5,673.5C 461.609,672.89 460.609,672.557 459.5,672.5C 459.387,666.305 457.72,660.638 454.5,655.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#212c39\",d:\"M 458.5,643.5 C 459.5,643.5 460.5,643.5 461.5,643.5C 465.04,644.387 468.373,645.721 471.5,647.5C 475.164,651.332 478.664,655.332 482,659.5C 483.881,663.307 485.047,667.307 485.5,671.5C 485.666,675.846 485.499,680.179 485,684.5C 484.768,685.737 484.268,686.737 483.5,687.5C 483.823,681.31 483.49,675.31 482.5,669.5C 481.93,663.936 479.597,659.269 475.5,655.5C 475.167,654.5 474.5,653.833 473.5,653.5C 470.875,650.185 467.542,647.851 463.5,646.5C 461.739,645.687 460.072,644.687 458.5,643.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#815518\",d:\"M 444.5,658.5 C 442.726,661.926 441.726,665.593 441.5,669.5C 441.5,670.167 441.5,670.833 441.5,671.5C 440.833,671.5 440.167,671.5 439.5,671.5C 440.224,666.271 441.724,661.271 444,656.5C 444.464,657.094 444.631,657.761 444.5,658.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5bd0ea\",d:\"M 398.5,657.5 C 398.703,655.61 398.037,654.11 396.5,653C 378.167,652.333 359.833,652.333 341.5,653C 340.167,654.333 340.167,655.667 341.5,657C 356.83,657.5 372.163,657.667 387.5,657.5C 389.5,657.5 391.5,657.5 393.5,657.5C 394.5,657.5 395.5,657.5 396.5,657.5C 394.275,659.363 391.608,660.363 388.5,660.5C 371.845,659.741 355.178,659.241 338.5,659C 335.805,656.049 336.138,653.382 339.5,651C 359.531,650.798 379.531,650.298 399.5,649.5C 399.806,652.385 399.473,655.052 398.5,657.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eee6cd\",d:\"M 454.5,655.5 C 457.72,660.638 459.387,666.305 459.5,672.5C 455.486,672.666 451.486,672.499 447.5,672C 449.81,671.503 452.143,671.337 454.5,671.5C 454.5,670.167 454.5,668.833 454.5,667.5C 451.5,667.5 448.5,667.5 445.5,667.5C 444.167,668.167 442.833,668.833 441.5,669.5C 441.726,665.593 442.726,661.926 444.5,658.5C 446.919,654.726 450.252,653.726 454.5,655.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5c491b\",d:\"M 448.5,659.5 C 450.167,659.5 451.833,659.5 453.5,659.5C 453.5,660.5 453.5,661.5 453.5,662.5C 451.533,662.261 449.699,662.594 448,663.5C 447.421,662.072 447.588,660.738 448.5,659.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc00b\",d:\"M 455.5,647.5 C 455.833,647.5 456.167,647.5 456.5,647.5C 461.971,648.902 466.971,651.402 471.5,655C 472.793,655.49 474.127,655.657 475.5,655.5C 476.759,659.048 477.593,662.715 478,666.5C 481.159,671.316 482.326,676.649 481.5,682.5C 481.371,684.216 481.038,685.883 480.5,687.5C 478.554,689.353 477.054,691.686 476,694.5C 473.637,696.366 471.47,698.366 469.5,700.5C 468.178,700.33 467.011,700.663 466,701.5C 465.64,699.392 464.973,697.392 464,695.5C 464.636,690.024 464.47,684.69 463.5,679.5C 463.795,677.265 463.461,675.265 462.5,673.5C 461.105,668.923 459.938,664.256 459,659.5C 458.051,657.907 456.885,656.574 455.5,655.5C 453.786,653.913 451.786,652.579 449.5,651.5C 444.845,653.07 441.012,655.737 438,659.5C 436.914,655.375 434.414,654.041 430.5,655.5C 437.325,648.61 445.658,645.943 455.5,647.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cafefe\",d:\"M 398.5,657.5 C 397.833,657.5 397.167,657.5 396.5,657.5C 395.5,657.5 394.5,657.5 393.5,657.5C 394.806,656.533 395.473,655.199 395.5,653.5C 377.821,653.167 360.154,653.5 342.5,654.5C 342.709,655.086 343.043,655.586 343.5,656C 358.339,656.169 373.006,656.669 387.5,657.5C 372.163,657.667 356.83,657.5 341.5,657C 340.167,655.667 340.167,654.333 341.5,653C 359.833,652.333 378.167,652.333 396.5,653C 398.037,654.11 398.703,655.61 398.5,657.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1fdfe\",d:\"M 393.5,657.5 C 391.5,657.5 389.5,657.5 387.5,657.5C 373.006,656.669 358.339,656.169 343.5,656C 343.043,655.586 342.709,655.086 342.5,654.5C 360.154,653.5 377.821,653.167 395.5,653.5C 395.473,655.199 394.806,656.533 393.5,657.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e8bf45\",d:\"M 456.5,647.5 C 458.857,647.337 461.19,647.503 463.5,648C 466.721,650.057 470.054,651.891 473.5,653.5C 474.5,653.833 475.167,654.5 475.5,655.5C 474.127,655.657 472.793,655.49 471.5,655C 466.971,651.402 461.971,648.902 456.5,647.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#faf2a0\",d:\"M 448.5,645.5 C 451.388,644.99 453.721,645.656 455.5,647.5C 445.658,645.943 437.325,648.61 430.5,655.5C 429.167,656.5 427.833,657.5 426.5,658.5C 426.351,657.448 426.517,656.448 427,655.5C 429.305,653.978 430.805,651.978 431.5,649.5C 437.093,647.871 442.76,646.538 448.5,645.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3e9ba\",d:\"M 448.5,645.5 C 449.622,644.844 450.955,644.511 452.5,644.5C 456.176,645.171 459.843,645.838 463.5,646.5C 467.542,647.851 470.875,650.185 473.5,653.5C 470.054,651.891 466.721,650.057 463.5,648C 461.19,647.503 458.857,647.337 456.5,647.5C 456.167,647.5 455.833,647.5 455.5,647.5C 453.721,645.656 451.388,644.99 448.5,645.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7eada\",d:\"M 458.5,643.5 C 460.072,644.687 461.739,645.687 463.5,646.5C 459.843,645.838 456.176,645.171 452.5,644.5C 450.955,644.511 449.622,644.844 448.5,645.5C 442.76,646.538 437.093,647.871 431.5,649.5C 434.994,646.823 438.994,644.99 443.5,644C 448.489,643.501 453.489,643.334 458.5,643.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#212f5f\",d:\"M 454.5,641.5 C 457.152,641.41 459.485,642.076 461.5,643.5C 460.5,643.5 459.5,643.5 458.5,643.5C 453.489,643.334 448.489,643.501 443.5,644C 438.994,644.99 434.994,646.823 431.5,649.5C 419.695,657.789 415.029,669.123 417.5,683.5C 417.5,684.833 417.5,686.167 417.5,687.5C 416.833,686.833 416.167,686.167 415.5,685.5C 414.167,680.167 414.167,674.833 415.5,669.5C 415.5,669.167 415.5,668.833 415.5,668.5C 417.074,666.898 417.741,664.898 417.5,662.5C 418.655,659.525 420.322,656.858 422.5,654.5C 427.814,649.354 433.814,645.188 440.5,642C 445.155,641.501 449.821,641.334 454.5,641.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#40aee9\",d:\"M 442.5,640.5 C 446.702,640.183 450.702,640.517 454.5,641.5C 449.821,641.334 445.155,641.501 440.5,642C 433.814,645.188 427.814,649.354 422.5,654.5C 421.764,650.886 423.43,648.719 427.5,648C 426.167,647.333 426.167,646.667 427.5,646C 432.094,643.062 437.094,641.229 442.5,640.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fae096\",d:\"M 648.5,701.5 C 649.196,709.067 649.863,716.734 650.5,724.5C 649.833,724.5 649.167,724.5 648.5,724.5C 648.5,716.833 648.5,709.167 648.5,701.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbf5f2\",d:\"M 365.5,708.5 C 375.712,709.352 378.712,714.352 374.5,723.5C 374.167,723.5 373.833,723.5 373.5,723.5C 365.563,726.55 361.229,723.884 360.5,715.5C 360.969,712.357 362.636,710.023 365.5,708.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ef8054\",d:\"M 370.5,719.5 C 368.833,722.167 367.167,722.167 365.5,719.5C 365.34,717.801 365.506,716.134 366,714.5C 367.333,713.167 368.667,713.167 370,714.5C 370.494,716.134 370.66,717.801 370.5,719.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e2a47a\",d:\"M 370.5,719.5 C 370.66,717.801 370.494,716.134 370,714.5C 368.667,713.167 367.333,713.167 366,714.5C 365.506,716.134 365.34,717.801 365.5,719.5C 364.378,717.712 364.211,715.712 365,713.5C 367,710.833 369,710.833 371,713.5C 371.789,715.712 371.622,717.712 370.5,719.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#181009\",d:\"M 666.5,687.5 C 668.16,699.967 669.16,712.634 669.5,725.5C 661.833,726.833 654.167,726.833 646.5,725.5C 646.5,724.167 646.5,722.833 646.5,721.5C 646.833,721.5 647.167,721.5 647.5,721.5C 647.263,722.791 647.596,723.791 648.5,724.5C 654.645,725.49 660.978,725.823 667.5,725.5C 667.795,712.784 667.462,700.117 666.5,687.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9c513\",d:\"M 343.5,698.5 C 346.054,699.388 348.721,699.721 351.5,699.5C 354.149,701.109 357.149,701.943 360.5,702C 357.382,703.944 354.382,706.111 351.5,708.5C 353.986,710.578 354.986,713.245 354.5,716.5C 353.5,716.5 352.5,716.5 351.5,716.5C 352.776,719.336 353.442,722.336 353.5,725.5C 352.5,725.5 351.5,725.5 350.5,725.5C 350.663,723.143 350.497,720.81 350,718.5C 349.201,723.087 349.368,727.587 350.5,732C 353.226,731.481 354.726,729.647 355,726.5C 356.57,727.358 358.237,728.025 360,728.5C 361.722,728.389 361.888,727.889 360.5,727C 361.448,726.517 362.448,726.351 363.5,726.5C 366.902,726.658 370.236,726.324 373.5,725.5C 374.138,727.799 375.138,729.966 376.5,732C 378.935,732.853 381.269,733.853 383.5,735C 382.377,736.044 381.044,736.71 379.5,737C 379.833,737.333 380.167,737.667 380.5,738C 370.172,738.5 359.839,738.666 349.5,738.5C 348.811,737.226 347.977,737.226 347,738.5C 346.998,741.051 346.164,743.051 344.5,744.5C 344.5,744.167 344.5,743.833 344.5,743.5C 344.25,728.498 343.917,713.498 343.5,698.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#16222b\",d:\"M 395.5,688.5 C 396.609,688.557 397.609,688.89 398.5,689.5C 397.373,706.803 396.706,724.137 396.5,741.5C 396.167,741.5 395.833,741.5 395.5,741.5C 395.5,727.5 395.5,713.5 395.5,699.5C 395.5,696.167 395.5,692.833 395.5,689.5C 395.5,689.167 395.5,688.833 395.5,688.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#64d3ee\",d:\"M 476.5,737.5 C 458.167,737.5 439.833,737.5 421.5,737.5C 421.5,739.167 421.5,740.833 421.5,742.5C 439.5,742.5 457.5,742.5 475.5,742.5C 465.839,743.166 456.006,743.5 446,743.5C 435.679,743.657 425.512,743.157 415.5,742C 417.543,740.189 419.043,738.022 420,735.5C 437.056,736.831 454.39,736.831 472,735.5C 473.986,735.569 475.486,736.235 476.5,737.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#283150\",d:\"M 982.5,383.5 C 983.053,548.155 983.053,712.822 982.5,877.5C 981.778,877.082 981.278,876.416 981,875.5C 980.803,867.451 980.303,859.451 979.5,851.5C 980.154,849.885 980.654,848.218 981,846.5C 981.167,841.333 981.333,836.167 981.5,831C 981.451,798.856 981.285,766.689 981,734.5C 979.635,721.332 979.802,708.332 981.5,695.5C 981.614,594.326 981.281,493.326 980.5,392.5C 980.343,389.186 981.009,386.186 982.5,383.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#14274a\",d:\"M 336.5,675.5 C 336.833,675.5 337.167,675.5 337.5,675.5C 357.836,675.333 378.169,675.5 398.5,676C 399.044,676.717 399.711,677.217 400.5,677.5C 400.833,678.833 401.167,680.167 401.5,681.5C 401.662,683.527 401.495,685.527 401,687.5C 400.583,688.756 399.75,689.423 398.5,689.5C 397.609,688.89 396.609,688.557 395.5,688.5C 395.5,688.167 395.5,687.833 395.5,687.5C 396.791,687.737 397.791,687.404 398.5,686.5C 400.006,683.531 399.673,680.698 397.5,678C 387.5,677.833 377.5,677.667 367.5,677.5C 357.144,677.501 347.144,678.168 337.5,679.5C 336.844,680.622 336.511,681.955 336.5,683.5C 336.585,685.333 337.252,686.666 338.5,687.5C 338.833,688.167 339.167,688.833 339.5,689.5C 339.5,689.833 339.5,690.167 339.5,690.5C 340.178,707.339 341.178,724.006 342.5,740.5C 342.427,742.027 343.094,743.027 344.5,743.5C 344.5,743.833 344.5,744.167 344.5,744.5C 344.5,745.167 344.833,745.5 345.5,745.5C 347.265,746.461 349.265,746.795 351.5,746.5C 364.323,747.495 377.323,747.829 390.5,747.5C 390.5,748.167 390.167,748.5 389.5,748.5C 374.138,748.769 358.805,748.436 343.5,747.5C 343.167,746.5 342.5,745.833 341.5,745.5C 340.833,745.167 340.167,744.833 339.5,744.5C 339.138,726.812 338.305,709.145 337,691.5C 332.517,686.303 332.35,680.969 336.5,675.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3c171b\",d:\"M 338.5,687.5 C 357.5,687.5 376.5,687.5 395.5,687.5C 395.5,687.833 395.5,688.167 395.5,688.5C 395.5,688.833 395.5,689.167 395.5,689.5C 376.833,689.5 358.167,689.5 339.5,689.5C 339.167,688.833 338.833,688.167 338.5,687.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d4c8d6\",d:\"M 337.5,679.5 C 337.5,681.833 337.5,684.167 337.5,686.5C 357.833,686.5 378.167,686.5 398.5,686.5C 397.791,687.404 396.791,687.737 395.5,687.5C 376.5,687.5 357.5,687.5 338.5,687.5C 337.252,686.666 336.585,685.333 336.5,683.5C 336.511,681.955 336.844,680.622 337.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eef4f8\",d:\"M 398.5,686.5 C 378.167,686.5 357.833,686.5 337.5,686.5C 337.5,684.167 337.5,681.833 337.5,679.5C 347.144,678.168 357.144,677.501 367.5,677.5C 377.5,677.667 387.5,677.833 397.5,678C 399.673,680.698 400.006,683.531 398.5,686.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0fdfe\",d:\"M 476.5,737.5 C 478.18,739.726 477.847,741.393 475.5,742.5C 457.5,742.5 439.5,742.5 421.5,742.5C 421.5,740.833 421.5,739.167 421.5,737.5C 439.833,737.5 458.167,737.5 476.5,737.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eefefe\",d:\"M 425.5,738.5 C 441.847,738.167 458.18,738.501 474.5,739.5C 474.291,740.086 473.957,740.586 473.5,741C 457.503,741.5 441.503,741.667 425.5,741.5C 425.5,740.5 425.5,739.5 425.5,738.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e78b0b\",d:\"M 349.5,738.5 C 356.133,739.83 363.133,740.497 370.5,740.5C 377.91,740.484 385.243,740.15 392.5,739.5C 392.67,740.822 392.337,741.989 391.5,743C 389.5,743.667 387.5,744.333 385.5,745C 372.171,745.5 358.837,745.667 345.5,745.5C 344.833,745.5 344.5,745.167 344.5,744.5C 346.164,743.051 346.998,741.051 347,738.5C 347.977,737.226 348.811,737.226 349.5,738.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#46a6e9\",d:\"M 503.5,639.5 C 504.222,639.918 504.722,640.584 505,641.5C 505.667,678.833 505.667,716.167 505,753.5C 503.681,761.973 499.181,767.973 491.5,771.5C 491.5,770.5 491.5,769.5 491.5,768.5C 494.32,766.249 497.154,763.915 500,761.5C 501.122,759.593 501.955,757.593 502.5,755.5C 503.499,717.004 503.832,678.337 503.5,639.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#825526\",d:\"M 394.5,699.5 C 394.833,699.5 395.167,699.5 395.5,699.5C 395.5,713.5 395.5,727.5 395.5,741.5C 394.833,741.5 394.5,741.833 394.5,742.5C 393.038,743.458 391.705,744.624 390.5,746C 377.504,746.5 364.504,746.667 351.5,746.5C 349.265,746.795 347.265,746.461 345.5,745.5C 358.837,745.667 372.171,745.5 385.5,745C 387.5,744.333 389.5,743.667 391.5,743C 392.337,741.989 392.67,740.822 392.5,739.5C 393.491,733.021 393.824,726.354 393.5,719.5C 394.491,713.021 394.824,706.354 394.5,699.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f1c1c\",d:\"M 394.5,742.5 C 393.92,744.749 392.587,746.415 390.5,747.5C 377.323,747.829 364.323,747.495 351.5,746.5C 364.504,746.667 377.504,746.5 390.5,746C 391.705,744.624 393.038,743.458 394.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd1fb\",d:\"M 126.5,628.5 C 178.331,629.499 230.331,629.832 282.5,629.5C 282.189,630.478 281.522,631.145 280.5,631.5C 266.954,631.339 253.287,631.172 239.5,631C 239.619,632.281 239.119,633.448 238,634.5C 237.125,632.487 235.791,632.487 234,634.5C 231.667,634.167 229.333,633.833 227,633.5C 225.559,634.26 224.059,634.926 222.5,635.5C 217.118,634.654 211.618,634.654 206,635.5C 204.441,634.971 202.941,634.304 201.5,633.5C 200.692,633.808 200.025,634.308 199.5,635C 201.061,635.318 202.228,636.151 203,637.5C 204,637.167 205,636.833 206,636.5C 231.667,637.167 257.333,637.833 283,638.5C 288,637.833 293,637.167 298,636.5C 299,637.167 300,637.833 301,638.5C 303.333,637.833 305.667,637.167 308,636.5C 322.057,637.381 336.223,637.381 350.5,636.5C 360.817,637.777 370.984,638.444 381,638.5C 409.096,635.755 437.262,636.588 465.5,641C 465.167,641.333 464.833,641.667 464.5,642C 465.949,643.117 467.616,643.784 469.5,644C 470.305,645.113 470.972,646.279 471.5,647.5C 468.373,645.721 465.04,644.387 461.5,643.5C 459.485,642.076 457.152,641.41 454.5,641.5C 450.702,640.517 446.702,640.183 442.5,640.5C 439.482,638.646 436.148,638.646 432.5,640.5C 431.914,640.291 431.414,639.957 431,639.5C 429.323,640.516 427.657,641.516 426,642.5C 424.88,640.925 423.38,639.925 421.5,639.5C 418.726,641.26 415.726,642.093 412.5,642C 414.271,641.465 414.604,640.631 413.5,639.5C 410.96,641.139 408.793,640.806 407,638.5C 404.96,640.353 402.627,641.686 400,642.5C 399.517,641.552 399.351,640.552 399.5,639.5C 395.748,639.584 392.248,640.584 389,642.5C 387.469,641.783 386.136,640.783 385,639.5C 383.395,640.101 382.062,641.101 381,642.5C 379.561,640.986 378.061,640.653 376.5,641.5C 375.031,639.625 373.198,639.625 371,641.5C 365.324,640.486 359.491,640.82 353.5,642.5C 351.86,640.36 349.693,639.36 347,639.5C 344.333,640.167 341.667,640.833 339,641.5C 335.152,640.675 331.486,640.341 328,640.5C 325.904,642.266 323.571,643.599 321,644.5C 320.91,642.232 322.077,640.732 324.5,640C 323.833,639.833 323.167,639.667 322.5,639.5C 316.605,641.859 310.605,641.859 304.5,639.5C 303.051,640.617 301.384,641.284 299.5,641.5C 293.754,640.985 287.921,640.985 282,641.5C 278.167,641.333 274.333,641.167 270.5,641C 270.07,640.08 269.736,639.247 269.5,638.5C 268.069,638.977 266.736,639.643 265.5,640.5C 269.381,640.872 271.215,642.872 271,646.5C 265.073,645.861 259.74,643.861 255,640.5C 250,641.167 245,641.833 240,642.5C 230.844,641.072 221.678,640.572 212.5,641C 212,640.5 211.5,640 211,639.5C 205.41,640.809 199.577,641.475 193.5,641.5C 187.833,641.333 182.167,641.167 176.5,641C 175.975,640.308 175.308,639.808 174.5,639.5C 172.979,640.937 171.145,641.604 169,641.5C 161.007,639.585 153.34,638.918 146,639.5C 145.5,639.833 145,640.167 144.5,640.5C 150.472,641.33 156.472,641.83 162.5,642C 163.416,642.278 164.082,642.778 164.5,643.5C 153.495,643.333 142.495,643.5 131.5,644C 130.058,644.377 129.058,645.21 128.5,646.5C 127.326,647.514 126.66,648.847 126.5,650.5C 125.285,654.033 125.285,657.699 126.5,661.5C 125.883,661.389 125.383,661.056 125,660.5C 124.506,662.134 124.34,663.801 124.5,665.5C 122.656,661.99 120.989,658.323 119.5,654.5C 120.75,654.577 121.583,655.244 122,656.5C 122.414,656.043 122.914,655.709 123.5,655.5C 124.44,652.197 125.273,648.864 126,645.5C 127.353,643.566 128.853,641.733 130.5,640C 125.7,638.718 122.866,640.551 122,645.5C 121.187,643.564 120.687,641.564 120.5,639.5C 119.5,639.5 118.5,639.5 117.5,639.5C 117.773,641.451 117.107,642.951 115.5,644C 116.517,645.049 116.684,646.216 116,647.5C 115.282,646.549 114.449,646.383 113.5,647C 114.823,647.816 115.489,648.983 115.5,650.5C 115.167,650.5 114.833,650.5 114.5,650.5C 106.361,642.067 96.3607,638.9 84.5,641C 66.1424,647.273 58.1424,659.773 60.5,678.5C 60.883,685.101 63.2163,690.768 67.5,695.5C 67.6567,696.873 67.49,698.207 67,699.5C 59.0216,710.201 57.355,721.867 62,734.5C 65.0146,737.878 67.5146,741.544 69.5,745.5C 74.2281,753.457 81.3948,757.457 91,757.5C 103.562,757.347 113.395,752.347 120.5,742.5C 120.412,747.08 122.412,750.413 126.5,752.5C 127.338,752.842 127.672,753.508 127.5,754.5C 192.665,755.665 257.999,755.832 323.5,755C 325.443,750.533 324.276,747.033 320,744.5C 319.517,745.448 319.351,746.448 319.5,747.5C 295.5,747.5 271.5,747.5 247.5,747.5C 248.952,746.698 250.618,746.198 252.5,746C 250.699,745.683 250.366,745.016 251.5,744C 254.167,743.667 256.833,743.333 259.5,743C 258.421,742.044 257.255,741.211 256,740.5C 250.995,742.049 245.829,742.882 240.5,743C 238.13,744.185 235.797,745.351 233.5,746.5C 231.803,746.101 230.137,745.601 228.5,745C 229.167,744.333 229.833,743.667 230.5,743C 233.41,742.407 236.41,741.907 239.5,741.5C 245.181,741.577 250.015,739.577 254,735.5C 254.494,733.866 254.66,732.199 254.5,730.5C 277.507,730.439 300.507,730.772 323.5,731.5C 323.808,729.076 323.474,726.743 322.5,724.5C 318.889,723.738 315.222,723.238 311.5,723C 314.121,722.061 316.788,721.228 319.5,720.5C 317.314,719.779 315.147,719.113 313,718.5C 314.96,715.789 315.794,712.789 315.5,709.5C 314.424,708.344 313.424,708.511 312.5,710C 313.28,711.073 313.113,712.24 312,713.5C 311.517,712.552 311.351,711.552 311.5,710.5C 302.259,710.48 302.259,709.814 311.5,708.5C 310.271,707.719 308.938,707.219 307.5,707C 309.437,706.878 310.77,706.045 311.5,704.5C 314.518,704.665 317.518,704.498 320.5,704C 321,703.5 321.5,703 322,702.5C 321.78,698.804 321.614,695.137 321.5,691.5C 320.834,689.327 319.667,688.993 318,690.5C 316.278,690.389 316.112,689.889 317.5,689C 315.915,688.915 314.582,688.749 313.5,688.5C 316.372,687.217 319.205,687.217 322,688.5C 324.734,687.638 324.901,686.805 322.5,686C 313.663,685.57 304.829,685.07 296,684.5C 282.497,685.682 268.997,685.682 255.5,684.5C 254.975,683.808 254.308,683.308 253.5,683C 278.229,682.583 302.895,682.416 327.5,682.5C 328.452,684.045 328.785,685.712 328.5,687.5C 327.325,687.281 326.325,687.614 325.5,688.5C 329.414,691.66 329.414,694.826 325.5,698C 326.548,700.2 328.048,700.7 330,699.5C 330.944,700.263 331.444,701.263 331.5,702.5C 329.831,706.289 330.164,709.789 332.5,713C 331.376,713.249 330.376,713.749 329.5,714.5C 330.747,716.042 330.747,717.542 329.5,719C 330.715,721.096 331.549,720.929 332,718.5C 332.811,725.414 332.645,732.248 331.5,739C 333.009,740.674 333.676,742.34 333.5,744C 332.218,746.281 331.552,748.781 331.5,751.5C 327.929,751.408 326.762,753.074 328,756.5C 330.988,755.077 333.821,752.744 336.5,749.5C 337.968,751.333 339.635,751.666 341.5,750.5C 340.014,748.698 339.014,746.698 338.5,744.5C 338.833,744.5 339.167,744.5 339.5,744.5C 340.167,744.833 340.833,745.167 341.5,745.5C 342.526,748.372 344.193,750.872 346.5,753C 360.829,753.5 375.163,753.667 389.5,753.5C 391.25,754.473 392.75,755.807 394,757.5C 395.892,756.87 397.559,755.87 399,754.5C 399.333,755.167 399.667,755.833 400,756.5C 400.684,755.216 400.517,754.049 399.5,753C 400,752.5 400.5,752 401,751.5C 402.813,752.609 403.646,751.942 403.5,749.5C 404.873,749.657 406.207,749.49 407.5,749C 404.605,745.732 404.939,743.899 408.5,743.5C 411.85,746.229 412.183,749.229 409.5,752.5C 410,752.833 410.5,753.167 411,753.5C 416.401,750.223 417.567,751.223 414.5,756.5C 413.109,755.355 411.776,755.355 410.5,756.5C 413.344,759.091 416.677,760.925 420.5,762C 418.975,763.009 417.308,763.509 415.5,763.5C 415.853,765.635 415.02,766.968 413,767.5C 403.643,767.415 394.309,766.748 385,765.5C 378.667,766.167 372.333,766.833 366,767.5C 355.114,767.245 344.114,767.245 333,767.5C 331.373,767.375 329.873,766.875 328.5,766C 331.014,764.748 333.68,764.248 336.5,764.5C 336.33,763.178 336.663,762.011 337.5,761C 333.967,758.55 331.3,759.216 329.5,763C 326.899,763.92 324.232,764.587 321.5,765C 261.596,765.169 201.763,765.669 142,766.5C 140.093,762.659 137.593,761.992 134.5,764.5C 133.833,763.833 133.167,763.167 132.5,762.5C 129.956,763.735 129.956,764.901 132.5,766C 129.644,767.906 127.977,767.073 127.5,763.5C 125.54,764.138 123.707,764.138 122,763.5C 121.383,764.449 121.549,765.282 122.5,766C 121.975,766.692 121.308,767.192 120.5,767.5C 119.188,766.54 117.854,766.706 116.5,768C 109.833,768.333 103.167,768.667 96.5,769C 107.167,769.333 117.833,769.667 128.5,770C 247.166,770.5 365.833,770.667 484.5,770.5C 341.65,771.826 198.65,771.826 55.5,770.5C 52.8818,769.055 50.3818,767.389 48,765.5C 45.2291,761.011 43.0624,756.344 41.5,751.5C 41.5,715.167 41.5,678.833 41.5,642.5C 41.6596,640.847 42.3263,639.514 43.5,638.5C 45.9882,639.412 47.6548,638.412 48.5,635.5C 53.1414,632.883 58.1414,630.717 63.5,629C 84.4974,628.5 105.497,628.333 126.5,628.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e2e75\",d:\"M 121.5,708.5 C 122.167,708.833 122.833,709.167 123.5,709.5C 124.378,712.761 125.044,716.094 125.5,719.5C 125.5,720.833 125.5,722.167 125.5,723.5C 124.523,727.828 123.189,732.161 121.5,736.5C 121.5,736.833 121.5,737.167 121.5,737.5C 116.509,743.322 110.509,747.822 103.5,751C 96.4879,754.005 89.4879,754.172 82.5,751.5C 82.8417,750.662 83.5084,750.328 84.5,750.5C 101.304,752.279 112.97,745.612 119.5,730.5C 122.654,723.528 123.32,716.195 121.5,708.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3fdfe\",d:\"M 128.5,750.5 C 381.833,751.167 381.833,751.833 128.5,752.5C 128.5,751.833 128.5,751.167 128.5,750.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#195395\",d:\"M 343.5,747.5 C 358.805,748.436 374.138,748.769 389.5,748.5C 376.677,749.495 363.677,749.829 350.5,749.5C 347.848,749.59 345.515,748.924 343.5,747.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b9fe6\",d:\"M 119.5,730.5 C 112.97,745.612 101.304,752.279 84.5,750.5C 82.0404,749.109 79.3738,747.942 76.5,747C 74.3825,745.951 72.7158,744.451 71.5,742.5C 73.0936,742.92 74.5936,743.586 76,744.5C 77.2247,744.138 78.3914,743.638 79.5,743C 87.5,742.667 95.5,742.333 103.5,742C 104.337,740.989 104.67,739.822 104.5,738.5C 105.649,738.209 106.316,737.376 106.5,736C 106.227,734.467 105.894,732.967 105.5,731.5C 106.5,731.5 107.5,731.5 108.5,731.5C 108.5,733.5 108.5,735.5 108.5,737.5C 110.989,737.702 113.323,737.202 115.5,736C 116.488,733.833 117.821,732 119.5,730.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37d9fa\",d:\"M 126.5,733.5 C 126.833,734.167 127.167,734.833 127.5,735.5C 128.568,736.434 129.901,736.768 131.5,736.5C 161.997,737.332 192.664,737.832 223.5,738C 228.171,738.538 232.838,739.038 237.5,739.5C 238.833,739.5 239.5,740.167 239.5,741.5C 236.41,741.907 233.41,742.407 230.5,743C 229.833,743.667 229.167,744.333 228.5,745C 230.137,745.601 231.803,746.101 233.5,746.5C 235.797,745.351 238.13,744.185 240.5,743C 245.829,742.882 250.995,742.049 256,740.5C 257.255,741.211 258.421,742.044 259.5,743C 256.833,743.333 254.167,743.667 251.5,744C 250.366,745.016 250.699,745.683 252.5,746C 250.618,746.198 248.952,746.698 247.5,747.5C 246.209,747.263 245.209,747.596 244.5,748.5C 205.494,748.167 166.494,748.5 127.5,749.5C 126.873,750.417 126.539,751.417 126.5,752.5C 122.412,750.413 120.412,747.08 120.5,742.5C 121.301,740.958 121.634,739.292 121.5,737.5C 121.5,737.167 121.5,736.833 121.5,736.5C 122.85,735.517 123.85,734.184 124.5,732.5C 125.183,732.863 125.85,733.196 126.5,733.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48d4fc\",d:\"M 85.5,725.5 C 86.404,726.209 86.7373,727.209 86.5,728.5C 91.1785,728.334 95.8452,728.501 100.5,729C 101.099,730.622 101.766,732.122 102.5,733.5C 102.208,735.957 102.208,738.624 102.5,741.5C 95.5,741.5 88.5,741.5 81.5,741.5C 81.5,737.833 81.5,734.167 81.5,730.5C 82.0798,728.251 83.4131,726.585 85.5,725.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e71a2\",d:\"M 253.5,730.5 C 253.833,730.5 254.167,730.5 254.5,730.5C 254.66,732.199 254.494,733.866 254,735.5C 250.015,739.577 245.181,741.577 239.5,741.5C 239.5,740.167 238.833,739.5 237.5,739.5C 237.167,738.833 236.833,738.167 236.5,737.5C 237.167,737.5 237.833,737.5 238.5,737.5C 243.873,739.409 248.206,738.075 251.5,733.5C 252.906,733.027 253.573,732.027 253.5,730.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#74b7dd\",d:\"M 131.5,736.5 C 166.573,736.174 201.573,736.507 236.5,737.5C 236.833,738.167 237.167,738.833 237.5,739.5C 232.838,739.038 228.171,738.538 223.5,738C 192.664,737.832 161.997,737.332 131.5,736.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d386c\",d:\"M 67.5,695.5 C 68.9952,695.989 70.3285,696.655 71.5,697.5C 68.4068,700.687 66.0735,704.354 64.5,708.5C 62.2867,713.959 61.9534,719.626 63.5,725.5C 63.8691,732.286 66.5357,737.952 71.5,742.5C 72.7158,744.451 74.3825,745.951 76.5,747C 79.3738,747.942 82.0404,749.109 84.5,750.5C 83.5084,750.328 82.8417,750.662 82.5,751.5C 78.0533,749.777 73.7199,747.777 69.5,745.5C 67.5146,741.544 65.0146,737.878 62,734.5C 57.355,721.867 59.0216,710.201 67,699.5C 67.49,698.207 67.6567,696.873 67.5,695.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9a8aa7\",d:\"M 234.5,732.5 C 236.063,733.945 237.396,735.611 238.5,737.5C 237.833,737.5 237.167,737.5 236.5,737.5C 201.573,736.507 166.573,736.174 131.5,736.5C 129.901,736.768 128.568,736.434 127.5,735.5C 163.004,735.832 198.337,735.498 233.5,734.5C 234.338,734.158 234.672,733.492 234.5,732.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#da737b\",d:\"M 125.5,719.5 C 126.167,719.5 126.833,719.5 127.5,719.5C 127.251,722.002 126.917,724.502 126.5,727C 127.336,729.49 128.002,731.99 128.5,734.5C 163.5,734.5 198.5,734.5 233.5,734.5C 198.337,735.498 163.004,735.832 127.5,735.5C 127.167,734.833 126.833,734.167 126.5,733.5C 125.676,730.236 125.342,726.902 125.5,723.5C 125.5,722.167 125.5,720.833 125.5,719.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3fbbef\",d:\"M 63.5,725.5 C 64.4584,725.953 65.2917,726.619 66,727.5C 66.4966,729.81 66.6633,732.143 66.5,734.5C 67.5,734.5 68.5,734.5 69.5,734.5C 69.678,730.898 70.678,730.898 72.5,734.5C 71.6906,736.071 71.3573,737.738 71.5,739.5C 73.7659,739.859 75.5993,739.192 77,737.5C 77.2189,738.938 77.7189,740.271 78.5,741.5C 78.8333,740.833 79.1667,740.167 79.5,739.5C 78.1491,737.588 77.4824,735.422 77.5,733C 77.6083,731.319 78.2749,730.152 79.5,729.5C 79.3379,731.527 79.5045,733.527 80,735.5C 80.1981,733.618 80.6981,731.952 81.5,730.5C 81.5,734.167 81.5,737.833 81.5,741.5C 88.5,741.5 95.5,741.5 102.5,741.5C 102.208,738.624 102.208,735.957 102.5,733.5C 103.167,734.5 103.833,735.5 104.5,736.5C 104.5,737.167 104.5,737.833 104.5,738.5C 104.67,739.822 104.337,740.989 103.5,742C 95.5,742.333 87.5,742.667 79.5,743C 78.3914,743.638 77.2247,744.138 76,744.5C 74.5936,743.586 73.0936,742.92 71.5,742.5C 66.5357,737.952 63.8691,732.286 63.5,725.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#727a9e\",d:\"M 125.5,723.5 C 125.342,726.902 125.676,730.236 126.5,733.5C 125.85,733.196 125.183,732.863 124.5,732.5C 123.85,734.184 122.85,735.517 121.5,736.5C 123.189,732.161 124.523,727.828 125.5,723.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3f8fa\",d:\"M 238.5,717.5 C 243.5,716.626 247.667,717.959 251,721.5C 252.212,722.776 253.045,724.276 253.5,726C 252.929,728.544 252.262,731.044 251.5,733.5C 248.206,738.075 243.873,739.409 238.5,737.5C 237.396,735.611 236.063,733.945 234.5,732.5C 233.766,731.292 233.433,729.959 233.5,728.5C 233.5,725.5 233.5,722.5 233.5,719.5C 235.167,718.833 236.833,718.167 238.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#419dd6\",d:\"M 95.5,726.5 C 101.643,726.69 104.643,730.024 104.5,736.5C 103.833,735.5 103.167,734.5 102.5,733.5C 101.766,732.122 101.099,730.622 100.5,729C 95.8452,728.501 91.1785,728.334 86.5,728.5C 86.7373,727.209 86.404,726.209 85.5,725.5C 85.5,724.833 85.5,724.167 85.5,723.5C 87.1733,724.343 88.34,725.676 89,727.5C 89.791,724.041 90.791,720.707 92,717.5C 92.498,720.482 92.6646,723.482 92.5,726.5C 93.5,726.5 94.5,726.5 95.5,726.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#083176\",d:\"M 101.5,722.5 C 103.105,725.378 104.439,728.378 105.5,731.5C 105.894,732.967 106.227,734.467 106.5,736C 106.316,737.376 105.649,738.209 104.5,738.5C 104.5,737.833 104.5,737.167 104.5,736.5C 104.643,730.024 101.643,726.69 95.5,726.5C 95.8417,725.662 96.5084,725.328 97.5,725.5C 98.6366,724.211 99.9699,723.211 101.5,722.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d2fcfe\",d:\"M 253.5,730.5 C 253.573,732.027 252.906,733.027 251.5,733.5C 252.262,731.044 252.929,728.544 253.5,726C 253.045,724.276 252.212,722.776 251,721.5C 247.667,717.959 243.5,716.626 238.5,717.5C 238.611,716.883 238.944,716.383 239.5,716C 244.744,714.894 249.077,716.394 252.5,720.5C 253.95,721.85 254.617,723.516 254.5,725.5C 276.169,725.333 297.836,725.5 319.5,726C 320.337,727.011 320.67,728.178 320.5,729.5C 297.994,729.169 275.66,729.503 253.5,730.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3fefd\",d:\"M 255.5,726.5 C 276.511,726.167 297.511,726.5 318.5,727.5C 308,727.833 297.5,728.167 287,728.5C 276.145,728.499 265.645,727.832 255.5,726.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7cd4f0\",d:\"M 100.5,716.5 C 99.7866,719.594 98.7866,722.594 97.5,725.5C 96.5084,725.328 95.8417,725.662 95.5,726.5C 94.5,726.5 93.5,726.5 92.5,726.5C 92.6646,723.482 92.498,720.482 92,717.5C 90.791,720.707 89.791,724.041 89,727.5C 88.34,725.676 87.1733,724.343 85.5,723.5C 84.612,720.946 84.2786,718.279 84.5,715.5C 90.0262,715.179 95.3595,715.512 100.5,716.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb6861\",d:\"M 233.5,728.5 C 233.433,729.959 233.766,731.292 234.5,732.5C 234.672,733.492 234.338,734.158 233.5,734.5C 198.5,734.5 163.5,734.5 128.5,734.5C 128.002,731.99 127.336,729.49 126.5,727C 126.917,724.502 127.251,722.002 127.5,719.5C 127.833,719.5 128.167,719.5 128.5,719.5C 161.81,718.361 195.144,718.195 228.5,719C 231.407,721.583 233.074,724.749 233.5,728.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ee7978\",d:\"M 199.5,724.5 C 189.167,724.5 178.833,724.5 168.5,724.5C 168.286,726.144 168.62,727.644 169.5,729C 179.833,729.667 190.167,729.667 200.5,729C 201.337,727.989 201.67,726.822 201.5,725.5C 202.801,726.884 202.801,728.384 201.5,730C 189.467,730.771 177.467,730.605 165.5,729.5C 165.178,727.278 165.845,725.444 167.5,724C 178.341,723.175 189.008,723.341 199.5,724.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffe6e1\",d:\"M 199.5,724.5 C 200.167,724.833 200.833,725.167 201.5,725.5C 201.67,726.822 201.337,727.989 200.5,729C 190.167,729.667 179.833,729.667 169.5,729C 168.62,727.644 168.286,726.144 168.5,724.5C 178.833,724.5 189.167,724.5 199.5,724.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3089b8\",d:\"M 103.5,713.5 C 104.139,714.097 104.472,714.93 104.5,716C 102.84,717.842 101.84,720.009 101.5,722.5C 99.9699,723.211 98.6366,724.211 97.5,725.5C 98.7866,722.594 99.7866,719.594 100.5,716.5C 102.879,717.567 103.879,716.567 103.5,713.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#db7f88\",d:\"M 130.5,717.5 C 163.5,717.5 196.5,717.5 229.5,717.5C 231.062,717.733 232.395,718.4 233.5,719.5C 233.5,722.5 233.5,725.5 233.5,728.5C 233.074,724.749 231.407,721.583 228.5,719C 195.144,718.195 161.81,718.361 128.5,719.5C 128.833,718.5 129.5,717.833 130.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41b1e9\",d:\"M 111.5,696.5 C 112.5,697.167 113.5,697.833 114.5,698.5C 116.846,701.871 119.179,705.204 121.5,708.5C 123.32,716.195 122.654,723.528 119.5,730.5C 120.443,723.856 120.609,717.189 120,710.5C 118.878,708.58 118.044,706.58 117.5,704.5C 116.5,704.5 115.5,704.5 114.5,704.5C 114.5,703.167 114.5,701.833 114.5,700.5C 113.127,700.657 111.793,700.49 110.5,700C 111.337,698.989 111.67,697.822 111.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3fd0fa\",d:\"M 95.5,700.5 C 93.4727,700.338 91.4727,700.505 89.5,701C 85.5694,703.042 83.2361,706.209 82.5,710.5C 82.3564,714.375 82.6898,718.208 83.5,722C 82.3745,724.622 81.0412,727.122 79.5,729.5C 78.2749,730.152 77.6083,731.319 77.5,733C 77.4824,735.422 78.1491,737.588 79.5,739.5C 79.1667,740.167 78.8333,740.833 78.5,741.5C 77.7189,740.271 77.2189,738.938 77,737.5C 75.5993,739.192 73.7659,739.859 71.5,739.5C 71.3573,737.738 71.6906,736.071 72.5,734.5C 70.678,730.898 69.678,730.898 69.5,734.5C 68.5,734.5 67.5,734.5 66.5,734.5C 66.6633,732.143 66.4966,729.81 66,727.5C 65.2917,726.619 64.4584,725.953 63.5,725.5C 61.9534,719.626 62.2867,713.959 64.5,708.5C 64.3284,709.492 64.6618,710.158 65.5,710.5C 66.4584,710.047 67.2917,709.381 68,708.5C 68.3333,709.5 68.6667,710.5 69,711.5C 71.5471,709.796 73.0471,707.463 73.5,704.5C 75.1992,704.66 76.8659,704.494 78.5,704C 78.9302,703.08 79.2635,702.247 79.5,701.5C 80.1667,701.833 80.8333,702.167 81.5,702.5C 86.0122,699.857 90.6788,699.191 95.5,700.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#90a4c2\",d:\"M 229.5,717.5 C 196.5,717.5 163.5,717.5 130.5,717.5C 130.611,716.883 130.944,716.383 131.5,716C 163.833,715.333 196.167,715.333 228.5,716C 229.056,716.383 229.389,716.883 229.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#07204d\",d:\"M 84.5,709.5 C 84.5,710.833 84.5,712.167 84.5,713.5C 87.1667,713.5 89.8333,713.5 92.5,713.5C 95.2869,714.477 98.2869,714.81 101.5,714.5C 101.232,712.901 101.566,711.568 102.5,710.5C 103.404,711.209 103.737,712.209 103.5,713.5C 103.879,716.567 102.879,717.567 100.5,716.5C 95.3595,715.512 90.0262,715.179 84.5,715.5C 84.2786,718.279 84.612,720.946 85.5,723.5C 85.5,724.167 85.5,724.833 85.5,725.5C 83.4131,726.585 82.0798,728.251 81.5,730.5C 80.6981,731.952 80.1981,733.618 80,735.5C 79.5045,733.527 79.3379,731.527 79.5,729.5C 81.0412,727.122 82.3745,724.622 83.5,722C 82.6898,718.208 82.3564,714.375 82.5,710.5C 83.2216,710.082 83.7216,709.416 84,708.5C 84.3988,708.728 84.5654,709.062 84.5,709.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#60b4e9\",d:\"M 92.5,713.5 C 89.8333,713.5 87.1667,713.5 84.5,713.5C 84.5,712.167 84.5,710.833 84.5,709.5C 84.8333,709.5 85.1667,709.5 85.5,709.5C 85.5,710.5 85.5,711.5 85.5,712.5C 87.5273,712.662 89.5273,712.495 91.5,712C 92.478,710.025 93.8113,708.358 95.5,707C 93.7129,704.866 91.3795,704.033 88.5,704.5C 90.7665,702.237 93.4332,701.904 96.5,703.5C 99.1994,706.26 100.533,709.594 100.5,713.5C 97.8333,713.5 95.1667,713.5 92.5,713.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad7fc\",d:\"M 130.5,704.5 C 190.833,704.5 251.167,704.5 311.5,704.5C 310.77,706.045 309.437,706.878 307.5,707C 308.938,707.219 310.271,707.719 311.5,708.5C 302.259,709.814 302.259,710.48 311.5,710.5C 311.351,711.552 311.517,712.552 312,713.5C 313.113,712.24 313.28,711.073 312.5,710C 313.424,708.511 314.424,708.344 315.5,709.5C 315.794,712.789 314.96,715.789 313,718.5C 315.147,719.113 317.314,719.779 319.5,720.5C 316.788,721.228 314.121,722.061 311.5,723C 315.222,723.238 318.889,723.738 322.5,724.5C 323.474,726.743 323.808,729.076 323.5,731.5C 300.507,730.772 277.507,730.439 254.5,730.5C 254.167,730.5 253.833,730.5 253.5,730.5C 275.66,729.503 297.994,729.169 320.5,729.5C 320.67,728.178 320.337,727.011 319.5,726C 297.836,725.5 276.169,725.333 254.5,725.5C 254.617,723.516 253.95,721.85 252.5,720.5C 249.077,716.394 244.744,714.894 239.5,716C 238.944,716.383 238.611,716.883 238.5,717.5C 236.833,718.167 235.167,718.833 233.5,719.5C 233.511,717.983 234.177,716.816 235.5,716C 234.953,715.075 234.287,714.242 233.5,713.5C 230.301,714.859 227.301,714.526 224.5,712.5C 218.669,714.096 213.003,713.763 207.5,711.5C 208.326,710.549 208.492,709.549 208,708.5C 196.382,709.663 184.549,709.663 172.5,708.5C 170.05,708.761 167.717,709.428 165.5,710.5C 159.025,709.661 152.692,709.661 146.5,710.5C 141.182,708.496 135.848,707.83 130.5,708.5C 130.5,707.167 130.5,705.833 130.5,704.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38d6fa\",d:\"M 111.5,696.5 C 111.67,697.822 111.337,698.989 110.5,700C 111.793,700.49 113.127,700.657 114.5,700.5C 114.5,701.833 114.5,703.167 114.5,704.5C 115.5,704.5 116.5,704.5 117.5,704.5C 118.044,706.58 118.878,708.58 120,710.5C 120.609,717.189 120.443,723.856 119.5,730.5C 117.821,732 116.488,733.833 115.5,736C 113.323,737.202 110.989,737.702 108.5,737.5C 108.5,735.5 108.5,733.5 108.5,731.5C 107.5,731.5 106.5,731.5 105.5,731.5C 104.439,728.378 103.105,725.378 101.5,722.5C 101.84,720.009 102.84,717.842 104.5,716C 104.472,714.93 104.139,714.097 103.5,713.5C 103.737,712.209 103.404,711.209 102.5,710.5C 102.113,705.783 99.7794,702.45 95.5,700.5C 90.6788,699.191 86.0122,699.857 81.5,702.5C 80.8333,702.167 80.1667,701.833 79.5,701.5C 79.2635,702.247 78.9302,703.08 78.5,704C 76.8659,704.494 75.1992,704.66 73.5,704.5C 73.0471,707.463 71.5471,709.796 69,711.5C 68.6667,710.5 68.3333,709.5 68,708.5C 67.2917,709.381 66.4584,710.047 65.5,710.5C 70.3096,702.057 77.3096,695.891 86.5,692C 89.5,691.333 92.5,691.333 95.5,692C 100.75,693.819 106.083,695.319 111.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#66d4f2\",d:\"M 88.5,704.5 C 91.3795,704.033 93.7129,704.866 95.5,707C 93.8113,708.358 92.478,710.025 91.5,712C 89.5273,712.495 87.5273,712.662 85.5,712.5C 85.5,711.5 85.5,710.5 85.5,709.5C 85.2729,707.067 86.2729,705.401 88.5,704.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f457a\",d:\"M 95.5,700.5 C 99.7794,702.45 102.113,705.783 102.5,710.5C 101.566,711.568 101.232,712.901 101.5,714.5C 98.2869,714.81 95.2869,714.477 92.5,713.5C 95.1667,713.5 97.8333,713.5 100.5,713.5C 100.533,709.594 99.1994,706.26 96.5,703.5C 93.4332,701.904 90.7665,702.237 88.5,704.5C 86.2729,705.401 85.2729,707.067 85.5,709.5C 85.1667,709.5 84.8333,709.5 84.5,709.5C 84.5654,709.062 84.3988,708.728 84,708.5C 83.7216,709.416 83.2216,710.082 82.5,710.5C 83.2361,706.209 85.5694,703.042 89.5,701C 91.4727,700.505 93.4727,700.338 95.5,700.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4fccea\",d:\"M 321.5,691.5 C 321.614,695.137 321.78,698.804 322,702.5C 321.5,703 321,703.5 320.5,704C 317.518,704.498 314.518,704.665 311.5,704.5C 251.167,704.5 190.833,704.5 130.5,704.5C 128.088,704.306 127.088,702.973 127.5,700.5C 127.833,700.5 128.167,700.5 128.5,700.5C 159.66,701.833 191.16,702.5 223,702.5C 254.5,702.333 286,702.167 317.5,702C 320.622,700.245 321.288,697.745 319.5,694.5C 258.336,693.501 197.002,693.168 135.5,693.5C 197.33,692.309 259.33,691.642 321.5,691.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dcfefe\",d:\"M 142.5,694.5 C 139.038,695.482 135.371,695.815 131.5,695.5C 131.5,697.167 131.5,698.833 131.5,700.5C 193.824,700.119 256.157,700.119 318.5,700.5C 318.5,698.833 318.5,697.167 318.5,695.5C 307.986,695.828 297.653,695.494 287.5,694.5C 298.167,694.5 308.833,694.5 319.5,694.5C 321.288,697.745 320.622,700.245 317.5,702C 286,702.167 254.5,702.333 223,702.5C 191.16,702.5 159.66,701.833 128.5,700.5C 128.261,698.533 128.594,696.699 129.5,695C 133.821,694.501 138.154,694.334 142.5,694.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#042f58\",d:\"M 117.5,696.5 C 119.452,700.807 121.452,705.14 123.5,709.5C 122.833,709.167 122.167,708.833 121.5,708.5C 119.179,705.204 116.846,701.871 114.5,698.5C 115.778,698.218 116.778,697.551 117.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9fcfd\",d:\"M 142.5,694.5 C 190.833,694.5 239.167,694.5 287.5,694.5C 297.653,695.494 307.986,695.828 318.5,695.5C 318.5,697.167 318.5,698.833 318.5,700.5C 256.157,700.119 193.824,700.119 131.5,700.5C 131.5,698.833 131.5,697.167 131.5,695.5C 135.371,695.815 139.038,695.482 142.5,694.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cbfefe\",d:\"M 135.5,693.5 C 197.002,693.168 258.336,693.501 319.5,694.5C 308.833,694.5 298.167,694.5 287.5,694.5C 239.167,694.5 190.833,694.5 142.5,694.5C 138.154,694.334 133.821,694.501 129.5,695C 128.594,696.699 128.261,698.533 128.5,700.5C 128.167,700.5 127.833,700.5 127.5,700.5C 126.406,694.095 129.073,691.762 135.5,693.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5a3d21\",d:\"M 63.5,683.5 C 64.1667,684.167 64.8333,684.833 65.5,685.5C 65.8333,686.833 66.1667,688.167 66.5,689.5C 67.925,690.922 68.925,692.589 69.5,694.5C 65.6847,691.873 63.6847,688.206 63.5,683.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8f0f7\",d:\"M 111.5,696.5 C 106.083,695.319 100.75,693.819 95.5,692C 92.5,691.333 89.5,691.333 86.5,692C 77.3096,695.891 70.3096,702.057 65.5,710.5C 64.6618,710.158 64.3284,709.492 64.5,708.5C 66.0735,704.354 68.4068,700.687 71.5,697.5C 84.5838,685.853 97.9172,685.519 111.5,696.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#956731\",d:\"M 83.5,687.5 C 81.5439,688.492 79.5439,689.492 77.5,690.5C 78.6874,688.025 80.6874,687.025 83.5,687.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ad7f8\",d:\"M 119.5,654.5 C 118.167,653.167 116.833,651.833 115.5,650.5C 115.489,648.983 114.823,647.816 113.5,647C 114.449,646.383 115.282,646.549 116,647.5C 116.684,646.216 116.517,645.049 115.5,644C 117.107,642.951 117.773,641.451 117.5,639.5C 118.5,639.5 119.5,639.5 120.5,639.5C 120.687,641.564 121.187,643.564 122,645.5C 122.866,640.551 125.7,638.718 130.5,640C 128.853,641.733 127.353,643.566 126,645.5C 125.273,648.864 124.44,652.197 123.5,655.5C 122.914,655.709 122.414,656.043 122,656.5C 121.583,655.244 120.75,654.577 119.5,654.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a6793c\",d:\"M 112.5,650.5 C 112.833,650.5 113.167,650.5 113.5,650.5C 114.925,651.922 115.925,653.589 116.5,655.5C 114.413,654.415 113.08,652.749 112.5,650.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e2e0ca\",d:\"M 110.5,649.5 C 109.833,649.5 109.167,649.5 108.5,649.5C 105.426,647.335 102.093,646.002 98.5,645.5C 93.6842,644.35 88.6842,644.184 83.5,645C 78.8597,646.726 74.5264,648.893 70.5,651.5C 73.4393,648.082 77.106,645.582 81.5,644C 92.2776,640.661 101.944,642.495 110.5,649.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcf9b9\",d:\"M 98.5,645.5 C 94.4862,645.334 90.4862,645.501 86.5,646C 79.662,647.417 74.3287,650.917 70.5,656.5C 69.8333,656.833 69.1667,657.167 68.5,657.5C 69.1667,655.5 69.8333,653.5 70.5,651.5C 74.5264,648.893 78.8597,646.726 83.5,645C 88.6842,644.184 93.6842,644.35 98.5,645.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a999ba\",d:\"M 164.5,643.5 C 164.5,643.833 164.5,644.167 164.5,644.5C 153.986,644.172 143.653,644.506 133.5,645.5C 131.784,645.629 130.117,645.962 128.5,646.5C 129.058,645.21 130.058,644.377 131.5,644C 142.495,643.5 153.495,643.333 164.5,643.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37a8ee\",d:\"M 395.5,741.5 C 395.833,741.5 396.167,741.5 396.5,741.5C 397.906,741.973 398.573,742.973 398.5,744.5C 397.99,747.674 396.323,750.008 393.5,751.5C 391.08,751.292 388.747,751.626 386.5,752.5C 374.337,751.961 362.337,750.961 350.5,749.5C 363.677,749.829 376.677,749.495 389.5,748.5C 390.167,748.5 390.5,748.167 390.5,747.5C 392.587,746.415 393.92,744.749 394.5,742.5C 394.5,741.833 394.833,741.5 395.5,741.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dffefe\",d:\"M 128.5,750.5 C 192.331,749.501 256.331,749.168 320.5,749.5C 320.5,750.833 320.5,752.167 320.5,753.5C 256.331,753.832 192.331,753.499 128.5,752.5C 381.833,751.833 381.833,751.167 128.5,750.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#20b1ee\",d:\"M 341.5,745.5 C 342.5,745.833 343.167,746.5 343.5,747.5C 345.515,748.924 347.848,749.59 350.5,749.5C 362.337,750.961 374.337,751.961 386.5,752.5C 388.747,751.626 391.08,751.292 393.5,751.5C 392.486,752.674 391.153,753.34 389.5,753.5C 375.163,753.667 360.829,753.5 346.5,753C 344.193,750.872 342.526,748.372 341.5,745.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#97eefd\",d:\"M 244.5,748.5 C 270.005,748.169 295.339,748.502 320.5,749.5C 256.331,749.168 192.331,749.501 128.5,750.5C 128.5,751.167 128.5,751.833 128.5,752.5C 192.331,753.499 256.331,753.832 320.5,753.5C 256.335,754.499 192.002,754.832 127.5,754.5C 127.672,753.508 127.338,752.842 126.5,752.5C 126.539,751.417 126.873,750.417 127.5,749.5C 166.494,748.5 205.494,748.167 244.5,748.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#52cae8\",d:\"M 127.5,754.5 C 192.002,754.832 256.335,754.499 320.5,753.5C 320.5,752.167 320.5,750.833 320.5,749.5C 295.339,748.502 270.005,748.169 244.5,748.5C 245.209,747.596 246.209,747.263 247.5,747.5C 271.5,747.5 295.5,747.5 319.5,747.5C 319.351,746.448 319.517,745.448 320,744.5C 324.276,747.033 325.443,750.533 323.5,755C 257.999,755.832 192.665,755.665 127.5,754.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3594d5\",d:\"M 121.5,737.5 C 121.634,739.292 121.301,740.958 120.5,742.5C 113.395,752.347 103.562,757.347 91,757.5C 81.3948,757.457 74.2281,753.457 69.5,745.5C 73.7199,747.777 78.0533,749.777 82.5,751.5C 89.4879,754.172 96.4879,754.005 103.5,751C 110.509,747.822 116.509,743.322 121.5,737.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30384f\",d:\"M 749.5,493.5 C 750.499,573.998 750.833,654.665 750.5,735.5C 750.5,751.167 750.5,766.833 750.5,782.5C 751.209,783.404 752.209,783.737 753.5,783.5C 753.5,687.5 753.5,591.5 753.5,495.5C 754.333,591.332 754.833,687.332 755,783.5C 755.5,690.167 755.667,596.834 755.5,503.5C 756.249,515.341 756.915,527.341 757.5,539.5C 756.849,562.45 756.516,585.284 756.5,608C 757.327,629.427 757.827,650.927 758,672.5C 758.304,670.559 759.137,668.893 760.5,667.5C 759.511,666.532 758.844,665.365 758.5,664C 758.777,658.548 758.944,653.048 759,647.5C 759.333,647.833 759.667,648.167 760,648.5C 760.167,647.5 760.333,646.5 760.5,645.5C 759.459,643.124 759.459,640.79 760.5,638.5C 760.061,636.896 759.394,635.396 758.5,634C 759.765,629.693 761.098,625.359 762.5,621C 758.821,619.067 758.821,617.4 762.5,616C 759.507,615.573 759.007,614.406 761,612.5C 762.018,613.706 762.518,613.373 762.5,611.5C 762.518,609.627 762.018,609.294 761,610.5C 759.366,609.01 759.699,607.676 762,606.5C 762.17,604.285 762.837,602.285 764,600.5C 764.333,597.5 764.667,594.5 765,591.5C 765.869,598.798 765.369,605.964 763.5,613C 763.629,614.981 764.296,616.647 765.5,618C 764.484,618.519 763.818,619.353 763.5,620.5C 766.056,627.459 766.723,634.292 765.5,641C 766.686,642.947 768.02,644.78 769.5,646.5C 768.311,647.429 766.978,647.762 765.5,647.5C 765.16,650.144 765.827,652.477 767.5,654.5C 764.878,657.513 765.044,660.18 768,662.5C 770.444,660.444 772.277,657.944 773.5,655C 776.72,654.68 779.72,655.18 782.5,656.5C 777.021,659.311 773.355,663.644 771.5,669.5C 770.336,698.33 770.17,727.33 771,756.5C 772.918,760.127 774.751,763.793 776.5,767.5C 775.833,767.5 775.167,767.5 774.5,767.5C 771.14,764.782 769.307,761.115 769,756.5C 768.667,728.167 768.333,699.833 768,671.5C 766.605,670.185 765.605,670.519 765,672.5C 762.962,701.731 763.128,730.898 765.5,760C 764.14,762.27 763.473,764.77 763.5,767.5C 762.5,767.5 761.5,767.5 760.5,767.5C 760.34,763.764 759.507,763.764 758,767.5C 757.667,767.167 757.333,766.833 757,766.5C 756.228,769.518 756.894,772.185 759,774.5C 760.101,770.4 762.101,769.733 765,772.5C 765.437,776.623 764.937,780.623 763.5,784.5C 765.144,784.714 766.644,784.38 768,783.5C 768.495,781.527 768.662,779.527 768.5,777.5C 773.299,776.446 777.965,776.613 782.5,778C 783.406,779.699 783.739,781.533 783.5,783.5C 786.91,783.616 788.244,781.95 787.5,778.5C 792.001,777.863 796.001,778.863 799.5,781.5C 799.218,783.987 799.218,786.653 799.5,789.5C 793.771,789.212 788.104,789.546 782.5,790.5C 780.941,789.926 779.441,789.26 778,788.5C 774.255,789.297 770.421,789.797 766.5,790C 766.833,790.333 767.167,790.667 767.5,791C 766.5,791.333 765.5,791.667 764.5,792C 771.088,792.536 771.088,793.369 764.5,794.5C 760.326,792.938 755.993,792.105 751.5,792C 755.5,791.667 759.5,791.333 763.5,791C 758.37,789.547 753.37,788.38 748.5,787.5C 750.078,786.702 751.744,786.202 753.5,786C 751.603,784.89 749.77,784.724 748,785.5C 747.501,779.509 747.334,773.509 747.5,767.5C 748.327,772.651 748.827,777.984 749,783.5C 749.5,686.834 749.667,590.167 749.5,493.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4fdfe\",d:\"M 752.5,497.5 C 753.164,592.839 752.498,687.839 750.5,782.5C 750.5,766.833 750.5,751.167 750.5,735.5C 751.167,656.167 751.833,576.833 752.5,497.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#30b4f8\",d:\"M 491.5,768.5 C 491.5,769.5 491.5,770.5 491.5,771.5C 490.18,772.942 488.514,773.608 486.5,773.5C 389.846,772.308 293.012,772.308 196,773.5C 149.147,772.922 102.314,772.255 55.5,771.5C 55.5,771.167 55.5,770.833 55.5,770.5C 198.65,771.826 341.65,771.826 484.5,770.5C 486.921,770.122 489.254,769.455 491.5,768.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3095e3\",d:\"M 55.5,771.5 C 102.314,772.255 149.147,772.922 196,773.5C 293.012,772.308 389.846,772.308 486.5,773.5C 485.711,773.783 485.044,774.283 484.5,775C 344.167,775.5 203.834,775.667 63.5,775.5C 60.5152,774.674 57.8485,773.341 55.5,771.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#072b5f\",d:\"M 507.5,655.5 C 507.5,676.833 507.5,698.167 507.5,719.5C 507.667,733.171 507.5,746.837 507,760.5C 503.324,765.342 499.158,769.675 494.5,773.5C 491.358,775.119 488.024,776.119 484.5,776.5C 343.999,776.833 203.666,776.5 63.5,775.5C 203.834,775.667 344.167,775.5 484.5,775C 485.044,774.283 485.711,773.783 486.5,773.5C 488.514,773.608 490.18,772.942 491.5,771.5C 499.181,767.973 503.681,761.973 505,753.5C 505.667,716.167 505.667,678.833 505,641.5C 504.722,640.584 504.222,639.918 503.5,639.5C 502.872,636.91 501.705,634.577 500,632.5C 496.932,629.917 493.765,627.584 490.5,625.5C 491.251,624.427 492.251,624.26 493.5,625C 495.5,626.333 497.5,627.667 499.5,629C 500.987,631.485 502.821,633.652 505,635.5C 507.128,641.974 507.961,648.641 507.5,655.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e1d46\",d:\"M 41.5,751.5 C 43.0624,756.344 45.2291,761.011 48,765.5C 50.3818,767.389 52.8818,769.055 55.5,770.5C 55.5,770.833 55.5,771.167 55.5,771.5C 57.8485,773.341 60.5152,774.674 63.5,775.5C 203.666,776.5 343.999,776.833 484.5,776.5C 472.011,777.495 459.344,777.829 446.5,777.5C 318.167,777.5 189.833,777.5 61.5,777.5C 56.0736,774.943 51.0736,771.61 46.5,767.5C 42.5332,762.896 40.8666,757.563 41.5,751.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#242b4e\",d:\"M 61.5,777.5 C 189.833,777.5 318.167,777.5 446.5,777.5C 446.611,778.117 446.944,778.617 447.5,779C 458.547,778.852 469.214,779.686 479.5,781.5C 479.167,781.5 478.833,781.5 478.5,781.5C 340.168,782.188 201.834,781.854 63.5,780.5C 62.8075,779.482 62.1408,778.482 61.5,777.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#303142\",d:\"M 209.5,802.5 C 205.904,805.357 203.571,809.024 202.5,813.5C 202.167,813.5 201.833,813.5 201.5,813.5C 201.167,813.5 200.833,813.5 200.5,813.5C 200.807,810.72 201.807,808.22 203.5,806C 202.681,804.681 201.681,803.515 200.5,802.5C 199.061,804.36 197.395,806.027 195.5,807.5C 194.727,805.187 194.06,802.854 193.5,800.5C 192.311,799.571 190.978,799.238 189.5,799.5C 189.321,801.954 189.987,804.121 191.5,806C 190.352,807.726 189.185,807.559 188,805.5C 187.82,807.488 187.986,809.488 188.5,811.5C 186.86,808.196 184.527,805.529 181.5,803.5C 181.461,802.417 181.127,801.417 180.5,800.5C 176.936,799.034 173.27,797.868 169.5,797C 132.5,796.333 95.5,796.333 58.5,797C 95.0023,797.167 131.336,797.667 167.5,798.5C 130.832,798.333 94.1652,798.5 57.5,799C 49.5756,801.423 44.5756,806.59 42.5,814.5C 41.5022,839.995 41.1689,865.661 41.5,891.5C 40.1798,864.646 40.1798,837.646 41.5,810.5C 40.935,808.595 39.935,806.929 38.5,805.5C 39.1847,803.453 40.3514,801.786 42,800.5C 43.5671,801.856 45.4004,802.523 47.5,802.5C 47.5,801.5 47.5,800.5 47.5,799.5C 52.3981,797.696 57.3981,796.029 62.5,794.5C 102.331,795.6 141.831,795.6 181,794.5C 181.667,793.833 182.333,793.167 183,792.5C 184.586,793.376 186.086,794.376 187.5,795.5C 188.308,795.192 188.975,794.692 189.5,794C 195.157,793.501 200.824,793.334 206.5,793.5C 206.337,795.857 206.503,798.19 207,800.5C 207.995,801.066 208.828,801.733 209.5,802.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c1b22\",d:\"M 181.5,803.5 C 181.167,803.5 180.833,803.5 180.5,803.5C 180.167,803.5 179.833,803.5 179.5,803.5C 179.027,802.094 178.027,801.427 176.5,801.5C 176.027,800.094 175.027,799.427 173.5,799.5C 171.621,798.659 169.621,798.325 167.5,798.5C 131.336,797.667 95.0023,797.167 58.5,797C 95.5,796.333 132.5,796.333 169.5,797C 173.27,797.868 176.936,799.034 180.5,800.5C 181.127,801.417 181.461,802.417 181.5,803.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6e5d5\",d:\"M 167.5,798.5 C 169.621,798.325 171.621,798.659 173.5,799.5C 134.5,800.167 95.5,800.833 56.5,801.5C 54.6508,802.593 52.9842,803.926 51.5,805.5C 48.0317,808.456 45.0317,811.789 42.5,815.5C 42.5,815.167 42.5,814.833 42.5,814.5C 44.5756,806.59 49.5756,801.423 57.5,799C 94.1652,798.5 130.832,798.333 167.5,798.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fceead\",d:\"M 173.5,799.5 C 175.027,799.427 176.027,800.094 176.5,801.5C 136.5,801.5 96.5,801.5 56.5,801.5C 95.5,800.833 134.5,800.167 173.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fed0c6\",d:\"M 328.5,799.5 C 330.284,799.893 331.95,800.559 333.5,801.5C 333.5,802.167 333.167,802.5 332.5,802.5C 331.833,802.5 331.167,802.5 330.5,802.5C 293.004,801.502 255.337,801.168 217.5,801.5C 254.5,800.833 291.5,800.167 328.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#baf7fd\",d:\"M 639.5,799.5 C 640.609,799.557 641.609,799.89 642.5,800.5C 604.336,801.333 566.002,801.833 527.5,802C 522.173,805.159 518.507,809.659 516.5,815.5C 515.566,814.432 515.232,813.099 515.5,811.5C 517.442,806.559 520.775,802.892 525.5,800.5C 563.67,800.832 601.67,800.499 639.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#efc342\",d:\"M 56.5,801.5 C 96.5,801.5 136.5,801.5 176.5,801.5C 178.027,801.427 179.027,802.094 179.5,803.5C 139.529,802.351 99.5291,802.184 59.5,803C 57.0734,804.591 54.4067,805.425 51.5,805.5C 52.9842,803.926 54.6508,802.593 56.5,801.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f08481\",d:\"M 217.5,801.5 C 255.337,801.168 293.004,801.502 330.5,802.5C 291.476,802.19 252.476,802.524 213.5,803.5C 214.514,802.326 215.847,801.66 217.5,801.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9e1de\",d:\"M 215.5,798.5 C 252.833,798.5 290.167,798.5 327.5,798.5C 327.5,799.167 327.833,799.5 328.5,799.5C 291.5,800.167 254.5,800.833 217.5,801.5C 215.847,801.66 214.514,802.326 213.5,803.5C 209.032,806.314 206.032,810.314 204.5,815.5C 203.732,816.263 203.232,817.263 203,818.5C 202.506,816.866 202.34,815.199 202.5,813.5C 203.571,809.024 205.904,805.357 209.5,802.5C 210.167,802.5 210.5,802.167 210.5,801.5C 212.368,800.737 214.035,799.737 215.5,798.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a2b42\",d:\"M 478.5,781.5 C 478.833,781.5 479.167,781.5 479.5,781.5C 480.765,782.668 482.765,783.668 485.5,784.5C 487.453,783.844 489.453,783.511 491.5,783.5C 493.064,788.573 494.564,788.573 496,783.5C 501.053,784.203 506.22,784.203 511.5,783.5C 510.167,786.167 510.167,788.833 511.5,791.5C 510.448,791.351 509.448,791.517 508.5,792C 509.99,792.745 510.99,793.912 511.5,795.5C 508.07,798.709 507.736,802.375 510.5,806.5C 511.281,805.271 511.781,803.938 512,802.5C 514.044,803.772 515.878,803.439 517.5,801.5C 518.624,799.631 519.457,797.631 520,795.5C 520.249,796.624 520.749,797.624 521.5,798.5C 522.78,796.276 522.447,794.276 520.5,792.5C 521.325,791.614 522.325,791.281 523.5,791.5C 524.92,794.226 525.587,796.892 525.5,799.5C 525.5,799.833 525.5,800.167 525.5,800.5C 520.775,802.892 517.442,806.559 515.5,811.5C 514.566,812.568 514.232,813.901 514.5,815.5C 513.833,836.671 513.167,858.004 512.5,879.5C 511.668,869.851 511.168,860.184 511,850.5C 510,849.833 509,849.167 508,848.5C 507.918,858.345 507.585,868.345 507,878.5C 505.945,857.518 505.111,836.518 504.5,815.5C 503.667,836.826 503.167,858.159 503,879.5C 502.821,883.025 502.321,886.359 501.5,889.5C 501.167,889.5 500.833,889.5 500.5,889.5C 500.667,863.165 500.5,836.831 500,810.5C 499.578,808.574 498.411,807.574 496.5,807.5C 495.167,806.5 493.833,805.5 492.5,804.5C 491.738,802.738 490.404,801.738 488.5,801.5C 487.713,799.896 486.38,799.229 484.5,799.5C 446.541,798.346 408.541,798.179 370.5,799C 362.434,802.563 358.101,808.729 357.5,817.5C 356.842,843.855 357.509,869.855 359.5,895.5C 359.4,898.108 360.067,900.442 361.5,902.5C 363.272,904.776 365.272,906.943 367.5,909C 368.745,909.791 370.078,910.291 371.5,910.5C 372.473,912.068 372.64,913.735 372,915.5C 370.644,914.62 369.144,914.286 367.5,914.5C 368.595,919.386 366.928,921.052 362.5,919.5C 361.353,919.818 360.519,920.484 360,921.5C 359.173,925.541 359.34,929.541 360.5,933.5C 361.107,933.376 361.44,933.043 361.5,932.5C 362.5,932.5 363.5,932.5 364.5,932.5C 364.5,931.167 364.5,929.833 364.5,928.5C 365.712,929.23 366.712,930.23 367.5,931.5C 368.298,929.922 368.798,928.256 369,926.5C 369.198,928.382 369.698,930.048 370.5,931.5C 371.209,932.404 372.209,932.737 373.5,932.5C 373.343,931.127 373.51,929.793 374,928.5C 374.232,929.737 374.732,930.737 375.5,931.5C 376.568,932.434 377.901,932.768 379.5,932.5C 379.5,930.167 379.5,927.833 379.5,925.5C 379.833,925.5 380.167,925.5 380.5,925.5C 380.198,928.059 380.532,930.393 381.5,932.5C 382.999,931.322 383.999,929.655 384.5,927.5C 385.452,929.045 385.785,930.712 385.5,932.5C 386.833,932.5 388.167,932.5 389.5,932.5C 389.833,924.5 390.167,924.5 390.5,932.5C 392.143,932.52 393.476,931.853 394.5,930.5C 395.328,931.415 396.328,932.081 397.5,932.5C 399.805,931.663 402.138,931.496 404.5,932C 405.21,929.036 406.21,926.202 407.5,923.5C 411.371,923.185 415.038,923.518 418.5,924.5C 415.167,924.5 411.833,924.5 408.5,924.5C 405.74,930.846 407.74,933.512 414.5,932.5C 413.706,923.308 414.372,923.308 416.5,932.5C 417.012,930.149 418.012,928.149 419.5,926.5C 420.5,927 421.5,927.5 422.5,928C 423.053,929.878 424.053,931.378 425.5,932.5C 426.632,933.354 427.965,933.354 429.5,932.5C 432.572,932.817 435.572,932.484 438.5,931.5C 437.811,929.556 437.311,927.556 437,925.5C 435.644,924.62 434.144,924.286 432.5,924.5C 433.985,921.917 436.318,920.584 439.5,920.5C 439.281,919.325 439.614,918.325 440.5,917.5C 441.176,918.602 441.842,919.602 442.5,920.5C 438.595,924.388 438.595,928.388 442.5,932.5C 443.167,931.167 443.833,929.833 444.5,928.5C 445.107,928.624 445.44,928.957 445.5,929.5C 444.566,930.568 444.232,931.901 444.5,933.5C 443.5,933.5 442.5,933.5 441.5,933.5C 441.804,936.233 440.637,937.899 438,938.5C 436.14,936.799 433.973,935.799 431.5,935.5C 431.649,936.552 431.483,937.552 431,938.5C 429.667,938.5 428.333,938.5 427,938.5C 426.311,937.643 425.478,936.977 424.5,936.5C 423.575,937.641 422.741,937.641 422,936.5C 421.667,937.167 421.333,937.833 421,938.5C 417.843,937.504 414.509,936.17 411,934.5C 406.204,936.876 401.037,938.209 395.5,938.5C 394.855,939.646 394.022,940.646 393,941.5C 391.863,940.636 390.53,939.636 389,938.5C 388.667,939.167 388.333,939.833 388,940.5C 387.303,938.416 386.136,936.749 384.5,935.5C 384.938,935.565 385.272,935.399 385.5,935C 384.391,934.362 383.225,933.862 382,933.5C 380.31,934.149 378.477,934.149 376.5,933.5C 376.649,934.552 376.483,935.552 376,936.5C 370.969,933.143 365.969,932.81 361,935.5C 359.657,934.786 358.324,935.12 357,936.5C 356.504,940.705 354.837,941.371 352,938.5C 351.805,936.793 351.805,935.126 352,933.5C 350.89,935.037 349.39,935.703 347.5,935.5C 347.33,934.178 347.663,933.011 348.5,932C 350.436,931.187 352.436,930.687 354.5,930.5C 354.5,929.5 354.5,928.5 354.5,927.5C 352.123,927.784 349.956,927.784 348,927.5C 347.235,931.362 345.068,932.362 341.5,930.5C 341.846,929.304 342.346,929.304 343,930.5C 343.982,929.241 344.315,927.908 344,926.5C 342,927.833 340,927.833 338,926.5C 337.033,929.905 335.2,930.405 332.5,928C 333.84,925.821 333.507,925.321 331.5,926.5C 331.5,925.833 331.5,925.167 331.5,924.5C 330.432,923.566 329.099,923.232 327.5,923.5C 329.501,920.321 331.501,916.988 333.5,913.5C 332.667,913.167 331.833,912.833 331,912.5C 327.063,914.275 323.063,915.942 319,917.5C 316.632,916.631 315.132,914.965 314.5,912.5C 312.577,911.692 310.577,911.192 308.5,911C 278.331,910.832 248.331,910.332 218.5,909.5C 254.167,909.5 289.833,909.5 325.5,909.5C 338.079,907.721 344.079,900.388 343.5,887.5C 344.663,862.337 344.83,837.003 344,811.5C 342.362,808.696 340.529,806.029 338.5,803.5C 337.423,802.295 336.09,801.628 334.5,801.5C 334.167,801.5 333.833,801.5 333.5,801.5C 331.95,800.559 330.284,799.893 328.5,799.5C 327.833,799.5 327.5,799.167 327.5,798.5C 331.449,798.307 331.449,797.807 327.5,797C 290.5,796.333 253.5,796.333 216.5,797C 215.944,797.383 215.611,797.883 215.5,798.5C 214.035,799.737 212.368,800.737 210.5,801.5C 212.346,798.522 214.68,795.855 217.5,793.5C 219.444,794.189 221.444,794.689 223.5,795C 255.167,795.667 286.833,795.667 318.5,795C 323.39,795.168 327.557,793.668 331,790.5C 331.483,789.552 331.649,788.552 331.5,787.5C 332.822,787.33 333.989,787.663 335,788.5C 335.273,790.101 335.773,791.601 336.5,793C 338.5,793.333 340.5,793.667 342.5,794C 341.304,794.654 341.304,795.154 342.5,795.5C 345.212,793.74 348.212,793.073 351.5,793.5C 351.756,795.792 351.423,797.959 350.5,800C 351.623,801.044 352.956,801.71 354.5,802C 354.216,803.956 354.216,806.123 354.5,808.5C 359.468,807.705 359.801,805.871 355.5,803C 357.891,801.691 357.891,800.691 355.5,800C 357.137,799.399 358.803,798.899 360.5,798.5C 364.251,799.943 367.917,799.443 371.5,797C 369.956,796.71 368.623,796.044 367.5,795C 369.443,795.305 371.443,795.305 373.5,795C 371.369,794.457 369.369,793.624 367.5,792.5C 369.973,790.902 369.973,789.402 367.5,788C 369.5,787.333 371.5,787.333 373.5,788C 373.342,790.228 374.009,792.395 375.5,794.5C 410.488,795.612 445.488,795.778 480.5,795C 482.869,794.686 485.036,793.852 487,792.5C 487.772,792.645 488.439,792.978 489,793.5C 490.022,786.852 487.355,784.519 481,786.5C 480.215,784.751 479.382,783.084 478.5,781.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ef807f\",d:\"M 374.5,801.5 C 412.5,801.5 450.5,801.5 488.5,801.5C 490.404,801.738 491.738,802.738 492.5,804.5C 489.034,802.908 485.367,802.242 481.5,802.5C 446.165,802.333 410.832,802.5 375.5,803C 373.26,803.977 370.927,804.477 368.5,804.5C 369.911,802.461 371.911,801.461 374.5,801.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdcfc8\",d:\"M 484.5,799.5 C 486.38,799.229 487.713,799.896 488.5,801.5C 450.5,801.5 412.5,801.5 374.5,801.5C 411.167,800.833 447.833,800.167 484.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3ecea\",d:\"M 484.5,799.5 C 447.833,800.167 411.167,800.833 374.5,801.5C 371.911,801.461 369.911,802.461 368.5,804.5C 367.833,804.5 367.5,804.833 367.5,805.5C 362.967,808.365 359.967,812.365 358.5,817.5C 358.167,817.5 357.833,817.5 357.5,817.5C 358.101,808.729 362.434,802.563 370.5,799C 408.541,798.179 446.541,798.346 484.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#272a38\",d:\"M 327.5,798.5 C 290.167,798.5 252.833,798.5 215.5,798.5C 215.611,797.883 215.944,797.383 216.5,797C 253.5,796.333 290.5,796.333 327.5,797C 331.449,797.807 331.449,798.307 327.5,798.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fd675c\",d:\"M 481.5,802.5 C 484.427,803.834 487.427,805.167 490.5,806.5C 492.071,809.023 491.571,811.023 489,812.5C 487.987,810.154 486.321,808.487 484,807.5C 477.53,808.634 470.697,809.301 463.5,809.5C 458.167,809.167 452.833,808.833 447.5,808.5C 448.641,807.575 448.641,806.741 447.5,806C 443.309,805.078 439.309,805.412 435.5,807C 436.167,807.333 436.833,807.667 437.5,808C 436.328,808.419 435.328,809.085 434.5,810C 447.315,811.033 460.315,811.699 473.5,812C 474.759,812.923 476.092,813.757 477.5,814.5C 478.093,816.382 478.76,818.215 479.5,820C 482.512,820.78 485.345,821.947 488,823.5C 489.117,823.335 490.284,823.002 491.5,822.5C 492.799,823.09 493.632,824.09 494,825.5C 496.065,822.955 495.898,820.621 493.5,818.5C 494.167,817.167 495.167,816.167 496.5,815.5C 497.773,836.51 497.606,857.51 496,878.5C 494.623,882.265 493.623,881.932 493,877.5C 491.181,879.503 489.015,880.836 486.5,881.5C 486.5,882.833 486.5,884.167 486.5,885.5C 487.675,885.281 488.675,885.614 489.5,886.5C 489.167,886.833 488.833,887.167 488.5,887.5C 486.908,887.583 485.241,887.249 483.5,886.5C 482.353,886.818 481.519,887.484 481,888.5C 480.626,887.584 480.126,886.75 479.5,886C 476.21,885.747 473.21,884.747 470.5,883C 470.833,882.667 471.167,882.333 471.5,882C 468.5,881.667 465.5,881.333 462.5,881C 462.167,880.667 461.833,880.333 461.5,880C 462.428,879.612 463.095,878.945 463.5,878C 462.004,876.669 460.671,875.169 459.5,873.5C 460.593,869.892 460.76,866.225 460,862.5C 458.665,860.395 456.998,859.729 455,860.5C 454.802,858.618 454.302,856.952 453.5,855.5C 453.768,853.901 453.434,852.568 452.5,851.5C 451.694,850.272 450.694,849.272 449.5,848.5C 447.323,847.635 446.323,845.968 446.5,843.5C 448.089,840.715 448.589,837.715 448,834.5C 445.123,832.596 441.956,831.596 438.5,831.5C 438.792,825.71 438.125,820.043 436.5,814.5C 434.929,813.691 433.262,813.357 431.5,813.5C 427.317,812.846 424.484,814.512 423,818.5C 422.501,824.157 422.334,829.824 422.5,835.5C 421.5,835.5 420.5,835.5 419.5,835.5C 416.99,835.054 414.99,835.72 413.5,837.5C 412.679,840.641 412.179,843.975 412,847.5C 408,847.5 406,849.5 406,853.5C 405.181,859.681 405.347,865.681 406.5,871.5C 406.5,872.833 406.5,874.167 406.5,875.5C 420.801,876.616 435.134,876.782 449.5,876C 451.469,874.5 452.802,872.667 453.5,870.5C 455.351,877.61 453.351,883.277 447.5,887.5C 446.833,887.5 446.167,887.5 445.5,887.5C 445.5,887.167 445.5,886.833 445.5,886.5C 443.852,884.544 443.185,882.211 443.5,879.5C 441.571,879.231 439.905,879.731 438.5,881C 439.167,881.667 439.833,882.333 440.5,883C 439.034,883.635 437.7,884.469 436.5,885.5C 435.08,883.78 433.747,881.946 432.5,880C 426.252,879.812 420.085,879.312 414,878.5C 411.48,879.207 408.98,880.04 406.5,881C 407.765,885.474 407.099,885.641 404.5,881.5C 401.739,882.35 401.072,881.35 402.5,878.5C 401.675,877.614 400.675,877.281 399.5,877.5C 400.138,879.46 400.138,881.293 399.5,883C 397.082,882.538 394.915,881.371 393,879.5C 391.665,882.641 389.832,885.308 387.5,887.5C 386.5,887.5 385.5,887.5 384.5,887.5C 383.833,887.5 383.167,887.5 382.5,887.5C 379.16,887.799 375.827,887.133 372.5,885.5C 368.634,885.535 366.801,887.535 367,891.5C 366.667,890.833 366.333,890.167 366,889.5C 365.823,870.12 364.823,850.786 363,831.5C 361.875,834.478 361.375,837.645 361.5,841C 361.728,857.453 361.728,873.953 361.5,890.5C 360.732,889.737 360.232,888.737 360,887.5C 359.333,868.833 359.333,850.167 360,831.5C 360.338,826.453 361.005,821.453 362,816.5C 363.934,812.852 365.767,809.186 367.5,805.5C 367.5,804.833 367.833,804.5 368.5,804.5C 370.927,804.477 373.26,803.977 375.5,803C 410.832,802.5 446.165,802.333 481.5,802.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fd665d\",d:\"M 330.5,802.5 C 331.167,802.5 331.833,802.5 332.5,802.5C 334.792,805.804 337.126,809.137 339.5,812.5C 340.819,838.961 340.819,865.294 339.5,891.5C 337.582,895.654 334.915,899.32 331.5,902.5C 327.554,903.184 323.554,903.184 319.5,902.5C 319.5,901.5 319.5,900.5 319.5,899.5C 321.456,901.148 323.789,901.815 326.5,901.5C 326.292,899.08 326.626,896.747 327.5,894.5C 326.788,891.788 325.121,890.121 322.5,889.5C 322.167,889.5 321.833,889.5 321.5,889.5C 314.978,888.824 308.645,887.157 302.5,884.5C 301.261,884.942 300.261,885.609 299.5,886.5C 299.013,887.473 298.513,888.473 298,889.5C 295.165,886.764 292.665,887.097 290.5,890.5C 289.893,890.376 289.56,890.043 289.5,889.5C 293.899,886.168 294.565,882.168 291.5,877.5C 294.679,874.973 297.846,872.306 301,869.5C 302.122,867.593 302.955,865.593 303.5,863.5C 304.117,863.389 304.617,863.056 305,862.5C 307.267,853.631 307.934,844.631 307,835.5C 306.26,833.681 305.093,832.348 303.5,831.5C 303.092,828.802 301.926,826.469 300,824.5C 297.357,823.024 295.19,821.024 293.5,818.5C 290.6,816.049 287.266,814.715 283.5,814.5C 282.167,814.5 280.833,814.5 279.5,814.5C 267.552,812.596 257.552,816.263 249.5,825.5C 247.983,825.511 246.816,826.177 246,827.5C 244.999,830.173 243.499,832.507 241.5,834.5C 240.29,842.824 240.456,851.157 242,859.5C 243.699,861.696 245.533,863.696 247.5,865.5C 247.674,867.861 248.007,870.194 248.5,872.5C 244.685,871.918 241.351,872.752 238.5,875C 243.466,874.631 245.633,876.798 245,881.5C 244.174,879.595 243.007,879.261 241.5,880.5C 242.246,881.736 242.579,883.07 242.5,884.5C 239.692,884.307 237.025,883.64 234.5,882.5C 234.539,880.641 233.706,879.308 232,878.5C 229.075,880.331 226.241,881.997 223.5,883.5C 221.833,883.5 220.167,883.5 218.5,883.5C 217.41,887.86 217.41,892.193 218.5,896.5C 218.167,896.833 217.833,897.167 217.5,897.5C 216.15,896.05 214.484,895.383 212.5,895.5C 212.874,892.028 211.874,889.028 209.5,886.5C 208.201,887.09 207.368,888.09 207,889.5C 206.667,888.833 206.333,888.167 206,887.5C 205.722,888.416 205.222,889.082 204.5,889.5C 203.201,864.98 203.201,840.313 204.5,815.5C 206.032,810.314 209.032,806.314 213.5,803.5C 252.476,802.524 291.476,802.19 330.5,802.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd3fc\",d:\"M 577.5,813.5 C 581.394,812.168 585.394,810.835 589.5,809.5C 591.115,810.154 592.782,810.654 594.5,811C 593.5,811.333 592.5,811.667 591.5,812C 591.833,812.333 592.167,812.667 592.5,813C 608.167,813.333 623.833,813.667 639.5,814C 640.5,816 641.5,816 642.5,814C 641.62,812.644 641.286,811.144 641.5,809.5C 642.833,809.5 644.167,809.5 645.5,809.5C 645.702,811.989 645.202,814.323 644,816.5C 643.5,837.164 643.333,857.831 643.5,878.5C 644.833,878.5 646.167,878.5 647.5,878.5C 646.779,857.746 646.945,837.08 648,816.5C 649.654,839.019 649.988,861.685 649,884.5C 648,887.167 647,887.167 646,884.5C 644.579,887.622 642.913,887.956 641,885.5C 639.018,888.81 636.685,891.81 634,894.5C 632.701,893.91 631.868,892.91 631.5,891.5C 632.547,889.944 633.214,888.277 633.5,886.5C 632.167,886.5 630.833,886.5 629.5,886.5C 624.797,886.563 620.13,886.229 615.5,885.5C 615.296,888.518 614.963,891.518 614.5,894.5C 610.092,894.938 608.425,892.938 609.5,888.5C 613.5,887.833 613.5,887.167 609.5,886.5C 609.5,885.5 609.5,884.5 609.5,883.5C 606.449,883.364 603.449,883.698 600.5,884.5C 599.259,883.963 598.092,883.296 597,882.5C 593.602,884.351 590.102,885.684 586.5,886.5C 586.5,890.167 586.5,893.833 586.5,897.5C 590.884,897.826 595.217,897.492 599.5,896.5C 598.319,894.802 598.319,893.135 599.5,891.5C 601.283,893.023 601.949,895.023 601.5,897.5C 602.833,897.5 604.167,897.5 605.5,897.5C 611.523,897.669 617.523,898.169 623.5,899C 622.833,899.333 622.167,899.667 621.5,900C 623.5,900.333 625.5,900.667 627.5,901C 621.883,901.298 616.383,901.465 611,901.5C 609.899,899.606 608.566,898.939 607,899.5C 606.316,900.784 606.483,901.951 607.5,903C 613.53,903.252 619.53,903.752 625.5,904.5C 627.135,903.954 628.801,903.62 630.5,903.5C 630.389,904.117 630.056,904.617 629.5,905C 616.99,905 604.49,904.5 592,903.5C 583.622,905.344 575.122,906.011 566.5,905.5C 553.163,905.667 539.829,905.5 526.5,905C 525.756,903.961 524.756,903.461 523.5,903.5C 518.867,899.241 516.034,893.907 515,887.5C 514.5,863.502 514.333,839.502 514.5,815.5C 514.232,813.901 514.566,812.568 515.5,811.5C 515.232,813.099 515.566,814.432 516.5,815.5C 518.701,813.496 520.701,811.163 522.5,808.5C 523.736,807.643 525.069,806.977 526.5,806.5C 538.802,807.148 551.135,807.815 563.5,808.5C 564.641,809.425 564.641,810.259 563.5,811C 557.263,810.671 550.93,811.171 544.5,812.5C 555.48,813.499 566.48,813.832 577.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3593c4\",d:\"M 591.5,814.5 C 596.045,814.45 599.711,816.117 602.5,819.5C 598.706,818.018 595.039,816.351 591.5,814.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9eebfd\",d:\"M -0.5,815.5 C 2.67207,815.928 5.67207,816.095 8.5,816C 10.0774,818.957 9.74406,821.624 7.5,824C 8.42797,824.388 9.09464,825.055 9.5,826C 8.33008,827.587 7.33008,829.253 6.5,831C 10.7805,843.318 10.4472,855.485 5.5,867.5C 6.83333,867.5 8.16667,867.5 9.5,867.5C 9.5,868.5 9.5,869.5 9.5,870.5C 8.17793,870.33 7.01127,870.663 6,871.5C 5.33333,873.833 5.33333,876.167 6,878.5C 6.74117,879.641 7.57451,879.641 8.5,878.5C 9.66507,886.813 9.83174,895.147 9,903.5C 5.76646,909.552 7.59979,912.385 14.5,912C 14.9574,912.414 15.2907,912.914 15.5,913.5C 14.4149,916.773 14.2483,920.106 15,923.5C 16.3333,924.167 17.6667,924.833 19,925.5C 18.1822,928.831 18.3489,932.164 19.5,935.5C 18.1667,935.5 16.8333,935.5 15.5,935.5C 14.8413,938.455 14.5079,941.455 14.5,944.5C 19.5,945.5 21.5,943.5 20.5,938.5C 24.3268,938.387 27.8268,939.387 31,941.5C 30.4242,944.343 30.5909,947.177 31.5,950C 31.0946,950.945 30.428,951.612 29.5,952C 32.6883,953.316 36.0217,953.816 39.5,953.5C 39.2011,955.604 39.5344,957.604 40.5,959.5C 42.6779,962.177 45.0113,964.677 47.5,967C 44.7737,967.182 42.1071,967.682 39.5,968.5C 44.4194,969.393 49.0861,970.893 53.5,973C 52.5,974 51.5,975 50.5,976C 51,976.167 51.5,976.333 52,976.5C 54.1849,975.242 56.3516,975.242 58.5,976.5C 60.2581,975.872 61.7581,974.872 63,973.5C 63.9707,974.198 65.1374,974.198 66.5,973.5C 69.0635,973.737 69.0635,974.237 66.5,975C 68.6193,975.098 70.286,975.931 71.5,977.5C 76.8115,979.458 82.1449,981.458 87.5,983.5C 92.8075,982.808 98.1408,982.974 103.5,984C 124.831,984.5 146.164,984.667 167.5,984.5C 167.5,985.5 167.5,986.5 167.5,987.5C 170.167,987.5 172.833,987.5 175.5,987.5C 175.5,986.5 175.5,985.5 175.5,984.5C 184.856,984.721 194.189,984.388 203.5,983.5C 215.104,984.446 225.937,985.112 236,985.5C 236.689,984.643 237.522,983.977 238.5,983.5C 260.408,984.304 280.908,984.971 300,985.5C 301,984.833 302,984.167 303,983.5C 344.351,984.512 384.685,984.512 424,983.5C 429.5,983.667 435,983.833 440.5,984C 441.552,985.119 442.719,985.619 444,985.5C 450.085,984.688 456.252,984.188 462.5,984C 463.328,983.085 464.328,982.419 465.5,982C 464.584,981.722 463.918,981.222 463.5,980.5C 464.492,978.974 465.992,978.307 468,978.5C 471.828,979.041 475.661,979.541 479.5,980C 527.503,980.167 575.503,980.667 623.5,981.5C 623.808,982.308 624.308,982.975 625,983.5C 629,983.5 633,983.5 637,983.5C 637.903,982.299 639.069,981.465 640.5,981C 742.168,980.833 843.835,980.333 945.5,979.5C 955.498,977.825 965.498,977.491 975.5,978.5C 975.5,976.5 975.5,974.5 975.5,972.5C 979.769,972.657 982.269,970.657 983,966.5C 984.771,965.696 986.271,964.529 987.5,963C 988.449,962.383 989.282,962.549 990,963.5C 992.228,960.922 995.061,959.589 998.5,959.5C 998.351,958.448 998.517,957.448 999,956.5C 1001.55,955.527 1003.05,953.693 1003.5,951C 1002.72,949.23 1002.89,947.397 1004,945.5C 1005.63,948.066 1007.13,947.899 1008.5,945C 1007.17,944 1005.83,943 1004.5,942C 1005.07,940.795 1005.74,939.628 1006.5,938.5C 1007.24,939.991 1007.91,941.491 1008.5,943C 1010.76,943.236 1012.93,943.736 1015,944.5C 1015.5,946.81 1015.66,949.143 1015.5,951.5C 1014.45,951.351 1013.45,951.517 1012.5,952C 1013.13,954.343 1014.13,956.51 1015.5,958.5C 1014.27,960.321 1012.61,961.321 1010.5,961.5C 1010.5,962.833 1010.5,964.167 1010.5,965.5C 1011.68,965.281 1012.68,965.614 1013.5,966.5C 1012.17,969.833 1012.17,973.167 1013.5,976.5C 1012.59,977.328 1011.92,978.328 1011.5,979.5C 1014.46,982.388 1013.8,983.721 1009.5,983.5C 1009.1,990.212 1008.6,996.879 1008,1003.5C 1009.04,1001.3 1009.88,998.966 1010.5,996.5C 1012.4,997.797 1013.4,999.63 1013.5,1002C 1013.68,1004.3 1013.02,1004.8 1011.5,1003.5C 1008.94,1005.02 1008.94,1006.52 1011.5,1008C 1010.53,1013.07 1010.2,1018.24 1010.5,1023.5C 673.5,1023.5 336.5,1023.5 -0.5,1023.5C -0.5,954.167 -0.5,884.833 -0.5,815.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#27314a\",d:\"M 982.5,279.5 C 982.5,314.167 982.5,348.833 982.5,383.5C 981.009,386.186 980.343,389.186 980.5,392.5C 981.281,493.326 981.614,594.326 981.5,695.5C 979.802,708.332 979.635,721.332 981,734.5C 981.285,766.689 981.451,798.856 981.5,831C 981.333,836.167 981.167,841.333 981,846.5C 980.654,848.218 980.154,849.885 979.5,851.5C 980.303,859.451 980.803,867.451 981,875.5C 981.278,876.416 981.778,877.082 982.5,877.5C 982.5,877.833 982.5,878.167 982.5,878.5C 981.511,883.975 981.178,889.642 981.5,895.5C 980.5,895.5 979.5,895.5 978.5,895.5C 978.244,897.937 977.577,900.271 976.5,902.5C 977.783,907.479 977.783,912.479 976.5,917.5C 975.914,917.709 975.414,918.043 975,918.5C 974.667,914.5 974.333,910.5 974,906.5C 973.25,905.874 972.416,905.374 971.5,905C 972.833,904.333 972.833,903.667 971.5,903C 972.552,901.881 973.719,901.381 975,901.5C 975.333,899.5 975.667,897.5 976,895.5C 976.333,895.833 976.667,896.167 977,896.5C 977.328,882.826 977.828,869.16 978.5,855.5C 977.728,814.174 977.728,772.841 978.5,731.5C 976.777,714.316 976.777,696.983 978.5,679.5C 978.461,634.178 978.295,588.845 978,543.5C 977.782,540.574 977.282,537.74 976.5,535C 977.382,524.573 978.049,514.073 978.5,503.5C 977.773,484.174 977.273,464.841 977,445.5C 976.29,446.973 975.124,447.64 973.5,447.5C 973.5,445.833 973.5,444.167 973.5,442.5C 973.5,440.833 973.5,439.167 973.5,437.5C 973.435,437.062 973.601,436.728 974,436.5C 974.368,437.91 975.201,438.91 976.5,439.5C 977.188,433.948 977.854,428.448 978.5,423C 977.813,411.709 977.146,400.376 976.5,389C 977.884,379.23 978.551,369.396 978.5,359.5C 978.029,351.97 978.029,344.803 978.5,338C 977.427,336.687 976.76,335.187 976.5,333.5C 977.735,317.37 978.401,301.203 978.5,285C 977.828,259.995 977.828,235.495 978.5,211.5C 979.167,206.167 979.833,206.167 980.5,211.5C 979.93,221.82 979.596,232.153 979.5,242.5C 980.853,245.107 981.519,247.941 981.5,251C 980.645,260.499 980.978,269.999 982.5,279.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3636c\",d:\"M 283.5,814.5 C 287.266,814.715 290.6,816.049 293.5,818.5C 295.19,821.024 297.357,823.024 300,824.5C 301.926,826.469 303.092,828.802 303.5,831.5C 300.509,827.21 296.842,823.543 292.5,820.5C 289.5,818.5 286.5,816.5 283.5,814.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#430a24\",d:\"M 279.5,814.5 C 280.833,814.5 282.167,814.5 283.5,814.5C 286.5,816.5 289.5,818.5 292.5,820.5C 290.784,820.371 289.117,820.038 287.5,819.5C 285.137,817.32 282.47,815.653 279.5,814.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a8ecf4\",d:\"M 287.5,819.5 C 288.833,820.833 290.167,822.167 291.5,823.5C 288.618,823.392 286.285,822.226 284.5,820C 275.614,818.339 267.281,819.673 259.5,824C 258.29,825.039 257.29,826.206 256.5,827.5C 254.113,829.913 251.946,832.58 250,835.5C 248.155,840.524 246.655,845.524 245.5,850.5C 245.5,849.833 245.167,849.5 244.5,849.5C 244.034,829.139 253.867,818.139 274,816.5C 278.747,816.461 283.247,817.461 287.5,819.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c1b22\",d:\"M 496.5,807.5 C 498.411,807.574 499.578,808.574 500,810.5C 500.5,836.831 500.667,863.165 500.5,889.5C 500.969,894.773 499.303,899.107 495.5,902.5C 496.911,897.94 498.078,893.273 499,888.5C 499.667,863.167 499.667,837.833 499,812.5C 497.906,810.922 497.072,809.255 496.5,807.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#95a9bf\",d:\"M 431.5,816.5 C 431.833,816.5 432.167,816.5 432.5,816.5C 432.5,822.833 432.5,829.167 432.5,835.5C 430.167,835.5 427.833,835.5 425.5,835.5C 425.178,829.642 425.511,823.975 426.5,818.5C 426.5,823.833 426.5,829.167 426.5,834.5C 428.167,834.5 429.833,834.5 431.5,834.5C 431.5,828.5 431.5,822.5 431.5,816.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42dcf6\",d:\"M 291.5,823.5 C 292.5,823.833 293.167,824.5 293.5,825.5C 293.082,826.222 292.416,826.722 291.5,827C 293.327,827.899 294.66,829.233 295.5,831C 294.277,833.057 293.277,835.223 292.5,837.5C 291.708,835.535 291.041,833.535 290.5,831.5C 289.998,830.479 289.332,830.312 288.5,831C 289.252,831.671 289.586,832.504 289.5,833.5C 283.347,832.424 278.014,829.757 273.5,825.5C 272.287,825.747 271.62,826.414 271.5,827.5C 266.451,830.029 261.451,830.029 256.5,827.5C 257.29,826.206 258.29,825.039 259.5,824C 267.281,819.673 275.614,818.339 284.5,820C 286.285,822.226 288.618,823.392 291.5,823.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e96c6d\",d:\"M 339.5,812.5 C 340.117,812.611 340.617,812.944 341,813.5C 341.5,838.498 341.667,863.498 341.5,888.5C 341.963,894.563 339.963,899.563 335.5,903.5C 337.383,899.723 338.716,895.723 339.5,891.5C 340.819,865.294 340.819,838.961 339.5,812.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#321b03\",d:\"M 181.5,803.5 C 184.527,805.529 186.86,808.196 188.5,811.5C 188.5,812.167 188.5,812.833 188.5,813.5C 188.831,837.006 188.498,860.339 187.5,883.5C 187.667,860.831 187.5,838.164 187,815.5C 186.178,813.212 185.511,810.878 185,808.5C 183.331,807.154 182.164,805.487 181.5,803.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37101f\",d:\"M 200.5,813.5 C 200.833,813.5 201.167,813.5 201.5,813.5C 201.333,838.169 201.5,862.836 202,887.5C 202.399,892.555 204.232,896.889 207.5,900.5C 207.963,903.255 209.63,904.922 212.5,905.5C 212.833,906.167 213.167,906.833 213.5,907.5C 210.311,906.487 207.477,904.82 205,902.5C 202.587,898.518 201.253,894.184 201,889.5C 200.5,864.169 200.333,838.836 200.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#261a29\",d:\"M 279.5,814.5 C 282.47,815.653 285.137,817.32 287.5,819.5C 283.247,817.461 278.747,816.461 274,816.5C 253.867,818.139 244.034,829.139 244.5,849.5C 245.293,853.88 246.293,858.213 247.5,862.5C 240.386,849.906 241.053,837.572 249.5,825.5C 257.552,816.263 267.552,812.596 279.5,814.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eb6d71\",d:\"M 431.5,813.5 C 433.262,813.357 434.929,813.691 436.5,814.5C 438.125,820.043 438.792,825.71 438.5,831.5C 441.956,831.596 445.123,832.596 448,834.5C 448.589,837.715 448.089,840.715 446.5,843.5C 446.323,845.968 447.323,847.635 449.5,848.5C 448.167,848.5 446.833,848.5 445.5,848.5C 444.559,843.93 444.226,839.263 444.5,834.5C 441.833,834.5 439.167,834.5 436.5,834.5C 436.666,828.824 436.499,823.157 436,817.5C 434.508,816.08 433.008,814.746 431.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcbf0a\",d:\"M 609.5,837.5 C 610.117,837.611 610.617,837.944 611,838.5C 611.499,842.821 611.666,847.154 611.5,851.5C 609.984,856.653 607.65,861.319 604.5,865.5C 602.251,866.08 600.585,867.413 599.5,869.5C 598.167,869.833 596.833,870.167 595.5,870.5C 592.306,871.758 588.973,872.424 585.5,872.5C 585.867,867.508 587.2,862.841 589.5,858.5C 590.825,857.047 591.658,857.381 592,859.5C 592.543,854.757 592.543,850.09 592,845.5C 594.58,843.747 597.413,842.747 600.5,842.5C 600.898,839.256 602.398,836.589 605,834.5C 605.227,837.06 606.56,838.726 609,839.5C 609.464,838.906 609.631,838.239 609.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38d4fa\",d:\"M 642.5,800.5 C 647.821,802.633 651.487,806.299 653.5,811.5C 654.663,837.33 654.83,863.33 654,889.5C 653.434,891.723 652.6,893.723 651.5,895.5C 648.499,898.493 645.165,901.159 641.5,903.5C 637.917,902.917 634.25,902.917 630.5,903.5C 628.801,903.62 627.135,903.954 625.5,904.5C 619.53,903.752 613.53,903.252 607.5,903C 606.483,901.951 606.316,900.784 607,899.5C 608.566,898.939 609.899,899.606 611,901.5C 616.383,901.465 621.883,901.298 627.5,901C 625.5,900.667 623.5,900.333 621.5,900C 622.167,899.667 622.833,899.333 623.5,899C 617.523,898.169 611.523,897.669 605.5,897.5C 604.992,894.611 604.325,891.778 603.5,889C 601.22,888.767 599.22,887.934 597.5,886.5C 596.201,887.09 595.368,888.09 595,889.5C 594.626,888.584 594.126,887.75 593.5,887C 591.19,886.503 588.857,886.337 586.5,886.5C 590.102,885.684 593.602,884.351 597,882.5C 598.092,883.296 599.259,883.963 600.5,884.5C 603.449,883.698 606.449,883.364 609.5,883.5C 609.5,884.5 609.5,885.5 609.5,886.5C 607.11,886.685 606.11,888.018 606.5,890.5C 606.486,892.593 607.152,894.426 608.5,896C 615.173,897.503 621.84,897.669 628.5,896.5C 628.833,896 629.167,895.5 629.5,895C 627.085,892.026 627.085,889.193 629.5,886.5C 630.833,886.5 632.167,886.5 633.5,886.5C 633.214,888.277 632.547,889.944 631.5,891.5C 631.868,892.91 632.701,893.91 634,894.5C 636.685,891.81 639.018,888.81 641,885.5C 642.913,887.956 644.579,887.622 646,884.5C 647,887.167 648,887.167 649,884.5C 649.988,861.685 649.654,839.019 648,816.5C 646.945,837.08 646.779,857.746 647.5,878.5C 646.167,878.5 644.833,878.5 643.5,878.5C 643.333,857.831 643.5,837.164 644,816.5C 645.202,814.323 645.702,811.989 645.5,809.5C 644.167,809.5 642.833,809.5 641.5,809.5C 641.286,811.144 641.62,812.644 642.5,814C 641.5,816 640.5,816 639.5,814C 623.833,813.667 608.167,813.333 592.5,813C 592.167,812.667 591.833,812.333 591.5,812C 592.5,811.667 593.5,811.333 594.5,811C 592.782,810.654 591.115,810.154 589.5,809.5C 585.394,810.835 581.394,812.168 577.5,813.5C 566.48,813.832 555.48,813.499 544.5,812.5C 550.93,811.171 557.263,810.671 563.5,811C 564.641,810.259 564.641,809.425 563.5,808.5C 551.135,807.815 538.802,807.148 526.5,806.5C 525.069,806.977 523.736,807.643 522.5,808.5C 520.701,811.163 518.701,813.496 516.5,815.5C 518.507,809.659 522.173,805.159 527.5,802C 566.002,801.833 604.336,801.333 642.5,800.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41d0f9\",d:\"M 293.5,825.5 C 296.573,827.569 298.906,830.236 300.5,833.5C 301.457,837.094 302.124,840.76 302.5,844.5C 302.164,847.841 301.831,851.175 301.5,854.5C 299.551,858.285 297.384,861.952 295,865.5C 291.261,868.091 287.427,870.424 283.5,872.5C 282.833,872.5 282.167,872.5 281.5,872.5C 282.958,870.989 284.791,869.989 287,869.5C 287.49,868.207 287.657,866.873 287.5,865.5C 285.821,865.715 284.821,865.048 284.5,863.5C 286.167,863.5 287.833,863.5 289.5,863.5C 289.5,853.5 289.5,843.5 289.5,833.5C 289.586,832.504 289.252,831.671 288.5,831C 289.332,830.312 289.998,830.479 290.5,831.5C 291.041,833.535 291.708,835.535 292.5,837.5C 293.277,835.223 294.277,833.057 295.5,831C 294.66,829.233 293.327,827.899 291.5,827C 292.416,826.722 293.082,826.222 293.5,825.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9c40f\",d:\"M 579.5,819.5 C 585.565,819.261 591.565,819.761 597.5,821C 601.334,824.002 605,827.169 608.5,830.5C 609.219,832.764 609.552,835.097 609.5,837.5C 609.631,838.239 609.464,838.906 609,839.5C 606.56,838.726 605.227,837.06 605,834.5C 602.398,836.589 600.898,839.256 600.5,842.5C 597.413,842.747 594.58,843.747 592,845.5C 592.543,850.09 592.543,854.757 592,859.5C 591.658,857.381 590.825,857.047 589.5,858.5C 587.2,862.841 585.867,867.508 585.5,872.5C 580.681,872.648 576.015,871.982 571.5,870.5C 569.315,870.296 567.315,869.63 565.5,868.5C 561.905,864.772 559.238,860.439 557.5,855.5C 559.159,849.937 559.992,844.27 560,838.5C 561.963,836.239 563.13,833.572 563.5,830.5C 566.188,828.479 568.521,826.146 570.5,823.5C 572.584,820.294 575.584,818.961 579.5,819.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2e8ac5\",d:\"M 300.5,833.5 C 302.942,836.465 303.942,839.965 303.5,844C 303.621,847.782 302.954,851.282 301.5,854.5C 301.831,851.175 302.164,847.841 302.5,844.5C 302.124,840.76 301.457,837.094 300.5,833.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#062758\",d:\"M 642.5,908.5 C 641.5,908.5 640.5,908.5 639.5,908.5C 639.5,908.167 639.5,907.833 639.5,907.5C 645.806,905.703 649.806,901.703 651.5,895.5C 652.6,893.723 653.434,891.723 654,889.5C 654.83,863.33 654.663,837.33 653.5,811.5C 653.66,807.764 654.493,807.764 656,811.5C 656.667,837.833 656.667,864.167 656,890.5C 654.318,898.673 649.818,904.673 642.5,908.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d09d1d\",d:\"M 180.5,803.5 C 180.833,803.5 181.167,803.5 181.5,803.5C 182.164,805.487 183.331,807.154 185,808.5C 185.511,810.878 186.178,813.212 187,815.5C 187.5,838.164 187.667,860.831 187.5,883.5C 187.326,885.861 186.993,888.194 186.5,890.5C 185.463,891.93 184.796,893.597 184.5,895.5C 184.167,895.5 183.833,895.5 183.5,895.5C 185.537,868.897 186.037,842.23 185,815.5C 185.316,811.863 183.982,809.196 181,807.5C 180.51,806.207 180.343,804.873 180.5,803.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#292c4d\",d:\"M 351.5,810.5 C 352.496,810.414 353.329,810.748 354,811.5C 355.458,839.486 355.791,867.486 355,895.5C 352.745,900.371 351.578,900.371 351.5,895.5C 350.5,895.5 349.5,895.5 348.5,895.5C 348.541,901.752 347.208,902.085 344.5,896.5C 346.829,895.229 347.995,893.229 348,890.5C 348.875,893.215 350.708,894.548 353.5,894.5C 353.5,891.5 353.5,888.5 353.5,885.5C 351.173,885.753 349.173,885.086 347.5,883.5C 346.596,874.017 345.929,864.517 345.5,855C 346.343,841.847 346.677,828.68 346.5,815.5C 347.5,815.5 348.5,815.5 349.5,815.5C 349.365,813.446 350.032,811.779 351.5,810.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cffcfe\",d:\"M 289.5,833.5 C 289.5,843.5 289.5,853.5 289.5,863.5C 287.833,863.5 286.167,863.5 284.5,863.5C 276.167,863.5 267.833,863.5 259.5,863.5C 259.5,852.833 259.5,842.167 259.5,831.5C 263.226,831.823 266.893,831.489 270.5,830.5C 271.127,829.583 271.461,828.583 271.5,827.5C 271.62,826.414 272.287,825.747 273.5,825.5C 278.014,829.757 283.347,832.424 289.5,833.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#31cff9\",d:\"M 284.5,837.5 C 284.296,840.518 283.963,843.518 283.5,846.5C 281.654,846.222 280.32,846.889 279.5,848.5C 283.008,851.317 284.341,854.983 283.5,859.5C 282.167,859.5 280.833,859.5 279.5,859.5C 279.389,858.883 279.056,858.383 278.5,858C 275.183,857.502 271.85,857.335 268.5,857.5C 268.244,855.088 269.244,853.421 271.5,852.5C 270.311,851.571 268.978,851.238 267.5,851.5C 267.5,850.167 267.5,848.833 267.5,847.5C 266.167,847.5 264.833,847.5 263.5,847.5C 263.942,843.846 264.276,840.179 264.5,836.5C 267.038,836.507 269.538,836.841 272,837.5C 273.812,837.507 275.312,836.84 276.5,835.5C 277.528,837.44 277.528,839.44 276.5,841.5C 276.453,843 277.119,844 278.5,844.5C 279.308,842.577 279.808,840.577 280,838.5C 281.226,836.452 282.726,836.119 284.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#993e52\",d:\"M 305.5,840.5 C 306.643,843.976 306.81,847.642 306,851.5C 305.507,854.675 304.34,857.341 302.5,859.5C 304.877,853.403 305.877,847.07 305.5,840.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d1f29\",d:\"M 431.5,813.5 C 433.008,814.746 434.508,816.08 436,817.5C 436.499,823.157 436.666,828.824 436.5,834.5C 435.036,828.539 433.703,822.539 432.5,816.5C 432.167,816.5 431.833,816.5 431.5,816.5C 429.176,815.167 427.509,815.834 426.5,818.5C 425.511,823.975 425.178,829.642 425.5,835.5C 425.5,835.833 425.5,836.167 425.5,836.5C 425.5,836.833 425.5,837.167 425.5,837.5C 422.5,837.5 419.5,837.5 416.5,837.5C 416.774,842.263 416.441,846.93 415.5,851.5C 413.565,852.15 411.565,852.483 409.5,852.5C 408.658,857.787 408.324,863.12 408.5,868.5C 408.263,869.791 408.596,870.791 409.5,871.5C 409.5,871.833 409.5,872.167 409.5,872.5C 408.833,872.5 408.167,872.5 407.5,872.5C 407.5,871.833 407.167,871.5 406.5,871.5C 406.212,864.437 406.712,857.437 408,850.5C 409.699,849.594 411.533,849.261 413.5,849.5C 414.324,845.688 414.824,841.688 415,837.5C 416.622,836.901 418.122,836.234 419.5,835.5C 420.5,835.5 421.5,835.5 422.5,835.5C 422.334,829.824 422.501,824.157 423,818.5C 424.484,814.512 427.317,812.846 431.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfebf3\",d:\"M 431.5,816.5 C 431.5,822.5 431.5,828.5 431.5,834.5C 429.833,834.5 428.167,834.5 426.5,834.5C 426.5,829.167 426.5,823.833 426.5,818.5C 427.509,815.834 429.176,815.167 431.5,816.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a2e3e\",d:\"M 577.5,813.5 C 582.214,813.353 586.881,813.686 591.5,814.5C 595.039,816.351 598.706,818.018 602.5,819.5C 615.066,830.846 618.066,844.513 611.5,860.5C 609.445,862.555 607.112,864.221 604.5,865.5C 607.65,861.319 609.984,856.653 611.5,851.5C 612.648,847.019 612.815,842.352 612,837.5C 611.478,834.719 610.311,832.385 608.5,830.5C 605.381,824.716 600.715,820.716 594.5,818.5C 577.018,813.319 564.184,818.986 556,835.5C 554.39,840.61 554.223,845.61 555.5,850.5C 555.5,851.5 555.5,852.5 555.5,853.5C 555.287,856.451 555.954,859.118 557.5,861.5C 556.542,861.047 555.708,860.381 555,859.5C 548.353,837.129 555.853,821.795 577.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8f3a9\",d:\"M 585.5,835.5 C 584.325,835.281 583.325,835.614 582.5,836.5C 583.527,838.024 585.027,838.691 587,838.5C 588.167,838.167 589.333,837.833 590.5,837.5C 589.051,836.828 587.718,836.161 586.5,835.5C 588.167,835.5 589.833,835.5 591.5,835.5C 591.5,836.833 591.5,838.167 591.5,839.5C 588.167,839.5 584.833,839.5 581.5,839.5C 581.343,840.873 581.51,842.207 582,843.5C 585,846.167 588,848.833 591,851.5C 591.6,854.095 591.1,856.429 589.5,858.5C 586.206,861.658 582.539,862.158 578.5,860C 577.253,858.506 577.253,857.006 578.5,855.5C 581.023,857.408 583.69,857.741 586.5,856.5C 586.987,855.554 587.32,854.554 587.5,853.5C 584.862,851.038 582.028,848.704 579,846.5C 576.051,841.099 577.218,837.099 582.5,834.5C 583.429,833.311 583.762,831.978 583.5,830.5C 584.5,830.5 585.5,830.5 586.5,830.5C 586.371,832.216 586.038,833.883 585.5,835.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a08033\",d:\"M 608.5,830.5 C 610.311,832.385 611.478,834.719 612,837.5C 612.815,842.352 612.648,847.019 611.5,851.5C 611.666,847.154 611.499,842.821 611,838.5C 610.617,837.944 610.117,837.611 609.5,837.5C 609.552,835.097 609.219,832.764 608.5,830.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbf8cb\",d:\"M 585.5,835.5 C 585.833,835.5 586.167,835.5 586.5,835.5C 587.718,836.161 589.051,836.828 590.5,837.5C 589.333,837.833 588.167,838.167 587,838.5C 585.027,838.691 583.527,838.024 582.5,836.5C 583.325,835.614 584.325,835.281 585.5,835.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecc544\",d:\"M 570.5,823.5 C 568.521,826.146 566.188,828.479 563.5,830.5C 563.13,833.572 561.963,836.239 560,838.5C 559.992,844.27 559.159,849.937 557.5,855.5C 556.833,854.833 556.167,854.167 555.5,853.5C 555.5,852.5 555.5,851.5 555.5,850.5C 555.897,844.295 557.397,838.295 560,832.5C 563.072,828.922 566.572,825.922 570.5,823.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0e29e\",d:\"M 594.5,818.5 C 600.715,820.716 605.381,824.716 608.5,830.5C 605,827.169 601.334,824.002 597.5,821C 591.565,819.761 585.565,819.261 579.5,819.5C 581.117,818.028 583.117,817.361 585.5,817.5C 588.492,817.966 591.492,818.299 594.5,818.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e6e2bc\",d:\"M 594.5,818.5 C 591.492,818.299 588.492,817.966 585.5,817.5C 583.117,817.361 581.117,818.028 579.5,819.5C 575.584,818.961 572.584,820.294 570.5,823.5C 566.572,825.922 563.072,828.922 560,832.5C 557.397,838.295 555.897,844.295 555.5,850.5C 554.223,845.61 554.39,840.61 556,835.5C 564.184,818.986 577.018,813.319 594.5,818.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fabe05\",d:\"M 179.5,803.5 C 179.833,803.5 180.167,803.5 180.5,803.5C 180.343,804.873 180.51,806.207 181,807.5C 183.982,809.196 185.316,811.863 185,815.5C 186.037,842.23 185.537,868.897 183.5,895.5C 181.955,896.23 181.122,897.563 181,899.5C 180.667,899.167 180.333,898.833 180,898.5C 178.385,899.386 176.885,900.386 175.5,901.5C 175.167,902.5 174.5,903.167 173.5,903.5C 149.184,903.201 124.851,903.034 100.5,903C 99.5,902.667 98.5,902.333 97.5,902C 101.167,901.667 104.833,901.333 108.5,901C 105.915,899.872 103.248,899.039 100.5,898.5C 97.6379,899.597 94.8045,899.597 92,898.5C 89.536,899.161 87.036,899.661 84.5,900C 85.4506,900.718 85.6172,901.551 85,902.5C 83.2811,903.869 81.4478,904.869 79.5,905.5C 73.1667,905.5 66.8333,905.5 60.5,905.5C 56.2645,904.772 52.9312,902.605 50.5,899C 49.0997,897.562 47.433,896.729 45.5,896.5C 45.7148,894.821 45.0481,893.821 43.5,893.5C 43.5,892.5 43.5,891.5 43.5,890.5C 43.3334,865.831 43.5,841.164 44,816.5C 45,815.833 46,815.167 47,814.5C 47.8719,811.144 49.3719,808.144 51.5,805.5C 54.4067,805.425 57.0734,804.591 59.5,803C 99.5291,802.184 139.529,802.351 179.5,803.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b1a0e\",d:\"M 67.5,813.5 C 98.8333,813.5 130.167,813.5 161.5,813.5C 161.333,826.171 161.5,838.838 162,851.5C 165.364,853.255 168.198,855.588 170.5,858.5C 170.784,860.415 170.451,862.081 169.5,863.5C 169.975,860.687 168.975,858.687 166.5,857.5C 165.469,856.645 164.303,855.978 163,855.5C 161.97,855.836 161.47,856.503 161.5,857.5C 160.833,858.167 160.167,858.833 159.5,859.5C 159.5,845.833 159.5,832.167 159.5,818.5C 159.672,817.508 159.338,816.842 158.5,816.5C 143.837,815.833 129.004,815.5 114,815.5C 98.818,815.501 83.9846,816.167 69.5,817.5C 69.5,817.833 69.5,818.167 69.5,818.5C 69.5,819.167 69.5,819.833 69.5,820.5C 69.5,833.167 69.5,845.833 69.5,858.5C 68.5489,857.081 68.2155,855.415 68.5,853.5C 67.209,853.263 66.209,853.596 65.5,854.5C 64.5,854.833 63.8333,855.5 63.5,856.5C 61.5891,856.574 60.4224,857.574 60,859.5C 59.3333,861.5 59.3333,863.5 60,865.5C 60.3826,866.056 60.8826,866.389 61.5,866.5C 61.3284,867.492 61.6618,868.158 62.5,868.5C 76.8495,869.229 91.1829,870.229 105.5,871.5C 105.158,872.338 104.492,872.672 103.5,872.5C 101.703,872.935 99.7033,872.935 97.5,872.5C 96.8333,872.167 96.1667,871.833 95.5,871.5C 84.1667,871.5 72.8333,871.5 61.5,871.5C 59.8639,870.251 58.6972,868.584 58,866.5C 57.502,863.518 57.3354,860.518 57.5,857.5C 60.03,854.466 63.1967,852.466 67,851.5C 67.4999,838.838 67.6666,826.171 67.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c89628\",d:\"M 67.5,813.5 C 67.6666,826.171 67.4999,838.838 67,851.5C 63.1967,852.466 60.03,854.466 57.5,857.5C 57.558,852.44 60.2246,850.107 65.5,850.5C 65.8215,838.586 65.4882,826.753 64.5,815C 65.2438,813.961 66.2438,813.461 67.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fac304\",d:\"M 158.5,819.5 C 158.5,820.167 158.5,820.833 158.5,821.5C 157.506,831.987 157.172,842.654 157.5,853.5C 156.883,853.389 156.383,853.056 156,852.5C 155.181,844.847 154.514,837.18 154,829.5C 152.983,826.972 151.816,826.972 150.5,829.5C 149.575,828.359 148.741,828.359 148,829.5C 147.12,836.437 147.62,843.27 149.5,850C 149.585,853.801 148.252,854.468 145.5,852C 146.821,850.455 146.488,849.289 144.5,848.5C 139.22,849.618 133.887,849.784 128.5,849C 127.567,846.152 126.067,845.986 124,848.5C 123.289,850.899 123.456,853.232 124.5,855.5C 123.5,855.833 122.5,856.167 121.5,856.5C 119.681,856.658 118.348,855.991 117.5,854.5C 113.878,853.675 110.211,853.175 106.5,853C 105.128,851.758 104.128,850.258 103.5,848.5C 104.233,847.913 105.233,847.913 106.5,848.5C 106.5,849.5 106.5,850.5 106.5,851.5C 111.414,852.016 116.414,851.849 121.5,851C 122.38,849.644 122.714,848.144 122.5,846.5C 124.308,846.509 125.975,846.009 127.5,845C 127.444,841.306 127.277,837.473 127,833.5C 126.722,832.584 126.222,831.918 125.5,831.5C 124.833,831.5 124.5,831.167 124.5,830.5C 125.682,828.439 125.015,826.939 122.5,826C 118.311,825.188 114.311,825.355 110.5,826.5C 110.5,827.167 110.167,827.5 109.5,827.5C 108.167,827.5 106.833,827.5 105.5,827.5C 105.631,826.761 105.464,826.094 105,825.5C 103.372,826.01 101.539,826.01 99.5,825.5C 95.822,826.504 92.1554,827.504 88.5,828.5C 87.7702,829.934 86.7702,831.1 85.5,832C 87.476,832.188 89.476,832.021 91.5,831.5C 92.9945,831.709 94.1612,832.376 95,833.5C 96.2036,832.529 96.7036,831.529 96.5,830.5C 97.9488,833.371 99.6154,836.205 101.5,839C 100.667,839.833 99.8333,840.667 99,841.5C 98.0311,839.266 96.6978,837.266 95,835.5C 93.228,836.99 93.0613,838.657 94.5,840.5C 92.3921,841.944 90.0588,842.61 87.5,842.5C 87.5,843.5 87.5,844.5 87.5,845.5C 90.7973,845.329 91.1306,845.995 88.5,847.5C 85.1667,846.167 81.8333,846.167 78.5,847.5C 77.8333,844.833 77.1667,842.167 76.5,839.5C 74.5204,843.053 73.8537,846.719 74.5,850.5C 76.0709,849.691 77.7376,849.357 79.5,849.5C 79.67,850.822 79.3366,851.989 78.5,853C 76.1902,853.497 73.8568,853.663 71.5,853.5C 70.5056,843.013 70.1722,832.346 70.5,821.5C 71.4734,821.013 72.4734,820.513 73.5,820C 101.831,819.5 130.165,819.333 158.5,819.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7dd78\",d:\"M 69.5,818.5 C 99.1667,818.5 128.833,818.5 158.5,818.5C 158.5,818.833 158.5,819.167 158.5,819.5C 130.165,819.333 101.831,819.5 73.5,820C 72.4734,820.513 71.4734,821.013 70.5,821.5C 70.5,820.833 70.1667,820.5 69.5,820.5C 69.5,819.833 69.5,819.167 69.5,818.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef6ce\",d:\"M 158.5,816.5 C 159.338,816.842 159.672,817.508 159.5,818.5C 159.167,818.5 158.833,818.5 158.5,818.5C 128.833,818.5 99.1667,818.5 69.5,818.5C 69.5,818.167 69.5,817.833 69.5,817.5C 99.093,816.508 128.76,816.175 158.5,816.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b5b0a6\",d:\"M 158.5,816.5 C 128.76,816.175 99.093,816.508 69.5,817.5C 83.9846,816.167 98.818,815.501 114,815.5C 129.004,815.5 143.837,815.833 158.5,816.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#331720\",d:\"M 334.5,801.5 C 336.09,801.628 337.423,802.295 338.5,803.5C 340.529,806.029 342.362,808.696 344,811.5C 344.83,837.003 344.663,862.337 343.5,887.5C 343.831,862.328 343.498,837.328 342.5,812.5C 340.101,808.729 337.434,805.062 334.5,801.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#72540e\",d:\"M 42.5,814.5 C 42.5,814.833 42.5,815.167 42.5,815.5C 42.169,840.672 42.5023,865.672 43.5,890.5C 43.5,891.5 43.5,892.5 43.5,893.5C 43.5,893.833 43.5,894.167 43.5,894.5C 42.8333,893.5 42.1667,892.5 41.5,891.5C 41.1689,865.661 41.5022,839.995 42.5,814.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7be8f1\",d:\"M 285.5,835.5 C 286.656,843.323 286.823,851.323 286,859.5C 285.023,860.774 284.189,860.774 283.5,859.5C 284.341,854.983 283.008,851.317 279.5,848.5C 280.32,846.889 281.654,846.222 283.5,846.5C 283.963,843.518 284.296,840.518 284.5,837.5C 285.338,837.158 285.672,836.492 285.5,835.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#808bb4\",d:\"M 65.5,854.5 C 67.7446,855.828 68.0779,857.661 66.5,860C 92.3366,860.168 118.003,860.668 143.5,861.5C 120.167,861.5 96.8333,861.5 73.5,861.5C 70.8333,861.5 68.1667,861.5 65.5,861.5C 65.9227,859.219 65.256,857.552 63.5,856.5C 63.8333,855.5 64.5,854.833 65.5,854.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48d0e9\",d:\"M 285.5,835.5 C 285.672,836.492 285.338,837.158 284.5,837.5C 282.726,836.119 281.226,836.452 280,838.5C 279.808,840.577 279.308,842.577 278.5,844.5C 277.119,844 276.453,843 276.5,841.5C 277.528,839.44 277.528,837.44 276.5,835.5C 275.312,836.84 273.812,837.507 272,837.5C 269.538,836.841 267.038,836.507 264.5,836.5C 264.276,840.179 263.942,843.846 263.5,847.5C 264.833,847.5 266.167,847.5 267.5,847.5C 267.5,848.833 267.5,850.167 267.5,851.5C 268.978,851.238 270.311,851.571 271.5,852.5C 269.244,853.421 268.244,855.088 268.5,857.5C 271.85,857.335 275.183,857.502 278.5,858C 279.056,858.383 279.389,858.883 279.5,859.5C 273.833,859.5 268.167,859.5 262.5,859.5C 262.34,857.801 262.506,856.134 263,854.5C 264.353,853.315 265.52,851.981 266.5,850.5C 265.311,849.571 263.978,849.238 262.5,849.5C 262.5,844.5 262.5,839.5 262.5,834.5C 266.167,834.5 269.833,834.5 273.5,834.5C 273.5,833.5 273.5,832.5 273.5,831.5C 277.264,833.195 281.264,834.528 285.5,835.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9982f\",d:\"M 69.5,820.5 C 70.1667,820.5 70.5,820.833 70.5,821.5C 70.1722,832.346 70.5056,843.013 71.5,853.5C 71.5,854.833 71.5,856.167 71.5,857.5C 100.167,857.5 128.833,857.5 157.5,857.5C 157.5,856.167 157.5,854.833 157.5,853.5C 157.172,842.654 157.506,831.987 158.5,821.5C 158.5,833.833 158.5,846.167 158.5,858.5C 129.167,858.5 99.8333,858.5 70.5,858.5C 70.1667,858.5 69.8333,858.5 69.5,858.5C 69.5,845.833 69.5,833.167 69.5,820.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcbd06\",d:\"M 105.5,827.5 C 103.338,832.434 103.005,837.434 104.5,842.5C 104.557,843.609 104.89,844.609 105.5,845.5C 105.557,846.609 105.89,847.609 106.5,848.5C 105.233,847.913 104.233,847.913 103.5,848.5C 104.128,850.258 105.128,851.758 106.5,853C 110.211,853.175 113.878,853.675 117.5,854.5C 118.348,855.991 119.681,856.658 121.5,856.5C 122.5,856.167 123.5,855.833 124.5,855.5C 123.456,853.232 123.289,850.899 124,848.5C 126.067,845.986 127.567,846.152 128.5,849C 133.887,849.784 139.22,849.618 144.5,848.5C 146.488,849.289 146.821,850.455 145.5,852C 148.252,854.468 149.585,853.801 149.5,850C 147.62,843.27 147.12,836.437 148,829.5C 148.741,828.359 149.575,828.359 150.5,829.5C 151.816,826.972 152.983,826.972 154,829.5C 154.514,837.18 155.181,844.847 156,852.5C 156.383,853.056 156.883,853.389 157.5,853.5C 157.5,854.833 157.5,856.167 157.5,857.5C 128.833,857.5 100.167,857.5 71.5,857.5C 71.5,856.167 71.5,854.833 71.5,853.5C 73.8568,853.663 76.1902,853.497 78.5,853C 79.3366,851.989 79.67,850.822 79.5,849.5C 77.7376,849.357 76.0709,849.691 74.5,850.5C 73.8537,846.719 74.5204,843.053 76.5,839.5C 77.1667,842.167 77.8333,844.833 78.5,847.5C 81.8333,846.167 85.1667,846.167 88.5,847.5C 91.1306,845.995 90.7973,845.329 87.5,845.5C 87.5,844.5 87.5,843.5 87.5,842.5C 90.0588,842.61 92.3921,841.944 94.5,840.5C 93.0613,838.657 93.228,836.99 95,835.5C 96.6978,837.266 98.0311,839.266 99,841.5C 99.8333,840.667 100.667,839.833 101.5,839C 99.6154,836.205 97.9488,833.371 96.5,830.5C 96.7036,831.529 96.2036,832.529 95,833.5C 94.1612,832.376 92.9945,831.709 91.5,831.5C 89.476,832.021 87.476,832.188 85.5,832C 86.7702,831.1 87.7702,829.934 88.5,828.5C 92.1554,827.504 95.822,826.504 99.5,825.5C 101.539,826.01 103.372,826.01 105,825.5C 105.464,826.094 105.631,826.761 105.5,827.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dcb428\",d:\"M 125.5,831.5 C 126.222,831.918 126.722,832.584 127,833.5C 127.277,837.473 127.444,841.306 127.5,845C 125.975,846.009 124.308,846.509 122.5,846.5C 122.714,848.144 122.38,849.644 121.5,851C 116.414,851.849 111.414,852.016 106.5,851.5C 106.5,850.5 106.5,849.5 106.5,848.5C 105.89,847.609 105.557,846.609 105.5,845.5C 107.289,846.877 109.289,847.877 111.5,848.5C 111.5,848.833 111.5,849.167 111.5,849.5C 113.288,850.622 115.288,850.789 117.5,850C 120,847.5 122.5,845 125,842.5C 125.499,838.848 125.665,835.182 125.5,831.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a5b3cd\",d:\"M 107.5,838.5 C 108.721,839.028 109.887,839.695 111,840.5C 112.145,843.432 112.978,846.432 113.5,849.5C 112.833,849.5 112.167,849.5 111.5,849.5C 111.5,849.167 111.5,848.833 111.5,848.5C 111.672,847.508 111.338,846.842 110.5,846.5C 110.727,844.067 109.727,842.401 107.5,841.5C 107.5,840.5 107.5,839.5 107.5,838.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b1550\",d:\"M 107.5,841.5 C 109.727,842.401 110.727,844.067 110.5,846.5C 107.179,845.902 106.179,844.235 107.5,841.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6a552f\",d:\"M 105.5,837.5 C 105.833,837.5 106.167,837.5 106.5,837.5C 107.167,837.5 107.5,837.833 107.5,838.5C 107.5,839.5 107.5,840.5 107.5,841.5C 106.179,844.235 107.179,845.902 110.5,846.5C 111.338,846.842 111.672,847.508 111.5,848.5C 109.289,847.877 107.289,846.877 105.5,845.5C 104.89,844.609 104.557,843.609 104.5,842.5C 105.301,840.958 105.634,839.292 105.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e7f2e2\",d:\"M 120.5,839.5 C 119.167,841.833 117.833,844.167 116.5,846.5C 114.271,844.901 113.938,842.901 115.5,840.5C 116.404,839.791 116.737,838.791 116.5,837.5C 118.483,837.157 119.817,837.824 120.5,839.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282c4f\",d:\"M 109.5,832.5 C 108.404,837.376 110.071,839.043 114.5,837.5C 115.386,838.325 115.719,839.325 115.5,840.5C 113.938,842.901 114.271,844.901 116.5,846.5C 116.19,848.144 115.19,849.144 113.5,849.5C 112.978,846.432 112.145,843.432 111,840.5C 109.887,839.695 108.721,839.028 107.5,838.5C 107.5,837.833 107.167,837.5 106.5,837.5C 105.916,834.715 106.916,833.048 109.5,832.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9dce9\",d:\"M 117.5,828.5 C 118.11,829.391 118.443,830.391 118.5,831.5C 114.201,835.497 115.201,837.164 121.5,836.5C 122.806,837.467 123.473,838.801 123.5,840.5C 122.209,840.737 121.209,840.404 120.5,839.5C 119.817,837.824 118.483,837.157 116.5,837.5C 116.737,838.791 116.404,839.791 115.5,840.5C 115.719,839.325 115.386,838.325 114.5,837.5C 110.071,839.043 108.404,837.376 109.5,832.5C 111.167,832.5 112.833,832.5 114.5,832.5C 114.5,831.167 114.5,829.833 114.5,828.5C 115.5,828.5 116.5,828.5 117.5,828.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8b22d\",d:\"M 105.5,827.5 C 106.833,827.5 108.167,827.5 109.5,827.5C 106.608,830.169 105.275,833.503 105.5,837.5C 105.634,839.292 105.301,840.958 104.5,842.5C 103.005,837.434 103.338,832.434 105.5,827.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#342623\",d:\"M 110.5,826.5 C 113.187,826.336 115.854,826.503 118.5,827C 119.755,829.46 121.755,830.627 124.5,830.5C 124.5,831.167 124.833,831.5 125.5,831.5C 125.665,835.182 125.499,838.848 125,842.5C 122.5,845 120,847.5 117.5,850C 115.288,850.789 113.288,850.622 111.5,849.5C 112.167,849.5 112.833,849.5 113.5,849.5C 115.19,849.144 116.19,848.144 116.5,846.5C 117.833,844.167 119.167,841.833 120.5,839.5C 121.209,840.404 122.209,840.737 123.5,840.5C 123.473,838.801 122.806,837.467 121.5,836.5C 122.5,836.5 123.5,836.5 124.5,836.5C 124.67,835.178 124.337,834.011 123.5,833C 121.753,832.648 120.086,832.148 118.5,831.5C 118.443,830.391 118.11,829.391 117.5,828.5C 113.709,827.06 111.043,828.393 109.5,832.5C 106.916,833.048 105.916,834.715 106.5,837.5C 106.167,837.5 105.833,837.5 105.5,837.5C 105.275,833.503 106.608,830.169 109.5,827.5C 110.167,827.5 110.5,827.167 110.5,826.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0d102d\",d:\"M 118.5,831.5 C 120.086,832.148 121.753,832.648 123.5,833C 124.337,834.011 124.67,835.178 124.5,836.5C 123.5,836.5 122.5,836.5 121.5,836.5C 115.201,837.164 114.201,835.497 118.5,831.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#121733\",d:\"M 117.5,828.5 C 116.5,828.5 115.5,828.5 114.5,828.5C 114.5,829.833 114.5,831.167 114.5,832.5C 112.833,832.5 111.167,832.5 109.5,832.5C 111.043,828.393 113.709,827.06 117.5,828.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8af34\",d:\"M 110.5,826.5 C 114.311,825.355 118.311,825.188 122.5,826C 125.015,826.939 125.682,828.439 124.5,830.5C 121.755,830.627 119.755,829.46 118.5,827C 115.854,826.503 113.187,826.336 110.5,826.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5d390d\",d:\"M 158.5,818.5 C 158.833,818.5 159.167,818.5 159.5,818.5C 159.5,832.167 159.5,845.833 159.5,859.5C 129.662,859.831 99.9953,859.498 70.5,858.5C 99.8333,858.5 129.167,858.5 158.5,858.5C 158.5,846.167 158.5,833.833 158.5,821.5C 158.5,820.833 158.5,820.167 158.5,819.5C 158.5,819.167 158.5,818.833 158.5,818.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d16565\",d:\"M 249.5,825.5 C 241.053,837.572 240.386,849.906 247.5,862.5C 247.5,862.833 247.5,863.167 247.5,863.5C 247.5,864.167 247.5,864.833 247.5,865.5C 245.533,863.696 243.699,861.696 242,859.5C 240.456,851.157 240.29,842.824 241.5,834.5C 243.499,832.507 244.999,830.173 246,827.5C 246.816,826.177 247.983,825.511 249.5,825.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#deeff4\",d:\"M 63.5,856.5 C 65.256,857.552 65.9227,859.219 65.5,861.5C 68.1667,861.5 70.8333,861.5 73.5,861.5C 71.8439,863.06 69.8439,864.06 67.5,864.5C 66.209,864.263 65.209,864.596 64.5,865.5C 63.609,866.11 62.609,866.443 61.5,866.5C 60.8826,866.389 60.3826,866.056 60,865.5C 59.3333,863.5 59.3333,861.5 60,859.5C 60.4224,857.574 61.5891,856.574 63.5,856.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#10091d\",d:\"M 65.5,854.5 C 66.209,853.596 67.209,853.263 68.5,853.5C 68.2155,855.415 68.5489,857.081 69.5,858.5C 69.8333,858.5 70.1667,858.5 70.5,858.5C 99.9953,859.498 129.662,859.831 159.5,859.5C 160.167,858.833 160.833,858.167 161.5,857.5C 161.5,858.833 161.5,860.167 161.5,861.5C 155.5,861.5 149.5,861.5 143.5,861.5C 118.003,860.668 92.3366,860.168 66.5,860C 68.0779,857.661 67.7446,855.828 65.5,854.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b75d5d\",d:\"M 333.5,801.5 C 333.833,801.5 334.167,801.5 334.5,801.5C 337.434,805.062 340.101,808.729 342.5,812.5C 342.831,838.005 342.498,863.339 341.5,888.5C 341.667,863.498 341.5,838.498 341,813.5C 340.617,812.944 340.117,812.611 339.5,812.5C 337.126,809.137 334.792,805.804 332.5,802.5C 333.167,802.5 333.5,802.167 333.5,801.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f47572\",d:\"M 367.5,805.5 C 365.767,809.186 363.934,812.852 362,816.5C 361.005,821.453 360.338,826.453 360,831.5C 359.333,850.167 359.333,868.833 360,887.5C 360.232,888.737 360.732,889.737 361.5,890.5C 362.103,893.041 362.103,895.374 361.5,897.5C 361.167,896.5 360.5,895.833 359.5,895.5C 358.527,869.532 358.194,843.532 358.5,817.5C 359.967,812.365 362.967,808.365 367.5,805.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dd4e5b\",d:\"M 303.5,831.5 C 305.093,832.348 306.26,833.681 307,835.5C 307.934,844.631 307.267,853.631 305,862.5C 304.617,863.056 304.117,863.389 303.5,863.5C 300.054,866.426 296.388,869.926 292.5,874C 291.255,874.791 289.922,875.291 288.5,875.5C 291.806,872.86 294.806,869.86 297.5,866.5C 298.786,863.883 300.453,861.55 302.5,859.5C 304.34,857.341 305.507,854.675 306,851.5C 306.81,847.642 306.643,843.976 305.5,840.5C 305.244,837.402 304.578,834.402 303.5,831.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e1d40\",d:\"M 432.5,816.5 C 433.703,822.539 435.036,828.539 436.5,834.5C 439.167,834.5 441.833,834.5 444.5,834.5C 444.226,839.263 444.559,843.93 445.5,848.5C 447.109,849.771 448.942,850.771 451,851.5C 451.499,857.491 451.666,863.491 451.5,869.5C 450.833,870.167 450.167,870.833 449.5,871.5C 449.823,864.978 449.49,858.645 448.5,852.5C 446.491,850.935 444.157,849.935 441.5,849.5C 441.5,848.833 441.5,848.167 441.5,847.5C 442.482,844.038 442.815,840.371 442.5,836.5C 436.833,836.5 431.167,836.5 425.5,836.5C 425.5,836.167 425.5,835.833 425.5,835.5C 427.833,835.5 430.167,835.5 432.5,835.5C 432.5,829.167 432.5,822.833 432.5,816.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2b204a\",d:\"M 287.5,819.5 C 289.117,820.038 290.784,820.371 292.5,820.5C 296.842,823.543 300.509,827.21 303.5,831.5C 304.578,834.402 305.244,837.402 305.5,840.5C 305.877,847.07 304.877,853.403 302.5,859.5C 300.453,861.55 298.786,863.883 297.5,866.5C 294.158,868.845 290.825,871.178 287.5,873.5C 285.955,874.452 284.288,874.785 282.5,874.5C 282.833,873.833 283.167,873.167 283.5,872.5C 287.427,870.424 291.261,868.091 295,865.5C 297.384,861.952 299.551,858.285 301.5,854.5C 302.954,851.282 303.621,847.782 303.5,844C 303.942,839.965 302.942,836.465 300.5,833.5C 298.906,830.236 296.573,827.569 293.5,825.5C 293.167,824.5 292.5,823.833 291.5,823.5C 290.167,822.167 288.833,820.833 287.5,819.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dfb536\",d:\"M 51.5,805.5 C 49.3719,808.144 47.8719,811.144 47,814.5C 46,815.167 45,815.833 44,816.5C 43.5,841.164 43.3334,865.831 43.5,890.5C 42.5023,865.672 42.169,840.672 42.5,815.5C 45.0317,811.789 48.0317,808.456 51.5,805.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7f1f9\",d:\"M 166.5,857.5 C 167.265,860.096 167.599,862.763 167.5,865.5C 158.167,865.5 148.833,865.5 139.5,865.5C 129.216,863.945 118.716,863.278 108,863.5C 94.4952,863.741 80.9952,864.075 67.5,864.5C 69.8439,864.06 71.8439,863.06 73.5,861.5C 96.8333,861.5 120.167,861.5 143.5,861.5C 149.5,861.5 155.5,861.5 161.5,861.5C 161.5,860.167 161.5,858.833 161.5,857.5C 161.47,856.503 161.97,855.836 163,855.5C 164.303,855.978 165.469,856.645 166.5,857.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b85f65\",d:\"M 357.5,817.5 C 357.833,817.5 358.167,817.5 358.5,817.5C 358.194,843.532 358.527,869.532 359.5,895.5C 357.509,869.855 356.842,843.855 357.5,817.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#35d6f8\",d:\"M 256.5,827.5 C 261.451,830.029 266.451,830.029 271.5,827.5C 271.461,828.583 271.127,829.583 270.5,830.5C 266.893,831.489 263.226,831.823 259.5,831.5C 259.5,842.167 259.5,852.833 259.5,863.5C 267.833,863.5 276.167,863.5 284.5,863.5C 284.821,865.048 285.821,865.715 287.5,865.5C 287.657,866.873 287.49,868.207 287,869.5C 284.791,869.989 282.958,870.989 281.5,872.5C 277.03,873.486 272.363,873.819 267.5,873.5C 255.428,870.427 248.095,862.761 245.5,850.5C 246.655,845.524 248.155,840.524 250,835.5C 251.946,832.58 254.113,829.913 256.5,827.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#94dbf9\",d:\"M 139.5,865.5 C 138.078,865.709 136.745,866.209 135.5,867C 119.661,868.258 103.994,867.425 88.5,864.5C 80.5285,865.403 72.5285,865.737 64.5,865.5C 65.209,864.596 66.209,864.263 67.5,864.5C 80.9952,864.075 94.4952,863.741 108,863.5C 118.716,863.278 129.216,863.945 139.5,865.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#843045\",d:\"M 247.5,863.5 C 250.575,865.909 253.242,868.575 255.5,871.5C 252.55,869.885 249.884,867.885 247.5,865.5C 247.5,864.833 247.5,864.167 247.5,863.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#252920\",d:\"M 555.5,853.5 C 556.167,854.167 556.833,854.833 557.5,855.5C 559.238,860.439 561.905,864.772 565.5,868.5C 565.5,868.833 565.5,869.167 565.5,869.5C 564.833,869.5 564.167,869.5 563.5,869.5C 560.542,867.597 558.542,864.93 557.5,861.5C 555.954,859.118 555.287,856.451 555.5,853.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#61441a\",d:\"M 604.5,865.5 C 603.415,867.587 601.749,868.92 599.5,869.5C 600.585,867.413 602.251,866.08 604.5,865.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8cb3e4\",d:\"M 166.5,857.5 C 168.975,858.687 169.975,860.687 169.5,863.5C 169.262,865.404 168.262,866.738 166.5,867.5C 131.864,868.48 97.1976,868.813 62.5,868.5C 61.6618,868.158 61.3284,867.492 61.5,866.5C 62.609,866.443 63.609,866.11 64.5,865.5C 72.5285,865.737 80.5285,865.403 88.5,864.5C 103.994,867.425 119.661,868.258 135.5,867C 136.745,866.209 138.078,865.709 139.5,865.5C 148.833,865.5 158.167,865.5 167.5,865.5C 167.599,862.763 167.265,860.096 166.5,857.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#222645\",d:\"M 244.5,849.5 C 245.167,849.5 245.5,849.833 245.5,850.5C 248.095,862.761 255.428,870.427 267.5,873.5C 272.305,874.487 277.305,874.821 282.5,874.5C 282.5,874.833 282.5,875.167 282.5,875.5C 273.481,877.748 265.147,876.414 257.5,871.5C 256.833,871.5 256.167,871.5 255.5,871.5C 253.242,868.575 250.575,865.909 247.5,863.5C 247.5,863.167 247.5,862.833 247.5,862.5C 246.293,858.213 245.293,853.88 244.5,849.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4e161e\",d:\"M 342.5,812.5 C 343.498,837.328 343.831,862.328 343.5,887.5C 344.079,900.388 338.079,907.721 325.5,909.5C 325.5,909.167 325.5,908.833 325.5,908.5C 329.183,907.325 332.516,905.659 335.5,903.5C 339.963,899.563 341.963,894.563 341.5,888.5C 342.498,863.339 342.831,838.005 342.5,812.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c395a\",d:\"M 611.5,860.5 C 610.588,862.595 609.421,864.595 608,866.5C 604.596,868.266 601.762,870.599 599.5,873.5C 587.991,877.804 576.658,877.471 565.5,872.5C 564.833,871.5 564.167,870.5 563.5,869.5C 564.167,869.5 564.833,869.5 565.5,869.5C 567.977,871.241 570.644,872.741 573.5,874C 579.681,874.819 585.681,874.653 591.5,873.5C 592.568,872.566 593.901,872.232 595.5,872.5C 597.632,872.446 598.965,871.446 599.5,869.5C 601.749,868.92 603.415,867.587 604.5,865.5C 607.112,864.221 609.445,862.555 611.5,860.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4f6087\",d:\"M 166.5,867.5 C 166.167,868.5 165.5,869.167 164.5,869.5C 150.459,868.851 136.792,869.518 123.5,871.5C 117.5,871.5 111.5,871.5 105.5,871.5C 91.1829,870.229 76.8495,869.229 62.5,868.5C 97.1976,868.813 131.864,868.48 166.5,867.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#362731\",d:\"M 164.5,869.5 C 153.833,870.167 143.167,870.833 132.5,871.5C 132.167,871.5 131.833,871.5 131.5,871.5C 130.624,871.369 129.957,871.702 129.5,872.5C 130.602,873.176 131.602,873.842 132.5,874.5C 130.09,875.438 127.756,875.438 125.5,874.5C 125.5,873.833 125.167,873.5 124.5,873.5C 124.672,872.508 124.338,871.842 123.5,871.5C 136.792,869.518 150.459,868.851 164.5,869.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4b3417\",d:\"M 565.5,869.5 C 565.5,869.167 565.5,868.833 565.5,868.5C 567.315,869.63 569.315,870.296 571.5,870.5C 572.6,871.558 573.934,872.392 575.5,873C 580.823,873.499 586.156,873.666 591.5,873.5C 585.681,874.653 579.681,874.819 573.5,874C 570.644,872.741 567.977,871.241 565.5,869.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3b1106\",d:\"M 170.5,858.5 C 171.833,861.167 171.833,863.833 170.5,866.5C 169.354,868.475 167.687,869.975 165.5,871C 154.505,871.5 143.505,871.667 132.5,871.5C 143.167,870.833 153.833,870.167 164.5,869.5C 165.5,869.167 166.167,868.5 166.5,867.5C 168.262,866.738 169.262,865.404 169.5,863.5C 170.451,862.081 170.784,860.415 170.5,858.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#433527\",d:\"M 599.5,869.5 C 598.965,871.446 597.632,872.446 595.5,872.5C 595.5,871.833 595.5,871.167 595.5,870.5C 596.833,870.167 598.167,869.833 599.5,869.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#804c18\",d:\"M 61.5,871.5 C 72.8333,871.5 84.1667,871.5 95.5,871.5C 94.4613,873.531 92.7946,874.864 90.5,875.5C 90.5858,874.504 90.2524,873.671 89.5,873C 80.5062,872.5 71.5062,872.334 62.5,872.5C 61.8333,872.5 61.5,872.167 61.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5e1e2\",d:\"M 105.5,871.5 C 111.5,871.5 117.5,871.5 123.5,871.5C 124.338,871.842 124.672,872.508 124.5,873.5C 117.687,874.491 110.687,874.825 103.5,874.5C 103.5,873.833 103.5,873.167 103.5,872.5C 104.492,872.672 105.158,872.338 105.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#21181c\",d:\"M 188.5,813.5 C 189.663,837.997 189.83,862.663 189,887.5C 188.136,891.384 186.97,895.051 185.5,898.5C 185.833,895.833 186.167,893.167 186.5,890.5C 186.993,888.194 187.326,885.861 187.5,883.5C 188.498,860.339 188.831,837.006 188.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cb6165\",d:\"M 201.5,813.5 C 201.833,813.5 202.167,813.5 202.5,813.5C 202.34,815.199 202.506,816.866 203,818.5C 203.232,817.263 203.732,816.263 204.5,815.5C 203.201,840.313 203.201,864.98 204.5,889.5C 205.306,893.212 206.306,896.879 207.5,900.5C 204.232,896.889 202.399,892.555 202,887.5C 201.5,862.836 201.333,838.169 201.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#be9272\",d:\"M 131.5,871.5 C 133.463,872.531 134.797,873.531 135.5,874.5C 134.833,874.5 134.167,874.5 133.5,874.5C 133.167,874.5 132.833,874.5 132.5,874.5C 131.602,873.842 130.602,873.176 129.5,872.5C 129.957,871.702 130.624,871.369 131.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b86d1b\",d:\"M 170.5,866.5 C 170.256,869.263 168.923,871.429 166.5,873C 157.173,873.5 147.839,873.666 138.5,873.5C 138.771,875.38 138.104,876.713 136.5,877.5C 136.443,876.391 136.11,875.391 135.5,874.5C 134.797,873.531 133.463,872.531 131.5,871.5C 131.833,871.5 132.167,871.5 132.5,871.5C 143.505,871.667 154.505,871.5 165.5,871C 167.687,869.975 169.354,868.475 170.5,866.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f65b5b\",d:\"M 247.5,865.5 C 249.884,867.885 252.55,869.885 255.5,871.5C 256.167,871.5 256.833,871.5 257.5,871.5C 259.564,874.706 262.564,876.539 266.5,877C 270.821,877.499 275.154,877.666 279.5,877.5C 280.833,877.5 282.167,877.5 283.5,877.5C 279.647,878.166 275.647,878.833 271.5,879.5C 271.833,880.167 272.167,880.833 272.5,881.5C 277.048,881.982 281.381,883.149 285.5,885C 284.692,885.308 284.025,885.808 283.5,886.5C 285.291,887.17 286.958,887.837 288.5,888.5C 286.5,888.5 284.5,888.5 282.5,888.5C 281.791,887.596 280.791,887.263 279.5,887.5C 278.306,886.223 276.64,885.556 274.5,885.5C 271.367,885.893 268.367,886.726 265.5,888C 264.29,889.039 263.29,890.206 262.5,891.5C 261.221,892.968 259.554,893.635 257.5,893.5C 259.498,891.167 260.832,888.5 261.5,885.5C 255.674,885.157 253.174,887.824 254,893.5C 255.376,894.705 256.542,896.038 257.5,897.5C 259.662,898.417 261.995,898.417 264.5,897.5C 267.157,897.838 269.49,897.171 271.5,895.5C 272.524,896.853 273.857,897.52 275.5,897.5C 279.371,897.815 283.038,897.482 286.5,896.5C 288.79,893.708 290.457,894.041 291.5,897.5C 302.228,898.066 312.894,898.066 323.5,897.5C 323.721,894.721 323.388,892.054 322.5,889.5C 325.121,890.121 326.788,891.788 327.5,894.5C 326.626,896.747 326.292,899.08 326.5,901.5C 323.789,901.815 321.456,901.148 319.5,899.5C 314.41,900.876 309.244,901.876 304,902.5C 302.298,901.633 300.131,900.966 297.5,900.5C 297.5,901.5 297.5,902.5 297.5,903.5C 292.315,903.03 287.149,902.364 282,901.5C 274.669,902.084 267.169,902.084 259.5,901.5C 257.76,899.789 255.76,898.956 253.5,899C 257.53,902.364 256.697,903.864 251,903.5C 241.058,901.828 241.058,901.495 251,902.5C 251.483,901.552 251.649,900.552 251.5,899.5C 248.934,899.656 246.434,899.322 244,898.5C 241.667,899.167 239.333,899.833 237,900.5C 235.902,901.384 235.402,902.384 235.5,903.5C 232.937,903.551 230.271,903.217 227.5,902.5C 228.729,901.719 230.062,901.219 231.5,901C 229.167,900.333 226.833,900.333 224.5,901C 225.973,901.71 226.64,902.876 226.5,904.5C 229.85,904.335 233.183,904.502 236.5,905C 229.842,905.5 223.175,905.666 216.5,905.5C 215.814,904.152 214.814,902.985 213.5,902C 217.339,901.516 220.839,900.349 224,898.5C 228.079,899.629 232.245,899.796 236.5,899C 240.065,897.643 243.732,896.81 247.5,896.5C 248.5,896.5 249.5,896.5 250.5,896.5C 250.5,893.5 250.5,890.5 250.5,887.5C 247.564,888.406 244.564,889.072 241.5,889.5C 241.5,889.167 241.5,888.833 241.5,888.5C 236.844,887.664 232.178,886.664 227.5,885.5C 226.167,884.833 224.833,884.167 223.5,883.5C 226.241,881.997 229.075,880.331 232,878.5C 233.706,879.308 234.539,880.641 234.5,882.5C 237.025,883.64 239.692,884.307 242.5,884.5C 242.579,883.07 242.246,881.736 241.5,880.5C 243.007,879.261 244.174,879.595 245,881.5C 245.633,876.798 243.466,874.631 238.5,875C 241.351,872.752 244.685,871.918 248.5,872.5C 248.007,870.194 247.674,867.861 247.5,865.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d09d2f\",d:\"M 571.5,870.5 C 576.015,871.982 580.681,872.648 585.5,872.5C 588.973,872.424 592.306,871.758 595.5,870.5C 595.5,871.167 595.5,871.833 595.5,872.5C 593.901,872.232 592.568,872.566 591.5,873.5C 586.156,873.666 580.823,873.499 575.5,873C 573.934,872.392 572.6,871.558 571.5,870.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2571a0\",d:\"M 281.5,872.5 C 282.167,872.5 282.833,872.5 283.5,872.5C 283.167,873.167 282.833,873.833 282.5,874.5C 277.305,874.821 272.305,874.487 267.5,873.5C 272.363,873.819 277.03,873.486 281.5,872.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d39123\",d:\"M 62.5,872.5 C 71.5062,872.334 80.5062,872.5 89.5,873C 90.2524,873.671 90.5858,874.504 90.5,875.5C 89.6618,875.842 89.3284,876.508 89.5,877.5C 88.5655,876.432 88.2322,875.099 88.5,873.5C 79.6506,873.826 70.9839,873.493 62.5,872.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#92746b\",d:\"M 97.5,872.5 C 99.7033,872.935 101.703,872.935 103.5,872.5C 103.5,873.167 103.5,873.833 103.5,874.5C 101.321,875.059 99.1542,875.726 97,876.5C 96.5,876.167 96,875.833 95.5,875.5C 96.1925,874.482 96.8592,873.482 97.5,872.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#522c18\",d:\"M 95.5,871.5 C 96.1667,871.833 96.8333,872.167 97.5,872.5C 96.8592,873.482 96.1925,874.482 95.5,875.5C 96,875.833 96.5,876.167 97,876.5C 99.1542,875.726 101.321,875.059 103.5,874.5C 110.687,874.825 117.687,874.491 124.5,873.5C 125.167,873.5 125.5,873.833 125.5,874.5C 118.011,875.329 110.344,875.829 102.5,876C 107.667,876.167 112.833,876.333 118,876.5C 123.546,876.495 128.712,875.828 133.5,874.5C 134.167,874.5 134.833,874.5 135.5,874.5C 136.11,875.391 136.443,876.391 136.5,877.5C 120.833,877.5 105.167,877.5 89.5,877.5C 89.3284,876.508 89.6618,875.842 90.5,875.5C 92.7946,874.864 94.4613,873.531 95.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#27040b\",d:\"M 125.5,874.5 C 127.756,875.438 130.09,875.438 132.5,874.5C 132.833,874.5 133.167,874.5 133.5,874.5C 128.712,875.828 123.546,876.495 118,876.5C 112.833,876.333 107.667,876.167 102.5,876C 110.344,875.829 118.011,875.329 125.5,874.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7f313e\",d:\"M 257.5,871.5 C 265.147,876.414 273.481,877.748 282.5,875.5C 281.5,876.167 280.5,876.833 279.5,877.5C 275.154,877.666 270.821,877.499 266.5,877C 262.564,876.539 259.564,874.706 257.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ae3f4b\",d:\"M 297.5,866.5 C 294.806,869.86 291.806,872.86 288.5,875.5C 286.597,875.796 284.93,876.463 283.5,877.5C 282.167,877.5 280.833,877.5 279.5,877.5C 280.5,876.833 281.5,876.167 282.5,875.5C 282.5,875.167 282.5,874.833 282.5,874.5C 284.288,874.785 285.955,874.452 287.5,873.5C 290.825,871.178 294.158,868.845 297.5,866.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44bef1\",d:\"M 565.5,872.5 C 576.658,877.471 587.991,877.804 599.5,873.5C 599.489,875.017 598.823,876.184 597.5,877C 587.108,879.199 577.108,878.866 567.5,876C 566.695,874.887 566.028,873.721 565.5,872.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f64b48\",d:\"M 303.5,863.5 C 302.955,865.593 302.122,867.593 301,869.5C 297.846,872.306 294.679,874.973 291.5,877.5C 294.565,882.168 293.899,886.168 289.5,889.5C 289.5,888.833 289.167,888.5 288.5,888.5C 286.958,887.837 285.291,887.17 283.5,886.5C 284.025,885.808 284.692,885.308 285.5,885C 281.381,883.149 277.048,881.982 272.5,881.5C 272.167,880.833 271.833,880.167 271.5,879.5C 275.647,878.833 279.647,878.166 283.5,877.5C 284.93,876.463 286.597,875.796 288.5,875.5C 289.922,875.291 291.255,874.791 292.5,874C 296.388,869.926 300.054,866.426 303.5,863.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3ad12\",d:\"M 161.5,813.5 C 163.871,816.267 165.038,819.6 165,823.5C 165.095,832.17 165.095,840.837 165,849.5C 166.69,851.603 168.524,853.603 170.5,855.5C 171.086,855.291 171.586,854.957 172,854.5C 172.313,860.451 172.479,866.284 172.5,872C 171.167,872.667 170.167,873.667 169.5,875C 160.826,875.572 152.159,876.239 143.5,877C 147.167,877.333 150.833,877.667 154.5,878C 152.941,878.98 151.274,879.813 149.5,880.5C 152.785,880.698 154.452,882.365 154.5,885.5C 152.8,885.374 151.3,884.707 150,883.5C 149.651,884.473 148.818,885.306 147.5,886C 143.514,886.499 139.514,886.666 135.5,886.5C 132.833,886.5 130.167,886.5 127.5,886.5C 126.067,884.442 125.4,882.108 125.5,879.5C 113.358,878.893 101.358,878.226 89.5,877.5C 105.167,877.5 120.833,877.5 136.5,877.5C 138.104,876.713 138.771,875.38 138.5,873.5C 147.839,873.666 157.173,873.5 166.5,873C 168.923,871.429 170.256,869.263 170.5,866.5C 171.833,863.833 171.833,861.167 170.5,858.5C 168.198,855.588 165.364,853.255 162,851.5C 161.5,838.838 161.333,826.171 161.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282d4a\",d:\"M 973.5,442.5 C 973.5,444.167 973.5,445.833 973.5,447.5C 975.124,447.64 976.29,446.973 977,445.5C 977.273,464.841 977.773,484.174 978.5,503.5C 978.049,514.073 977.382,524.573 976.5,535C 977.282,537.74 977.782,540.574 978,543.5C 978.295,588.845 978.461,634.178 978.5,679.5C 976.777,696.983 976.777,714.316 978.5,731.5C 977.728,772.841 977.728,814.174 978.5,855.5C 977.828,869.16 977.328,882.826 977,896.5C 976.667,896.167 976.333,895.833 976,895.5C 975.667,897.5 975.333,899.5 975,901.5C 973.719,901.381 972.552,901.881 971.5,903C 972.833,903.667 972.833,904.333 971.5,905C 972.416,905.374 973.25,905.874 974,906.5C 974.333,910.5 974.667,914.5 975,918.5C 975.414,918.043 975.914,917.709 976.5,917.5C 977.783,912.479 977.783,907.479 976.5,902.5C 977.577,900.271 978.244,897.937 978.5,895.5C 979.5,895.5 980.5,895.5 981.5,895.5C 981.178,889.642 981.511,883.975 982.5,878.5C 982.499,889.513 982.166,900.513 981.5,911.5C 980.5,911.5 979.5,911.5 978.5,911.5C 978.813,914.247 978.48,916.914 977.5,919.5C 976.051,921.611 975.051,923.944 974.5,926.5C 970.68,930.15 966.68,933.65 962.5,937C 962.833,937.333 963.167,937.667 963.5,938C 957.728,942.983 951.061,946.15 943.5,947.5C 895.155,947.861 846.822,947.361 798.5,946C 790.688,945.77 783.021,944.603 775.5,942.5C 778.167,940.5 778.167,938.5 775.5,936.5C 785.125,932.712 784.792,931.212 774.5,932C 773.594,933.699 773.261,935.533 773.5,937.5C 770.639,937.658 767.972,936.992 765.5,935.5C 764.328,935.919 763.328,936.585 762.5,937.5C 759.015,937.311 755.348,937.311 751.5,937.5C 751.22,940.388 752.553,941.888 755.5,942C 753.2,943.109 750.7,943.609 748,943.5C 740.342,942.829 733.008,942.829 726,943.5C 718.517,941.614 711.017,941.947 703.5,944.5C 676.833,945.833 650.167,945.833 623.5,944.5C 620.893,943.682 618.226,943.182 615.5,943C 618.723,940.459 622.39,938.959 626.5,938.5C 625.395,937.108 624.061,935.941 622.5,935C 624.684,931.536 624.35,928.203 621.5,925C 622.167,924.667 622.833,924.333 623.5,924C 620.997,923.126 618.997,923.793 617.5,926C 618.807,927.943 618.807,929.777 617.5,931.5C 617.328,927.029 616.494,926.696 615,930.5C 612.985,928.522 613.152,926.688 615.5,925C 614.552,924.517 613.552,924.351 612.5,924.5C 613.718,923.839 615.051,923.172 616.5,922.5C 617.404,919.602 618.738,916.936 620.5,914.5C 621.608,917.503 623.275,918.003 625.5,916C 624.833,915.667 624.167,915.333 623.5,915C 628.252,914.149 632.919,913.816 637.5,914C 639.107,912.951 639.773,911.451 639.5,909.5C 640.791,909.737 641.791,909.404 642.5,908.5C 649.818,904.673 654.318,898.673 656,890.5C 656.667,864.167 656.667,837.833 656,811.5C 654.493,807.764 653.66,807.764 653.5,811.5C 651.487,806.299 647.821,802.633 642.5,800.5C 641.609,799.89 640.609,799.557 639.5,799.5C 601.627,798.176 563.627,798.176 525.5,799.5C 525.587,796.892 524.92,794.226 523.5,791.5C 522.325,791.281 521.325,791.614 520.5,792.5C 522.447,794.276 522.78,796.276 521.5,798.5C 520.749,797.624 520.249,796.624 520,795.5C 519.457,797.631 518.624,799.631 517.5,801.5C 515.878,803.439 514.044,803.772 512,802.5C 511.781,803.938 511.281,805.271 510.5,806.5C 507.736,802.375 508.07,798.709 511.5,795.5C 510.99,793.912 509.99,792.745 508.5,792C 509.448,791.517 510.448,791.351 511.5,791.5C 510.167,788.833 510.167,786.167 511.5,783.5C 506.22,784.203 501.053,784.203 496,783.5C 494.564,788.573 493.064,788.573 491.5,783.5C 489.453,783.511 487.453,783.844 485.5,784.5C 482.765,783.668 480.765,782.668 479.5,781.5C 469.214,779.686 458.547,778.852 447.5,779C 446.944,778.617 446.611,778.117 446.5,777.5C 459.344,777.829 472.011,777.495 484.5,776.5C 488.024,776.119 491.358,775.119 494.5,773.5C 499.158,769.675 503.324,765.342 507,760.5C 507.5,746.837 507.667,733.171 507.5,719.5C 508.494,729.987 508.828,740.654 508.5,751.5C 510.467,751.739 512.301,751.406 514,750.5C 514.829,745.467 514.662,740.467 513.5,735.5C 510.895,733.764 510.895,731.931 513.5,730C 511.436,728.982 511.102,727.649 512.5,726C 509.959,718.736 508.959,711.236 509.5,703.5C 510.5,703.5 511.5,703.5 512.5,703.5C 513.761,713.799 514.928,724.132 516,734.5C 516.414,734.957 516.914,735.291 517.5,735.5C 518.195,739.713 518.861,743.879 519.5,748C 518.833,749 518.167,750 517.5,751C 517.579,753.305 517.746,755.805 518,758.5C 519.044,760.715 519.71,763.048 520,765.5C 520.333,764.833 520.667,764.167 521,763.5C 521.71,764.973 522.876,765.64 524.5,765.5C 524.414,763.323 523.747,761.323 522.5,759.5C 522.97,758.537 523.637,758.537 524.5,759.5C 524.833,760.167 525.167,760.833 525.5,761.5C 526.637,764.508 528.637,766.508 531.5,767.5C 531.833,768.167 532.167,768.833 532.5,769.5C 530.774,769.185 529.107,769.019 527.5,769C 531.944,773.46 537.278,776.46 543.5,778C 552.838,778.336 562.005,778.17 571,777.5C 577.776,778.643 584.61,779.309 591.5,779.5C 633.792,779.352 676.125,779.185 718.5,779C 719.337,780.011 719.67,781.178 719.5,782.5C 725.208,782.508 725.541,782.008 720.5,781C 725.464,780.088 730.464,779.588 735.5,779.5C 735.351,780.552 735.517,781.552 736,782.5C 736.498,780.473 736.331,778.473 735.5,776.5C 736.01,774.912 737.01,773.745 738.5,773C 737.906,772.536 737.239,772.369 736.5,772.5C 740.16,769.186 742.826,765.186 744.5,760.5C 745.857,759.41 746.857,758.076 747.5,756.5C 747.5,760.167 747.5,763.833 747.5,767.5C 747.334,773.509 747.501,779.509 748,785.5C 749.77,784.724 751.603,784.89 753.5,786C 751.744,786.202 750.078,786.702 748.5,787.5C 753.37,788.38 758.37,789.547 763.5,791C 759.5,791.333 755.5,791.667 751.5,792C 755.993,792.105 760.326,792.938 764.5,794.5C 771.088,793.369 771.088,792.536 764.5,792C 765.5,791.667 766.5,791.333 767.5,791C 767.167,790.667 766.833,790.333 766.5,790C 770.421,789.797 774.255,789.297 778,788.5C 779.441,789.26 780.941,789.926 782.5,790.5C 788.104,789.546 793.771,789.212 799.5,789.5C 799.218,786.653 799.218,783.987 799.5,781.5C 796.001,778.863 792.001,777.863 787.5,778.5C 788.244,781.95 786.91,783.616 783.5,783.5C 783.739,781.533 783.406,779.699 782.5,778C 777.965,776.613 773.299,776.446 768.5,777.5C 768.662,779.527 768.495,781.527 768,783.5C 766.644,784.38 765.144,784.714 763.5,784.5C 764.937,780.623 765.437,776.623 765,772.5C 762.101,769.733 760.101,770.4 759,774.5C 756.894,772.185 756.228,769.518 757,766.5C 757.333,766.833 757.667,767.167 758,767.5C 759.507,763.764 760.34,763.764 760.5,767.5C 761.5,767.5 762.5,767.5 763.5,767.5C 763.473,764.77 764.14,762.27 765.5,760C 763.128,730.898 762.962,701.731 765,672.5C 765.605,670.519 766.605,670.185 768,671.5C 768.333,699.833 768.667,728.167 769,756.5C 769.307,761.115 771.14,764.782 774.5,767.5C 777.051,773.518 781.717,776.685 788.5,777C 840.167,777.667 891.833,777.667 943.5,777C 957.02,774.754 964.853,766.92 967,753.5C 967.667,725.5 967.667,697.5 967,669.5C 966.623,668.058 965.79,667.058 964.5,666.5C 964.167,666.5 963.833,666.5 963.5,666.5C 963.5,665.833 963.167,665.5 962.5,665.5C 959.312,660.642 954.979,657.308 949.5,655.5C 948.508,655.672 947.842,655.338 947.5,654.5C 921.071,653.829 893.905,653.496 866,653.5C 838.158,653.5 810.658,654.167 783.5,655.5C 783.5,656.167 783.167,656.5 782.5,656.5C 779.72,655.18 776.72,654.68 773.5,655C 772.277,657.944 770.444,660.444 768,662.5C 765.044,660.18 764.878,657.513 767.5,654.5C 765.827,652.477 765.16,650.144 765.5,647.5C 766.978,647.762 768.311,647.429 769.5,646.5C 768.02,644.78 766.686,642.947 765.5,641C 766.723,634.292 766.056,627.459 763.5,620.5C 763.818,619.353 764.484,618.519 765.5,618C 764.296,616.647 763.629,614.981 763.5,613C 765.369,605.964 765.869,598.798 765,591.5C 764.667,594.5 764.333,597.5 764,600.5C 762.837,602.285 762.17,604.285 762,606.5C 759.699,607.676 759.366,609.01 761,610.5C 762.018,609.294 762.518,609.627 762.5,611.5C 762.518,613.373 762.018,613.706 761,612.5C 759.007,614.406 759.507,615.573 762.5,616C 758.821,617.4 758.821,619.067 762.5,621C 761.098,625.359 759.765,629.693 758.5,634C 759.394,635.396 760.061,636.896 760.5,638.5C 759.459,640.79 759.459,643.124 760.5,645.5C 760.333,646.5 760.167,647.5 760,648.5C 759.667,648.167 759.333,647.833 759,647.5C 758.944,653.048 758.777,658.548 758.5,664C 758.844,665.365 759.511,666.532 760.5,667.5C 759.137,668.893 758.304,670.559 758,672.5C 757.827,650.927 757.327,629.427 756.5,608C 756.516,585.284 756.849,562.45 757.5,539.5C 756.915,527.341 756.249,515.341 755.5,503.5C 755.183,500.428 755.516,497.428 756.5,494.5C 757.167,494.833 757.833,495.167 758.5,495.5C 759.179,498.991 758.846,502.491 757.5,506C 757.944,507.762 758.444,507.595 759,505.5C 762.356,512.757 763.356,520.424 762,528.5C 761.333,527.167 760.667,527.167 760,528.5C 757.984,537.568 758.151,546.568 760.5,555.5C 760.291,556.994 759.624,558.161 758.5,559C 759.221,565.781 759.888,572.615 760.5,579.5C 758.743,582.559 759.409,584.892 762.5,586.5C 759.74,586.512 759.24,587.845 761,590.5C 761.667,589.167 762.333,589.167 763,590.5C 763.029,587.633 763.862,585.133 765.5,583C 764.376,582.161 763.709,580.994 763.5,579.5C 763.504,555.375 763.504,531.208 763.5,507C 764.739,503.218 765.905,499.385 767,495.5C 767.333,497.833 767.667,500.167 768,502.5C 768.333,540.833 768.667,579.167 769,617.5C 769.322,620.666 770.489,623.333 772.5,625.5C 775.385,631.867 780.385,635.367 787.5,636C 816.512,635.932 845.512,636.099 874.5,636.5C 899.501,636.042 924.501,635.542 949.5,635C 957.809,632.185 964.142,627.019 968.5,619.5C 967.678,577.856 967.178,536.189 967,494.5C 966.722,493.584 966.222,492.918 965.5,492.5C 964.833,491.833 964.167,491.167 963.5,490.5C 963.672,489.508 963.338,488.842 962.5,488.5C 959.147,481.809 953.814,477.809 946.5,476.5C 893.336,475.501 840.003,475.168 786.5,475.5C 838.668,474.833 891.002,474.167 943.5,473.5C 943.291,472.914 942.957,472.414 942.5,472C 934.921,471.816 927.421,471.316 920,470.5C 916.755,471.315 913.588,471.648 910.5,471.5C 908.5,468.833 906.5,468.833 904.5,471.5C 903.833,470.833 903.167,470.167 902.5,469.5C 900.562,472.079 898.729,472.079 897,469.5C 896.044,470.894 894.711,471.561 893,471.5C 888.586,471.311 884.086,471.145 879.5,471C 878.57,470.009 877.404,469.509 876,469.5C 871.066,469.37 866.066,469.703 861,470.5C 860.251,469.365 860.417,468.365 861.5,467.5C 865.552,465.364 869.719,465.03 874,466.5C 875.333,463.833 876.667,463.833 878,466.5C 881.667,466.167 885.333,465.833 889,465.5C 889.333,466.167 889.667,466.833 890,467.5C 891.399,466.773 892.899,466.273 894.5,466C 897.167,465.333 897.167,464.667 894.5,464C 889.649,463.826 884.982,463.326 880.5,462.5C 901.503,462.667 922.503,462.5 943.5,462C 947.118,461.524 950.452,460.357 953.5,458.5C 955.359,458.539 956.692,457.706 957.5,456C 959.5,455.667 961.5,455.333 963.5,455C 968.65,453.054 969.65,449.888 966.5,445.5C 966.647,442.89 967.481,440.556 969,438.5C 969.498,441.482 969.665,444.482 969.5,447.5C 970.5,447.5 971.5,447.5 972.5,447.5C 972.216,445.585 972.549,443.919 973.5,442.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4d697e\",d:\"M 825.5,819.5 C 826.733,840.668 827.733,862.002 828.5,883.5C 828.733,885.78 829.566,887.78 831,889.5C 831.339,886.964 831.839,884.464 832.5,882C 830.557,880.166 830.224,878.166 831.5,876C 834.828,876.833 836.161,875.333 835.5,871.5C 834.167,871.5 832.833,871.5 831.5,871.5C 831.5,870.167 831.5,868.833 831.5,867.5C 833.774,867.715 835.941,868.382 838,869.5C 840.603,866.952 843.769,865.619 847.5,865.5C 847.5,865.833 847.5,866.167 847.5,866.5C 835.75,872.333 831.25,881.667 834,894.5C 834.483,893.552 834.649,892.552 834.5,891.5C 835.674,892.514 836.34,893.847 836.5,895.5C 835.503,895.47 834.836,895.97 834.5,897C 836.237,901.894 839.237,905.727 843.5,908.5C 842.167,908.5 840.833,908.5 839.5,908.5C 836.733,907.949 834.4,906.616 832.5,904.5C 830.667,901.5 828.833,898.5 827,895.5C 826.667,893.5 826.333,891.5 826,889.5C 825.5,866.169 825.333,842.836 825.5,819.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc6b61\",d:\"M 879.5,872.5 C 900.836,872.333 922.169,872.5 943.5,873C 947.811,875.505 950.811,879.005 952.5,883.5C 952.631,884.239 952.464,884.906 952,885.5C 951.333,884.167 950.667,884.167 950,885.5C 950.014,892.902 946.847,898.402 940.5,902C 920.166,901.244 899.832,901.411 879.5,902.5C 879.5,902.167 879.5,901.833 879.5,901.5C 879.5,891.833 879.5,882.167 879.5,872.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fc6465\",d:\"M 928.5,885.5 C 928.5,884.5 928.5,883.5 928.5,882.5C 917.504,882.944 906.504,883.278 895.5,883.5C 890.56,881.892 888.56,883.892 889.5,889.5C 892.318,889.495 893.485,890.828 893,893.5C 892,892.167 891,892.167 890,893.5C 888.97,890.743 887.303,889.409 885,889.5C 884.667,886.5 884.333,883.5 884,880.5C 883.29,879.027 882.124,878.36 880.5,878.5C 880.5,876.833 880.5,875.167 880.5,873.5C 895.848,873.167 911.181,873.501 926.5,874.5C 928.562,875.994 930.562,877.66 932.5,879.5C 931.745,881.965 930.412,883.965 928.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea8b8a\",d:\"M 942.5,870.5 C 947.125,872.128 950.459,875.128 952.5,879.5C 952.5,880.833 952.5,882.167 952.5,883.5C 950.811,879.005 947.811,875.505 943.5,873C 922.169,872.5 900.836,872.333 879.5,872.5C 900.5,871.833 921.5,871.167 942.5,870.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#09244e\",d:\"M 812.5,879.5 C 811.833,879.5 811.167,879.5 810.5,879.5C 810.5,858.167 810.5,836.833 810.5,815.5C 810.343,814.127 810.51,812.793 811,811.5C 811.333,811.833 811.667,812.167 812,812.5C 812.5,834.831 812.667,857.164 812.5,879.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#caf4f9\",d:\"M 872.5,871.5 C 864.826,871.334 857.159,871.5 849.5,872C 838.962,876.241 835.295,883.741 838.5,894.5C 838.5,895.833 837.833,896.5 836.5,896.5C 836.5,896.167 836.5,895.833 836.5,895.5C 836.34,893.847 835.674,892.514 834.5,891.5C 833.731,882.033 837.398,875.033 845.5,870.5C 850.64,869.95 855.807,869.617 861,869.5C 865.229,869.51 869.062,870.177 872.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f2637\",d:\"M 847.5,866.5 C 847.5,866.167 847.5,865.833 847.5,865.5C 849.167,865.5 850.833,865.5 852.5,865.5C 880.835,865.333 909.169,865.5 937.5,866C 945.985,868.327 951.652,873.494 954.5,881.5C 953.833,880.833 953.167,880.167 952.5,879.5C 950.459,875.128 947.125,872.128 942.5,870.5C 941.609,869.89 940.609,869.557 939.5,869.5C 918.673,868.503 897.673,868.169 876.5,868.5C 876.611,867.883 876.944,867.383 877.5,867C 867.506,866.5 857.506,866.334 847.5,866.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aba3a9\",d:\"M 876.5,868.5 C 897.673,868.169 918.673,868.503 939.5,869.5C 918.833,869.5 898.167,869.5 877.5,869.5C 877.5,880.167 877.5,890.833 877.5,901.5C 877.5,902.167 877.167,902.5 876.5,902.5C 876.5,891.167 876.5,879.833 876.5,868.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0e1f40\",d:\"M 847.5,866.5 C 857.506,866.334 867.506,866.5 877.5,867C 876.944,867.383 876.611,867.883 876.5,868.5C 876.5,879.833 876.5,891.167 876.5,902.5C 876.5,902.833 876.5,903.167 876.5,903.5C 875.833,903.5 875.167,903.5 874.5,903.5C 874.828,891.655 874.495,879.988 873.5,868.5C 864.827,868.334 856.16,868.5 847.5,869C 846.584,869.278 845.918,869.778 845.5,870.5C 837.398,875.033 833.731,882.033 834.5,891.5C 834.649,892.552 834.483,893.552 834,894.5C 831.25,881.667 835.75,872.333 847.5,866.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b7cee9\",d:\"M 873.5,868.5 C 873.5,869.5 873.5,870.5 873.5,871.5C 873.167,871.5 872.833,871.5 872.5,871.5C 869.062,870.177 865.229,869.51 861,869.5C 855.807,869.617 850.64,869.95 845.5,870.5C 845.918,869.778 846.584,869.278 847.5,869C 856.16,868.5 864.827,868.334 873.5,868.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#48accc\",d:\"M 670.5,820.5 C 671.332,842.33 671.832,864.33 672,886.5C 673.357,890.065 674.19,893.732 674.5,897.5C 671.633,893.38 670.3,888.713 670.5,883.5C 670.5,862.5 670.5,841.5 670.5,820.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#20334c\",d:\"M 677.5,802.5 C 672.851,806.768 670.518,812.101 670.5,818.5C 670.5,819.167 670.5,819.833 670.5,820.5C 670.5,841.5 670.5,862.5 670.5,883.5C 669.833,862.167 669.167,840.833 668.5,819.5C 668.657,818.127 668.49,816.793 668,815.5C 667.333,817.5 666.667,819.5 666,821.5C 665.833,840.842 665.333,860.175 664.5,879.5C 663.334,858.174 663.167,836.841 664,815.5C 665.405,812.381 665.905,809.048 665.5,805.5C 666.552,805.649 667.552,805.483 668.5,805C 667.346,804.086 667.513,803.253 669,802.5C 671.374,804.94 673.541,804.606 675.5,801.5C 676.183,801.863 676.85,802.196 677.5,802.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#44aad8\",d:\"M 807.5,809.5 C 808.985,811.249 809.985,813.249 810.5,815.5C 810.5,836.833 810.5,858.167 810.5,879.5C 810.5,882.167 810.5,884.833 810.5,887.5C 809.129,889.936 808.129,892.603 807.5,895.5C 807.167,895.5 806.833,895.5 806.5,895.5C 806.838,893.146 807.338,890.813 808,888.5C 808.778,862.15 808.612,835.817 807.5,809.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#0c2f58\",d:\"M 668.5,819.5 C 669.167,840.833 669.833,862.167 670.5,883.5C 670.3,888.713 671.633,893.38 674.5,897.5C 676.892,902.225 680.559,905.558 685.5,907.5C 720.663,908.498 755.996,908.832 791.5,908.5C 756.337,909.498 721.004,909.832 685.5,909.5C 682.159,909.344 679.326,908.011 677,905.5C 672.709,900.248 670.042,894.248 669,887.5C 668.5,864.836 668.333,842.169 668.5,819.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#435e78\",d:\"M 960.5,808.5 C 962.984,810.12 964.484,812.453 965,815.5C 965.667,840.5 965.667,865.5 965,890.5C 963.653,892.466 962.153,892.799 960.5,891.5C 961.75,891.423 962.583,890.756 963,889.5C 963.667,864.5 963.667,839.5 963,814.5C 962.345,812.372 961.511,810.372 960.5,808.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e0f1f5\",d:\"M 847.5,842.5 C 858.838,842.333 870.172,842.5 881.5,843C 882.38,844.356 882.714,845.856 882.5,847.5C 881.5,847.5 880.5,847.5 879.5,847.5C 868.833,847.5 858.167,847.5 847.5,847.5C 847.5,845.833 847.5,844.167 847.5,842.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a7888\",d:\"M 878.5,825.5 C 873.5,825.5 868.5,825.5 863.5,825.5C 863.5,827.167 863.5,828.833 863.5,830.5C 861.738,830.357 860.071,830.691 858.5,831.5C 858.159,833.972 856.992,836.305 855,838.5C 854.333,837.833 853.667,837.167 853,836.5C 851.663,838.004 849.996,839.004 848,839.5C 847.517,840.448 847.351,841.448 847.5,842.5C 847.5,844.167 847.5,845.833 847.5,847.5C 858.167,847.5 868.833,847.5 879.5,847.5C 879.66,849.199 879.494,850.866 879,852.5C 873.918,851.363 868.751,851.196 863.5,852C 874.146,852.829 874.146,853.329 863.5,853.5C 863.5,855.5 863.5,857.5 863.5,859.5C 865.484,859.383 867.15,860.05 868.5,861.5C 869.478,861.023 870.311,860.357 871,859.5C 871.772,860.849 872.939,861.682 874.5,862C 867.085,863.499 859.752,864.665 852.5,865.5C 850.833,865.5 849.167,865.5 847.5,865.5C 843.769,865.619 840.603,866.952 838,869.5C 835.941,868.382 833.774,867.715 831.5,867.5C 831.5,868.833 831.5,870.167 831.5,871.5C 832.833,871.5 834.167,871.5 835.5,871.5C 836.161,875.333 834.828,876.833 831.5,876C 830.224,878.166 830.557,880.166 832.5,882C 831.839,884.464 831.339,886.964 831,889.5C 829.566,887.78 828.733,885.78 828.5,883.5C 827.733,862.002 826.733,840.668 825.5,819.5C 825.198,816.941 825.532,814.607 826.5,812.5C 826.351,813.552 826.517,814.552 827,815.5C 830.613,806.049 837.446,801.049 847.5,800.5C 849.856,799.425 852.189,799.425 854.5,800.5C 855.145,801.732 855.311,803.065 855,804.5C 857.506,806.863 860.339,808.53 863.5,809.5C 863.5,810.5 863.5,811.5 863.5,812.5C 871.328,813.283 871.328,814.617 863.5,816.5C 883.535,817.821 903.535,817.821 923.5,816.5C 925.63,817.467 927.63,818.634 929.5,820C 924.293,819.969 919.126,819.469 914,818.5C 910.733,820.101 907.233,820.934 903.5,821C 890.171,821.5 876.837,821.667 863.5,821.5C 863.5,822.5 863.5,823.5 863.5,824.5C 868.695,824.179 873.695,824.513 878.5,825.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9eaed\",d:\"M 878.5,825.5 C 896.167,825.5 913.833,825.5 931.5,825.5C 931.5,827.167 931.5,828.833 931.5,830.5C 908.833,830.5 886.167,830.5 863.5,830.5C 863.5,828.833 863.5,827.167 863.5,825.5C 868.5,825.5 873.5,825.5 878.5,825.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39d5fc\",d:\"M 798.5,800.5 C 803.07,801.948 806.07,804.948 807.5,809.5C 808.612,835.817 808.778,862.15 808,888.5C 807.338,890.813 806.838,893.146 806.5,895.5C 804.031,898.134 801.364,900.634 798.5,903C 795.348,903.395 792.348,904.228 789.5,905.5C 784.833,905.5 780.167,905.5 775.5,905.5C 746.67,904.668 717.67,904.168 688.5,904C 686.406,902.648 684.073,902.148 681.5,902.5C 679.487,900.503 677.154,898.836 674.5,897.5C 674.19,893.732 673.357,890.065 672,886.5C 671.832,864.33 671.332,842.33 670.5,820.5C 670.5,819.833 670.5,819.167 670.5,818.5C 671.9,817.9 672.9,816.9 673.5,815.5C 673.81,816.738 674.31,816.738 675,815.5C 676.395,811.21 678.895,807.71 682.5,805C 684.246,804.529 685.913,803.862 687.5,803C 724.002,802.833 760.336,802.333 796.5,801.5C 797.492,801.672 798.158,801.338 798.5,800.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#315582\",d:\"M 753.5,869.5 C 751.969,870.925 752.302,871.591 754.5,871.5C 754.167,872.167 753.833,872.833 753.5,873.5C 750.888,874.371 748.221,875.037 745.5,875.5C 741.768,873.869 737.768,872.869 733.5,872.5C 740.493,873.196 747.16,872.196 753.5,869.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cfdfea\",d:\"M 754.5,821.5 C 766.246,829.113 770.412,839.779 767,853.5C 764.113,860.324 759.613,865.657 753.5,869.5C 747.16,872.196 740.493,873.196 733.5,872.5C 727.262,870.728 722.596,867.061 719.5,861.5C 720.151,860.909 720.818,860.243 721.5,859.5C 723.264,861.278 725.264,862.611 727.5,863.5C 728.894,865.708 730.894,867.208 733.5,868C 745.254,869.709 754.421,865.542 761,855.5C 765.136,847.741 765.636,839.741 762.5,831.5C 761.5,831.5 760.5,831.5 759.5,831.5C 758.629,827.668 756.962,824.334 754.5,821.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#399fd1\",d:\"M 770.5,850.5 C 770.529,862.46 764.862,870.127 753.5,873.5C 753.833,872.833 754.167,872.167 754.5,871.5C 762.895,866.779 768.228,859.779 770.5,850.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#143058\",d:\"M 770.5,850.5 C 768.228,859.779 762.895,866.779 754.5,871.5C 752.302,871.591 751.969,870.925 753.5,869.5C 759.613,865.657 764.113,860.324 767,853.5C 770.412,839.779 766.246,829.113 754.5,821.5C 752.738,819.3 750.404,818.133 747.5,818C 727.561,815.292 715.895,823.792 712.5,843.5C 712.886,847.596 713.719,851.596 715,855.5C 715.792,858.106 717.292,860.106 719.5,861.5C 722.596,867.061 727.262,870.728 733.5,872.5C 737.768,872.869 741.768,873.869 745.5,875.5C 723.533,877.055 711.866,866.555 710.5,844C 711.743,829.752 719.077,820.085 732.5,815C 749.737,812.867 761.904,819.701 769,835.5C 770.16,840.434 770.66,845.434 770.5,850.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e98889\",d:\"M 743.5,839.5 C 745.793,836.941 748.293,836.941 751,839.5C 751.667,841.5 751.667,843.5 751,845.5C 747.571,849.101 744.071,852.434 740.5,855.5C 739.833,855.333 739.167,855.167 738.5,855C 734.426,851.115 731.426,846.615 729.5,841.5C 729.5,840.833 729.5,840.167 729.5,839.5C 733.529,836.554 737.196,836.887 740.5,840.5C 741.417,839.873 742.417,839.539 743.5,839.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb6e67\",d:\"M 743.5,839.5 C 747.931,838.53 750.265,840.197 750.5,844.5C 747.111,846.05 744.444,848.55 742.5,852C 741.5,852.667 740.5,852.667 739.5,852C 736.891,849.933 734.391,847.766 732,845.5C 730.1,840.087 731.933,837.753 737.5,838.5C 738.583,843.41 740.583,843.744 743.5,839.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ebf5f8\",d:\"M 754.5,821.5 C 756.962,824.334 758.629,827.668 759.5,831.5C 758.082,829.813 756.749,827.98 755.5,826C 752.608,825.106 750.274,823.44 748.5,821C 743.914,820.803 739.414,820.303 735,819.5C 732.379,820.991 729.545,821.658 726.5,821.5C 726.714,823.144 726.38,824.644 725.5,826C 726.167,826.333 726.833,826.667 727.5,827C 724.532,829.178 724.865,830.344 728.5,830.5C 729.159,833.455 729.492,836.455 729.5,839.5C 729.5,840.167 729.5,840.833 729.5,841.5C 728.801,843.556 727.801,845.556 726.5,847.5C 725.996,844.658 724.329,843.325 721.5,843.5C 721.174,847.884 721.508,852.217 722.5,856.5C 724.605,857.899 726.438,859.566 728,861.5C 728.692,862.437 728.525,863.103 727.5,863.5C 725.264,862.611 723.264,861.278 721.5,859.5C 720.818,860.243 720.151,860.909 719.5,861.5C 717.292,860.106 715.792,858.106 715,855.5C 713.719,851.596 712.886,847.596 712.5,843.5C 715.895,823.792 727.561,815.292 747.5,818C 750.404,818.133 752.738,819.3 754.5,821.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fafafa\",d:\"M 759.5,831.5 C 760.5,831.5 761.5,831.5 762.5,831.5C 765.636,839.741 765.136,847.741 761,855.5C 754.421,865.542 745.254,869.709 733.5,868C 730.894,867.208 728.894,865.708 727.5,863.5C 728.525,863.103 728.692,862.437 728,861.5C 726.438,859.566 724.605,857.899 722.5,856.5C 721.508,852.217 721.174,847.884 721.5,843.5C 724.329,843.325 725.996,844.658 726.5,847.5C 727.801,845.556 728.801,843.556 729.5,841.5C 731.426,846.615 734.426,851.115 738.5,855C 739.167,855.167 739.833,855.333 740.5,855.5C 744.071,852.434 747.571,849.101 751,845.5C 751.667,843.5 751.667,841.5 751,839.5C 748.293,836.941 745.793,836.941 743.5,839.5C 742.417,839.539 741.417,839.873 740.5,840.5C 737.196,836.887 733.529,836.554 729.5,839.5C 729.492,836.455 729.159,833.455 728.5,830.5C 724.865,830.344 724.532,829.178 727.5,827C 726.833,826.667 726.167,826.333 725.5,826C 726.38,824.644 726.714,823.144 726.5,821.5C 729.545,821.658 732.379,820.991 735,819.5C 739.414,820.303 743.914,820.803 748.5,821C 750.274,823.44 752.608,825.106 755.5,826C 756.749,827.98 758.082,829.813 759.5,831.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#26304a\",d:\"M 837.5,799.5 C 832.021,802.311 828.355,806.644 826.5,812.5C 825.532,814.607 825.198,816.941 825.5,819.5C 825.333,842.836 825.5,866.169 826,889.5C 826.333,891.5 826.667,893.5 827,895.5C 828.833,898.5 830.667,901.5 832.5,904.5C 834.4,906.616 836.733,907.949 839.5,908.5C 841.292,909.309 843.292,909.809 845.5,910C 838.966,911.434 833.633,909.601 829.5,904.5C 825.379,897.304 822.546,889.637 821,881.5C 816.843,886.133 815.343,891.467 816.5,897.5C 816.215,899.569 815.048,900.902 813,901.5C 812.506,903.134 812.34,904.801 812.5,906.5C 811.5,906.5 810.5,906.5 809.5,906.5C 809.5,904.167 809.5,901.833 809.5,899.5C 811.588,895.641 811.921,891.641 810.5,887.5C 810.5,884.833 810.5,882.167 810.5,879.5C 811.167,879.5 811.833,879.5 812.5,879.5C 813.268,860.83 813.934,841.997 814.5,823C 814.409,819.802 814.076,816.635 813.5,813.5C 816.382,811.947 819.049,809.447 821.5,806C 820.207,805.51 818.873,805.343 817.5,805.5C 817.5,804.167 817.5,802.833 817.5,801.5C 821.449,801.307 821.449,800.807 817.5,800C 818.167,799.833 818.833,799.667 819.5,799.5C 822.866,800.593 826.033,801.927 829,803.5C 830.295,801.878 831.795,800.545 833.5,799.5C 835.054,798.628 836.388,798.628 837.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cde3ed\",d:\"M 843.5,798.5 C 845.483,798.157 846.817,798.824 847.5,800.5C 837.446,801.049 830.613,806.049 827,815.5C 826.517,814.552 826.351,813.552 826.5,812.5C 828.355,806.644 832.021,802.311 837.5,799.5C 839.435,798.85 841.435,798.517 843.5,798.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#50cbe4\",d:\"M 796.5,801.5 C 760.336,802.333 724.002,802.833 687.5,803C 685.913,803.862 684.246,804.529 682.5,805C 678.895,807.71 676.395,811.21 675,815.5C 674.31,816.738 673.81,816.738 673.5,815.5C 674.618,808.426 678.618,803.926 685.5,802C 722.498,801.5 759.498,801.333 796.5,801.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#47768a\",d:\"M 843.5,798.5 C 876.664,797.336 909.997,797.169 943.5,798C 951.149,798.515 956.815,802.015 960.5,808.5C 961.511,810.372 962.345,812.372 963,814.5C 963.667,839.5 963.667,864.5 963,889.5C 962.583,890.756 961.75,891.423 960.5,891.5C 959.85,891.196 959.183,890.863 958.5,890.5C 957.901,887.083 956.568,884.083 954.5,881.5C 951.652,873.494 945.985,868.327 937.5,866C 909.169,865.5 880.835,865.333 852.5,865.5C 859.752,864.665 867.085,863.499 874.5,862C 872.939,861.682 871.772,860.849 871,859.5C 870.311,860.357 869.478,861.023 868.5,861.5C 867.15,860.05 865.484,859.383 863.5,859.5C 863.5,857.5 863.5,855.5 863.5,853.5C 874.146,853.329 874.146,852.829 863.5,852C 868.751,851.196 873.918,851.363 879,852.5C 879.494,850.866 879.66,849.199 879.5,847.5C 880.5,847.5 881.5,847.5 882.5,847.5C 882.714,845.856 882.38,844.356 881.5,843C 870.172,842.5 858.838,842.333 847.5,842.5C 847.351,841.448 847.517,840.448 848,839.5C 849.996,839.004 851.663,838.004 853,836.5C 853.667,837.167 854.333,837.833 855,838.5C 856.992,836.305 858.159,833.972 858.5,831.5C 860.071,830.691 861.738,830.357 863.5,830.5C 886.167,830.5 908.833,830.5 931.5,830.5C 931.5,828.833 931.5,827.167 931.5,825.5C 913.833,825.5 896.167,825.5 878.5,825.5C 873.695,824.513 868.695,824.179 863.5,824.5C 863.5,823.5 863.5,822.5 863.5,821.5C 876.837,821.667 890.171,821.5 903.5,821C 907.233,820.934 910.733,820.101 914,818.5C 919.126,819.469 924.293,819.969 929.5,820C 927.63,818.634 925.63,817.467 923.5,816.5C 903.535,817.821 883.535,817.821 863.5,816.5C 871.328,814.617 871.328,813.283 863.5,812.5C 863.5,811.5 863.5,810.5 863.5,809.5C 860.339,808.53 857.506,806.863 855,804.5C 855.311,803.065 855.145,801.732 854.5,800.5C 852.189,799.425 849.856,799.425 847.5,800.5C 846.817,798.824 845.483,798.157 843.5,798.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1f8fb\",d:\"M 897.5,842.5 C 900.5,842.5 903.5,842.5 906.5,842.5C 906.714,844.144 906.38,845.644 905.5,847C 902.854,847.497 900.187,847.664 897.5,847.5C 897.5,845.833 897.5,844.167 897.5,842.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#def6f9\",d:\"M 922.5,842.5 C 925.833,842.5 929.167,842.5 932.5,842.5C 932.5,844.167 932.5,845.833 932.5,847.5C 928.833,847.5 925.167,847.5 921.5,847.5C 921.366,845.708 921.699,844.042 922.5,842.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bef8fb\",d:\"M 682.5,800.5 C 720.833,800.5 759.167,800.5 797.5,800.5C 797.833,800.5 798.167,800.5 798.5,800.5C 798.158,801.338 797.492,801.672 796.5,801.5C 759.498,801.333 722.498,801.5 685.5,802C 678.618,803.926 674.618,808.426 673.5,815.5C 672.9,816.9 671.9,817.9 670.5,818.5C 670.518,812.101 672.851,806.768 677.5,802.5C 679.05,801.559 680.716,800.893 682.5,800.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e3f6fd\",d:\"M 797.5,800.5 C 759.167,800.5 720.833,800.5 682.5,800.5C 682.918,799.778 683.584,799.278 684.5,799C 721.167,798.333 757.833,798.333 794.5,799C 795.737,799.232 796.737,799.732 797.5,800.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1f8fe\",d:\"M 639.5,799.5 C 601.67,800.499 563.67,800.832 525.5,800.5C 525.5,800.167 525.5,799.833 525.5,799.5C 563.627,798.176 601.627,798.176 639.5,799.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f2343\",d:\"M 532.5,769.5 C 535.008,771.924 538.008,773.59 541.5,774.5C 603.999,775.665 666.665,775.832 729.5,775C 731.723,774.434 733.723,773.6 735.5,772.5C 735.833,772.5 736.167,772.5 736.5,772.5C 737.239,772.369 737.906,772.536 738.5,773C 737.01,773.745 736.01,774.912 735.5,776.5C 736.331,778.473 736.498,780.473 736,782.5C 735.517,781.552 735.351,780.552 735.5,779.5C 730.464,779.588 725.464,780.088 720.5,781C 725.541,782.008 725.208,782.508 719.5,782.5C 719.67,781.178 719.337,780.011 718.5,779C 676.125,779.185 633.792,779.352 591.5,779.5C 584.61,779.309 577.776,778.643 571,777.5C 562.005,778.17 552.838,778.336 543.5,778C 537.278,776.46 531.944,773.46 527.5,769C 529.107,769.019 530.774,769.185 532.5,769.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#161f3e\",d:\"M 964.5,666.5 C 965.79,667.058 966.623,668.058 967,669.5C 967.667,697.5 967.667,725.5 967,753.5C 964.853,766.92 957.02,774.754 943.5,777C 891.833,777.667 840.167,777.667 788.5,777C 781.717,776.685 777.051,773.518 774.5,767.5C 775.167,767.5 775.833,767.5 776.5,767.5C 776.833,767.5 777.167,767.5 777.5,767.5C 779.539,770.392 782.206,772.392 785.5,773.5C 786.263,774.268 787.263,774.768 788.5,775C 840.668,775.832 892.668,775.665 944.5,774.5C 954.091,773.717 960.091,768.717 962.5,759.5C 963.161,758.282 963.828,756.949 964.5,755.5C 965.817,725.797 965.817,696.13 964.5,666.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#303f61\",d:\"M 785.5,773.5 C 838.477,774.483 891.477,774.816 944.5,774.5C 892.668,775.665 840.668,775.832 788.5,775C 787.263,774.768 786.263,774.268 785.5,773.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#313f5f\",d:\"M 735.5,772.5 C 733.723,773.6 731.723,774.434 729.5,775C 666.665,775.832 603.999,775.665 541.5,774.5C 603.501,774.667 665.501,774.5 727.5,774C 730.117,773.178 732.784,772.678 735.5,772.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3d5672\",d:\"M 744.5,760.5 C 742.826,765.186 740.16,769.186 736.5,772.5C 736.167,772.5 735.833,772.5 735.5,772.5C 732.784,772.678 730.117,773.178 727.5,774C 665.501,774.5 603.501,774.667 541.5,774.5C 538.008,773.59 535.008,771.924 532.5,769.5C 532.167,768.833 531.833,768.167 531.5,767.5C 534.084,767.569 536.084,768.735 537.5,771C 561.004,771.83 584.337,771.663 607.5,770.5C 649.433,771.827 691.433,771.827 733.5,770.5C 735.571,768.815 737.571,767.148 739.5,765.5C 740.855,763.479 742.521,761.812 744.5,760.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#405c7c\",d:\"M 962.5,759.5 C 960.091,768.717 954.091,773.717 944.5,774.5C 891.477,774.816 838.477,774.483 785.5,773.5C 782.206,772.392 779.539,770.392 777.5,767.5C 779.196,767.685 780.529,768.519 781.5,770C 783.833,770.333 786.167,770.667 788.5,771C 840.5,771.667 892.5,771.667 944.5,771C 951.868,770.314 957.201,766.648 960.5,760C 961.094,759.536 961.761,759.369 962.5,759.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#496f86\",d:\"M 963.5,666.5 C 963.833,666.5 964.167,666.5 964.5,666.5C 965.817,696.13 965.817,725.797 964.5,755.5C 963.828,756.949 963.161,758.282 962.5,759.5C 961.761,759.369 961.094,759.536 960.5,760C 957.201,766.648 951.868,770.314 944.5,771C 892.5,771.667 840.5,771.667 788.5,771C 786.167,770.667 783.833,770.333 781.5,770C 780.529,768.519 779.196,767.685 777.5,767.5C 777.167,767.5 776.833,767.5 776.5,767.5C 774.751,763.793 772.918,760.127 771,756.5C 770.17,727.33 770.336,698.33 771.5,669.5C 771.409,671.698 772.075,672.031 773.5,670.5C 772.794,697.44 772.627,724.44 773,751.5C 774,754.167 775,756.833 776,759.5C 776.908,761.439 778.408,762.439 780.5,762.5C 781.167,764.167 781.833,765.833 782.5,767.5C 785.545,767.342 788.379,768.009 791,769.5C 792.734,768.751 794.567,768.251 796.5,768C 795.929,766.795 795.262,765.628 794.5,764.5C 791.663,763.669 789.496,762.002 788,759.5C 787.582,755.822 787.082,752.155 786.5,748.5C 786.833,747.5 787.167,746.5 787.5,745.5C 788.086,745.709 788.586,746.043 789,746.5C 789.333,742.5 789.667,738.5 790,734.5C 791.011,733.663 792.178,733.33 793.5,733.5C 794.109,729.542 792.442,727.376 788.5,727C 787.941,726.275 787.608,725.442 787.5,724.5C 789.138,720.061 789.971,715.394 790,710.5C 792.621,708.551 794.454,706.051 795.5,703C 795.355,702.228 795.022,701.561 794.5,701C 787.454,700.332 785.788,697.165 789.5,691.5C 792.732,699.274 798.399,702.607 806.5,701.5C 807.5,701.5 808.5,701.5 809.5,701.5C 809.5,703.167 809.5,704.833 809.5,706.5C 806.338,705.889 803.171,705.222 800,704.5C 790.587,708.811 787.921,715.811 792,725.5C 794.4,729.395 797.9,731.395 802.5,731.5C 803.11,732.391 803.443,733.391 803.5,734.5C 791.655,737.19 787.988,744.19 792.5,755.5C 794.201,760.205 797.534,762.538 802.5,762.5C 800.9,763.682 800.567,765.015 801.5,766.5C 800.975,767.192 800.308,767.692 799.5,768C 804.878,769.414 810.378,770.247 816,770.5C 853.638,769.186 891.638,769.186 930,770.5C 935.114,768.783 940.281,768.45 945.5,769.5C 947.741,768.929 949.408,767.596 950.5,765.5C 951.086,765.709 951.586,766.043 952,766.5C 953.973,764.772 955.806,762.939 957.5,761C 956.366,759.984 956.699,759.317 958.5,759C 958.043,758.586 957.709,758.086 957.5,757.5C 960.147,754.88 960.147,752.214 957.5,749.5C 958.33,747.172 959.163,744.838 960,742.5C 961.664,717.17 962.83,691.836 963.5,666.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#427994\",d:\"M 633.5,731.5 C 639.167,731.5 644.833,731.5 650.5,731.5C 648.205,734.297 645.705,736.964 643,739.5C 639.311,745.368 639.978,750.701 645,755.5C 647.622,760.717 651.122,761.55 655.5,758C 668.889,757.925 682.222,757.258 695.5,756C 702.13,748.501 702.13,741.001 695.5,733.5C 699.514,733.334 703.514,733.501 707.5,734C 708.634,735.016 708.301,735.683 706.5,736C 708.301,736.317 708.634,736.984 707.5,738C 708.973,738.71 709.64,739.876 709.5,741.5C 707.799,741.034 706.299,741.034 705,741.5C 704.667,745.167 704.333,748.833 704,752.5C 702.833,754.333 701.333,755.833 699.5,757C 685.058,757.987 670.724,759.32 656.5,761C 655.663,762.011 655.33,763.178 655.5,764.5C 652.272,764.701 649.105,764.367 646,763.5C 643.64,765.143 641.806,766.976 640.5,769C 645.44,768.674 650.44,768.508 655.5,768.5C 655.5,767.5 655.5,766.5 655.5,765.5C 660.833,765.5 666.167,765.5 671.5,765.5C 671.5,766.5 671.5,767.5 671.5,768.5C 688.829,769.149 706.163,769.815 723.5,770.5C 727.45,770.793 731.116,769.96 734.5,768C 735.075,763.83 736.742,762.997 739.5,765.5C 737.571,767.148 735.571,768.815 733.5,770.5C 691.433,771.827 649.433,771.827 607.5,770.5C 617.992,769.67 628.659,769.17 639.5,769C 638.167,768 636.833,767 635.5,766C 639.882,765.997 641.549,763.831 640.5,759.5C 638.304,759.59 636.137,759.923 634,760.5C 632.624,760.316 631.791,759.649 631.5,758.5C 632.822,758.67 633.989,758.337 635,757.5C 638.809,752.067 640.143,746.067 639,739.5C 637.989,738.663 636.822,738.33 635.5,738.5C 634.067,736.442 633.4,734.108 633.5,731.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#457a8d\",d:\"M 962.5,665.5 C 963.167,665.5 963.5,665.833 963.5,666.5C 962.83,691.836 961.664,717.17 960,742.5C 959.163,744.838 958.33,747.172 957.5,749.5C 960.147,752.214 960.147,754.88 957.5,757.5C 957.709,758.086 958.043,758.586 958.5,759C 956.699,759.317 956.366,759.984 957.5,761C 955.806,762.939 953.973,764.772 952,766.5C 951.586,766.043 951.086,765.709 950.5,765.5C 949.408,767.596 947.741,768.929 945.5,769.5C 940.281,768.45 935.114,768.783 930,770.5C 891.638,769.186 853.638,769.186 816,770.5C 810.378,770.247 804.878,769.414 799.5,768C 800.308,767.692 800.975,767.192 801.5,766.5C 800.567,765.015 800.9,763.682 802.5,762.5C 806.511,762.498 810.178,761.332 813.5,759C 814.252,758.329 814.586,757.496 814.5,756.5C 818.833,749.953 818.166,743.786 812.5,738C 809.764,736.153 806.764,734.986 803.5,734.5C 803.443,733.391 803.11,732.391 802.5,731.5C 806.162,731.966 809.495,731.299 812.5,729.5C 814.144,729.286 815.644,729.62 817,730.5C 817.333,729.833 817.667,729.167 818,728.5C 818.333,722.833 818.667,717.167 819,711.5C 819.667,712.833 820.333,714.167 821,715.5C 821.202,713.744 821.702,712.078 822.5,710.5C 823.086,710.709 823.586,711.043 824,711.5C 824.177,715.356 824.677,719.023 825.5,722.5C 825.336,725.187 825.503,727.854 826,730.5C 828.306,731.137 829.473,732.637 829.5,735C 828.291,737.319 827.458,739.819 827,742.5C 826.075,743.047 825.242,743.713 824.5,744.5C 825.39,745.711 825.39,747.045 824.5,748.5C 825.49,751.169 827.156,751.835 829.5,750.5C 829.5,750.833 829.5,751.167 829.5,751.5C 827.932,753.844 828.265,755.844 830.5,757.5C 833.366,758.208 836.2,758.875 839,759.5C 874.411,759.607 909.911,759.44 945.5,759C 952.289,753.706 953.123,747.539 948,740.5C 946.89,738.963 945.39,738.297 943.5,738.5C 943.5,737.5 943.5,736.5 943.5,735.5C 934.167,735.5 924.833,735.5 915.5,735.5C 916.263,734.732 917.263,734.232 918.5,734C 916.744,733.798 915.078,733.298 913.5,732.5C 914,732.167 914.5,731.833 915,731.5C 919.596,731.254 923.762,730.254 927.5,728.5C 933.842,728.666 940.175,728.5 946.5,728C 947.333,727.167 948.167,726.333 949,725.5C 949.667,721.833 949.667,718.167 949,714.5C 947.618,712.558 945.785,711.225 943.5,710.5C 943.5,710.167 943.5,709.833 943.5,709.5C 933.013,708.506 922.346,708.172 911.5,708.5C 919.273,708.131 926.94,706.798 934.5,704.5C 933.754,703.264 933.421,701.93 933.5,700.5C 936.85,700.665 940.183,700.498 943.5,700C 937.74,700.122 932.407,699.289 927.5,697.5C 934.09,697.811 940.59,697.478 947,696.5C 948.37,692.725 949.536,688.891 950.5,685C 950.561,683.289 949.894,681.956 948.5,681C 948.833,680.667 949.167,680.333 949.5,680C 947.842,678.337 945.842,677.504 943.5,677.5C 943.5,676.167 943.5,674.833 943.5,673.5C 941.571,673.769 939.905,673.269 938.5,672C 939.5,671.833 940.5,671.667 941.5,671.5C 944.326,672.985 947.326,673.985 950.5,674.5C 950.33,673.178 950.663,672.011 951.5,671C 959.137,669.553 960.97,672.053 957,678.5C 955.671,677.506 954.338,676.506 953,675.5C 952.5,675.833 952,676.167 951.5,676.5C 953.438,679.39 955.605,682.056 958,684.5C 958.333,683.833 958.667,683.167 959,682.5C 959.333,683.833 959.667,685.167 960,686.5C 960.52,682.929 961.353,679.429 962.5,676C 961.415,673.211 961.415,670.378 962.5,667.5C 962.5,666.833 962.5,666.167 962.5,665.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#22344c\",d:\"M 792.5,755.5 C 797.845,759.293 803.845,760.46 810.5,759C 811.984,758.338 813.317,757.504 814.5,756.5C 814.586,757.496 814.252,758.329 813.5,759C 810.178,761.332 806.511,762.498 802.5,762.5C 797.534,762.538 794.201,760.205 792.5,755.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#321c27\",d:\"M 803.5,734.5 C 806.764,734.986 809.764,736.153 812.5,738C 818.166,743.786 818.833,749.953 814.5,756.5C 813.317,757.504 811.984,758.338 810.5,759C 803.845,760.46 797.845,759.293 792.5,755.5C 787.988,744.19 791.655,737.19 803.5,734.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7c6b74\",d:\"M 635.5,738.5 C 636.822,738.33 637.989,738.663 639,739.5C 640.143,746.067 638.809,752.067 635,757.5C 633.989,758.337 632.822,758.67 631.5,758.5C 612.659,758.83 593.993,758.497 575.5,757.5C 593.836,757.667 612.17,757.5 630.5,757C 633.056,755.945 634.723,754.112 635.5,751.5C 636.167,751.5 636.5,751.167 636.5,750.5C 638.023,746.388 637.689,742.388 635.5,738.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d77274\",d:\"M 575.5,735.5 C 575.833,735.5 576.167,735.5 576.5,735.5C 575.749,738.749 574.749,741.915 573.5,745C 574.394,748.596 575.394,752.096 576.5,755.5C 594.146,756.597 611.813,756.763 629.5,756C 631.413,754.276 633.413,752.776 635.5,751.5C 634.723,754.112 633.056,755.945 630.5,757C 612.17,757.5 593.836,757.667 575.5,757.5C 575.5,756.833 575.5,756.167 575.5,755.5C 573.51,752.492 572.51,749.159 572.5,745.5C 572.51,741.841 573.51,738.508 575.5,735.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e86265\",d:\"M 811.5,741.5 C 815.15,745.601 815.483,750.101 812.5,755C 810.922,756.094 809.255,756.928 807.5,757.5C 805.143,757.663 802.81,757.497 800.5,757C 799.692,755.294 798.359,754.461 796.5,754.5C 796.5,753.5 796.5,752.5 796.5,751.5C 797.5,751.5 798.5,751.5 799.5,751.5C 804.59,754.466 808.257,753.132 810.5,747.5C 811.461,745.735 811.795,743.735 811.5,741.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f96a64\",d:\"M 576.5,735.5 C 577.833,735.5 579.167,735.5 580.5,735.5C 581.067,737.03 581.733,738.53 582.5,740C 584.708,740.191 586.708,740.691 588.5,741.5C 582.095,740.406 579.762,743.073 581.5,749.5C 591.015,749.827 600.348,749.494 609.5,748.5C 609.5,746.5 609.5,744.5 609.5,742.5C 610.117,742.611 610.617,742.944 611,743.5C 612.683,748.101 611.183,750.601 606.5,751C 607.868,753.185 609.868,754.351 612.5,754.5C 615.865,753.996 619.198,753.329 622.5,752.5C 621.009,751.756 619.509,751.09 618,750.5C 618.087,746.91 616.92,743.91 614.5,741.5C 614.833,740.833 615.167,740.167 615.5,739.5C 616.861,741.028 618.028,742.695 619,744.5C 619.278,743.584 619.778,742.918 620.5,742.5C 620.5,744.5 620.5,746.5 620.5,748.5C 625.315,749.145 626.981,747.312 625.5,743C 624.207,742.51 622.873,742.343 621.5,742.5C 622.204,740.656 623.537,740.156 625.5,741C 627.026,742.887 629.026,743.887 631.5,744C 632.09,745.509 632.756,747.009 633.5,748.5C 634.086,748.291 634.586,747.957 635,747.5C 635.495,745.527 635.662,743.527 635.5,741.5C 636.477,744.287 636.81,747.287 636.5,750.5C 636.5,751.167 636.167,751.5 635.5,751.5C 633.413,752.776 631.413,754.276 629.5,756C 611.813,756.763 594.146,756.597 576.5,755.5C 575.394,752.096 574.394,748.596 573.5,745C 574.749,741.915 575.749,738.749 576.5,735.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#38d4f9\",d:\"M 650.5,731.5 C 665.167,731.5 679.833,731.5 694.5,731.5C 694.328,732.492 694.662,733.158 695.5,733.5C 702.13,741.001 702.13,748.501 695.5,756C 682.222,757.258 668.889,757.925 655.5,758C 651.122,761.55 647.622,760.717 645,755.5C 639.978,750.701 639.311,745.368 643,739.5C 645.705,736.964 648.205,734.297 650.5,731.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9ebe9\",d:\"M 810.5,747.5 C 808.257,753.132 804.59,754.466 799.5,751.5C 796.796,743.552 799.462,740.219 807.5,741.5C 809.577,742.988 810.577,744.988 810.5,747.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b47d84\",d:\"M 575.5,735.5 C 573.51,738.508 572.51,741.841 572.5,745.5C 572.51,749.159 573.51,752.492 575.5,755.5C 573.983,755.489 572.816,754.823 572,753.5C 571.833,751.167 571.667,748.833 571.5,746.5C 570.722,741.914 572.056,738.247 575.5,735.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e17e7d\",d:\"M 805.5,737.5 C 808.198,737.845 810.198,739.178 811.5,741.5C 811.795,743.735 811.461,745.735 810.5,747.5C 810.577,744.988 809.577,742.988 807.5,741.5C 799.462,740.219 796.796,743.552 799.5,751.5C 798.5,751.5 797.5,751.5 796.5,751.5C 796.5,752.5 796.5,753.5 796.5,754.5C 798.359,754.461 799.692,755.294 800.5,757C 802.81,757.497 805.143,757.663 807.5,757.5C 802.798,759.41 798.798,758.41 795.5,754.5C 794.7,749.667 795.533,745 798,740.5C 800.48,739.188 802.98,738.188 805.5,737.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#36d1f9\",d:\"M 830.5,743.5 C 830.351,744.552 830.517,745.552 831,746.5C 867.598,745.836 904.098,745.17 940.5,744.5C 942.415,744.784 944.081,744.451 945.5,743.5C 947.652,748.686 946.319,752.853 941.5,756C 905.5,756.667 869.5,756.667 833.5,756C 832.267,754.333 830.933,752.833 829.5,751.5C 829.5,751.167 829.5,750.833 829.5,750.5C 829.198,747.941 829.532,745.607 830.5,743.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec7f79\",d:\"M 588.5,741.5 C 595.687,741.175 602.687,741.509 609.5,742.5C 604.833,742.5 600.167,742.5 595.5,742.5C 591.5,742.5 587.5,742.5 583.5,742.5C 583.5,744.5 583.5,746.5 583.5,748.5C 587.5,748.5 591.5,748.5 595.5,748.5C 598.5,748.5 601.5,748.5 604.5,748.5C 605.167,743.167 605.833,743.167 606.5,748.5C 607.5,748.5 608.5,748.5 609.5,748.5C 600.348,749.494 591.015,749.827 581.5,749.5C 579.762,743.073 582.095,740.406 588.5,741.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cbfdfd\",d:\"M 654.5,742.5 C 659.328,742.385 660.661,744.552 658.5,749C 653.57,749.427 652.237,747.26 654.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbc1ba\",d:\"M 595.5,742.5 C 600.167,742.5 604.833,742.5 609.5,742.5C 609.5,744.5 609.5,746.5 609.5,748.5C 608.5,748.5 607.5,748.5 606.5,748.5C 605.833,743.167 605.167,743.167 604.5,748.5C 601.5,748.5 598.5,748.5 595.5,748.5C 596.263,747.732 597.263,747.232 598.5,747C 597.778,745.249 596.778,743.749 595.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fadbd2\",d:\"M 595.5,742.5 C 596.778,743.749 597.778,745.249 598.5,747C 597.263,747.232 596.263,747.732 595.5,748.5C 591.5,748.5 587.5,748.5 583.5,748.5C 583.5,746.5 583.5,744.5 583.5,742.5C 587.5,742.5 591.5,742.5 595.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9f9fd\",d:\"M 685.5,742.5 C 686.5,742.5 687.5,742.5 688.5,742.5C 688.739,744.467 688.406,746.301 687.5,748C 681.843,748.095 676.176,747.928 670.5,747.5C 670.5,746.167 670.5,744.833 670.5,743.5C 675.695,743.821 680.695,743.487 685.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a3eaf6\",d:\"M 831.5,742.5 C 867.485,744.494 903.818,745.16 940.5,744.5C 904.098,745.17 867.598,745.836 831,746.5C 830.517,745.552 830.351,744.552 830.5,743.5C 830.5,742.833 830.833,742.5 831.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ab6a71\",d:\"M 630.5,731.5 C 631.167,731.5 631.833,731.5 632.5,731.5C 632.833,731.5 633.167,731.5 633.5,731.5C 633.4,734.108 634.067,736.442 635.5,738.5C 637.689,742.388 638.023,746.388 636.5,750.5C 636.81,747.287 636.477,744.287 635.5,741.5C 634.343,739.322 633.01,737.322 631.5,735.5C 631.167,734.167 630.833,732.833 630.5,731.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ddf4fb\",d:\"M 832.5,740.5 C 858.833,740.5 885.167,740.5 911.5,740.5C 922.187,740.168 932.854,740.501 943.5,741.5C 943.855,742.522 944.522,743.189 945.5,743.5C 944.081,744.451 942.415,744.784 940.5,744.5C 903.818,745.16 867.485,744.494 831.5,742.5C 831.833,741.833 832.167,741.167 832.5,740.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecbebf\",d:\"M 805.5,737.5 C 802.98,738.188 800.48,739.188 798,740.5C 795.533,745 794.7,749.667 795.5,754.5C 790.625,747.412 791.958,741.579 799.5,737C 801.712,736.211 803.712,736.378 805.5,737.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3986a9\",d:\"M 911.5,740.5 C 885.167,740.5 858.833,740.5 832.5,740.5C 831.833,740.5 831.5,740.167 831.5,739.5C 839.716,738.934 847.882,737.934 856,736.5C 874.489,737.379 892.989,737.713 911.5,737.5C 911.5,738.5 911.5,739.5 911.5,740.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fb635e\",d:\"M 631.5,735.5 C 633.01,737.322 634.343,739.322 635.5,741.5C 635.662,743.527 635.495,745.527 635,747.5C 634.586,747.957 634.086,748.291 633.5,748.5C 632.756,747.009 632.09,745.509 631.5,744C 629.026,743.887 627.026,742.887 625.5,741C 623.537,740.156 622.204,740.656 621.5,742.5C 621.167,742.5 620.833,742.5 620.5,742.5C 619.778,742.918 619.278,743.584 619,744.5C 618.028,742.695 616.861,741.028 615.5,739.5C 615.167,740.167 614.833,740.833 614.5,741.5C 616.92,743.91 618.087,746.91 618,750.5C 619.509,751.09 621.009,751.756 622.5,752.5C 619.198,753.329 615.865,753.996 612.5,754.5C 609.868,754.351 607.868,753.185 606.5,751C 611.183,750.601 612.683,748.101 611,743.5C 610.617,742.944 610.117,742.611 609.5,742.5C 602.687,741.509 595.687,741.175 588.5,741.5C 586.708,740.691 584.708,740.191 582.5,740C 581.733,738.53 581.067,737.03 580.5,735.5C 580.5,734.5 580.5,733.5 580.5,732.5C 591.466,733.35 602.466,733.35 613.5,732.5C 618.833,732.833 624.167,733.167 629.5,733.5C 629.855,734.522 630.522,735.189 631.5,735.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fce3e7\",d:\"M 620.5,742.5 C 620.833,742.5 621.167,742.5 621.5,742.5C 622.873,742.343 624.207,742.51 625.5,743C 626.981,747.312 625.315,749.145 620.5,748.5C 620.5,746.5 620.5,744.5 620.5,742.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3d829b\",d:\"M 915.5,735.5 C 924.833,735.5 934.167,735.5 943.5,735.5C 943.5,736.5 943.5,737.5 943.5,738.5C 945.39,738.297 946.89,738.963 948,740.5C 953.123,747.539 952.289,753.706 945.5,759C 909.911,759.44 874.411,759.607 839,759.5C 836.2,758.875 833.366,758.208 830.5,757.5C 828.265,755.844 827.932,753.844 829.5,751.5C 830.933,752.833 832.267,754.333 833.5,756C 869.5,756.667 905.5,756.667 941.5,756C 946.319,752.853 947.652,748.686 945.5,743.5C 944.522,743.189 943.855,742.522 943.5,741.5C 932.854,740.501 922.187,740.168 911.5,740.5C 911.5,739.5 911.5,738.5 911.5,737.5C 892.989,737.713 874.489,737.379 856,736.5C 847.882,737.934 839.716,738.934 831.5,739.5C 831.5,738.5 831.5,737.5 831.5,736.5C 839.069,736.581 839.069,735.581 831.5,733.5C 831.5,732.5 831.5,731.5 831.5,730.5C 854.628,731.455 877.795,731.455 901,730.5C 904.5,730.833 908,731.167 911.5,731.5C 911.291,732.086 910.957,732.586 910.5,733C 894.833,733.333 879.167,733.667 863.5,734C 863.833,734.333 864.167,734.667 864.5,735C 881.411,736.054 898.411,736.221 915.5,735.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e26d6a\",d:\"M 630.5,731.5 C 630.833,732.833 631.167,734.167 631.5,735.5C 630.522,735.189 629.855,734.522 629.5,733.5C 624.167,733.167 618.833,732.833 613.5,732.5C 602.466,733.35 591.466,733.35 580.5,732.5C 580.5,733.5 580.5,734.5 580.5,735.5C 579.167,735.5 577.833,735.5 576.5,735.5C 577.028,734.279 577.695,733.113 578.5,732C 595.83,731.5 613.163,731.333 630.5,731.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e3a39f\",d:\"M 575.5,730.5 C 594.674,730.17 613.674,730.503 632.5,731.5C 631.833,731.5 631.167,731.5 630.5,731.5C 613.163,731.333 595.83,731.5 578.5,732C 577.695,733.113 577.028,734.279 576.5,735.5C 576.167,735.5 575.833,735.5 575.5,735.5C 575.5,734.167 575.5,732.833 575.5,731.5C 575.5,731.167 575.5,730.833 575.5,730.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b0cbd4\",d:\"M 543.5,728.5 C 553.781,730.476 564.448,731.143 575.5,730.5C 575.5,730.833 575.5,731.167 575.5,731.5C 564.5,731.5 553.5,731.5 542.5,731.5C 542.263,730.209 542.596,729.209 543.5,728.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#427f8c\",d:\"M 927.5,728.5 C 923.762,730.254 919.596,731.254 915,731.5C 914.5,731.833 914,732.167 913.5,732.5C 915.078,733.298 916.744,733.798 918.5,734C 917.263,734.232 916.263,734.732 915.5,735.5C 898.411,736.221 881.411,736.054 864.5,735C 864.167,734.667 863.833,734.333 863.5,734C 879.167,733.667 894.833,733.333 910.5,733C 910.957,732.586 911.291,732.086 911.5,731.5C 908,731.167 904.5,730.833 901,730.5C 877.795,731.455 854.628,731.455 831.5,730.5C 831.5,731.5 831.5,732.5 831.5,733.5C 839.069,735.581 839.069,736.581 831.5,736.5C 831.5,737.5 831.5,738.5 831.5,739.5C 831.5,740.167 831.833,740.5 832.5,740.5C 832.167,741.167 831.833,741.833 831.5,742.5C 830.833,742.5 830.5,742.833 830.5,743.5C 829.532,745.607 829.198,747.941 829.5,750.5C 827.156,751.835 825.49,751.169 824.5,748.5C 825.39,747.045 825.39,745.711 824.5,744.5C 825.242,743.713 826.075,743.047 827,742.5C 827.458,739.819 828.291,737.319 829.5,735C 829.473,732.637 828.306,731.137 826,730.5C 825.503,727.854 825.336,725.187 825.5,722.5C 825.335,719.15 825.502,715.817 826,712.5C 826.414,712.043 826.914,711.709 827.5,711.5C 827.658,714.717 827.825,718.05 828,721.5C 828.862,723.087 829.529,724.754 830,726.5C 831.399,727.227 832.899,727.727 834.5,728C 865.498,728.5 896.498,728.667 927.5,728.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#daecef\",d:\"M 708.5,722.5 C 709.5,722.5 710.5,722.5 711.5,722.5C 711.5,724.5 711.5,726.5 711.5,728.5C 714.187,728.664 716.854,728.497 719.5,728C 720.406,726.301 720.739,724.467 720.5,722.5C 721.833,722.5 723.167,722.5 724.5,722.5C 724.5,724.167 724.5,725.833 724.5,727.5C 726.92,727.292 729.253,727.626 731.5,728.5C 732.386,729.325 732.719,730.325 732.5,731.5C 729.813,731.336 727.146,731.503 724.5,732C 723.5,734 722.5,734 721.5,732C 712.506,731.5 703.506,731.334 694.5,731.5C 679.833,731.5 665.167,731.5 650.5,731.5C 644.833,731.5 639.167,731.5 633.5,731.5C 633.167,731.5 632.833,731.5 632.5,731.5C 613.674,730.503 594.674,730.17 575.5,730.5C 564.448,731.143 553.781,730.476 543.5,728.5C 547.97,727.514 552.637,727.181 557.5,727.5C 570.833,727.5 584.167,727.5 597.5,727.5C 599.833,727.5 602.167,727.5 604.5,727.5C 617.833,727.5 631.167,727.5 644.5,727.5C 663.833,727.5 683.167,727.5 702.5,727.5C 704.5,727.5 706.5,727.5 708.5,727.5C 708.5,725.833 708.5,724.167 708.5,722.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#152b4a\",d:\"M 702.5,703.5 C 702.5,711.5 702.5,719.5 702.5,727.5C 683.167,727.5 663.833,727.5 644.5,727.5C 643.5,726.833 642.5,726.167 641.5,725.5C 643.167,725.5 644.833,725.5 646.5,725.5C 654.167,726.833 661.833,726.833 669.5,725.5C 679.833,725.5 690.167,725.5 700.5,725.5C 700.5,722.833 700.5,720.167 700.5,717.5C 700.229,712.566 700.896,707.9 702.5,703.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c6dad\",d:\"M 699.5,717.5 C 699.833,717.5 700.167,717.5 700.5,717.5C 700.5,720.167 700.5,722.833 700.5,725.5C 690.167,725.5 679.833,725.5 669.5,725.5C 668.99,722.612 669.656,720.279 671.5,718.5C 670.699,720.042 670.366,721.708 670.5,723.5C 680.178,723.575 689.844,723.908 699.5,724.5C 699.5,722.167 699.5,719.833 699.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#712d2e\",d:\"M 599.5,717.5 C 601.5,717.5 603.5,717.5 605.5,717.5C 607.04,721.068 606.707,724.402 604.5,727.5C 602.167,727.5 599.833,727.5 597.5,727.5C 590.39,725.848 583.057,724.848 575.5,724.5C 585.167,724.5 594.833,724.5 604.5,724.5C 604.5,722.833 604.5,721.167 604.5,719.5C 602.833,718.833 601.167,718.167 599.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f9ed5\",d:\"M 693.5,718.5 C 695.265,717.539 697.265,717.205 699.5,717.5C 699.5,719.833 699.5,722.167 699.5,724.5C 689.844,723.908 680.178,723.575 670.5,723.5C 670.366,721.708 670.699,720.042 671.5,718.5C 676.833,718.5 682.167,718.5 687.5,718.5C 684.311,719.166 680.977,719.833 677.5,720.5C 684.331,722.926 691.331,723.592 698.5,722.5C 698.5,721.167 698.5,719.833 698.5,718.5C 696.833,718.5 695.167,718.5 693.5,718.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5173b4\",d:\"M 644.5,703.5 C 646.453,709.074 647.12,715.074 646.5,721.5C 646.5,722.833 646.5,724.167 646.5,725.5C 644.833,725.5 643.167,725.5 641.5,725.5C 641.5,725.167 641.5,724.833 641.5,724.5C 642.5,724.5 643.5,724.5 644.5,724.5C 644.5,717.5 644.5,710.5 644.5,703.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f85953\",d:\"M 575.5,723.5 C 575.5,722.833 575.5,722.167 575.5,721.5C 584.485,720.834 593.485,720.501 602.5,720.5C 602.5,721.5 602.5,722.5 602.5,723.5C 593.5,723.5 584.5,723.5 575.5,723.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#103156\",d:\"M 809.5,706.5 C 810.287,708.104 811.62,708.771 813.5,708.5C 813.284,710.681 814.117,712.347 816,713.5C 816.667,717.5 816.667,721.5 816,725.5C 814.898,726.949 813.731,728.282 812.5,729.5C 809.495,731.299 806.162,731.966 802.5,731.5C 797.9,731.395 794.4,729.395 792,725.5C 787.921,715.811 790.587,708.811 800,704.5C 803.171,705.222 806.338,705.889 809.5,706.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#52beea\",d:\"M 811.5,711.5 C 812.117,711.611 812.617,711.944 813,712.5C 813.667,716.167 813.667,719.833 813,723.5C 812.583,724.756 811.75,725.423 810.5,725.5C 807.42,725.748 804.42,726.414 801.5,727.5C 799.583,727.246 798.249,726.246 797.5,724.5C 800.728,723.586 804.061,723.253 807.5,723.5C 807.5,720.833 807.5,718.167 807.5,715.5C 808.833,715.5 810.167,715.5 811.5,715.5C 811.5,714.167 811.5,712.833 811.5,711.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3792be\",d:\"M 793.5,721.5 C 794.833,722.5 796.167,723.5 797.5,724.5C 798.249,726.246 799.583,727.246 801.5,727.5C 804.42,726.414 807.42,725.748 810.5,725.5C 810.489,727.017 809.823,728.184 808.5,729C 803.564,730.123 799.064,729.29 795,726.5C 793.991,724.975 793.491,723.308 793.5,721.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#93dcf2\",d:\"M 811.5,711.5 C 811.5,712.833 811.5,714.167 811.5,715.5C 810.167,715.5 808.833,715.5 807.5,715.5C 807.5,718.167 807.5,720.833 807.5,723.5C 804.061,723.253 800.728,723.586 797.5,724.5C 796.167,723.5 794.833,722.5 793.5,721.5C 791.136,711.685 795.136,707.185 805.5,708C 807.692,708.926 809.692,710.093 811.5,711.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3ae2fc\",d:\"M 687.5,718.5 C 689.5,718.5 691.5,718.5 693.5,718.5C 695.167,718.5 696.833,718.5 698.5,718.5C 698.5,719.833 698.5,721.167 698.5,722.5C 691.331,723.592 684.331,722.926 677.5,720.5C 680.977,719.833 684.311,719.166 687.5,718.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d86158\",d:\"M 591.5,719.5 C 595.833,719.5 600.167,719.5 604.5,719.5C 604.5,721.167 604.5,722.833 604.5,724.5C 594.833,724.5 585.167,724.5 575.5,724.5C 575.5,724.167 575.5,723.833 575.5,723.5C 584.5,723.5 593.5,723.5 602.5,723.5C 602.5,722.5 602.5,721.5 602.5,720.5C 593.485,720.501 584.485,720.834 575.5,721.5C 580.568,719.822 585.902,719.156 591.5,719.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbcfc0\",d:\"M 573.5,717.5 C 574.167,717.5 574.833,717.5 575.5,717.5C 580.833,718.167 586.167,718.833 591.5,719.5C 585.902,719.156 580.568,719.822 575.5,721.5C 575.5,722.167 575.5,722.833 575.5,723.5C 573.72,722.01 573.054,720.01 573.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ae7e77\",d:\"M 575.5,717.5 C 583.5,717.5 591.5,717.5 599.5,717.5C 601.167,718.167 602.833,718.833 604.5,719.5C 600.167,719.5 595.833,719.5 591.5,719.5C 586.167,718.833 580.833,718.167 575.5,717.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a1419\",d:\"M 573.5,715.5 C 574.167,715.5 574.833,715.5 575.5,715.5C 585.5,715.5 595.5,715.5 605.5,715.5C 605.5,716.167 605.5,716.833 605.5,717.5C 603.5,717.5 601.5,717.5 599.5,717.5C 591.5,717.5 583.5,717.5 575.5,717.5C 574.833,717.5 574.167,717.5 573.5,717.5C 573.5,716.833 573.5,716.167 573.5,715.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a94c8\",d:\"M 798.5,711.5 C 799.833,711.5 801.167,711.5 802.5,711.5C 802.855,714.067 803.521,716.567 804.5,719C 803.99,720.826 803.156,720.993 802,719.5C 801.51,718.207 801.343,716.873 801.5,715.5C 800.5,715.5 799.5,715.5 798.5,715.5C 797.36,719.019 797.36,717.685 798.5,711.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3fa3e1\",d:\"M 677.5,707.5 C 684.833,707.5 692.167,707.5 699.5,707.5C 699.5,710.167 699.5,712.833 699.5,715.5C 691.833,715.5 684.167,715.5 676.5,715.5C 674.852,713.544 674.185,711.211 674.5,708.5C 675.5,708.5 676.5,708.5 677.5,708.5C 677.5,708.167 677.5,707.833 677.5,707.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8db8f2\",d:\"M 643.5,703.5 C 643.833,703.5 644.167,703.5 644.5,703.5C 644.5,710.5 644.5,717.5 644.5,724.5C 643.5,724.5 642.5,724.5 641.5,724.5C 641.538,721.049 642.205,717.716 643.5,714.5C 642.954,712.865 642.62,711.199 642.5,709.5C 640.654,709.778 639.32,709.111 638.5,707.5C 640.586,706.511 642.253,705.178 643.5,703.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#db6c6b\",d:\"M 582.5,707.5 C 589.833,707.5 597.167,707.5 604.5,707.5C 604.5,709.833 604.5,712.167 604.5,714.5C 594.833,714.5 585.167,714.5 575.5,714.5C 575.5,714.167 575.5,713.833 575.5,713.5C 580.833,713.5 586.167,713.5 591.5,713.5C 595.167,713.5 598.833,713.5 602.5,713.5C 602.5,712.167 602.5,710.833 602.5,709.5C 599.5,709.5 596.5,709.5 593.5,709.5C 591.167,709.5 588.833,709.5 586.5,709.5C 585.167,708.833 583.833,708.167 582.5,707.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f6554b\",d:\"M 593.5,709.5 C 596.5,709.5 599.5,709.5 602.5,709.5C 602.5,710.833 602.5,712.167 602.5,713.5C 598.833,713.5 595.167,713.5 591.5,713.5C 592.806,712.533 593.473,711.199 593.5,709.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2077ba\",d:\"M 671.5,707.5 C 673.5,707.5 675.5,707.5 677.5,707.5C 677.5,707.833 677.5,708.167 677.5,708.5C 676.5,708.5 675.5,708.5 674.5,708.5C 674.185,711.211 674.852,713.544 676.5,715.5C 674.379,715.325 672.379,715.659 670.5,716.5C 669.842,715.207 669.508,713.707 669.5,712C 669.569,710.014 670.235,708.514 671.5,707.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#daecf5\",d:\"M 643.5,703.5 C 642.253,705.178 640.586,706.511 638.5,707.5C 639.32,709.111 640.654,709.778 642.5,709.5C 642.62,711.199 642.954,712.865 643.5,714.5C 642.205,717.716 641.538,721.049 641.5,724.5C 641.5,724.833 641.5,725.167 641.5,725.5C 638.167,725.5 634.833,725.5 631.5,725.5C 631.5,718.167 631.5,710.833 631.5,703.5C 635.5,703.5 639.5,703.5 643.5,703.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f98f5f\",d:\"M 586.5,709.5 C 588.833,709.5 591.167,709.5 593.5,709.5C 593.473,711.199 592.806,712.533 591.5,713.5C 586.167,713.5 580.833,713.5 575.5,713.5C 575.5,712.167 575.5,710.833 575.5,709.5C 579.167,709.5 582.833,709.5 586.5,709.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ac6b76\",d:\"M 923.5,709.5 C 930.167,709.5 936.833,709.5 943.5,709.5C 943.5,709.833 943.5,710.167 943.5,710.5C 943.5,710.833 943.5,711.167 943.5,711.5C 936.416,712.126 929.75,711.459 923.5,709.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a87f73\",d:\"M 923.5,709.5 C 929.75,711.459 936.416,712.126 943.5,711.5C 943.5,711.833 943.5,712.167 943.5,712.5C 906.165,712.333 868.832,712.5 831.5,713C 830.944,713.383 830.611,713.883 830.5,714.5C 830.167,714.5 829.833,714.5 829.5,714.5C 829.297,712.61 829.963,711.11 831.5,710C 862.165,709.5 892.832,709.333 923.5,709.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5adff9\",d:\"M 677.5,708.5 C 684.5,708.5 691.5,708.5 698.5,708.5C 698.5,710.5 698.5,712.5 698.5,714.5C 691.825,714.666 685.158,714.5 678.5,714C 678.833,713.667 679.167,713.333 679.5,713C 677.963,711.89 677.297,710.39 677.5,708.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f0c2b2\",d:\"M 573.5,707.5 C 576.5,707.5 579.5,707.5 582.5,707.5C 583.833,708.167 585.167,708.833 586.5,709.5C 582.833,709.5 579.167,709.5 575.5,709.5C 575.5,710.833 575.5,712.167 575.5,713.5C 575.5,713.833 575.5,714.167 575.5,714.5C 575.5,714.833 575.5,715.167 575.5,715.5C 574.833,715.5 574.167,715.5 573.5,715.5C 573.5,712.833 573.5,710.167 573.5,707.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#66191f\",d:\"M 605.5,703.5 C 605.5,707.5 605.5,711.5 605.5,715.5C 595.5,715.5 585.5,715.5 575.5,715.5C 575.5,715.167 575.5,714.833 575.5,714.5C 585.167,714.5 594.833,714.5 604.5,714.5C 604.5,712.167 604.5,709.833 604.5,707.5C 597.167,707.5 589.833,707.5 582.5,707.5C 579.5,707.5 576.5,707.5 573.5,707.5C 574.167,706.833 574.833,706.167 575.5,705.5C 585.015,705.827 594.348,705.494 603.5,704.5C 604.167,704.167 604.833,703.833 605.5,703.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#57717c\",d:\"M 895.5,708.5 C 900.833,708.5 906.167,708.5 911.5,708.5C 922.346,708.172 933.013,708.506 943.5,709.5C 936.833,709.5 930.167,709.5 923.5,709.5C 892.832,709.333 862.165,709.5 831.5,710C 829.963,711.11 829.297,712.61 829.5,714.5C 829.263,715.791 829.596,716.791 830.5,717.5C 830.401,720.237 830.735,722.904 831.5,725.5C 832.609,726.29 833.942,726.79 835.5,727C 871.669,727.831 907.669,727.664 943.5,726.5C 943.5,726.167 943.5,725.833 943.5,725.5C 943.5,725.167 943.5,724.833 943.5,724.5C 945.922,723.308 946.922,721.308 946.5,718.5C 946.333,717.167 946.167,715.833 946,714.5C 945.617,713.944 945.117,713.611 944.5,713.5C 944.5,712.833 944.167,712.5 943.5,712.5C 943.5,712.167 943.5,711.833 943.5,711.5C 943.5,711.167 943.5,710.833 943.5,710.5C 945.785,711.225 947.618,712.558 949,714.5C 949.667,718.167 949.667,721.833 949,725.5C 948.167,726.333 947.333,727.167 946.5,728C 940.175,728.5 933.842,728.666 927.5,728.5C 896.498,728.667 865.498,728.5 834.5,728C 832.899,727.727 831.399,727.227 830,726.5C 829.529,724.754 828.862,723.087 828,721.5C 827.825,718.05 827.658,714.717 827.5,711.5C 826.914,711.709 826.414,712.043 826,712.5C 825.502,715.817 825.335,719.15 825.5,722.5C 824.677,719.023 824.177,715.356 824,711.5C 823.586,711.043 823.086,710.709 822.5,710.5C 821.702,712.078 821.202,713.744 821,715.5C 820.333,714.167 819.667,712.833 819,711.5C 818.667,717.167 818.333,722.833 818,728.5C 817.667,729.167 817.333,729.833 817,730.5C 815.644,729.62 814.144,729.286 812.5,729.5C 813.731,728.282 814.898,726.949 816,725.5C 816.667,721.5 816.667,717.5 816,713.5C 814.117,712.347 813.284,710.681 813.5,708.5C 811.62,708.771 810.287,708.104 809.5,706.5C 811.262,706.357 812.929,706.691 814.5,707.5C 814.833,707.167 815.167,706.833 815.5,706.5C 812.724,704.721 813.057,703.721 816.5,703.5C 819.339,703.337 821.006,704.67 821.5,707.5C 823.303,706.863 824.636,705.697 825.5,704C 826.448,703.517 827.448,703.351 828.5,703.5C 828.094,701.891 828.094,700.557 828.5,699.5C 829.248,701.332 830.248,702.999 831.5,704.5C 847.459,705.99 847.459,707.156 831.5,708C 852.831,708.5 874.164,708.667 895.5,708.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#926c6e\",d:\"M 831.5,725.5 C 868.816,726.462 906.149,726.795 943.5,726.5C 907.669,727.664 871.669,727.831 835.5,727C 833.942,726.79 832.609,726.29 831.5,725.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ca7072\",d:\"M 831.5,716.5 C 830.955,722.21 833.621,725.044 839.5,725C 874.165,725.5 908.832,725.667 943.5,725.5C 943.5,725.833 943.5,726.167 943.5,726.5C 906.149,726.795 868.816,726.462 831.5,725.5C 830.735,722.904 830.401,720.237 830.5,717.5C 830.5,716.833 830.833,716.5 831.5,716.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fa6a60\",d:\"M 831.5,716.5 C 869.5,716.5 907.5,716.5 945.5,716.5C 945.416,719.327 944.75,721.994 943.5,724.5C 943.5,724.833 943.5,725.167 943.5,725.5C 908.832,725.667 874.165,725.5 839.5,725C 833.621,725.044 830.955,722.21 831.5,716.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f89f95\",d:\"M 944.5,713.5 C 945.117,713.611 945.617,713.944 946,714.5C 946.167,715.833 946.333,717.167 946.5,718.5C 946.922,721.308 945.922,723.308 943.5,724.5C 944.75,721.994 945.416,719.327 945.5,716.5C 907.5,716.5 869.5,716.5 831.5,716.5C 830.833,716.5 830.5,716.833 830.5,717.5C 829.596,716.791 829.263,715.791 829.5,714.5C 829.833,714.5 830.167,714.5 830.5,714.5C 867.998,715.664 905.664,715.831 943.5,715C 944.056,714.617 944.389,714.117 944.5,713.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#feefed\",d:\"M 943.5,712.5 C 944.167,712.5 944.5,712.833 944.5,713.5C 944.389,714.117 944.056,714.617 943.5,715C 905.664,715.831 867.998,715.664 830.5,714.5C 830.611,713.883 830.944,713.383 831.5,713C 868.832,712.5 906.165,712.333 943.5,712.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41749b\",d:\"M 927.5,697.5 C 932.407,699.289 937.74,700.122 943.5,700C 940.183,700.498 936.85,700.665 933.5,700.5C 933.421,701.93 933.754,703.264 934.5,704.5C 926.94,706.798 919.273,708.131 911.5,708.5C 906.167,708.5 900.833,708.5 895.5,708.5C 879.672,707.669 863.672,707.169 847.5,707C 846.833,706.333 846.167,705.667 845.5,705C 846.973,704.29 847.64,703.124 847.5,701.5C 844.5,701.5 841.5,701.5 838.5,701.5C 838.33,700.178 838.663,699.011 839.5,698C 868.831,697.5 898.165,697.333 927.5,697.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4c7785\",d:\"M 789.5,658.5 C 843.834,658.333 898.168,658.5 952.5,659C 956.638,660.978 959.971,663.811 962.5,667.5C 961.415,670.378 961.415,673.211 962.5,676C 961.353,679.429 960.52,682.929 960,686.5C 959.667,685.167 959.333,683.833 959,682.5C 958.667,683.167 958.333,683.833 958,684.5C 955.605,682.056 953.438,679.39 951.5,676.5C 952,676.167 952.5,675.833 953,675.5C 954.338,676.506 955.671,677.506 957,678.5C 960.97,672.053 959.137,669.553 951.5,671C 950.663,672.011 950.33,673.178 950.5,674.5C 947.326,673.985 944.326,672.985 941.5,671.5C 940.5,671.667 939.5,671.833 938.5,672C 939.905,673.269 941.571,673.769 943.5,673.5C 943.5,674.833 943.5,676.167 943.5,677.5C 945.842,677.504 947.842,678.337 949.5,680C 949.167,680.333 948.833,680.667 948.5,681C 949.894,681.956 950.561,683.289 950.5,685C 949.536,688.891 948.37,692.725 947,696.5C 940.59,697.478 934.09,697.811 927.5,697.5C 898.165,697.333 868.831,697.5 839.5,698C 838.663,699.011 838.33,700.178 838.5,701.5C 841.5,701.5 844.5,701.5 847.5,701.5C 847.64,703.124 846.973,704.29 845.5,705C 846.167,705.667 846.833,706.333 847.5,707C 863.672,707.169 879.672,707.669 895.5,708.5C 874.164,708.667 852.831,708.5 831.5,708C 847.459,707.156 847.459,705.99 831.5,704.5C 830.248,702.999 829.248,701.332 828.5,699.5C 828.094,700.557 828.094,701.891 828.5,703.5C 827.448,703.351 826.448,703.517 825.5,704C 824.636,705.697 823.303,706.863 821.5,707.5C 821.006,704.67 819.339,703.337 816.5,703.5C 813.057,703.721 812.724,704.721 815.5,706.5C 815.167,706.833 814.833,707.167 814.5,707.5C 812.929,706.691 811.262,706.357 809.5,706.5C 809.5,704.833 809.5,703.167 809.5,701.5C 811.833,698.997 813.999,696.331 816,693.5C 816.667,689.833 816.667,686.167 816,682.5C 815.623,681.058 814.79,680.058 813.5,679.5C 811.17,676.432 808.003,674.765 804,674.5C 800.444,675.409 796.944,676.409 793.5,677.5C 793.046,680.14 791.879,682.473 790,684.5C 789.503,686.81 789.337,689.143 789.5,691.5C 785.788,697.165 787.454,700.332 794.5,701C 795.022,701.561 795.355,702.228 795.5,703C 794.454,706.051 792.621,708.551 790,710.5C 789.971,715.394 789.138,720.061 787.5,724.5C 787.608,725.442 787.941,726.275 788.5,727C 792.442,727.376 794.109,729.542 793.5,733.5C 792.178,733.33 791.011,733.663 790,734.5C 789.667,738.5 789.333,742.5 789,746.5C 788.586,746.043 788.086,745.709 787.5,745.5C 787.167,746.5 786.833,747.5 786.5,748.5C 787.082,752.155 787.582,755.822 788,759.5C 789.496,762.002 791.663,763.669 794.5,764.5C 795.262,765.628 795.929,766.795 796.5,768C 794.567,768.251 792.734,768.751 791,769.5C 788.379,768.009 785.545,767.342 782.5,767.5C 781.833,765.833 781.167,764.167 780.5,762.5C 778.408,762.439 776.908,761.439 776,759.5C 775,756.833 774,754.167 773,751.5C 772.627,724.44 772.794,697.44 773.5,670.5C 774.091,667.386 775.758,664.886 778.5,663C 781.729,660.384 785.396,658.884 789.5,658.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b3b56\",d:\"M 813.5,679.5 C 812.662,679.842 812.328,680.508 812.5,681.5C 805.789,675.98 799.289,676.313 793,682.5C 792.421,686.203 792.588,689.869 793.5,693.5C 793.137,695.911 794.137,697.411 796.5,698C 800.027,698.808 803.36,698.641 806.5,697.5C 807.167,697.5 807.5,697.167 807.5,696.5C 808.5,696.167 809.167,695.5 809.5,694.5C 810.609,694.443 811.609,694.11 812.5,693.5C 813.774,694.189 813.774,695.023 812.5,696C 810.079,698.094 807.412,699.76 804.5,701C 805.094,701.464 805.761,701.631 806.5,701.5C 798.399,702.607 792.732,699.274 789.5,691.5C 789.337,689.143 789.503,686.81 790,684.5C 791.879,682.473 793.046,680.14 793.5,677.5C 796.944,676.409 800.444,675.409 804,674.5C 808.003,674.765 811.17,676.432 813.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#55716b\",d:\"M 793.5,693.5 C 794.167,693.833 794.833,694.167 795.5,694.5C 798.668,697.056 802.334,698.056 806.5,697.5C 803.36,698.641 800.027,698.808 796.5,698C 794.137,697.411 793.137,695.911 793.5,693.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bdab32\",d:\"M 831.5,693.5 C 832.833,693.5 834.167,693.5 835.5,693.5C 871.329,694.498 907.329,694.832 943.5,694.5C 943.5,694.833 943.5,695.167 943.5,695.5C 906.5,695.5 869.5,695.5 832.5,695.5C 832.167,694.833 831.833,694.167 831.5,693.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#93cd97\",d:\"M 797.5,690.5 C 797.938,691.506 798.604,691.506 799.5,690.5C 799.511,692.017 800.177,693.184 801.5,694C 804.051,694.002 806.051,694.836 807.5,696.5C 807.5,697.167 807.167,697.5 806.5,697.5C 802.334,698.056 798.668,697.056 795.5,694.5C 795.5,693.5 795.5,692.5 795.5,691.5C 796.167,691.167 796.833,690.833 797.5,690.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6bb7ad\",d:\"M 801.5,689.5 C 801.263,690.791 801.596,691.791 802.5,692.5C 804.833,693.167 807.167,693.833 809.5,694.5C 809.167,695.5 808.5,696.167 807.5,696.5C 806.051,694.836 804.051,694.002 801.5,694C 800.177,693.184 799.511,692.017 799.5,690.5C 800.167,690.167 800.833,689.833 801.5,689.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#408ad1\",d:\"M 807.5,689.5 C 806.952,692.084 805.285,693.084 802.5,692.5C 801.596,691.791 801.263,690.791 801.5,689.5C 803.705,687.084 805.705,687.084 807.5,689.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8c807\",d:\"M 943.5,693.5 C 943.5,693.833 943.5,694.167 943.5,694.5C 907.329,694.832 871.329,694.498 835.5,693.5C 834.791,692.596 833.791,692.263 832.5,692.5C 832.5,690.833 832.5,689.167 832.5,687.5C 870.182,687.789 907.849,687.456 945.5,686.5C 945.6,689.108 944.933,691.442 943.5,693.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#54a8cd\",d:\"M 807.5,681.5 C 809.371,681.859 810.871,682.859 812,684.5C 812.464,683.906 812.631,683.239 812.5,682.5C 815.156,686.124 815.156,689.791 812.5,693.5C 811.609,694.11 810.609,694.443 809.5,694.5C 807.167,693.833 804.833,693.167 802.5,692.5C 805.285,693.084 806.952,692.084 807.5,689.5C 808.222,689.918 808.722,690.584 809,691.5C 809.167,690.833 809.333,690.167 809.5,689.5C 807.544,686.992 806.877,684.325 807.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5c635\",d:\"M 935.5,685.5 C 936.833,685.5 938.167,685.5 939.5,685.5C 941.833,685.5 944.167,685.5 946.5,685.5C 947.172,688.942 946.172,691.609 943.5,693.5C 944.933,691.442 945.6,689.108 945.5,686.5C 907.849,687.456 870.182,687.789 832.5,687.5C 832.5,689.167 832.5,690.833 832.5,692.5C 833.791,692.263 834.791,692.596 835.5,693.5C 834.167,693.5 832.833,693.5 831.5,693.5C 831.443,692.391 831.11,691.391 830.5,690.5C 830.5,689.167 830.5,687.833 830.5,686.5C 865.671,686.832 900.671,686.498 935.5,685.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5e384\",d:\"M 829.5,685.5 C 864.833,685.5 900.167,685.5 935.5,685.5C 900.671,686.498 865.671,686.832 830.5,686.5C 830.5,687.833 830.5,689.167 830.5,690.5C 829.549,689.081 829.216,687.415 829.5,685.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6d8054\",d:\"M 943.5,680.5 C 947.319,680.28 948.986,682.113 948.5,686C 948.613,690.199 946.946,693.366 943.5,695.5C 943.5,695.167 943.5,694.833 943.5,694.5C 943.5,694.167 943.5,693.833 943.5,693.5C 946.172,691.609 947.172,688.942 946.5,685.5C 946.19,683.856 945.19,682.856 943.5,682.5C 943.5,682.167 943.5,681.833 943.5,681.5C 943.5,681.167 943.5,680.833 943.5,680.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdfbdd\",d:\"M 831.5,682.5 C 831.833,682.5 832.167,682.5 832.5,682.5C 869.331,683.333 906.331,683.833 943.5,684C 941.942,684.21 940.609,684.71 939.5,685.5C 938.167,685.5 936.833,685.5 935.5,685.5C 900.167,685.5 864.833,685.5 829.5,685.5C 829.427,683.973 830.094,682.973 831.5,682.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bdeff1\",d:\"M 807.5,681.5 C 806.877,684.325 807.544,686.992 809.5,689.5C 809.333,690.167 809.167,690.833 809,691.5C 808.722,690.584 808.222,689.918 807.5,689.5C 805.705,687.084 803.705,687.084 801.5,689.5C 800.833,689.833 800.167,690.167 799.5,690.5C 798.604,691.506 797.938,691.506 797.5,690.5C 798.626,685.04 801.959,682.04 807.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fefaae\",d:\"M 832.5,682.5 C 869.5,682.5 906.5,682.5 943.5,682.5C 945.19,682.856 946.19,683.856 946.5,685.5C 944.167,685.5 941.833,685.5 939.5,685.5C 940.609,684.71 941.942,684.21 943.5,684C 906.331,683.833 869.331,683.333 832.5,682.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#61b5c7\",d:\"M 807.5,681.5 C 801.959,682.04 798.626,685.04 797.5,690.5C 796.833,690.833 796.167,691.167 795.5,691.5C 795.06,683.465 798.726,679.632 806.5,680C 807.056,680.383 807.389,680.883 807.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a9eaf3\",d:\"M 812.5,681.5 C 812.5,681.833 812.5,682.167 812.5,682.5C 812.631,683.239 812.464,683.906 812,684.5C 810.871,682.859 809.371,681.859 807.5,681.5C 807.389,680.883 807.056,680.383 806.5,680C 798.726,679.632 795.06,683.465 795.5,691.5C 795.5,692.5 795.5,693.5 795.5,694.5C 794.833,694.167 794.167,693.833 793.5,693.5C 792.588,689.869 792.421,686.203 793,682.5C 799.289,676.313 805.789,675.98 812.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#617d5e\",d:\"M 832.5,679.5 C 831.89,680.391 831.557,681.391 831.5,682.5C 830.094,682.973 829.427,683.973 829.5,685.5C 829.216,687.415 829.549,689.081 830.5,690.5C 831.11,691.391 831.443,692.391 831.5,693.5C 831.833,694.167 832.167,694.833 832.5,695.5C 828.696,694.075 827.029,691.242 827.5,687C 827.01,683 828.677,680.5 832.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#10203c\",d:\"M 813.5,679.5 C 814.79,680.058 815.623,681.058 816,682.5C 816.667,686.167 816.667,689.833 816,693.5C 813.999,696.331 811.833,698.997 809.5,701.5C 808.5,701.5 807.5,701.5 806.5,701.5C 805.761,701.631 805.094,701.464 804.5,701C 807.412,699.76 810.079,698.094 812.5,696C 813.774,695.023 813.774,694.189 812.5,693.5C 815.156,689.791 815.156,686.124 812.5,682.5C 812.5,682.167 812.5,681.833 812.5,681.5C 812.328,680.508 812.662,679.842 813.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#caaa3d\",d:\"M 943.5,681.5 C 943.5,681.833 943.5,682.167 943.5,682.5C 906.5,682.5 869.5,682.5 832.5,682.5C 832.611,681.883 832.944,681.383 833.5,681C 870.238,680.174 906.905,680.34 943.5,681.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#99802c\",d:\"M 832.5,679.5 C 869.67,679.168 906.67,679.502 943.5,680.5C 943.5,680.833 943.5,681.167 943.5,681.5C 906.905,680.34 870.238,680.174 833.5,681C 832.944,681.383 832.611,681.883 832.5,682.5C 832.167,682.5 831.833,682.5 831.5,682.5C 831.557,681.391 831.89,680.391 832.5,679.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bad4da\",d:\"M 949.5,655.5 C 954.979,657.308 959.312,660.642 962.5,665.5C 962.5,666.167 962.5,666.833 962.5,667.5C 959.971,663.811 956.638,660.978 952.5,659C 898.168,658.5 843.834,658.333 789.5,658.5C 842.998,657.667 896.665,657.167 950.5,657C 949.944,656.617 949.611,656.117 949.5,655.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d7e4e9\",d:\"M 947.5,654.5 C 947.842,655.338 948.508,655.672 949.5,655.5C 949.611,656.117 949.944,656.617 950.5,657C 896.665,657.167 842.998,657.667 789.5,658.5C 785.396,658.884 781.729,660.384 778.5,663C 775.758,664.886 774.091,667.386 773.5,670.5C 772.075,672.031 771.409,671.698 771.5,669.5C 773.355,663.644 777.021,659.311 782.5,656.5C 783.167,656.5 783.5,656.167 783.5,655.5C 838.137,654.513 892.804,654.179 947.5,654.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#111932\",d:\"M 947.5,654.5 C 892.804,654.179 838.137,654.513 783.5,655.5C 810.658,654.167 838.158,653.5 866,653.5C 893.905,653.496 921.071,653.829 947.5,654.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3a5577\",d:\"M 863.5,623.5 C 863.5,624.5 863.5,625.5 863.5,626.5C 867.646,627.448 871.98,628.115 876.5,628.5C 881.63,627.557 886.63,627.224 891.5,627.5C 893.055,627.722 894.389,628.389 895.5,629.5C 903.301,628.896 910.968,627.896 918.5,626.5C 919.167,626.5 919.833,626.5 920.5,626.5C 920.804,627.15 921.137,627.817 921.5,628.5C 923.672,629.205 925.672,630.205 927.5,631.5C 928.674,629.766 930.34,628.766 932.5,628.5C 935.512,628.179 936.845,629.512 936.5,632.5C 939.5,632.5 942.5,632.5 945.5,632.5C 891.668,633.665 837.668,633.832 783.5,633C 781.416,632.303 779.749,631.136 778.5,629.5C 781.226,629.264 783.559,630.097 785.5,632C 791.157,632.499 796.824,632.666 802.5,632.5C 817.504,632.667 832.504,632.5 847.5,632C 844.536,631.16 844.203,630.16 846.5,629C 850.152,628.501 853.818,628.335 857.5,628.5C 860.776,628.215 862.776,626.549 863.5,623.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e617e\",d:\"M 857.5,624.5 C 857.5,625.833 857.5,627.167 857.5,628.5C 853.818,628.335 850.152,628.501 846.5,629C 844.203,630.16 844.536,631.16 847.5,632C 832.504,632.5 817.504,632.667 802.5,632.5C 804.779,630.737 807.445,629.737 810.5,629.5C 813.69,630.642 816.857,630.642 820,629.5C 820.945,629.905 821.612,630.572 822,631.5C 823.113,630.289 824.28,630.289 825.5,631.5C 828.284,629.048 827.951,627.048 824.5,625.5C 824.957,624.702 825.624,624.369 826.5,624.5C 826.866,625.695 827.699,626.361 829,626.5C 831.193,626.149 833.026,625.149 834.5,623.5C 835.852,624.524 837.185,625.524 838.5,626.5C 841.08,628.016 843.08,627.349 844.5,624.5C 846.148,623.19 847.814,621.857 849.5,620.5C 851.273,623.06 853.273,625.393 855.5,627.5C 856.176,626.398 856.842,625.398 857.5,624.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4a6075\",d:\"M 918.5,626.5 C 910.968,627.896 903.301,628.896 895.5,629.5C 894.389,628.389 893.055,627.722 891.5,627.5C 886.63,627.224 881.63,627.557 876.5,628.5C 871.98,628.115 867.646,627.448 863.5,626.5C 868.167,626.5 872.833,626.5 877.5,626.5C 877.5,625.167 877.5,623.833 877.5,622.5C 873.828,621.955 874.162,621.622 878.5,621.5C 878.197,624.588 879.53,626.254 882.5,626.5C 881.769,624.401 881.769,622.401 882.5,620.5C 884.978,621.722 885.978,623.722 885.5,626.5C 886.675,626.719 887.675,626.386 888.5,625.5C 887.355,624.109 887.355,622.776 888.5,621.5C 890.248,627.968 891.415,627.635 892,620.5C 892.333,621.833 892.667,623.167 893,624.5C 895.323,620.578 895.823,620.912 894.5,625.5C 895.325,626.386 896.325,626.719 897.5,626.5C 897.03,623.654 897.863,621.321 900,619.5C 899.416,621.7 899.582,623.867 900.5,626C 902.167,626.667 903.833,626.667 905.5,626C 907.715,619.942 908.715,620.109 908.5,626.5C 909.5,626.5 910.5,626.5 911.5,626.5C 911.201,624.396 911.534,622.396 912.5,620.5C 913.452,622.045 913.785,623.712 913.5,625.5C 914.5,625.5 915.5,625.5 916.5,625.5C 916.238,624.022 916.571,622.689 917.5,621.5C 918.452,623.045 918.785,624.712 918.5,626.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c3dfea\",d:\"M 854.5,616.5 C 853.621,619.117 853.788,621.784 855,624.5C 855.495,622.527 855.662,620.527 855.5,618.5C 857.099,618.232 858.432,618.566 859.5,619.5C 858.032,620.779 857.365,622.446 857.5,624.5C 856.842,625.398 856.176,626.398 855.5,627.5C 853.273,625.393 851.273,623.06 849.5,620.5C 847.814,621.857 846.148,623.19 844.5,624.5C 843.116,622.03 841.116,620.363 838.5,619.5C 838.162,622.325 839.162,624.492 841.5,626C 840.552,626.483 839.552,626.649 838.5,626.5C 837.185,625.524 835.852,624.524 834.5,623.5C 833.026,625.149 831.193,626.149 829,626.5C 827.699,626.361 826.866,625.695 826.5,624.5C 826.5,622.833 826.5,621.167 826.5,619.5C 829.296,616.845 831.963,617.178 834.5,620.5C 835.287,619.758 835.953,618.925 836.5,618C 839.036,617.814 841.369,617.314 843.5,616.5C 847.4,617.27 851.066,617.27 854.5,616.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5d7df\",d:\"M 806.5,614.5 C 808.118,615.451 809.451,616.784 810.5,618.5C 809.572,619.768 809.405,621.101 810,622.5C 811.371,620.959 812.871,619.625 814.5,618.5C 815.239,618.369 815.906,618.536 816.5,619C 814.787,620.378 813.453,622.045 812.5,624C 811.391,624.638 810.225,625.138 809,625.5C 806.444,622.929 803.944,622.929 801.5,625.5C 800.511,621.893 800.177,618.226 800.5,614.5C 802.5,614.5 804.5,614.5 806.5,614.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cfe0e8\",d:\"M 895.5,618.5 C 904.27,617.882 912.77,618.548 921,620.5C 921.708,619.619 922.542,618.953 923.5,618.5C 924.833,618.5 926.167,618.5 927.5,618.5C 927.881,620.942 927.214,621.609 925.5,620.5C 924.585,621.328 923.919,622.328 923.5,623.5C 925.332,624.057 926.665,625.057 927.5,626.5C 925.031,625.933 922.698,625.933 920.5,626.5C 919.833,626.5 919.167,626.5 918.5,626.5C 918.785,624.712 918.452,623.045 917.5,621.5C 916.571,622.689 916.238,624.022 916.5,625.5C 915.5,625.5 914.5,625.5 913.5,625.5C 913.785,623.712 913.452,622.045 912.5,620.5C 911.534,622.396 911.201,624.396 911.5,626.5C 910.5,626.5 909.5,626.5 908.5,626.5C 908.715,620.109 907.715,619.942 905.5,626C 903.833,626.667 902.167,626.667 900.5,626C 899.582,623.867 899.416,621.7 900,619.5C 897.863,621.321 897.03,623.654 897.5,626.5C 896.325,626.719 895.325,626.386 894.5,625.5C 895.823,620.912 895.323,620.578 893,624.5C 892.667,623.167 892.333,621.833 892,620.5C 891.415,627.635 890.248,627.968 888.5,621.5C 887.355,622.776 887.355,624.109 888.5,625.5C 887.675,626.386 886.675,626.719 885.5,626.5C 885.978,623.722 884.978,621.722 882.5,620.5C 881.769,622.401 881.769,624.401 882.5,626.5C 879.53,626.254 878.197,624.588 878.5,621.5C 874.162,621.622 873.828,621.955 877.5,622.5C 877.5,623.833 877.5,625.167 877.5,626.5C 872.833,626.5 868.167,626.5 863.5,626.5C 863.5,625.5 863.5,624.5 863.5,623.5C 863.5,620.5 863.5,617.5 863.5,614.5C 864.5,614.5 865.5,614.5 866.5,614.5C 866.5,617.833 866.5,621.167 866.5,624.5C 867.833,624.5 869.167,624.5 870.5,624.5C 870.724,620.821 871.058,617.154 871.5,613.5C 872.978,613.238 874.311,613.571 875.5,614.5C 874.147,615.524 873.48,616.857 873.5,618.5C 880.345,618.8 886.679,617.466 892.5,614.5C 893.057,616.332 894.057,617.665 895.5,618.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5d686d\",d:\"M 903.5,620.5 C 904.434,621.568 904.768,622.901 904.5,624.5C 903.5,624.5 902.5,624.5 901.5,624.5C 901.527,622.801 902.194,621.467 903.5,620.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8ea4ad\",d:\"M 923.5,618.5 C 923.5,618.167 923.5,617.833 923.5,617.5C 927.5,617.5 931.5,617.5 935.5,617.5C 933.735,618.461 931.735,618.795 929.5,618.5C 928.99,621.388 929.656,623.721 931.5,625.5C 930.432,626.434 929.099,626.768 927.5,626.5C 926.665,625.057 925.332,624.057 923.5,623.5C 923.919,622.328 924.585,621.328 925.5,620.5C 927.214,621.609 927.881,620.942 927.5,618.5C 926.167,618.5 924.833,618.5 923.5,618.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#81979e\",d:\"M 844.5,624.5 C 843.08,627.349 841.08,628.016 838.5,626.5C 839.552,626.649 840.552,626.483 841.5,626C 839.162,624.492 838.162,622.325 838.5,619.5C 841.116,620.363 843.116,622.03 844.5,624.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#667a7c\",d:\"M 828.5,619.5 C 831.861,620.203 832.194,621.537 829.5,623.5C 828.571,622.311 828.238,620.978 828.5,619.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#dff0f2\",d:\"M 817.5,620.5 C 818.995,620.415 819.995,621.081 820.5,622.5C 818.713,623.316 817.046,624.316 815.5,625.5C 814.417,624.635 814.251,623.635 815,622.5C 815.995,621.934 816.828,621.267 817.5,620.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ddf0f7\",d:\"M 819.5,617.5 C 821.415,617.216 823.081,617.549 824.5,618.5C 824.599,621.673 823.932,624.673 822.5,627.5C 820.802,628.681 819.135,628.681 817.5,627.5C 818.689,626.571 820.022,626.238 821.5,626.5C 821.71,623.248 821.044,620.248 819.5,617.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c2dde5\",d:\"M 936.5,615.5 C 938.483,618.799 939.483,622.466 939.5,626.5C 938.5,626.5 937.5,626.5 936.5,626.5C 936.662,624.473 936.495,622.473 936,620.5C 935.667,621.833 935.333,623.167 935,624.5C 932.171,618.841 931.004,619.175 931.5,625.5C 929.656,623.721 928.99,621.388 929.5,618.5C 931.735,618.795 933.735,618.461 935.5,617.5C 935.833,616.833 936.167,616.167 936.5,615.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#537381\",d:\"M 854.5,616.5 C 856.505,617.039 858.505,617.705 860.5,618.5C 860.376,619.107 860.043,619.44 859.5,619.5C 858.432,618.566 857.099,618.232 855.5,618.5C 855.662,620.527 855.495,622.527 855,624.5C 853.788,621.784 853.621,619.117 854.5,616.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#49586b\",d:\"M 923.5,617.5 C 923.5,617.833 923.5,618.167 923.5,618.5C 922.542,618.953 921.708,619.619 921,620.5C 912.77,618.548 904.27,617.882 895.5,618.5C 898.563,617.799 901.73,617.132 905,616.5C 911.076,617.476 917.242,617.81 923.5,617.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#212b49\",d:\"M 943.5,594.5 C 943.5,593.833 943.833,593.5 944.5,593.5C 948.833,593.5 953.167,593.5 957.5,593.5C 954.833,598.167 952.167,602.833 949.5,607.5C 947.704,608.793 946.037,610.293 944.5,612C 942.302,612.373 940.135,612.873 938,613.5C 936.97,613.836 936.47,614.503 936.5,615.5C 936.167,616.167 935.833,616.833 935.5,617.5C 931.5,617.5 927.5,617.5 923.5,617.5C 917.242,617.81 911.076,617.476 905,616.5C 901.73,617.132 898.563,617.799 895.5,618.5C 894.057,617.665 893.057,616.332 892.5,614.5C 886.679,617.466 880.345,618.8 873.5,618.5C 873.48,616.857 874.147,615.524 875.5,614.5C 874.311,613.571 872.978,613.238 871.5,613.5C 871.058,617.154 870.724,620.821 870.5,624.5C 869.167,624.5 867.833,624.5 866.5,624.5C 866.5,621.167 866.5,617.833 866.5,614.5C 865.5,614.5 864.5,614.5 863.5,614.5C 863.5,617.5 863.5,620.5 863.5,623.5C 862.776,626.549 860.776,628.215 857.5,628.5C 857.5,627.167 857.5,625.833 857.5,624.5C 857.365,622.446 858.032,620.779 859.5,619.5C 860.043,619.44 860.376,619.107 860.5,618.5C 858.505,617.705 856.505,617.039 854.5,616.5C 851.066,617.27 847.4,617.27 843.5,616.5C 839.15,616.77 834.983,616.103 831,614.5C 828.787,615.76 826.287,616.426 823.5,616.5C 821.167,616.333 818.833,616.167 816.5,616C 817.711,615.107 817.711,614.274 816.5,613.5C 814.591,614.348 812.591,614.682 810.5,614.5C 810.5,613.5 810.5,612.5 810.5,611.5C 806.64,611.192 802.974,610.525 799.5,609.5C 799.5,608.5 799.5,607.5 799.5,606.5C 823.166,606.052 846.833,605.552 870.5,605C 871.056,604.617 871.389,604.117 871.5,603.5C 896.169,603.667 920.836,603.5 945.5,603C 947.093,602.051 948.426,600.885 949.5,599.5C 950.5,599.167 951.167,598.5 951.5,597.5C 952.492,597.672 953.158,597.338 953.5,596.5C 954.043,596.44 954.376,596.107 954.5,595.5C 950.893,594.511 947.226,594.177 943.5,594.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f455f\",d:\"M 782.5,604.5 C 787.638,607.72 793.305,609.387 799.5,609.5C 802.974,610.525 806.64,611.192 810.5,611.5C 810.5,612.5 810.5,613.5 810.5,614.5C 812.591,614.682 814.591,614.348 816.5,613.5C 817.711,614.274 817.711,615.107 816.5,616C 818.833,616.167 821.167,616.333 823.5,616.5C 826.287,616.426 828.787,615.76 831,614.5C 834.983,616.103 839.15,616.77 843.5,616.5C 841.369,617.314 839.036,617.814 836.5,618C 835.953,618.925 835.287,619.758 834.5,620.5C 831.963,617.178 829.296,616.845 826.5,619.5C 825.833,619.167 825.167,618.833 824.5,618.5C 823.081,617.549 821.415,617.216 819.5,617.5C 817.585,617.216 815.919,617.549 814.5,618.5C 812.871,619.625 811.371,620.959 810,622.5C 809.405,621.101 809.572,619.768 810.5,618.5C 809.451,616.784 808.118,615.451 806.5,614.5C 798.99,612.282 791.323,610.615 783.5,609.5C 783.371,607.784 783.038,606.117 782.5,604.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1b2c42\",d:\"M 787.5,592.5 C 788.833,593.167 790.167,593.833 791.5,594.5C 788.5,594.5 785.5,594.5 782.5,594.5C 781.167,594.5 780.5,595.167 780.5,596.5C 782.937,598.433 785.271,600.6 787.5,603C 815.498,603.5 843.498,603.667 871.5,603.5C 871.389,604.117 871.056,604.617 870.5,605C 846.833,605.552 823.166,606.052 799.5,606.5C 799.5,607.5 799.5,608.5 799.5,609.5C 793.305,609.387 787.638,607.72 782.5,604.5C 773.35,595.144 775.016,591.144 787.5,592.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#89bada\",d:\"M 780.5,596.5 C 782.75,596.181 784.75,596.681 786.5,598C 840.904,598.171 895.237,598.671 949.5,599.5C 948.426,600.885 947.093,602.051 945.5,603C 920.836,603.5 896.169,603.667 871.5,603.5C 843.498,603.667 815.498,603.5 787.5,603C 785.271,600.6 782.937,598.433 780.5,596.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bddaec\",d:\"M 782.5,594.5 C 784.265,595.461 786.265,595.795 788.5,595.5C 789.263,596.268 790.263,596.768 791.5,597C 844.832,597.5 898.166,597.667 951.5,597.5C 951.167,598.5 950.5,599.167 949.5,599.5C 895.237,598.671 840.904,598.171 786.5,598C 784.75,596.681 782.75,596.181 780.5,596.5C 780.5,595.167 781.167,594.5 782.5,594.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#effdfd\",d:\"M 788.5,595.5 C 843.669,595.168 898.669,595.501 953.5,596.5C 953.158,597.338 952.492,597.672 951.5,597.5C 898.166,597.667 844.832,597.5 791.5,597C 790.263,596.768 789.263,596.268 788.5,595.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#939fb9\",d:\"M 782.5,594.5 C 785.5,594.5 788.5,594.5 791.5,594.5C 817.833,594.5 844.167,594.5 870.5,594.5C 894.833,594.5 919.167,594.5 943.5,594.5C 947.226,594.177 950.893,594.511 954.5,595.5C 954.376,596.107 954.043,596.44 953.5,596.5C 898.669,595.501 843.669,595.168 788.5,595.5C 786.265,595.795 784.265,595.461 782.5,594.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#000e3f\",d:\"M 943.5,561.5 C 943.191,572.248 943.524,582.915 944.5,593.5C 943.833,593.5 943.5,593.833 943.5,594.5C 919.167,594.5 894.833,594.5 870.5,594.5C 870.5,594.167 870.5,593.833 870.5,593.5C 894.5,593.5 918.5,593.5 942.5,593.5C 942.827,583.319 942.494,573.319 941.5,563.5C 941.5,563.167 941.5,562.833 941.5,562.5C 941.842,561.662 942.508,561.328 943.5,561.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#012e6c\",d:\"M 941.5,563.5 C 942.494,573.319 942.827,583.319 942.5,593.5C 918.5,593.5 894.5,593.5 870.5,593.5C 869.209,593.737 868.209,593.404 867.5,592.5C 892.167,592.5 916.833,592.5 941.5,592.5C 941.5,583.167 941.5,573.833 941.5,564.5C 941.5,564.167 941.5,563.833 941.5,563.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3589bf\",d:\"M 868.5,564.5 C 868.5,564.833 868.5,565.167 868.5,565.5C 868.5,574.167 868.5,582.833 868.5,591.5C 892.5,591.5 916.5,591.5 940.5,591.5C 940.5,582.5 940.5,573.5 940.5,564.5C 940.833,564.5 941.167,564.5 941.5,564.5C 941.5,573.833 941.5,583.167 941.5,592.5C 916.833,592.5 892.167,592.5 867.5,592.5C 867.173,582.985 867.506,573.652 868.5,564.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bd3f5\",d:\"M 871.5,565.5 C 883.989,564.505 896.656,564.171 909.5,564.5C 909.369,565.376 909.702,566.043 910.5,566.5C 916.773,565.54 923.107,565.207 929.5,565.5C 929.719,566.675 929.386,567.675 928.5,568.5C 924.247,568.794 919.913,568.461 915.5,567.5C 913.018,567.11 911.685,568.11 911.5,570.5C 908.87,571.428 906.204,572.428 903.5,573.5C 901.792,573.297 900.459,572.464 899.5,571C 898.5,570.333 897.5,570.333 896.5,571C 893.923,574.752 892.923,578.919 893.5,583.5C 897.209,583.695 900.709,584.695 904,586.5C 907.653,583.804 911.82,582.804 916.5,583.5C 916.5,581.5 916.5,579.5 916.5,577.5C 917.306,578.997 917.972,580.664 918.5,582.5C 917.91,583.799 916.91,584.632 915.5,585C 917.843,584.876 920.177,584.376 922.5,583.5C 924.739,584.636 926.406,584.303 927.5,582.5C 928.086,582.709 928.586,583.043 929,583.5C 929.497,585.81 929.663,588.143 929.5,590.5C 923.833,590.5 918.167,590.5 912.5,590.5C 912.5,589.5 912.5,588.5 912.5,587.5C 909.235,587.208 906.235,587.875 903.5,589.5C 901.369,588.037 899.035,587.037 896.5,586.5C 894.182,586.997 891.848,587.33 889.5,587.5C 888.363,583.618 888.363,579.784 889.5,576C 888.207,575.51 886.873,575.343 885.5,575.5C 885.663,577.857 885.497,580.19 885,582.5C 884.586,582.957 884.086,583.291 883.5,583.5C 882.156,580.612 880.822,577.612 879.5,574.5C 883.66,574.502 886.16,572.502 887,568.5C 887.667,575.167 888.333,575.167 889,568.5C 889.915,569.328 890.581,570.328 891,571.5C 891.684,570.216 891.517,569.049 890.5,568C 887.978,567.501 885.478,567.668 883,568.5C 881.338,568.612 880.171,567.946 879.5,566.5C 876.914,565.52 874.247,565.187 871.5,565.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3dd2fc\",d:\"M 936.5,563.5 C 938.099,563.232 939.432,563.566 940.5,564.5C 940.5,573.5 940.5,582.5 940.5,591.5C 916.5,591.5 892.5,591.5 868.5,591.5C 868.5,582.833 868.5,574.167 868.5,565.5C 869.5,565.5 870.5,565.5 871.5,565.5C 874.247,565.187 876.914,565.52 879.5,566.5C 880.171,567.946 881.338,568.612 883,568.5C 885.478,567.668 887.978,567.501 890.5,568C 891.517,569.049 891.684,570.216 891,571.5C 890.581,570.328 889.915,569.328 889,568.5C 888.333,575.167 887.667,575.167 887,568.5C 886.16,572.502 883.66,574.502 879.5,574.5C 880.822,577.612 882.156,580.612 883.5,583.5C 884.086,583.291 884.586,582.957 885,582.5C 885.497,580.19 885.663,577.857 885.5,575.5C 886.873,575.343 888.207,575.51 889.5,576C 888.363,579.784 888.363,583.618 889.5,587.5C 891.848,587.33 894.182,586.997 896.5,586.5C 899.035,587.037 901.369,588.037 903.5,589.5C 906.235,587.875 909.235,587.208 912.5,587.5C 912.5,588.5 912.5,589.5 912.5,590.5C 918.167,590.5 923.833,590.5 929.5,590.5C 929.663,588.143 929.497,585.81 929,583.5C 928.586,583.043 928.086,582.709 927.5,582.5C 926.406,584.303 924.739,584.636 922.5,583.5C 920.177,584.376 917.843,584.876 915.5,585C 916.91,584.632 917.91,583.799 918.5,582.5C 917.972,580.664 917.306,578.997 916.5,577.5C 915.372,574.788 913.706,572.455 911.5,570.5C 911.685,568.11 913.018,567.11 915.5,567.5C 919.913,568.461 924.247,568.794 928.5,568.5C 929.386,567.675 929.719,566.675 929.5,565.5C 923.107,565.207 916.773,565.54 910.5,566.5C 909.702,566.043 909.369,565.376 909.5,564.5C 918.682,564.827 927.682,564.493 936.5,563.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4fcfd\",d:\"M 911.5,570.5 C 913.706,572.455 915.372,574.788 916.5,577.5C 916.5,579.5 916.5,581.5 916.5,583.5C 911.82,582.804 907.653,583.804 904,586.5C 900.709,584.695 897.209,583.695 893.5,583.5C 892.923,578.919 893.923,574.752 896.5,571C 897.5,570.333 898.5,570.333 899.5,571C 900.459,572.464 901.792,573.297 903.5,573.5C 906.204,572.428 908.87,571.428 911.5,570.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#231424\",d:\"M 788.5,559.5 C 788.833,559.5 789.167,559.5 789.5,559.5C 790.708,560.234 792.041,560.567 793.5,560.5C 793.5,561.167 793.5,561.833 793.5,562.5C 792.833,562.5 792.167,562.5 791.5,562.5C 790.506,572.319 790.173,582.319 790.5,592.5C 791.5,592.5 792.5,592.5 793.5,592.5C 817.5,592.5 841.5,592.5 865.5,592.5C 865.5,582.5 865.5,572.5 865.5,562.5C 865.167,561.833 864.833,561.167 864.5,560.5C 865.5,560.5 866.5,560.5 867.5,560.5C 867.833,561.167 868.167,561.833 868.5,562.5C 868.5,563.167 868.5,563.833 868.5,564.5C 867.506,573.652 867.173,582.985 867.5,592.5C 868.209,593.404 869.209,593.737 870.5,593.5C 870.5,593.833 870.5,594.167 870.5,594.5C 844.167,594.5 817.833,594.5 791.5,594.5C 790.167,593.833 788.833,593.167 787.5,592.5C 788.495,581.679 788.828,570.679 788.5,559.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bc6974\",d:\"M 796.5,562.5 C 819.5,562.5 842.5,562.5 865.5,562.5C 865.5,572.5 865.5,582.5 865.5,592.5C 841.5,592.5 817.5,592.5 793.5,592.5C 793.5,592.167 793.5,591.833 793.5,591.5C 817.167,591.5 840.833,591.5 864.5,591.5C 864.5,582.5 864.5,573.5 864.5,564.5C 841.833,563.833 819.167,563.167 796.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f17272\",d:\"M 793.5,564.5 C 817.167,564.5 840.833,564.5 864.5,564.5C 864.5,573.5 864.5,582.5 864.5,591.5C 840.833,591.5 817.167,591.5 793.5,591.5C 793.5,582.5 793.5,573.5 793.5,564.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fee7df\",d:\"M 791.5,562.5 C 792.167,562.5 792.833,562.5 793.5,562.5C 793.5,563.167 793.5,563.833 793.5,564.5C 793.5,573.5 793.5,582.5 793.5,591.5C 791.527,582.225 790.86,572.558 791.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cebac3\",d:\"M 791.5,562.5 C 790.86,572.558 791.527,582.225 793.5,591.5C 793.5,591.833 793.5,592.167 793.5,592.5C 792.5,592.5 791.5,592.5 790.5,592.5C 790.173,582.319 790.506,572.319 791.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fd6863\",d:\"M 815.5,582.5 C 816.391,583.11 817.391,583.443 818.5,583.5C 818.611,584.117 818.944,584.617 819.5,585C 822.581,585.527 825.581,586.36 828.5,587.5C 832.29,586.02 836.29,585.187 840.5,585C 841.894,583.261 842.561,581.261 842.5,579C 842.083,576.502 841.749,574.002 841.5,571.5C 840.5,571.5 839.5,571.5 838.5,571.5C 836.975,569.964 834.975,568.964 832.5,568.5C 833.167,567.833 833.833,567.167 834.5,566.5C 843.81,565.502 853.143,565.168 862.5,565.5C 863.371,573.8 863.705,582.133 863.5,590.5C 840.5,590.5 817.5,590.5 794.5,590.5C 794.186,582.913 794.519,575.413 795.5,568C 803.102,566.477 810.768,566.144 818.5,567C 817.732,569.369 816.565,571.535 815,573.5C 814.195,576.696 814.362,579.696 815.5,582.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec807c\",d:\"M 838.5,571.5 C 839.5,571.5 840.5,571.5 841.5,571.5C 841.749,574.002 842.083,576.502 842.5,579C 842.561,581.261 841.894,583.261 840.5,585C 836.29,585.187 832.29,586.02 828.5,587.5C 825.581,586.36 822.581,585.527 819.5,585C 818.944,584.617 818.611,584.117 818.5,583.5C 822.535,582.9 826.035,583.9 829,586.5C 832.032,584.04 835.532,582.54 839.5,582C 840.762,578.389 840.429,574.889 838.5,571.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcf0eb\",d:\"M 838.5,571.5 C 840.429,574.889 840.762,578.389 839.5,582C 835.532,582.54 832.032,584.04 829,586.5C 826.035,583.9 822.535,582.9 818.5,583.5C 817.391,583.443 816.391,583.11 815.5,582.5C 815.69,572.073 820.19,569.073 829,573.5C 832.007,572.021 835.174,571.354 838.5,571.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b0f8fe\",d:\"M 868.5,562.5 C 871.5,562.5 874.5,562.5 877.5,562.5C 896.993,563.497 916.66,563.83 936.5,563.5C 927.682,564.493 918.682,564.827 909.5,564.5C 896.656,564.171 883.989,564.505 871.5,565.5C 870.5,565.5 869.5,565.5 868.5,565.5C 868.5,565.167 868.5,564.833 868.5,564.5C 868.5,563.833 868.5,563.167 868.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fca3ab\",d:\"M 793.5,562.5 C 794.5,562.5 795.5,562.5 796.5,562.5C 819.167,563.167 841.833,563.833 864.5,564.5C 840.833,564.5 817.167,564.5 793.5,564.5C 793.5,563.833 793.5,563.167 793.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8cbde4\",d:\"M 877.5,562.5 C 898.833,562.5 920.167,562.5 941.5,562.5C 941.5,562.833 941.5,563.167 941.5,563.5C 941.5,563.833 941.5,564.167 941.5,564.5C 941.167,564.5 940.833,564.5 940.5,564.5C 939.432,563.566 938.099,563.232 936.5,563.5C 916.66,563.83 896.993,563.497 877.5,562.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#051e40\",d:\"M 941.5,518.5 C 943.483,532.461 944.15,546.794 943.5,561.5C 942.508,561.328 941.842,561.662 941.5,562.5C 920.167,562.5 898.833,562.5 877.5,562.5C 874.5,562.5 871.5,562.5 868.5,562.5C 868.167,561.833 867.833,561.167 867.5,560.5C 892.167,560.5 916.833,560.5 941.5,560.5C 941.5,546.833 941.5,533.167 941.5,519.5C 941.5,519.167 941.5,518.833 941.5,518.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2c110a\",d:\"M 793.5,560.5 C 816.167,560.5 838.833,560.5 861.5,560.5C 862.5,560.5 863.5,560.5 864.5,560.5C 864.833,561.167 865.167,561.833 865.5,562.5C 842.5,562.5 819.5,562.5 796.5,562.5C 795.5,562.5 794.5,562.5 793.5,562.5C 793.5,561.833 793.5,561.167 793.5,560.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#748bac\",d:\"M 940.5,519.5 C 940.833,519.5 941.167,519.5 941.5,519.5C 941.5,533.167 941.5,546.833 941.5,560.5C 916.833,560.5 892.167,560.5 867.5,560.5C 866.5,560.5 865.5,560.5 864.5,560.5C 863.5,560.5 862.5,560.5 861.5,560.5C 861.5,560.167 861.5,559.833 861.5,559.5C 862.833,559.5 864.167,559.5 865.5,559.5C 886.167,559.5 906.833,559.5 927.5,559.5C 931.833,559.5 936.167,559.5 940.5,559.5C 940.5,546.833 940.5,534.167 940.5,521.5C 940.5,520.833 940.5,520.167 940.5,519.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#9f8237\",d:\"M 790.5,516.5 C 790.5,516.833 790.5,517.167 790.5,517.5C 790.5,518.5 790.5,519.5 790.5,520.5C 790.5,521.167 790.833,521.5 791.5,521.5C 791.171,534.011 791.505,546.345 792.5,558.5C 815.327,559.498 838.327,559.831 861.5,559.5C 861.5,559.833 861.5,560.167 861.5,560.5C 838.833,560.5 816.167,560.5 793.5,560.5C 792.041,560.567 790.708,560.234 789.5,559.5C 789.171,544.99 789.504,530.657 790.5,516.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7bb0e\",d:\"M 861.5,557.5 C 861.5,558.167 861.5,558.833 861.5,559.5C 838.327,559.831 815.327,559.498 792.5,558.5C 793.833,558.5 795.167,558.5 796.5,558.5C 796.178,556.278 796.845,554.444 798.5,553C 797.589,549.935 797.589,547.102 798.5,544.5C 799.541,546.991 800.374,546.991 801,544.5C 801.758,546.769 801.591,548.936 800.5,551C 801.328,551.915 802.328,552.581 803.5,553C 818.846,552.374 834.179,552.541 849.5,553.5C 850.713,553.253 851.38,552.586 851.5,551.5C 854.046,550.021 854.046,548.521 851.5,547C 846.511,546.501 841.511,546.334 836.5,546.5C 828.657,545.833 820.657,545.167 812.5,544.5C 821.658,543.833 830.658,543.167 839.5,542.5C 839.5,542.167 839.5,541.833 839.5,541.5C 839.833,541.5 840.167,541.5 840.5,541.5C 841.124,541.083 841.457,540.416 841.5,539.5C 841.253,538.287 840.586,537.62 839.5,537.5C 836.972,536.834 834.306,536.168 831.5,535.5C 836.732,534.633 841.899,534.966 847,536.5C 847.5,536 848,535.5 848.5,535C 851.817,534.502 855.15,534.335 858.5,534.5C 859.167,530.5 857.5,528.833 853.5,529.5C 853.167,529.5 852.833,529.5 852.5,529.5C 837.349,528.242 822.349,528.242 807.5,529.5C 806.414,529.62 805.747,530.287 805.5,531.5C 805.722,533.055 806.389,534.389 807.5,535.5C 806.726,536.711 805.893,536.711 805,535.5C 801.428,541.064 798.595,540.73 796.5,534.5C 795.327,536.979 795.327,539.479 796.5,542C 795.313,544.766 794.313,547.599 793.5,550.5C 792.335,542.521 792.168,534.521 793,526.5C 793.5,526 794,525.5 794.5,525C 816.186,524.573 837.853,524.239 859.5,524C 860.191,525.067 860.691,526.234 861,527.5C 861.5,537.494 861.666,547.494 861.5,557.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#394d6f\",d:\"M 928.5,550.5 C 928.5,551.167 928.5,551.833 928.5,552.5C 909.326,552.83 890.326,552.497 871.5,551.5C 890.326,550.503 909.326,550.17 928.5,550.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7486a8\",d:\"M 887.5,549.5 C 895.5,549.5 903.5,549.5 911.5,549.5C 916.833,549.5 922.167,549.5 927.5,549.5C 928.167,549.5 928.5,549.833 928.5,550.5C 909.326,550.17 890.326,550.503 871.5,551.5C 870.957,551.44 870.624,551.107 870.5,550.5C 876.128,549.505 881.794,549.171 887.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#496880\",d:\"M 945.5,503.5 C 947.091,507.204 947.924,511.204 948,515.5C 949.065,540.859 949.565,566.193 949.5,591.5C 952.518,591.335 955.518,591.502 958.5,592C 959.602,594.401 959.769,596.901 959,599.5C 957.164,600.669 955.998,602.336 955.5,604.5C 953.296,605.206 951.296,606.206 949.5,607.5C 952.167,602.833 954.833,598.167 957.5,593.5C 954.103,592.802 950.603,592.135 947,591.5C 946.801,562.144 946.301,532.81 945.5,503.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2f3c5c\",d:\"M 943.5,501.5 C 944.167,502.167 944.833,502.833 945.5,503.5C 946.301,532.81 946.801,562.144 947,591.5C 950.603,592.135 954.103,592.802 957.5,593.5C 953.167,593.5 948.833,593.5 944.5,593.5C 943.524,582.915 943.191,572.248 943.5,561.5C 944.15,546.794 943.483,532.461 941.5,518.5C 921.194,516.512 900.527,515.845 879.5,516.5C 899.66,515.503 919.993,515.17 940.5,515.5C 941.15,515.196 941.817,514.863 942.5,514.5C 943.492,510.217 943.826,505.884 943.5,501.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f2c72c\",d:\"M 791.5,521.5 C 814.879,521.177 838.212,521.51 861.5,522.5C 862.499,534.148 862.832,545.814 862.5,557.5C 862.167,557.5 861.833,557.5 861.5,557.5C 861.666,547.494 861.5,537.494 861,527.5C 860.691,526.234 860.191,525.067 859.5,524C 837.853,524.239 816.186,524.573 794.5,525C 794,525.5 793.5,526 793,526.5C 792.168,534.521 792.335,542.521 793.5,550.5C 794.313,547.599 795.313,544.766 796.5,542C 795.327,539.479 795.327,536.979 796.5,534.5C 798.595,540.73 801.428,541.064 805,535.5C 805.893,536.711 806.726,536.711 807.5,535.5C 806.389,534.389 805.722,533.055 805.5,531.5C 805.747,530.287 806.414,529.62 807.5,529.5C 807.5,530.833 807.5,532.167 807.5,533.5C 808.833,533.5 810.167,533.5 811.5,533.5C 825.5,533.5 839.5,533.5 853.5,533.5C 853.5,532.167 853.5,530.833 853.5,529.5C 857.5,528.833 859.167,530.5 858.5,534.5C 855.15,534.335 851.817,534.502 848.5,535C 848,535.5 847.5,536 847,536.5C 841.899,534.966 836.732,534.633 831.5,535.5C 834.306,536.168 836.972,536.834 839.5,537.5C 828.5,537.5 817.5,537.5 806.5,537.5C 806.286,539.144 806.62,540.644 807.5,542C 818.161,542.5 828.828,542.667 839.5,542.5C 830.658,543.167 821.658,543.833 812.5,544.5C 820.657,545.167 828.657,545.833 836.5,546.5C 826.652,546.173 816.986,546.506 807.5,547.5C 807.5,548.833 807.5,550.167 807.5,551.5C 809.5,551.5 811.5,551.5 813.5,551.5C 826.167,551.5 838.833,551.5 851.5,551.5C 851.38,552.586 850.713,553.253 849.5,553.5C 834.179,552.541 818.846,552.374 803.5,553C 802.328,552.581 801.328,551.915 800.5,551C 801.591,548.936 801.758,546.769 801,544.5C 800.374,546.991 799.541,546.991 798.5,544.5C 797.589,547.102 797.589,549.935 798.5,553C 796.845,554.444 796.178,556.278 796.5,558.5C 795.167,558.5 793.833,558.5 792.5,558.5C 791.505,546.345 791.171,534.011 791.5,521.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#feec87\",d:\"M 807.5,547.5 C 816.986,546.506 826.652,546.173 836.5,546.5C 841.511,546.334 846.511,546.501 851.5,547C 854.046,548.521 854.046,550.021 851.5,551.5C 838.833,551.5 826.167,551.5 813.5,551.5C 826.148,550.981 838.815,550.148 851.5,549C 836.93,547.533 822.264,547.033 807.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fefacd\",d:\"M 807.5,547.5 C 822.264,547.033 836.93,547.533 851.5,549C 838.815,550.148 826.148,550.981 813.5,551.5C 811.5,551.5 809.5,551.5 807.5,551.5C 807.5,550.167 807.5,548.833 807.5,547.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fae89a\",d:\"M 839.5,537.5 C 840.586,537.62 841.253,538.287 841.5,539.5C 841.457,540.416 841.124,541.083 840.5,541.5C 840.5,540.5 840.5,539.5 840.5,538.5C 829.833,538.5 819.167,538.5 808.5,538.5C 808.5,539.5 808.5,540.5 808.5,541.5C 818.833,541.5 829.167,541.5 839.5,541.5C 839.5,541.833 839.5,542.167 839.5,542.5C 828.828,542.667 818.161,542.5 807.5,542C 806.62,540.644 806.286,539.144 806.5,537.5C 817.5,537.5 828.5,537.5 839.5,537.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9fbeb\",d:\"M 840.5,541.5 C 840.167,541.5 839.833,541.5 839.5,541.5C 829.167,541.5 818.833,541.5 808.5,541.5C 808.5,540.5 808.5,539.5 808.5,538.5C 819.167,538.5 829.833,538.5 840.5,538.5C 840.5,539.5 840.5,540.5 840.5,541.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#92a2c0\",d:\"M 873.5,533.5 C 881.974,534.832 890.807,535.498 900,535.5C 909.193,535.498 918.026,534.832 926.5,533.5C 926.833,533.5 927.167,533.5 927.5,533.5C 927.5,534.5 927.5,535.5 927.5,536.5C 926.5,536.5 925.5,536.5 924.5,536.5C 920.167,536.5 915.833,536.5 911.5,536.5C 903.833,536.5 896.167,536.5 888.5,536.5C 883.167,536.5 877.833,536.5 872.5,536.5C 872.263,535.209 872.596,534.209 873.5,533.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c2e50\",d:\"M 873.5,533.5 C 891.167,533.5 908.833,533.5 926.5,533.5C 918.026,534.832 909.193,535.498 900,535.5C 890.807,535.498 881.974,534.832 873.5,533.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf3a9\",d:\"M 852.5,529.5 C 852.833,529.5 853.167,529.5 853.5,529.5C 853.5,530.833 853.5,532.167 853.5,533.5C 839.5,533.5 825.5,533.5 811.5,533.5C 824.99,532.504 838.656,532.171 852.5,532.5C 852.5,531.5 852.5,530.5 852.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef7d1\",d:\"M 852.5,529.5 C 852.5,530.5 852.5,531.5 852.5,532.5C 838.656,532.171 824.99,532.504 811.5,533.5C 810.167,533.5 808.833,533.5 807.5,533.5C 807.5,532.167 807.5,530.833 807.5,529.5C 822.349,528.242 837.349,528.242 852.5,529.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c7e6f7\",d:\"M 866.5,523.5 C 868.698,523.12 870.365,523.787 871.5,525.5C 871.511,527.017 872.177,528.184 873.5,529C 872.567,530.608 873.233,531.441 875.5,531.5C 876.167,531.333 876.833,531.167 877.5,531C 876.5,530.667 875.5,530.333 874.5,530C 876.5,529.833 878.5,529.667 880.5,529.5C 890.827,530.527 901.161,530.527 911.5,529.5C 911.5,530.5 911.5,531.5 911.5,532.5C 898.656,532.171 885.989,532.505 873.5,533.5C 872.596,534.209 872.263,535.209 872.5,536.5C 877.833,536.5 883.167,536.5 888.5,536.5C 887.993,537.859 886.993,538.859 885.5,539.5C 894.141,540.498 902.808,540.831 911.5,540.5C 911.5,539.167 911.5,537.833 911.5,536.5C 915.833,536.5 920.167,536.5 924.5,536.5C 921.797,538.147 918.797,539.314 915.5,540C 916.833,540.333 918.167,540.667 919.5,541C 917.164,542.27 917.164,543.77 919.5,545.5C 922.084,546.393 924.751,546.726 927.5,546.5C 927.5,547.5 927.5,548.5 927.5,549.5C 922.167,549.5 916.833,549.5 911.5,549.5C 912.263,548.732 913.263,548.232 914.5,548C 913.5,547.667 912.5,547.333 911.5,547C 912.672,546.581 913.672,545.915 914.5,545C 905.833,544.333 897.167,544.333 888.5,545C 888.833,545.333 889.167,545.667 889.5,546C 888.167,546.667 886.833,547.333 885.5,548C 886.416,548.278 887.082,548.778 887.5,549.5C 881.794,549.171 876.128,549.505 870.5,550.5C 870.624,551.107 870.957,551.44 871.5,551.5C 890.326,552.497 909.326,552.83 928.5,552.5C 927.942,553.79 926.942,554.623 925.5,555C 927.107,556.049 927.773,557.549 927.5,559.5C 906.833,559.5 886.167,559.5 865.5,559.5C 866.609,558.71 867.942,558.21 869.5,558C 868.299,557.097 867.465,555.931 867,554.5C 866.5,544.172 866.334,533.839 866.5,523.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e4f1fc\",d:\"M 911.5,549.5 C 903.5,549.5 895.5,549.5 887.5,549.5C 887.082,548.778 886.416,548.278 885.5,548C 886.833,547.333 888.167,546.667 889.5,546C 889.167,545.667 888.833,545.333 888.5,545C 897.167,544.333 905.833,544.333 914.5,545C 913.672,545.915 912.672,546.581 911.5,547C 912.5,547.333 913.5,547.667 914.5,548C 913.263,548.232 912.263,548.732 911.5,549.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#212f4c\",d:\"M 888.5,541.5 C 896.528,541.169 904.528,541.502 912.5,542.5C 908.5,542.833 904.5,543.167 900.5,543.5C 896.107,543.491 892.107,542.824 888.5,541.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eef8fd\",d:\"M 888.5,536.5 C 896.167,536.5 903.833,536.5 911.5,536.5C 911.5,537.833 911.5,539.167 911.5,540.5C 902.808,540.831 894.141,540.498 885.5,539.5C 886.993,538.859 887.993,537.859 888.5,536.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b9daf2\",d:\"M 927.5,533.5 C 927.167,533.5 926.833,533.5 926.5,533.5C 908.833,533.5 891.167,533.5 873.5,533.5C 885.989,532.505 898.656,532.171 911.5,532.5C 911.5,531.5 911.5,530.5 911.5,529.5C 901.161,530.527 890.827,530.527 880.5,529.5C 878.5,529.667 876.5,529.833 874.5,530C 875.5,530.333 876.5,530.667 877.5,531C 876.833,531.167 876.167,531.333 875.5,531.5C 873.233,531.441 872.567,530.608 873.5,529C 872.177,528.184 871.511,527.017 871.5,525.5C 875.838,526.405 880.171,527.405 884.5,528.5C 885.672,528.081 886.672,527.415 887.5,526.5C 884.833,525.833 882.167,525.167 879.5,524.5C 892.529,523.122 905.529,523.289 918.5,525C 916.19,525.497 913.857,525.663 911.5,525.5C 911.5,526.5 911.5,527.5 911.5,528.5C 916.136,529.149 920.802,529.649 925.5,530C 926.973,530.71 927.64,531.876 927.5,533.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b4e6f8\",d:\"M 940.5,521.5 C 940.5,534.167 940.5,546.833 940.5,559.5C 936.167,559.5 931.833,559.5 927.5,559.5C 927.773,557.549 927.107,556.049 925.5,555C 926.942,554.623 927.942,553.79 928.5,552.5C 928.5,551.833 928.5,551.167 928.5,550.5C 928.5,549.833 928.167,549.5 927.5,549.5C 927.5,548.5 927.5,547.5 927.5,546.5C 924.751,546.726 922.084,546.393 919.5,545.5C 917.164,543.77 917.164,542.27 919.5,541C 918.167,540.667 916.833,540.333 915.5,540C 918.797,539.314 921.797,538.147 924.5,536.5C 925.5,536.5 926.5,536.5 927.5,536.5C 927.5,535.5 927.5,534.5 927.5,533.5C 927.64,531.876 926.973,530.71 925.5,530C 920.802,529.649 916.136,529.149 911.5,528.5C 911.5,527.5 911.5,526.5 911.5,525.5C 913.857,525.663 916.19,525.497 918.5,525C 905.529,523.289 892.529,523.122 879.5,524.5C 882.167,525.167 884.833,525.833 887.5,526.5C 886.672,527.415 885.672,528.081 884.5,528.5C 880.171,527.405 875.838,526.405 871.5,525.5C 870.365,523.787 868.698,523.12 866.5,523.5C 865.957,523.44 865.624,523.107 865.5,522.5C 890.491,521.5 915.491,521.167 940.5,521.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fef6c7\",d:\"M 790.5,520.5 C 814.545,520.177 838.545,520.51 862.5,521.5C 863.825,533.66 863.825,545.66 862.5,557.5C 862.832,545.814 862.499,534.148 861.5,522.5C 838.212,521.51 814.879,521.177 791.5,521.5C 790.833,521.5 790.5,521.167 790.5,520.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7fbf8\",d:\"M 790.5,517.5 C 840.844,516.838 890.844,517.505 940.5,519.5C 940.5,520.167 940.5,520.833 940.5,521.5C 915.491,521.167 890.491,521.5 865.5,522.5C 865.624,523.107 865.957,523.44 866.5,523.5C 866.334,533.839 866.5,544.172 867,554.5C 867.465,555.931 868.299,557.097 869.5,558C 867.942,558.21 866.609,558.71 865.5,559.5C 864.167,559.5 862.833,559.5 861.5,559.5C 861.5,558.833 861.5,558.167 861.5,557.5C 861.833,557.5 862.167,557.5 862.5,557.5C 863.825,545.66 863.825,533.66 862.5,521.5C 838.545,520.51 814.545,520.177 790.5,520.5C 790.5,519.5 790.5,518.5 790.5,517.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cecded\",d:\"M 790.5,517.5 C 790.5,517.167 790.5,516.833 790.5,516.5C 820.167,516.5 849.833,516.5 879.5,516.5C 900.527,515.845 921.194,516.512 941.5,518.5C 941.5,518.833 941.5,519.167 941.5,519.5C 941.167,519.5 940.833,519.5 940.5,519.5C 890.844,517.505 840.844,516.838 790.5,517.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#42261d\",d:\"M 790.5,514.5 C 791.167,514.5 791.833,514.5 792.5,514.5C 841.833,514.5 891.167,514.5 940.5,514.5C 940.5,514.833 940.5,515.167 940.5,515.5C 919.993,515.17 899.66,515.503 879.5,516.5C 849.833,516.5 820.167,516.5 790.5,516.5C 790.5,515.833 790.5,515.167 790.5,514.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#232220\",d:\"M 795.5,497.5 C 843.168,497.333 890.834,497.5 938.5,498C 939.745,498.791 941.078,499.291 942.5,499.5C 943.338,499.842 943.672,500.508 943.5,501.5C 943.826,505.884 943.492,510.217 942.5,514.5C 941.817,514.863 941.15,515.196 940.5,515.5C 940.5,515.167 940.5,514.833 940.5,514.5C 941.794,510.066 941.794,505.733 940.5,501.5C 940.082,500.778 939.416,500.278 938.5,500C 890.834,499.5 843.168,499.333 795.5,499.5C 793.629,499.859 792.129,500.859 791,502.5C 790.501,506.486 790.334,510.486 790.5,514.5C 790.5,515.167 790.5,515.833 790.5,516.5C 789.504,530.657 789.171,544.99 789.5,559.5C 789.167,559.5 788.833,559.5 788.5,559.5C 788.5,540.833 788.5,522.167 788.5,503.5C 789.578,500.092 791.911,498.092 795.5,497.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5892c\",d:\"M 940.5,501.5 C 941.794,505.733 941.794,510.066 940.5,514.5C 891.167,514.5 841.833,514.5 792.5,514.5C 792.5,514.167 792.5,513.833 792.5,513.5C 792.833,513.5 793.167,513.5 793.5,513.5C 832.833,513.5 872.167,513.5 911.5,513.5C 916.833,513.5 922.167,513.5 927.5,513.5C 931.182,513.665 934.848,513.499 938.5,513C 939.056,512.617 939.389,512.117 939.5,511.5C 940.477,508.713 940.81,505.713 940.5,502.5C 940.5,502.167 940.5,501.833 940.5,501.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9b313\",d:\"M 939.5,511.5 C 939.389,512.117 939.056,512.617 938.5,513C 934.848,513.499 931.182,513.665 927.5,513.5C 929.237,510.371 931.237,507.371 933.5,504.5C 935.409,503.652 937.409,503.318 939.5,503.5C 939.5,506.167 939.5,508.833 939.5,511.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b8a76a\",d:\"M 795.5,499.5 C 791.498,503.538 790.498,508.205 792.5,513.5C 792.5,513.833 792.5,514.167 792.5,514.5C 791.833,514.5 791.167,514.5 790.5,514.5C 790.334,510.486 790.501,506.486 791,502.5C 792.129,500.859 793.629,499.859 795.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8bd07\",d:\"M 809.5,507.5 C 810.833,508.833 812.167,508.833 813.5,507.5C 813.833,507.5 814.167,507.5 814.5,507.5C 815.833,505.833 815.833,504.167 814.5,502.5C 848.663,501.502 882.996,501.168 917.5,501.5C 917.205,503.735 917.539,505.735 918.5,507.5C 918.286,509.144 918.62,510.644 919.5,512C 916.635,512.183 913.969,512.683 911.5,513.5C 872.167,513.5 832.833,513.5 793.5,513.5C 791.328,502.509 795.662,498.676 806.5,502C 807.953,503.649 808.953,505.482 809.5,507.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#503414\",d:\"M 814.5,502.5 C 815.833,504.167 815.833,505.833 814.5,507.5C 814.5,506.167 814.5,504.833 814.5,503.5C 811.5,503.167 810.167,504.5 810.5,507.5C 811.5,507.5 812.5,507.5 813.5,507.5C 812.167,508.833 810.833,508.833 809.5,507.5C 808.833,503.5 810.5,501.833 814.5,502.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#604e85\",d:\"M 814.5,507.5 C 814.167,507.5 813.833,507.5 813.5,507.5C 812.5,507.5 811.5,507.5 810.5,507.5C 810.167,504.5 811.5,503.167 814.5,503.5C 814.5,504.833 814.5,506.167 814.5,507.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e3b332\",d:\"M 917.5,501.5 C 925.222,501.233 932.889,501.566 940.5,502.5C 940.81,505.713 940.477,508.713 939.5,511.5C 939.5,508.833 939.5,506.167 939.5,503.5C 937.409,503.318 935.409,503.652 933.5,504.5C 931.237,507.371 929.237,510.371 927.5,513.5C 922.167,513.5 916.833,513.5 911.5,513.5C 913.969,512.683 916.635,512.183 919.5,512C 918.62,510.644 918.286,509.144 918.5,507.5C 917.539,505.735 917.205,503.735 917.5,501.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39230e\",d:\"M 918.5,507.5 C 918.5,505.833 918.5,504.167 918.5,502.5C 921.833,502.5 925.167,502.5 928.5,502.5C 929.703,509.35 927.037,512.183 920.5,511C 919.915,509.698 919.249,508.531 918.5,507.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d1d9d0\",d:\"M 921.5,503.5 C 923.167,503.5 924.833,503.5 926.5,503.5C 927.508,508.667 925.675,510.334 921,508.5C 920.36,506.735 920.527,505.068 921.5,503.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6d2313\",d:\"M 804.5,504.5 C 803.5,504.5 802.5,504.5 801.5,504.5C 801.5,505.5 801.5,506.5 801.5,507.5C 802.5,507.5 803.5,507.5 804.5,507.5C 800.531,509.341 799.197,508.175 800.5,504C 802.066,503.235 803.399,503.402 804.5,504.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f5e48b\",d:\"M 795.5,499.5 C 843.168,499.333 890.834,499.5 938.5,500C 939.416,500.278 940.082,500.778 940.5,501.5C 940.5,501.833 940.5,502.167 940.5,502.5C 932.889,501.566 925.222,501.233 917.5,501.5C 882.996,501.168 848.663,501.502 814.5,502.5C 810.5,501.833 808.833,503.5 809.5,507.5C 808.953,505.482 807.953,503.649 806.5,502C 795.662,498.676 791.328,502.509 793.5,513.5C 793.167,513.5 792.833,513.5 792.5,513.5C 790.498,508.205 791.498,503.538 795.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7c2b54\",d:\"M 804.5,504.5 C 804.5,505.5 804.5,506.5 804.5,507.5C 803.5,507.5 802.5,507.5 801.5,507.5C 801.5,506.5 801.5,505.5 801.5,504.5C 802.5,504.5 803.5,504.5 804.5,504.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#284053\",d:\"M 942.5,499.5 C 941.078,499.291 939.745,498.791 938.5,498C 890.834,497.5 843.168,497.333 795.5,497.5C 837.33,496.501 879.33,496.168 921.5,496.5C 927.433,495.787 933.433,495.953 939.5,497C 940.942,497.377 941.942,498.21 942.5,499.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3dcdfb\",d:\"M 872.5,901.5 C 864.684,902.492 856.684,902.826 848.5,902.5C 845.402,902.244 842.402,901.578 839.5,900.5C 838.5,899.167 837.5,897.833 836.5,896.5C 837.833,896.5 838.5,895.833 838.5,894.5C 839.267,890.585 839.767,886.585 840,882.5C 840.936,880.292 842.602,878.958 845,878.5C 848.332,880.636 851.832,882.636 855.5,884.5C 854.167,885.62 853.667,886.953 854,888.5C 854.667,887.167 855.333,887.167 856,888.5C 856.219,887.062 856.719,885.729 857.5,884.5C 858.004,887.299 859.004,889.799 860.5,892C 859.366,893.016 859.699,893.683 861.5,894C 859.842,895.663 857.842,896.496 855.5,896.5C 855.5,895.5 855.5,894.5 855.5,893.5C 852.833,893.5 850.167,893.5 847.5,893.5C 847.101,890.012 846.434,889.846 845.5,893C 845.585,894.107 845.919,895.107 846.5,896C 848.81,896.497 851.143,896.663 853.5,896.5C 853.5,897.5 853.5,898.5 853.5,899.5C 851.143,899.337 848.81,899.503 846.5,900C 847.167,900.333 847.833,900.667 848.5,901C 856.493,901.5 864.493,901.666 872.5,901.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdefe4\",d:\"M 939.5,869.5 C 940.609,869.557 941.609,869.89 942.5,870.5C 921.5,871.167 900.5,871.833 879.5,872.5C 879.5,882.167 879.5,891.833 879.5,901.5C 878.833,901.5 878.167,901.5 877.5,901.5C 877.5,890.833 877.5,880.167 877.5,869.5C 898.167,869.5 918.833,869.5 939.5,869.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d96c6e\",d:\"M 227.5,885.5 C 232.178,886.664 236.844,887.664 241.5,888.5C 237.818,888.665 234.152,888.499 230.5,888C 229.429,887.148 228.429,886.315 227.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f96561\",d:\"M 481.5,802.5 C 485.367,802.242 489.034,802.908 492.5,804.5C 493.833,805.5 495.167,806.5 496.5,807.5C 497.072,809.255 497.906,810.922 499,812.5C 499.667,837.833 499.667,863.167 499,888.5C 498.078,893.273 496.911,897.94 495.5,902.5C 492.215,904.975 488.548,906.642 484.5,907.5C 484.369,906.624 484.702,905.957 485.5,905.5C 487.059,904.926 488.559,904.26 490,903.5C 490.667,902.5 490.667,901.5 490,900.5C 486.526,901.951 483.026,903.451 479.5,905C 472.309,905.256 465.143,905.756 458,906.5C 455.5,906 453,905.5 450.5,905C 440.667,904.833 430.833,904.667 421,904.5C 405.639,904.346 390.472,905.013 375.5,906.5C 372.833,906.5 370.167,906.5 367.5,906.5C 366.833,905.167 365.833,904.167 364.5,903.5C 363.529,901.517 362.529,899.517 361.5,897.5C 362.103,895.374 362.103,893.041 361.5,890.5C 361.728,873.953 361.728,857.453 361.5,841C 361.375,837.645 361.875,834.478 363,831.5C 364.823,850.786 365.823,870.12 366,889.5C 366.333,890.167 366.667,890.833 367,891.5C 366.801,887.535 368.634,885.535 372.5,885.5C 375.827,887.133 379.16,887.799 382.5,887.5C 382.5,891.167 382.5,894.833 382.5,898.5C 395.897,898.279 409.064,897.279 422,895.5C 422.383,896.056 422.883,896.389 423.5,896.5C 436.66,897.331 449.994,897.831 463.5,898C 466.227,899.636 468.893,899.802 471.5,898.5C 472.369,896.283 472.702,893.95 472.5,891.5C 472.5,890.167 472.5,888.833 472.5,887.5C 469.518,887.104 466.851,887.771 464.5,889.5C 463.817,889.137 463.15,888.804 462.5,888.5C 461.081,887.549 459.415,887.216 457.5,887.5C 456.833,887.5 456.167,887.5 455.5,887.5C 454.833,887.5 454.167,887.5 453.5,887.5C 451.5,887.5 449.5,887.5 447.5,887.5C 453.351,883.277 455.351,877.61 453.5,870.5C 453.5,865.5 453.5,860.5 453.5,855.5C 454.302,856.952 454.802,858.618 455,860.5C 456.998,859.729 458.665,860.395 460,862.5C 460.76,866.225 460.593,869.892 459.5,873.5C 460.671,875.169 462.004,876.669 463.5,878C 463.095,878.945 462.428,879.612 461.5,880C 461.833,880.333 462.167,880.667 462.5,881C 465.5,881.333 468.5,881.667 471.5,882C 471.167,882.333 470.833,882.667 470.5,883C 473.21,884.747 476.21,885.747 479.5,886C 480.126,886.75 480.626,887.584 481,888.5C 481.519,887.484 482.353,886.818 483.5,886.5C 485.241,887.249 486.908,887.583 488.5,887.5C 488.833,887.167 489.167,886.833 489.5,886.5C 488.675,885.614 487.675,885.281 486.5,885.5C 486.5,884.167 486.5,882.833 486.5,881.5C 489.015,880.836 491.181,879.503 493,877.5C 493.623,881.932 494.623,882.265 496,878.5C 497.606,857.51 497.773,836.51 496.5,815.5C 495.167,816.167 494.167,817.167 493.5,818.5C 495.898,820.621 496.065,822.955 494,825.5C 493.632,824.09 492.799,823.09 491.5,822.5C 490.284,823.002 489.117,823.335 488,823.5C 485.345,821.947 482.512,820.78 479.5,820C 478.76,818.215 478.093,816.382 477.5,814.5C 476.092,813.757 474.759,812.923 473.5,812C 460.315,811.699 447.315,811.033 434.5,810C 435.328,809.085 436.328,808.419 437.5,808C 436.833,807.667 436.167,807.333 435.5,807C 439.309,805.412 443.309,805.078 447.5,806C 448.641,806.741 448.641,807.575 447.5,808.5C 452.833,808.833 458.167,809.167 463.5,809.5C 470.697,809.301 477.53,808.634 484,807.5C 486.321,808.487 487.987,810.154 489,812.5C 491.571,811.023 492.071,809.023 490.5,806.5C 487.427,805.167 484.427,803.834 481.5,802.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f56061\",d:\"M 445.5,886.5 C 434.577,885.893 423.91,886.56 413.5,888.5C 412.432,887.566 411.099,887.232 409.5,887.5C 409.167,887.5 408.833,887.5 408.5,887.5C 408.265,886.903 407.765,886.57 407,886.5C 405.923,887.429 404.756,888.096 403.5,888.5C 402.167,887.167 400.833,887.167 399.5,888.5C 398.833,888.5 398.167,888.5 397.5,888.5C 397.672,887.508 397.338,886.842 396.5,886.5C 395.551,885.848 394.385,885.514 393,885.5C 390.824,885.877 388.991,886.543 387.5,887.5C 389.832,885.308 391.665,882.641 393,879.5C 394.915,881.371 397.082,882.538 399.5,883C 400.138,881.293 400.138,879.46 399.5,877.5C 400.675,877.281 401.675,877.614 402.5,878.5C 401.072,881.35 401.739,882.35 404.5,881.5C 407.099,885.641 407.765,885.474 406.5,881C 408.98,880.04 411.48,879.207 414,878.5C 420.085,879.312 426.252,879.812 432.5,880C 433.747,881.946 435.08,883.78 436.5,885.5C 437.7,884.469 439.034,883.635 440.5,883C 439.833,882.333 439.167,881.667 438.5,881C 439.905,879.731 441.571,879.231 443.5,879.5C 443.185,882.211 443.852,884.544 445.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bf3f51\",d:\"M 452.5,851.5 C 453.434,852.568 453.768,853.901 453.5,855.5C 453.5,860.5 453.5,865.5 453.5,870.5C 452.802,872.667 451.469,874.5 449.5,876C 435.134,876.782 420.801,876.616 406.5,875.5C 406.5,874.167 406.5,872.833 406.5,871.5C 407.167,871.5 407.5,871.833 407.5,872.5C 414.133,873.83 421.133,874.497 428.5,874.5C 435.5,874.333 442.5,874.167 449.5,874C 451.037,872.89 451.703,871.39 451.5,869.5C 452.49,863.69 452.823,857.69 452.5,851.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#461338\",d:\"M 451.5,869.5 C 451.703,871.39 451.037,872.89 449.5,874C 442.5,874.167 435.5,874.333 428.5,874.5C 421.133,874.497 414.133,873.83 407.5,872.5C 408.167,872.5 408.833,872.5 409.5,872.5C 422.327,873.66 435.327,873.827 448.5,873C 449.056,872.617 449.389,872.117 449.5,871.5C 450.167,870.833 450.833,870.167 451.5,869.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#19326b\",d:\"M 409.5,871.5 C 422.833,871.5 436.167,871.5 449.5,871.5C 449.389,872.117 449.056,872.617 448.5,873C 435.327,873.827 422.327,873.66 409.5,872.5C 409.5,872.167 409.5,871.833 409.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#22a3d7\",d:\"M 448.5,852.5 C 449.49,858.645 449.823,864.978 449.5,871.5C 436.167,871.5 422.833,871.5 409.5,871.5C 408.596,870.791 408.263,869.791 408.5,868.5C 408.833,868.5 409.167,868.5 409.5,868.5C 418.105,870.471 427.105,871.138 436.5,870.5C 440.437,870.793 444.27,870.46 448,869.5C 448.499,863.843 448.666,858.176 448.5,852.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bd6768\",d:\"M 413.5,837.5 C 413.5,841.5 413.5,845.5 413.5,849.5C 411.533,849.261 409.699,849.594 408,850.5C 406.712,857.437 406.212,864.437 406.5,871.5C 405.347,865.681 405.181,859.681 406,853.5C 406,849.5 408,847.5 412,847.5C 412.179,843.975 412.679,840.641 413.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#26e1fd\",d:\"M 448.5,852.5 C 448.666,858.176 448.499,863.843 448,869.5C 444.27,870.46 440.437,870.793 436.5,870.5C 431.034,869.276 425.367,868.443 419.5,868C 420.5,867.667 421.5,867.333 422.5,867C 420.5,866.667 418.5,866.333 416.5,866C 423.177,865.547 429.844,865.047 436.5,864.5C 436.866,862.095 437.533,859.762 438.5,857.5C 437.954,855.865 437.62,854.199 437.5,852.5C 441.167,851.167 444.833,851.167 448.5,852.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#84324b\",d:\"M 445.5,848.5 C 446.833,848.5 448.167,848.5 449.5,848.5C 450.694,849.272 451.694,850.272 452.5,851.5C 452.823,857.69 452.49,863.69 451.5,869.5C 451.666,863.491 451.499,857.491 451,851.5C 448.942,850.771 447.109,849.771 445.5,848.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#76def1\",d:\"M 431.5,837.5 C 434.5,837.5 437.5,837.5 440.5,837.5C 439.791,838.404 438.791,838.737 437.5,838.5C 432.176,841.039 426.509,842.039 420.5,841.5C 420.82,844.898 420.487,848.232 419.5,851.5C 417.51,852.873 415.343,853.873 413,854.5C 412.79,855.803 412.957,857.136 413.5,858.5C 412.145,862.392 411.311,862.059 411,857.5C 410.823,861.356 410.323,865.023 409.5,868.5C 409.167,868.5 408.833,868.5 408.5,868.5C 408.324,863.12 408.658,857.787 409.5,852.5C 411.565,852.483 413.565,852.15 415.5,851.5C 417.104,848.597 418.104,845.263 418.5,841.5C 421.777,840.746 425.11,840.246 428.5,840C 430.119,839.764 431.119,838.931 431.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#632f2e\",d:\"M 419.5,835.5 C 418.122,836.234 416.622,836.901 415,837.5C 414.824,841.688 414.324,845.688 413.5,849.5C 413.5,845.5 413.5,841.5 413.5,837.5C 414.99,835.72 416.99,835.054 419.5,835.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3bcef6\",d:\"M 437.5,838.5 C 437.337,840.857 437.503,843.19 438,845.5C 438.498,847.544 439.665,848.878 441.5,849.5C 444.157,849.935 446.491,850.935 448.5,852.5C 444.833,851.167 441.167,851.167 437.5,852.5C 437.62,854.199 437.954,855.865 438.5,857.5C 437.533,859.762 436.866,862.095 436.5,864.5C 429.844,865.047 423.177,865.547 416.5,866C 418.5,866.333 420.5,866.667 422.5,867C 421.5,867.333 420.5,867.667 419.5,868C 425.367,868.443 431.034,869.276 436.5,870.5C 427.105,871.138 418.105,870.471 409.5,868.5C 410.323,865.023 410.823,861.356 411,857.5C 411.311,862.059 412.145,862.392 413.5,858.5C 412.957,857.136 412.79,855.803 413,854.5C 415.343,853.873 417.51,852.873 419.5,851.5C 420.487,848.232 420.82,844.898 420.5,841.5C 426.509,842.039 432.176,841.039 437.5,838.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#153d6a\",d:\"M 425.5,850.5 C 434.514,850.538 436.848,854.538 432.5,862.5C 426.173,865.012 422.84,862.846 422.5,856C 422.613,853.601 423.613,851.768 425.5,850.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b9d9ee\",d:\"M 425.5,854.5 C 427.5,854.5 429.5,854.5 431.5,854.5C 431.662,856.527 431.495,858.527 431,860.5C 429.333,861.833 427.667,861.833 426,860.5C 425.505,858.527 425.338,856.527 425.5,854.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d90d8\",d:\"M 440.5,837.5 C 441.479,840.625 441.813,843.958 441.5,847.5C 441.5,848.167 441.5,848.833 441.5,849.5C 439.665,848.878 438.498,847.544 438,845.5C 437.503,843.19 437.337,840.857 437.5,838.5C 438.791,838.737 439.791,838.404 440.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c6f2f9\",d:\"M 425.5,837.5 C 427.5,837.5 429.5,837.5 431.5,837.5C 431.119,838.931 430.119,839.764 428.5,840C 425.11,840.246 421.777,840.746 418.5,841.5C 418.104,845.263 417.104,848.597 415.5,851.5C 416.441,846.93 416.774,842.263 416.5,837.5C 419.5,837.5 422.5,837.5 425.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2d5a85\",d:\"M 425.5,837.5 C 425.5,837.167 425.5,836.833 425.5,836.5C 431.167,836.5 436.833,836.5 442.5,836.5C 442.815,840.371 442.482,844.038 441.5,847.5C 441.813,843.958 441.479,840.625 440.5,837.5C 437.5,837.5 434.5,837.5 431.5,837.5C 429.5,837.5 427.5,837.5 425.5,837.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ffd4c3\",d:\"M 481.5,813.5 C 482.5,813.5 483.5,813.5 484.5,813.5C 485.244,816.95 483.91,818.616 480.5,818.5C 480.629,816.784 480.962,815.117 481.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e27f7d\",d:\"M 396.5,886.5 C 393.937,887.2 391.437,888.2 389,889.5C 387.97,889.164 387.47,888.497 387.5,887.5C 388.991,886.543 390.824,885.877 393,885.5C 394.385,885.514 395.551,885.848 396.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8cec7\",d:\"M 299.5,886.5 C 301.048,886.821 301.715,887.821 301.5,889.5C 302.5,889.5 303.5,889.5 304.5,889.5C 304.5,888.5 304.5,887.5 304.5,886.5C 305.675,886.281 306.675,886.614 307.5,887.5C 306.044,890.286 305.044,893.286 304.5,896.5C 303.548,894.955 303.215,893.288 303.5,891.5C 299.822,890.606 296.156,890.939 292.5,892.5C 293.325,893.386 294.325,893.719 295.5,893.5C 295.5,894.833 295.5,896.167 295.5,897.5C 294.167,897.5 292.833,897.5 291.5,897.5C 290.457,894.041 288.79,893.708 286.5,896.5C 285.761,896.631 285.094,896.464 284.5,896C 285.184,894.307 286.184,892.807 287.5,891.5C 286.311,890.571 284.978,890.238 283.5,890.5C 283.5,892.5 283.5,894.5 283.5,896.5C 282.5,896.5 281.5,896.5 280.5,896.5C 279.964,893.302 280.631,890.635 282.5,888.5C 284.5,888.5 286.5,888.5 288.5,888.5C 289.167,888.5 289.5,888.833 289.5,889.5C 289.56,890.043 289.893,890.376 290.5,890.5C 292.665,887.097 295.165,886.764 298,889.5C 298.513,888.473 299.013,887.473 299.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f3a096\",d:\"M 928.5,885.5 C 927.85,887.435 927.517,889.435 927.5,891.5C 924.833,891.5 922.167,891.5 919.5,891.5C 920.624,889.269 921.124,886.936 921,884.5C 918.646,884.108 916.146,884.108 913.5,884.5C 913.671,887.797 913.005,888.131 911.5,885.5C 908.914,884.52 906.247,884.187 903.5,884.5C 902.933,886.969 902.933,889.302 903.5,891.5C 900.753,891.813 898.086,891.48 895.5,890.5C 894.461,888.469 892.795,887.136 890.5,886.5C 891.421,884.244 893.088,883.244 895.5,883.5C 906.504,883.278 917.504,882.944 928.5,882.5C 928.5,883.5 928.5,884.5 928.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcd7c4\",d:\"M 919.5,891.5 C 916.167,891.5 912.833,891.5 909.5,891.5C 909.5,889.833 909.5,888.167 909.5,886.5C 908.167,886.5 906.833,886.5 905.5,886.5C 905.629,888.216 905.962,889.883 906.5,891.5C 905.5,891.5 904.5,891.5 903.5,891.5C 902.933,889.302 902.933,886.969 903.5,884.5C 906.247,884.187 908.914,884.52 911.5,885.5C 913.005,888.131 913.671,887.797 913.5,884.5C 916.146,884.108 918.646,884.108 921,884.5C 921.124,886.936 920.624,889.269 919.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1a296\",d:\"M 909.5,891.5 C 908.5,891.5 907.5,891.5 906.5,891.5C 905.962,889.883 905.629,888.216 905.5,886.5C 906.833,886.5 908.167,886.5 909.5,886.5C 909.5,888.167 909.5,889.833 909.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#edc024\",d:\"M 104.5,887.5 C 101.593,891.193 101.927,894.526 105.5,897.5C 98.1104,897.764 90.7771,897.43 83.5,896.5C 83.5,896.167 83.5,895.833 83.5,895.5C 86.8599,895.616 90.1933,895.949 93.5,896.5C 93.238,895.022 93.5713,893.689 94.5,892.5C 95.6951,894.297 97.3618,895.297 99.5,895.5C 99.7683,892.881 99.435,890.381 98.5,888C 93.2594,887.789 88.0927,887.622 83,887.5C 80.2734,888.063 77.6067,888.73 75,889.5C 74.7216,888.584 74.2216,887.918 73.5,887.5C 73.5,887.167 73.5,886.833 73.5,886.5C 74.8121,886.176 75.6454,885.509 76,884.5C 83.2118,886.747 90.5452,887.081 98,885.5C 99.9214,887.003 102.088,887.669 104.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9ec8b\",d:\"M 104.5,887.5 C 109.412,886.974 114.078,887.641 118.5,889.5C 119.833,891.833 119.833,894.167 118.5,896.5C 114.906,897.426 111.24,897.759 107.5,897.5C 106.833,897.5 106.167,897.5 105.5,897.5C 101.927,894.526 101.593,891.193 104.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbdcda\",d:\"M 227.5,885.5 C 228.429,886.315 229.429,887.148 230.5,888C 234.152,888.499 237.818,888.665 241.5,888.5C 241.5,888.833 241.5,889.167 241.5,889.5C 242.263,890.268 243.263,890.768 244.5,891C 243.663,892.011 243.33,893.178 243.5,894.5C 241.61,894.703 240.11,894.037 239,892.5C 238.517,893.448 238.351,894.448 238.5,895.5C 237.5,895.5 236.5,895.5 235.5,895.5C 235.719,894.325 235.386,893.325 234.5,892.5C 233.5,893.833 232.5,895.167 231.5,896.5C 230.483,893.972 229.316,893.972 228,896.5C 227.517,895.552 227.351,894.552 227.5,893.5C 226.5,893.5 225.5,893.5 224.5,893.5C 224.737,894.791 224.404,895.791 223.5,896.5C 222.42,893.257 222.253,889.924 223,886.5C 224.356,885.62 225.856,885.286 227.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9cdcd\",d:\"M 257.5,893.5 C 258.209,894.404 259.209,894.737 260.5,894.5C 260.5,895.5 260.5,896.5 260.5,897.5C 259.5,897.5 258.5,897.5 257.5,897.5C 256.542,896.038 255.376,894.705 254,893.5C 253.174,887.824 255.674,885.157 261.5,885.5C 260.832,888.5 259.498,891.167 257.5,893.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f7ddd8\",d:\"M 279.5,887.5 C 279.817,890.572 279.484,893.572 278.5,896.5C 276.101,884.477 275.101,884.811 275.5,897.5C 273.857,897.52 272.524,896.853 271.5,895.5C 269.49,897.171 267.157,897.838 264.5,897.5C 262.919,895.858 262.253,893.858 262.5,891.5C 263.29,890.206 264.29,889.039 265.5,888C 268.367,886.726 271.367,885.893 274.5,885.5C 276.64,885.556 278.306,886.223 279.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fce9e1\",d:\"M 396.5,886.5 C 397.338,886.842 397.672,887.508 397.5,888.5C 397.721,891.279 397.388,893.946 396.5,896.5C 395.5,896.5 394.5,896.5 393.5,896.5C 393.762,895.022 393.429,893.689 392.5,892.5C 390.07,894.382 387.403,895.715 384.5,896.5C 384.5,893.5 384.5,890.5 384.5,887.5C 385.5,887.5 386.5,887.5 387.5,887.5C 387.47,888.497 387.97,889.164 389,889.5C 391.437,888.2 393.937,887.2 396.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b0f8fc\",d:\"M 752.5,885.5 C 753.75,885.577 754.583,886.244 755,887.5C 755.498,890.817 755.665,894.15 755.5,897.5C 754.167,897.5 752.833,897.5 751.5,897.5C 752.272,893.548 752.605,889.548 752.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8f3b7\",d:\"M 73.5,886.5 C 73.5,886.833 73.5,887.167 73.5,887.5C 73.5,889.5 73.5,891.5 73.5,893.5C 72.0473,895.229 70.0473,896.229 67.5,896.5C 66.513,893.232 66.1796,889.898 66.5,886.5C 68.8333,886.5 71.1667,886.5 73.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eea5a3\",d:\"M 408.5,887.5 C 407.414,887.62 406.747,888.287 406.5,889.5C 406.86,891.608 407.527,893.608 408.5,895.5C 409.48,892.914 409.813,890.247 409.5,887.5C 411.099,887.232 412.432,887.566 413.5,888.5C 412.448,888.351 411.448,888.517 410.5,889C 411.22,891.491 411.887,893.991 412.5,896.5C 407.167,896.5 401.833,896.5 396.5,896.5C 397.388,893.946 397.721,891.279 397.5,888.5C 398.167,888.5 398.833,888.5 399.5,888.5C 397.463,894.054 399.463,896.387 405.5,895.5C 404.551,893.263 403.884,890.929 403.5,888.5C 404.756,888.096 405.923,887.429 407,886.5C 407.765,886.57 408.265,886.903 408.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f9dbcf\",d:\"M 445.5,887.5 C 445.817,890.572 445.484,893.572 444.5,896.5C 443.522,896.023 442.689,895.357 442,894.5C 440.451,897.003 438.784,897.003 437,894.5C 436.261,895.574 435.261,896.241 434,896.5C 430.668,896.25 427.168,896.25 423.5,896.5C 423.007,894.194 422.674,891.861 422.5,889.5C 421.325,889.281 420.325,889.614 419.5,890.5C 420.348,892.409 420.682,894.409 420.5,896.5C 419.5,896.5 418.5,896.5 417.5,896.5C 417.89,893.534 417.223,890.868 415.5,888.5C 425.478,887.501 435.478,887.168 445.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fde7dd\",d:\"M 462.5,888.5 C 462.5,890.167 462.5,891.833 462.5,893.5C 464.675,893.682 466.675,894.349 468.5,895.5C 469.167,895.167 469.833,894.833 470.5,894.5C 466.897,892.354 467.563,891.354 472.5,891.5C 472.702,893.95 472.369,896.283 471.5,898.5C 467.857,898.522 464.524,897.522 461.5,895.5C 459.809,892.655 460.143,890.321 462.5,888.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1c0b7\",d:\"M 472.5,891.5 C 467.563,891.354 466.897,892.354 470.5,894.5C 469.833,894.833 469.167,895.167 468.5,895.5C 466.675,894.349 464.675,893.682 462.5,893.5C 462.5,891.833 462.5,890.167 462.5,888.5C 463.15,888.804 463.817,889.137 464.5,889.5C 466.851,887.771 469.518,887.104 472.5,887.5C 472.5,888.833 472.5,890.167 472.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8f7fc\",d:\"M 561.5,891.5 C 561.254,894.47 559.588,895.803 556.5,895.5C 551.387,897.181 546.887,896.181 543,892.5C 542.167,893.5 541.333,894.5 540.5,895.5C 539.914,895.291 539.414,894.957 539,894.5C 538.503,891.854 538.336,889.187 538.5,886.5C 540.952,886.624 542.952,887.624 544.5,889.5C 546.048,887.624 548.048,886.624 550.5,886.5C 550.345,894.158 551.845,894.491 555,887.5C 558.992,885.639 561.159,886.972 561.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#faec7e\",d:\"M 73.5,887.5 C 74.2216,887.918 74.7216,888.584 75,889.5C 77.6067,888.73 80.2734,888.063 83,887.5C 88.0927,887.622 93.2594,887.789 98.5,888C 99.435,890.381 99.7683,892.881 99.5,895.5C 97.3618,895.297 95.6951,894.297 94.5,892.5C 93.5713,893.689 93.238,895.022 93.5,896.5C 90.1933,895.949 86.8599,895.616 83.5,895.5C 82.8953,893.974 81.7286,892.974 80,892.5C 79.5172,891.552 79.3505,890.552 79.5,889.5C 76.0897,889.384 74.7564,891.05 75.5,894.5C 74.8333,894.167 74.1667,893.833 73.5,893.5C 73.5,891.5 73.5,889.5 73.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d99fa2\",d:\"M 279.5,887.5 C 280.791,887.263 281.791,887.596 282.5,888.5C 280.631,890.635 279.964,893.302 280.5,896.5C 281.5,896.5 282.5,896.5 283.5,896.5C 283.5,894.5 283.5,892.5 283.5,890.5C 284.978,890.238 286.311,890.571 287.5,891.5C 286.184,892.807 285.184,894.307 284.5,896C 285.094,896.464 285.761,896.631 286.5,896.5C 283.038,897.482 279.371,897.815 275.5,897.5C 275.101,884.811 276.101,884.477 278.5,896.5C 279.484,893.572 279.817,890.572 279.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbf7ca\",d:\"M 83.5,895.5 C 83.5,895.833 83.5,896.167 83.5,896.5C 80.5049,896.706 77.8383,896.04 75.5,894.5C 74.7564,891.05 76.0897,889.384 79.5,889.5C 79.3505,890.552 79.5172,891.552 80,892.5C 81.7286,892.974 82.8953,893.974 83.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d77b80\",d:\"M 262.5,891.5 C 262.253,893.858 262.919,895.858 264.5,897.5C 261.995,898.417 259.662,898.417 257.5,897.5C 258.5,897.5 259.5,897.5 260.5,897.5C 260.5,896.5 260.5,895.5 260.5,894.5C 259.209,894.737 258.209,894.404 257.5,893.5C 259.554,893.635 261.221,892.968 262.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4df67\",d:\"M 122.5,885.5 C 123.222,885.918 123.722,886.584 124,887.5C 125.011,886.663 126.178,886.33 127.5,886.5C 130.167,886.5 132.833,886.5 135.5,886.5C 135.5,886.833 135.5,887.167 135.5,887.5C 144.833,887.5 154.167,887.5 163.5,887.5C 163.223,890.448 163.556,893.281 164.5,896C 163.906,896.464 163.239,896.631 162.5,896.5C 152.167,896.5 141.833,896.5 131.5,896.5C 131.906,894.891 131.906,893.557 131.5,892.5C 130.253,894.044 128.92,895.544 127.5,897C 125.19,897.497 122.857,897.663 120.5,897.5C 121.432,894.301 121.432,891.135 120.5,888C 120.639,886.699 121.305,885.866 122.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcfabd\",d:\"M 159.5,889.5 C 160.5,889.5 161.5,889.5 162.5,889.5C 162.5,891.5 162.5,893.5 162.5,895.5C 158.843,894.853 157.843,892.853 159.5,889.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8f2b0\",d:\"M 147.5,888.5 C 150.167,888.5 152.833,888.5 155.5,888.5C 155.5,890.833 155.5,893.167 155.5,895.5C 152.833,895.5 150.167,895.5 147.5,895.5C 147.5,893.167 147.5,890.833 147.5,888.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf3a5\",d:\"M 135.5,887.5 C 135.813,890.247 135.48,892.914 134.5,895.5C 133.493,892.543 132.159,889.876 130.5,887.5C 132.167,887.5 133.833,887.5 135.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcf5a5\",d:\"M 137.5,888.5 C 144.342,886.743 146.675,889.076 144.5,895.5C 143.416,894.335 142.583,893.002 142,891.5C 141.51,892.793 141.343,894.127 141.5,895.5C 140.167,895.5 138.833,895.5 137.5,895.5C 137.5,893.167 137.5,890.833 137.5,888.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f4b2b5\",d:\"M 247.5,896.5 C 246.551,895.848 245.385,895.514 244,895.5C 240.567,896.74 237.067,897.74 233.5,898.5C 229.998,897.989 226.665,897.322 223.5,896.5C 224.404,895.791 224.737,894.791 224.5,893.5C 225.5,893.5 226.5,893.5 227.5,893.5C 227.351,894.552 227.517,895.552 228,896.5C 229.316,893.972 230.483,893.972 231.5,896.5C 232.5,895.167 233.5,893.833 234.5,892.5C 235.386,893.325 235.719,894.325 235.5,895.5C 236.5,895.5 237.5,895.5 238.5,895.5C 238.351,894.448 238.517,893.448 239,892.5C 240.11,894.037 241.61,894.703 243.5,894.5C 243.33,893.178 243.663,892.011 244.5,891C 243.263,890.768 242.263,890.268 241.5,889.5C 244.564,889.072 247.564,888.406 250.5,887.5C 250.5,890.5 250.5,893.5 250.5,896.5C 249.5,896.5 248.5,896.5 247.5,896.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fbd6d2\",d:\"M 321.5,889.5 C 321.833,889.5 322.167,889.5 322.5,889.5C 323.388,892.054 323.721,894.721 323.5,897.5C 321.964,895.975 320.964,893.975 320.5,891.5C 319.41,892.391 319.41,893.391 320.5,894.5C 319.675,895.386 318.675,895.719 317.5,895.5C 317.762,894.022 317.429,892.689 316.5,891.5C 314.885,895.727 312.052,897.061 308,895.5C 307.054,893.044 307.554,891.044 309.5,889.5C 311.058,894.694 312.058,894.694 312.5,889.5C 315.5,889.5 318.5,889.5 321.5,889.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b3eff8\",d:\"M 586.5,886.5 C 588.857,886.337 591.19,886.503 593.5,887C 594.126,887.75 594.626,888.584 595,889.5C 595.368,888.09 596.201,887.09 597.5,886.5C 599.22,887.934 601.22,888.767 603.5,889C 604.325,891.778 604.992,894.611 605.5,897.5C 604.167,897.5 602.833,897.5 601.5,897.5C 601.949,895.023 601.283,893.023 599.5,891.5C 598.319,893.135 598.319,894.802 599.5,896.5C 595.217,897.492 590.884,897.826 586.5,897.5C 586.5,893.833 586.5,890.167 586.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5f8fa\",d:\"M 629.5,886.5 C 627.085,889.193 627.085,892.026 629.5,895C 629.167,895.5 628.833,896 628.5,896.5C 621.84,897.669 615.173,897.503 608.5,896C 607.152,894.426 606.486,892.593 606.5,890.5C 606.11,888.018 607.11,886.685 609.5,886.5C 613.5,887.167 613.5,887.833 609.5,888.5C 608.425,892.938 610.092,894.938 614.5,894.5C 614.963,891.518 615.296,888.518 615.5,885.5C 620.13,886.229 624.797,886.563 629.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#41d4f9\",d:\"M 872.5,871.5 C 872.833,871.5 873.167,871.5 873.5,871.5C 873.5,879.5 873.5,887.5 873.5,895.5C 872.539,897.265 872.205,899.265 872.5,901.5C 864.493,901.666 856.493,901.5 848.5,901C 847.833,900.667 847.167,900.333 846.5,900C 848.81,899.503 851.143,899.337 853.5,899.5C 853.5,898.5 853.5,897.5 853.5,896.5C 851.143,896.663 848.81,896.497 846.5,896C 845.919,895.107 845.585,894.107 845.5,893C 846.434,889.846 847.101,890.012 847.5,893.5C 850.167,893.5 852.833,893.5 855.5,893.5C 855.5,894.5 855.5,895.5 855.5,896.5C 857.842,896.496 859.842,895.663 861.5,894C 859.699,893.683 859.366,893.016 860.5,892C 859.004,889.799 858.004,887.299 857.5,884.5C 856.719,885.729 856.219,887.062 856,888.5C 855.333,887.167 854.667,887.167 854,888.5C 853.667,886.953 854.167,885.62 855.5,884.5C 851.832,882.636 848.332,880.636 845,878.5C 842.602,878.958 840.936,880.292 840,882.5C 839.767,886.585 839.267,890.585 838.5,894.5C 835.295,883.741 838.962,876.241 849.5,872C 857.159,871.5 864.826,871.334 872.5,871.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aff7fb\",d:\"M 737.5,897.5 C 737.448,893.802 737.114,890.135 736.5,886.5C 741.693,886.046 744.193,888.38 744,893.5C 745.017,891.624 745.851,889.624 746.5,887.5C 752.301,883.426 752.801,884.093 748,889.5C 747.056,892.347 747.556,894.847 749.5,897C 746.534,897.895 743.867,897.395 741.5,895.5C 740.476,896.853 739.143,897.52 737.5,897.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c6fafc\",d:\"M 774.5,885.5 C 776.288,885.215 777.955,885.548 779.5,886.5C 778.147,887.524 777.48,888.857 777.5,890.5C 778.5,890.5 779.5,890.5 780.5,890.5C 780.896,893.044 780.229,895.211 778.5,897C 771.508,897.5 764.508,897.666 757.5,897.5C 757.336,894.813 757.503,892.146 758,889.5C 758.739,888.426 759.739,887.759 761,887.5C 763.264,889.689 764.764,892.356 765.5,895.5C 766.167,892.5 766.833,889.5 767.5,886.5C 768.086,886.709 768.586,887.043 769,887.5C 768.063,893.08 770.23,895.246 775.5,894C 775.957,893.586 776.291,893.086 776.5,892.5C 774.827,890.477 774.16,888.144 774.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e5797c\",d:\"M 321.5,889.5 C 318.5,889.5 315.5,889.5 312.5,889.5C 312.058,894.694 311.058,894.694 309.5,889.5C 307.554,891.044 307.054,893.044 308,895.5C 312.052,897.061 314.885,895.727 316.5,891.5C 317.429,892.689 317.762,894.022 317.5,895.5C 318.675,895.719 319.675,895.386 320.5,894.5C 319.41,893.391 319.41,892.391 320.5,891.5C 320.964,893.975 321.964,895.975 323.5,897.5C 312.894,898.066 302.228,898.066 291.5,897.5C 292.833,897.5 294.167,897.5 295.5,897.5C 295.5,896.167 295.5,894.833 295.5,893.5C 294.325,893.719 293.325,893.386 292.5,892.5C 296.156,890.939 299.822,890.606 303.5,891.5C 303.215,893.288 303.548,894.955 304.5,896.5C 305.044,893.286 306.044,890.286 307.5,887.5C 306.675,886.614 305.675,886.281 304.5,886.5C 304.5,887.5 304.5,888.5 304.5,889.5C 303.5,889.5 302.5,889.5 301.5,889.5C 301.715,887.821 301.048,886.821 299.5,886.5C 300.261,885.609 301.261,884.942 302.5,884.5C 308.645,887.157 314.978,888.824 321.5,889.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdd4c8\",d:\"M 297.5,893.5 C 298.833,893.5 300.167,893.5 301.5,893.5C 301.5,894.5 301.5,895.5 301.5,896.5C 300.167,896.5 298.833,896.5 297.5,896.5C 297.5,895.5 297.5,894.5 297.5,893.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ea8281\",d:\"M 445.5,886.5 C 445.5,886.833 445.5,887.167 445.5,887.5C 435.478,887.168 425.478,887.501 415.5,888.5C 417.223,890.868 417.89,893.534 417.5,896.5C 418.5,896.5 419.5,896.5 420.5,896.5C 420.682,894.409 420.348,892.409 419.5,890.5C 420.325,889.614 421.325,889.281 422.5,889.5C 422.674,891.861 423.007,894.194 423.5,896.5C 422.883,896.389 422.383,896.056 422,895.5C 409.064,897.279 395.897,898.279 382.5,898.5C 382.5,894.833 382.5,891.167 382.5,887.5C 383.167,887.5 383.833,887.5 384.5,887.5C 384.5,890.5 384.5,893.5 384.5,896.5C 387.403,895.715 390.07,894.382 392.5,892.5C 393.429,893.689 393.762,895.022 393.5,896.5C 394.5,896.5 395.5,896.5 396.5,896.5C 401.833,896.5 407.167,896.5 412.5,896.5C 413.693,896.03 414.36,895.03 414.5,893.5C 414.272,891.793 413.938,890.126 413.5,888.5C 423.91,886.56 434.577,885.893 445.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fdf4e4\",d:\"M 408.5,887.5 C 408.833,887.5 409.167,887.5 409.5,887.5C 409.813,890.247 409.48,892.914 408.5,895.5C 407.527,893.608 406.86,891.608 406.5,889.5C 406.747,888.287 407.414,887.62 408.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fcedde\",d:\"M 413.5,888.5 C 413.938,890.126 414.272,891.793 414.5,893.5C 414.36,895.03 413.693,896.03 412.5,896.5C 411.887,893.991 411.22,891.491 410.5,889C 411.448,888.517 412.448,888.351 413.5,888.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fce3dc\",d:\"M 403.5,888.5 C 403.884,890.929 404.551,893.263 405.5,895.5C 399.463,896.387 397.463,894.054 399.5,888.5C 400.833,887.167 402.167,887.167 403.5,888.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#eb968f\",d:\"M 445.5,887.5 C 446.167,887.5 446.833,887.5 447.5,887.5C 447.5,890.5 447.5,893.5 447.5,896.5C 449.5,896.5 451.5,896.5 453.5,896.5C 453.5,893.5 453.5,890.5 453.5,887.5C 454.167,887.5 454.833,887.5 455.5,887.5C 455.5,890.5 455.5,893.5 455.5,896.5C 456.5,896.5 457.5,896.5 458.5,896.5C 457.841,893.545 457.508,890.545 457.5,887.5C 459.415,887.216 461.081,887.549 462.5,888.5C 460.143,890.321 459.809,892.655 461.5,895.5C 464.524,897.522 467.857,898.522 471.5,898.5C 468.893,899.802 466.227,899.636 463.5,898C 449.994,897.831 436.66,897.331 423.5,896.5C 427.168,896.25 430.668,896.25 434,896.5C 435.261,896.241 436.261,895.574 437,894.5C 438.784,897.003 440.451,897.003 442,894.5C 442.689,895.357 443.522,896.023 444.5,896.5C 445.484,893.572 445.817,890.572 445.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#fae0d4\",d:\"M 447.5,887.5 C 449.5,887.5 451.5,887.5 453.5,887.5C 453.5,890.5 453.5,893.5 453.5,896.5C 451.5,896.5 449.5,896.5 447.5,896.5C 447.5,893.5 447.5,890.5 447.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#feeedc\",d:\"M 455.5,887.5 C 456.167,887.5 456.833,887.5 457.5,887.5C 457.508,890.545 457.841,893.545 458.5,896.5C 457.5,896.5 456.5,896.5 455.5,896.5C 455.5,893.5 455.5,890.5 455.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a8f1f9\",d:\"M 556.5,895.5 C 559.588,895.803 561.254,894.47 561.5,891.5C 563.256,890.448 563.923,888.781 563.5,886.5C 565.5,886.5 567.5,886.5 569.5,886.5C 569.116,888.665 569.783,890.332 571.5,891.5C 572.645,890.224 572.645,888.891 571.5,887.5C 575.783,886.508 580.116,886.174 584.5,886.5C 584.079,890.2 583.412,893.867 582.5,897.5C 581.52,894.914 581.187,892.247 581.5,889.5C 576.875,887.943 575.541,889.609 577.5,894.5C 577.167,895.5 576.5,896.167 575.5,896.5C 572.022,895.06 568.688,895.393 565.5,897.5C 562.988,896.244 560.488,896.244 558,897.5C 556.97,897.164 556.47,896.497 556.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f1c736\",d:\"M 73.5,886.5 C 71.1667,886.5 68.8333,886.5 66.5,886.5C 66.1796,889.898 66.513,893.232 67.5,896.5C 70.0473,896.229 72.0473,895.229 73.5,893.5C 74.1667,893.833 74.8333,894.167 75.5,894.5C 77.8383,896.04 80.5049,896.706 83.5,896.5C 79.6618,897.239 75.6618,897.406 71.5,897C 68.1973,898.261 65.0306,899.761 62,901.5C 61.5,901.167 61,900.833 60.5,900.5C 64.739,896.09 66.4056,890.757 65.5,884.5C 68.5533,884.111 71.22,884.777 73.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#faca11\",d:\"M 122.5,885.5 C 121.305,885.866 120.639,886.699 120.5,888C 121.432,891.135 121.432,894.301 120.5,897.5C 122.857,897.663 125.19,897.497 127.5,897C 128.92,895.544 130.253,894.044 131.5,892.5C 131.906,893.557 131.906,894.891 131.5,896.5C 141.833,896.5 152.167,896.5 162.5,896.5C 164.705,897.198 166.539,898.532 168,900.5C 170.213,899.198 172.546,898.198 175,897.5C 175.49,898.793 175.657,900.127 175.5,901.5C 169.885,902.573 164.218,902.74 158.5,902C 155.953,901.933 153.786,901.099 152,899.5C 151.667,899.833 151.333,900.167 151,900.5C 147.2,899.801 143.367,899.135 139.5,898.5C 138.167,899.833 136.833,899.833 135.5,898.5C 134.262,902.311 133.596,902.311 133.5,898.5C 131.856,898.286 130.356,898.62 129,899.5C 121.734,898.849 114.568,898.182 107.5,897.5C 111.24,897.759 114.906,897.426 118.5,896.5C 119.833,894.167 119.833,891.833 118.5,889.5C 114.078,887.641 109.412,886.974 104.5,887.5C 105.739,886.788 106.239,885.788 106,884.5C 103.526,883.535 101.026,883.368 98.5,884C 97.5419,882.853 97.8753,881.853 99.5,881C 101.899,880.289 104.232,880.456 106.5,881.5C 109.5,878.833 112.5,878.833 115.5,881.5C 117.179,879.896 119.179,879.229 121.5,879.5C 121.325,881.621 121.659,883.621 122.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#311b0f\",d:\"M 41.5,891.5 C 42.1667,892.5 42.8333,893.5 43.5,894.5C 45.7733,897.398 47.7733,900.398 49.5,903.5C 52.0177,906.256 55.0177,908.256 58.5,909.5C 56.4727,909.662 54.4727,909.495 52.5,909C 48.65,905.451 45.15,901.617 42,897.5C 41.5045,895.527 41.3379,893.527 41.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f76565\",d:\"M 223.5,883.5 C 224.833,884.167 226.167,884.833 227.5,885.5C 225.856,885.286 224.356,885.62 223,886.5C 222.253,889.924 222.42,893.257 223.5,896.5C 226.665,897.322 229.998,897.989 233.5,898.5C 237.067,897.74 240.567,896.74 244,895.5C 245.385,895.514 246.551,895.848 247.5,896.5C 243.732,896.81 240.065,897.643 236.5,899C 232.245,899.796 228.079,899.629 224,898.5C 220.839,900.349 217.339,901.516 213.5,902C 214.814,902.985 215.814,904.152 216.5,905.5C 216.5,905.833 216.5,906.167 216.5,906.5C 215.167,906.167 213.833,905.833 212.5,905.5C 209.63,904.922 207.963,903.255 207.5,900.5C 206.306,896.879 205.306,893.212 204.5,889.5C 205.222,889.082 205.722,888.416 206,887.5C 206.333,888.167 206.667,888.833 207,889.5C 207.368,888.09 208.201,887.09 209.5,886.5C 211.874,889.028 212.874,892.028 212.5,895.5C 214.484,895.383 216.15,896.05 217.5,897.5C 217.833,897.167 218.167,896.833 218.5,896.5C 217.41,892.193 217.41,887.86 218.5,883.5C 220.167,883.5 221.833,883.5 223.5,883.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#691a2c\",d:\"M 359.5,895.5 C 360.5,895.833 361.167,896.5 361.5,897.5C 362.529,899.517 363.529,901.517 364.5,903.5C 363.609,902.89 362.609,902.557 361.5,902.5C 360.067,900.442 359.4,898.108 359.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4ad5f2\",d:\"M 736.5,886.5 C 737.114,890.135 737.448,893.802 737.5,897.5C 737.631,898.239 737.464,898.906 737,899.5C 731.956,897.974 726.789,897.474 721.5,898C 722.167,898.333 722.833,898.667 723.5,899C 721.759,900.62 719.925,902.12 718,903.5C 716.2,901.855 714.2,900.522 712,899.5C 708.93,903.556 707.43,902.89 707.5,897.5C 706.5,897.5 705.5,897.5 704.5,897.5C 704.002,892.848 703.669,888.181 703.5,883.5C 706.187,883.336 708.854,883.503 711.5,884C 712.056,884.383 712.389,884.883 712.5,885.5C 710.167,885.5 707.833,885.5 705.5,885.5C 705.335,889.182 705.501,892.848 706,896.5C 707.188,895.437 707.688,894.103 707.5,892.5C 708.833,892.5 710.167,892.5 711.5,892.5C 711.652,898.241 714.319,899.908 719.5,897.5C 719.915,893.713 719.915,890.046 719.5,886.5C 722.477,885.322 725.477,885.322 728.5,886.5C 728.611,885.883 728.944,885.383 729.5,885C 726.518,884.502 723.518,884.335 720.5,884.5C 720.64,882.876 719.973,881.71 718.5,881C 722.704,878.341 725.871,879.175 728,883.5C 728.617,882.551 728.451,881.718 727.5,881C 731.506,881.003 733.672,883.17 734,887.5C 734.838,886.001 735.671,885.668 736.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#b8f4f9\",d:\"M 728.5,886.5 C 733.766,887.68 736.1,891.013 735.5,896.5C 731.486,896.666 727.486,896.499 723.5,896C 722.009,893.379 721.342,890.545 721.5,887.5C 725.664,887.772 727.497,890.106 727,894.5C 727.567,891.832 728.067,889.166 728.5,886.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#aff0f6\",d:\"M 712.5,885.5 C 713.209,886.404 714.209,886.737 715.5,886.5C 715.351,887.552 715.517,888.552 716,889.5C 716.422,887.574 717.589,886.574 719.5,886.5C 719.915,890.046 719.915,893.713 719.5,897.5C 714.319,899.908 711.652,898.241 711.5,892.5C 710.167,892.5 708.833,892.5 707.5,892.5C 707.688,894.103 707.188,895.437 706,896.5C 705.501,892.848 705.335,889.182 705.5,885.5C 707.833,885.5 710.167,885.5 712.5,885.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f94f4e\",d:\"M 339.5,891.5 C 338.716,895.723 337.383,899.723 335.5,903.5C 332.309,904.092 329.309,905.259 326.5,907C 289.811,907.808 253.144,907.641 216.5,906.5C 216.5,906.167 216.5,905.833 216.5,905.5C 223.175,905.666 229.842,905.5 236.5,905C 233.183,904.502 229.85,904.335 226.5,904.5C 226.64,902.876 225.973,901.71 224.5,901C 226.833,900.333 229.167,900.333 231.5,901C 230.062,901.219 228.729,901.719 227.5,902.5C 230.271,903.217 232.937,903.551 235.5,903.5C 235.402,902.384 235.902,901.384 237,900.5C 239.333,899.833 241.667,899.167 244,898.5C 246.434,899.322 248.934,899.656 251.5,899.5C 251.649,900.552 251.483,901.552 251,902.5C 241.058,901.495 241.058,901.828 251,903.5C 256.697,903.864 257.53,902.364 253.5,899C 255.76,898.956 257.76,899.789 259.5,901.5C 267.169,902.084 274.669,902.084 282,901.5C 287.149,902.364 292.315,903.03 297.5,903.5C 297.5,902.5 297.5,901.5 297.5,900.5C 300.131,900.966 302.298,901.633 304,902.5C 309.244,901.876 314.41,900.876 319.5,899.5C 319.5,900.5 319.5,901.5 319.5,902.5C 323.554,903.184 327.554,903.184 331.5,902.5C 334.915,899.32 337.582,895.654 339.5,891.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f84c4e\",d:\"M 952.5,883.5 C 953.162,885.304 953.495,887.304 953.5,889.5C 953.461,891.952 952.794,893.952 951.5,895.5C 948.384,897.787 945.717,900.62 943.5,904C 941.833,904.333 940.167,904.667 938.5,905C 918.836,905.5 899.169,905.667 879.5,905.5C 879.5,904.5 879.5,903.5 879.5,902.5C 899.832,901.411 920.166,901.244 940.5,902C 946.847,898.402 950.014,892.902 950,885.5C 950.667,884.167 951.333,884.167 952,885.5C 952.464,884.906 952.631,884.239 952.5,883.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#37190f\",d:\"M 186.5,890.5 C 186.167,893.167 185.833,895.833 185.5,898.5C 182.595,904.405 177.928,908.072 171.5,909.5C 170.167,909.5 168.833,909.5 167.5,909.5C 167.5,909.167 167.5,908.833 167.5,908.5C 175.53,907.312 181.196,902.979 184.5,895.5C 184.796,893.597 185.463,891.93 186.5,890.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#26b9f3\",d:\"M 681.5,902.5 C 684.073,902.148 686.406,902.648 688.5,904C 717.67,904.168 746.67,904.668 775.5,905.5C 746.165,905.667 716.831,905.5 687.5,905C 684.949,904.998 682.949,904.164 681.5,902.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2eaef3\",d:\"M 873.5,895.5 C 873.751,898.909 873.417,902.242 872.5,905.5C 864.855,906.665 857.188,906.831 849.5,906C 848.833,905.667 848.167,905.333 847.5,905C 849.167,904.667 850.833,904.333 852.5,904C 850.942,903.79 849.609,903.29 848.5,902.5C 856.684,902.826 864.684,902.492 872.5,901.5C 872.205,899.265 872.539,897.265 873.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#28c0fd\",d:\"M 641.5,903.5 C 641.423,904.75 640.756,905.583 639.5,906C 614.997,906.83 590.663,906.663 566.5,905.5C 575.122,906.011 583.622,905.344 592,903.5C 604.49,904.5 616.99,905 629.5,905C 630.056,904.617 630.389,904.117 630.5,903.5C 634.25,902.917 637.917,902.917 641.5,903.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e74543\",d:\"M 484.5,907.5 C 483.791,908.404 482.791,908.737 481.5,908.5C 445.818,909.16 410.484,908.493 375.5,906.5C 390.472,905.013 405.639,904.346 421,904.5C 430.833,904.667 440.667,904.833 450.5,905C 453,905.5 455.5,906 458,906.5C 465.143,905.756 472.309,905.256 479.5,905C 483.026,903.451 486.526,901.951 490,900.5C 490.667,901.5 490.667,902.5 490,903.5C 488.559,904.26 487.059,904.926 485.5,905.5C 484.702,905.957 484.369,906.624 484.5,907.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#359dda\",d:\"M 651.5,895.5 C 649.806,901.703 645.806,905.703 639.5,907.5C 602.833,908.833 566.167,908.833 529.5,907.5C 526.802,907.155 524.802,905.822 523.5,903.5C 524.756,903.461 525.756,903.961 526.5,905C 539.829,905.5 553.163,905.667 566.5,905.5C 590.663,906.663 614.997,906.83 639.5,906C 640.756,905.583 641.423,904.75 641.5,903.5C 645.165,901.159 648.499,898.493 651.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#32a5ec\",d:\"M 674.5,897.5 C 677.154,898.836 679.487,900.503 681.5,902.5C 682.949,904.164 684.949,904.998 687.5,905C 716.831,905.5 746.165,905.667 775.5,905.5C 780.167,905.5 784.833,905.5 789.5,905.5C 789.389,906.117 789.056,906.617 788.5,907C 754.168,907.5 719.835,907.667 685.5,907.5C 680.559,905.558 676.892,902.225 674.5,897.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#12215a\",d:\"M 810.5,887.5 C 811.921,891.641 811.588,895.641 809.5,899.5C 808.067,901.519 806.733,903.686 805.5,906C 803.146,906.847 800.812,907.68 798.5,908.5C 796.833,908.5 795.167,908.5 793.5,908.5C 800.726,906.941 805.393,902.607 807.5,895.5C 808.129,892.603 809.129,889.936 810.5,887.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#338dca\",d:\"M 873.5,868.5 C 874.495,879.988 874.828,891.655 874.5,903.5C 874.768,905.099 874.434,906.432 873.5,907.5C 864.827,907.666 856.16,907.5 847.5,907C 844.064,905.726 841.397,903.559 839.5,900.5C 842.402,901.578 845.402,902.244 848.5,902.5C 849.609,903.29 850.942,903.79 852.5,904C 850.833,904.333 849.167,904.667 847.5,905C 848.167,905.333 848.833,905.667 849.5,906C 857.188,906.831 864.855,906.665 872.5,905.5C 873.417,902.242 873.751,898.909 873.5,895.5C 873.5,887.5 873.5,879.5 873.5,871.5C 873.5,870.5 873.5,869.5 873.5,868.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d13e51\",d:\"M 951.5,895.5 C 949.923,899.74 947.256,903.073 943.5,905.5C 940.834,905.933 938.168,906.433 935.5,907C 916.17,907.5 896.836,907.667 877.5,907.5C 876.766,906.292 876.433,904.959 876.5,903.5C 876.5,903.167 876.5,902.833 876.5,902.5C 877.167,902.5 877.5,902.167 877.5,901.5C 878.167,901.5 878.833,901.5 879.5,901.5C 879.5,901.833 879.5,902.167 879.5,902.5C 879.5,903.5 879.5,904.5 879.5,905.5C 899.169,905.667 918.836,905.5 938.5,905C 940.167,904.667 941.833,904.333 943.5,904C 945.717,900.62 948.384,897.787 951.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d98b20\",d:\"M 43.5,893.5 C 45.0481,893.821 45.7148,894.821 45.5,896.5C 47.433,896.729 49.0997,897.562 50.5,899C 52.9312,902.605 56.2645,904.772 60.5,905.5C 61.2625,906.268 62.2625,906.768 63.5,907C 97.5,907.667 131.5,907.667 165.5,907C 166.416,906.722 167.082,906.222 167.5,905.5C 169.698,905.125 171.698,904.458 173.5,903.5C 174.5,903.167 175.167,902.5 175.5,901.5C 176.885,900.386 178.385,899.386 180,898.5C 180.333,898.833 180.667,899.167 181,899.5C 181.122,897.563 181.955,896.23 183.5,895.5C 183.833,895.5 184.167,895.5 184.5,895.5C 181.196,902.979 175.53,907.312 167.5,908.5C 131.498,908.667 95.4985,908.5 59.5,908C 57.1558,907.163 55.1558,905.829 53.5,904C 52.2068,903.51 50.8734,903.343 49.5,903.5C 47.7733,900.398 45.7733,897.398 43.5,894.5C 43.5,894.167 43.5,893.833 43.5,893.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ec8a05\",d:\"M 60.5,905.5 C 66.8333,905.5 73.1667,905.5 79.5,905.5C 108.833,905.5 138.167,905.5 167.5,905.5C 167.082,906.222 166.416,906.722 165.5,907C 131.5,907.667 97.5,907.667 63.5,907C 62.2625,906.768 61.2625,906.268 60.5,905.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#f8ad02\",d:\"M 173.5,903.5 C 171.698,904.458 169.698,905.125 167.5,905.5C 138.167,905.5 108.833,905.5 79.5,905.5C 81.4478,904.869 83.2811,903.869 85,902.5C 85.6172,901.551 85.4506,900.718 84.5,900C 87.036,899.661 89.536,899.161 92,898.5C 94.8045,899.597 97.6379,899.597 100.5,898.5C 103.248,899.039 105.915,899.872 108.5,901C 104.833,901.333 101.167,901.667 97.5,902C 98.5,902.333 99.5,902.667 100.5,903C 124.851,903.034 149.184,903.201 173.5,903.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c83f48\",d:\"M 335.5,903.5 C 332.516,905.659 329.183,907.325 325.5,908.5C 288.124,908.821 250.79,908.487 213.5,907.5C 213.167,906.833 212.833,906.167 212.5,905.5C 213.833,905.833 215.167,906.167 216.5,906.5C 253.144,907.641 289.811,907.808 326.5,907C 329.309,905.259 332.309,904.092 335.5,903.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e93db\",d:\"M 806.5,895.5 C 806.833,895.5 807.167,895.5 807.5,895.5C 805.393,902.607 800.726,906.941 793.5,908.5C 792.833,908.5 792.167,908.5 791.5,908.5C 755.996,908.832 720.663,908.498 685.5,907.5C 719.835,907.667 754.168,907.5 788.5,907C 789.056,906.617 789.389,906.117 789.5,905.5C 792.348,904.228 795.348,903.395 798.5,903C 801.364,900.634 804.031,898.134 806.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#86263d\",d:\"M 943.5,905.5 C 941.524,907.011 939.191,907.844 936.5,908C 916.836,908.5 897.169,908.667 877.5,908.5C 877.5,908.167 877.5,907.833 877.5,907.5C 896.836,907.667 916.17,907.5 935.5,907C 938.168,906.433 940.834,905.933 943.5,905.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8c5612\",d:\"M 49.5,903.5 C 50.8734,903.343 52.2068,903.51 53.5,904C 55.1558,905.829 57.1558,907.163 59.5,908C 95.4985,908.5 131.498,908.667 167.5,908.5C 167.5,908.833 167.5,909.167 167.5,909.5C 131.167,909.5 94.8333,909.5 58.5,909.5C 55.0177,908.256 52.0177,906.256 49.5,903.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#862230\",d:\"M 213.5,907.5 C 250.79,908.487 288.124,908.821 325.5,908.5C 325.5,908.833 325.5,909.167 325.5,909.5C 289.833,909.5 254.167,909.5 218.5,909.5C 216.302,909.88 214.635,909.213 213.5,907.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#911c2a\",d:\"M 367.5,906.5 C 370.167,906.5 372.833,906.5 375.5,906.5C 410.484,908.493 445.818,909.16 481.5,908.5C 449.004,909.498 416.338,909.832 383.5,909.5C 377.772,909.947 372.438,908.947 367.5,906.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1a4a77\",d:\"M 529.5,907.5 C 566.167,908.833 602.833,908.833 639.5,907.5C 639.5,907.833 639.5,908.167 639.5,908.5C 603.864,909.48 568.197,909.814 532.5,909.5C 531.5,908.833 530.5,908.167 529.5,907.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#142a5a\",d:\"M 836.5,895.5 C 836.5,895.833 836.5,896.167 836.5,896.5C 837.5,897.833 838.5,899.167 839.5,900.5C 841.397,903.559 844.064,905.726 847.5,907C 856.16,907.5 864.827,907.666 873.5,907.5C 873.5,908.833 873.5,910.167 873.5,911.5C 863.591,909.899 853.591,908.899 843.5,908.5C 839.237,905.727 836.237,901.894 834.5,897C 834.836,895.97 835.503,895.47 836.5,895.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#420d24\",d:\"M 952.5,879.5 C 953.167,880.167 953.833,880.833 954.5,881.5C 955.397,886.14 955.564,890.806 955,895.5C 952.061,902.697 946.894,907.197 939.5,909C 918.663,909.829 897.996,909.663 877.5,908.5C 897.169,908.667 916.836,908.5 936.5,908C 939.191,907.844 941.524,907.011 943.5,905.5C 947.256,903.073 949.923,899.74 951.5,895.5C 952.794,893.952 953.461,891.952 953.5,889.5C 953.495,887.304 953.162,885.304 952.5,883.5C 952.5,882.167 952.5,880.833 952.5,879.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#531426\",d:\"M 495.5,902.5 C 493.899,904.853 491.899,907.02 489.5,909C 486.746,909.272 484.079,909.772 481.5,910.5C 448.662,910.832 415.996,910.498 383.5,909.5C 416.338,909.832 449.004,909.498 481.5,908.5C 482.791,908.737 483.791,908.404 484.5,907.5C 488.548,906.642 492.215,904.975 495.5,902.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#282f4c\",d:\"M 514.5,815.5 C 514.333,839.502 514.5,863.502 515,887.5C 516.034,893.907 518.867,899.241 523.5,903.5C 524.802,905.822 526.802,907.155 529.5,907.5C 530.5,908.167 531.5,908.833 532.5,909.5C 529.843,909.838 527.51,909.171 525.5,907.5C 525.167,907.667 524.833,907.833 524.5,908C 525.5,909 526.5,910 527.5,911C 532.316,911.912 537.15,912.745 542,913.5C 545.098,913.229 548.098,912.562 551,911.5C 553.069,912.27 554.735,913.603 556,915.5C 556.333,915.167 556.667,914.833 557,914.5C 558.271,915.705 558.937,917.038 559,918.5C 555.249,916.69 551.416,916.357 547.5,917.5C 547.579,921.95 546.912,926.283 545.5,930.5C 545.229,932.921 545.895,933.587 547.5,932.5C 548.425,933.357 549.092,934.357 549.5,935.5C 549.38,936.586 548.713,937.253 547.5,937.5C 545.173,936.275 544.006,934.275 544,931.5C 543.697,935.806 542.864,939.639 541.5,943C 536.447,943.217 531.447,943.717 526.5,944.5C 521.741,943.865 516.741,943.531 511.5,943.5C 511.5,942.5 511.5,941.5 511.5,940.5C 508.146,938.884 504.48,937.718 500.5,937C 499.575,935.866 498.575,934.699 497.5,933.5C 496.263,933.556 495.263,934.056 494.5,935C 495.731,936.183 495.731,937.349 494.5,938.5C 492.453,936.985 490.119,936.151 487.5,936C 491.318,935.435 493.984,933.435 495.5,930C 493.088,927.965 493.755,926.965 497.5,927C 494.99,923.696 494.324,920.196 495.5,916.5C 496.675,916.719 497.675,916.386 498.5,915.5C 501.158,911.105 503.491,906.772 505.5,902.5C 502.046,898.963 500.713,894.63 501.5,889.5C 502.321,886.359 502.821,883.025 503,879.5C 503.167,858.159 503.667,836.826 504.5,815.5C 505.111,836.518 505.945,857.518 507,878.5C 507.585,868.345 507.918,858.345 508,848.5C 509,849.167 510,849.833 511,850.5C 511.168,860.184 511.668,869.851 512.5,879.5C 513.167,858.004 513.833,836.671 514.5,815.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#071537\",d:\"M 791.5,908.5 C 792.167,908.5 792.833,908.5 793.5,908.5C 795.167,908.5 796.833,908.5 798.5,908.5C 797.048,909.302 795.382,909.802 793.5,910C 758.835,910.905 724.168,911.238 689.5,911C 687.942,910.79 686.609,910.29 685.5,909.5C 721.004,909.832 756.337,909.498 791.5,908.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#252a48\",d:\"M 200.5,813.5 C 200.333,838.836 200.5,864.169 201,889.5C 201.253,894.184 202.587,898.518 205,902.5C 207.477,904.82 210.311,906.487 213.5,907.5C 214.635,909.213 216.302,909.88 218.5,909.5C 248.331,910.332 278.331,910.832 308.5,911C 310.577,911.192 312.577,911.692 314.5,912.5C 315.132,914.965 316.632,916.631 319,917.5C 323.063,915.942 327.063,914.275 331,912.5C 331.833,912.833 332.667,913.167 333.5,913.5C 331.501,916.988 329.501,920.321 327.5,923.5C 326.791,924.404 325.791,924.737 324.5,924.5C 322.801,924.34 321.134,924.506 319.5,925C 318.748,925.671 318.414,926.504 318.5,927.5C 318.167,927.5 317.833,927.5 317.5,927.5C 317.67,926.178 317.337,925.011 316.5,924C 314.455,923.51 312.455,923.677 310.5,924.5C 308.59,923.316 308.257,921.816 309.5,920C 307.866,919.506 306.199,919.34 304.5,919.5C 304.183,923.702 304.517,927.702 305.5,931.5C 310.066,932.797 314.733,932.797 319.5,931.5C 323.509,931.983 327.509,932.15 331.5,932C 332.138,930.293 332.138,928.46 331.5,926.5C 333.507,925.321 333.84,925.821 332.5,928C 335.2,930.405 337.033,929.905 338,926.5C 340,927.833 342,927.833 344,926.5C 344.315,927.908 343.982,929.241 343,930.5C 342.346,929.304 341.846,929.304 341.5,930.5C 345.068,932.362 347.235,931.362 348,927.5C 349.956,927.784 352.123,927.784 354.5,927.5C 354.5,928.5 354.5,929.5 354.5,930.5C 352.436,930.687 350.436,931.187 348.5,932C 347.663,933.011 347.33,934.178 347.5,935.5C 349.39,935.703 350.89,935.037 352,933.5C 351.805,935.126 351.805,936.793 352,938.5C 354.837,941.371 356.504,940.705 357,936.5C 358.324,935.12 359.657,934.786 361,935.5C 365.969,932.81 370.969,933.143 376,936.5C 376.483,935.552 376.649,934.552 376.5,933.5C 378.477,934.149 380.31,934.149 382,933.5C 383.225,933.862 384.391,934.362 385.5,935C 385.272,935.399 384.938,935.565 384.5,935.5C 383.265,935.721 382.265,936.388 381.5,937.5C 380.549,936.674 379.549,936.508 378.5,937C 377.54,938.419 376.707,939.919 376,941.5C 375.586,941.043 375.086,940.709 374.5,940.5C 370.912,942.909 366.912,943.909 362.5,943.5C 353.085,942.334 343.418,942.334 333.5,943.5C 329.594,943.243 327.594,941.243 327.5,937.5C 324.833,937.5 322.167,937.5 319.5,937.5C 319.819,939.75 319.319,941.75 318,943.5C 317.51,942.207 317.343,940.873 317.5,939.5C 315.508,939.328 313.842,939.995 312.5,941.5C 310.988,936.42 307.655,934.587 302.5,936C 302.833,936.333 303.167,936.667 303.5,937C 302.026,938.316 300.359,939.316 298.5,940C 299.5,940.333 300.5,940.667 301.5,941C 300.127,941.875 298.627,942.375 297,942.5C 292.892,939.548 288.392,937.214 283.5,935.5C 282.643,936.736 281.977,938.069 281.5,939.5C 282.853,940.524 283.52,941.857 283.5,943.5C 280.813,943.664 278.146,943.497 275.5,943C 276.167,942.667 276.833,942.333 277.5,942C 276.107,940.829 275.273,939.329 275,937.5C 272.365,934.494 270.365,934.828 269,938.5C 267.127,939.089 265.46,938.422 264,936.5C 263.743,938.295 263.077,940.295 262,942.5C 260.853,941.542 259.853,941.875 259,943.5C 258.333,942.167 257.667,942.167 257,943.5C 256.524,940.024 255.19,937.024 253,934.5C 251.163,934.665 249.163,935.332 247,936.5C 243.425,934.915 239.925,933.915 236.5,933.5C 235.406,935.303 233.739,935.636 231.5,934.5C 229.519,934.437 227.852,935.104 226.5,936.5C 222.561,933.851 218.894,934.017 215.5,937C 217,938.167 218.5,939.333 220,940.5C 221.444,938.845 223.278,938.178 225.5,938.5C 225.703,940.39 225.037,941.89 223.5,943C 220.183,943.498 216.85,943.665 213.5,943.5C 213.5,942.167 213.5,940.833 213.5,939.5C 210.393,939.174 208.06,940.341 206.5,943C 201.467,943.171 196.467,943.671 191.5,944.5C 260.833,945.167 330.167,945.833 399.5,946.5C 287.502,947.5 175.502,947.833 63.5,947.5C 63.0825,946.778 62.4158,946.278 61.5,946C 65.1892,944.287 69.0225,943.12 73,942.5C 76.5314,943.903 80.0314,944.237 83.5,943.5C 83.5,941.5 83.5,939.5 83.5,937.5C 85.9806,937.677 87.8139,936.677 89,934.5C 90.2847,934.598 91.4514,934.598 92.5,934.5C 93.787,935.768 94.787,935.435 95.5,933.5C 97.4444,933.972 99.2778,935.305 101,937.5C 102.016,936.366 102.683,936.699 103,938.5C 105.235,937.761 107.235,937.761 109,938.5C 110.892,937.87 112.559,936.87 114,935.5C 115.512,937.957 116.846,937.957 118,935.5C 118.667,936.167 119.333,936.833 120,937.5C 122.196,935.001 124.696,934.001 127.5,934.5C 128.739,934.058 129.739,933.391 130.5,932.5C 131.167,932.5 131.833,932.5 132.5,932.5C 136.248,934.697 139.915,934.364 143.5,931.5C 148.546,932.774 150.213,930.774 148.5,925.5C 145.803,924.831 143.137,924.164 140.5,923.5C 140.5,922.5 140.5,921.5 140.5,920.5C 139.5,920.5 138.5,920.5 137.5,920.5C 137.715,922.179 137.048,923.179 135.5,923.5C 133.473,923.338 131.473,923.505 129.5,924C 128.944,924.383 128.611,924.883 128.5,925.5C 128.167,925.5 127.833,925.5 127.5,925.5C 127.5,923.5 127.5,921.5 127.5,919.5C 126.5,919.5 125.5,919.5 124.5,919.5C 124.737,920.791 124.404,921.791 123.5,922.5C 123.5,921.833 123.5,921.167 123.5,920.5C 122.432,919.566 121.099,919.232 119.5,919.5C 119.338,917.473 119.505,915.473 120,913.5C 121.243,914.336 122.41,914.003 123.5,912.5C 138.822,911.667 154.156,911.167 169.5,911C 170.416,910.722 171.082,910.222 171.5,909.5C 177.928,908.072 182.595,904.405 185.5,898.5C 186.97,895.051 188.136,891.384 189,887.5C 189.83,862.663 189.663,837.997 188.5,813.5C 188.5,812.833 188.5,812.167 188.5,811.5C 187.986,809.488 187.82,807.488 188,805.5C 189.185,807.559 190.352,807.726 191.5,806C 189.987,804.121 189.321,801.954 189.5,799.5C 190.978,799.238 192.311,799.571 193.5,800.5C 194.06,802.854 194.727,805.187 195.5,807.5C 197.395,806.027 199.061,804.36 200.5,802.5C 201.681,803.515 202.681,804.681 203.5,806C 201.807,808.22 200.807,810.72 200.5,813.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#321a2c\",d:\"M 361.5,902.5 C 362.609,902.557 363.609,902.89 364.5,903.5C 365.833,904.167 366.833,905.167 367.5,906.5C 372.438,908.947 377.772,909.947 383.5,909.5C 415.996,910.498 448.662,910.832 481.5,910.5C 444.98,911.811 408.313,911.811 371.5,910.5C 370.078,910.291 368.745,909.791 367.5,909C 365.272,906.943 363.272,904.776 361.5,902.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#27212e\",d:\"M 58.5,909.5 C 94.8333,909.5 131.167,909.5 167.5,909.5C 168.833,909.5 170.167,909.5 171.5,909.5C 171.082,910.222 170.416,910.722 169.5,911C 154.156,911.167 138.822,911.667 123.5,912.5C 122.41,914.003 121.243,914.336 120,913.5C 119.505,915.473 119.338,917.473 119.5,919.5C 121.099,919.232 122.432,919.566 123.5,920.5C 122.5,920.5 121.5,920.5 120.5,920.5C 119.566,921.568 119.232,922.901 119.5,924.5C 118.5,924.5 117.5,924.5 116.5,924.5C 113.263,922.985 110.263,923.319 107.5,925.5C 106.508,925.672 105.842,925.338 105.5,924.5C 106.008,922.767 106.841,922.434 108,923.5C 108.167,922.667 108.333,921.833 108.5,921C 107.953,918.783 106.953,916.783 105.5,915C 106.884,913.043 106.217,912.043 103.5,912C 88.8333,911.667 74.1667,911.333 59.5,911C 58.944,910.617 58.6107,910.117 58.5,909.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#212742\",d:\"M 532.5,909.5 C 568.197,909.814 603.864,909.48 639.5,908.5C 640.5,908.5 641.5,908.5 642.5,908.5C 641.791,909.404 640.791,909.737 639.5,909.5C 639.773,911.451 639.107,912.951 637.5,914C 632.919,913.816 628.252,914.149 623.5,915C 624.167,915.333 624.833,915.667 625.5,916C 623.275,918.003 621.608,917.503 620.5,914.5C 618.738,916.936 617.404,919.602 616.5,922.5C 615.051,923.172 613.718,923.839 612.5,924.5C 611.662,924.158 611.328,923.492 611.5,922.5C 611.646,920.058 610.813,919.391 609,920.5C 608.19,924.358 608.357,928.024 609.5,931.5C 609.5,932.167 609.833,932.5 610.5,932.5C 609.425,936.007 607.591,936.34 605,933.5C 597.739,935.171 590.239,935.838 582.5,935.5C 579.955,934.451 579.955,933.451 582.5,932.5C 582.08,930.906 581.414,929.406 580.5,928C 580.613,926.72 581.28,925.887 582.5,925.5C 582.964,927.975 583.964,929.975 585.5,931.5C 586.167,931.833 586.833,932.167 587.5,932.5C 589.062,930.628 590.062,928.295 590.5,925.5C 590.976,928.184 591.976,930.517 593.5,932.5C 594.484,929.572 594.817,926.572 594.5,923.5C 593.5,923.5 592.5,923.5 591.5,923.5C 591.423,922.25 590.756,921.417 589.5,921C 591.167,920.667 592.833,920.333 594.5,920C 594.589,918.284 594.256,916.451 593.5,914.5C 596.086,913.52 598.753,913.187 601.5,913.5C 601.5,912.5 601.5,911.5 601.5,910.5C 598.167,910.5 594.833,910.5 591.5,910.5C 591.271,912.433 590.438,914.1 589,915.5C 585.842,915.66 582.842,915.326 580,914.5C 579.517,915.448 579.351,916.448 579.5,917.5C 575.217,917.756 573.883,919.756 575.5,923.5C 573.265,923.205 571.265,923.539 569.5,924.5C 568.833,924.167 568.167,923.833 567.5,923.5C 565.379,923.325 563.379,923.659 561.5,924.5C 560.833,923.833 560.167,923.167 559.5,922.5C 557.718,920.313 555.552,919.98 553,921.5C 552.501,925.152 552.335,928.818 552.5,932.5C 553.261,933.391 554.261,934.058 555.5,934.5C 556.696,934.154 556.696,933.654 555.5,933C 557.902,932.186 560.235,932.353 562.5,933.5C 561.738,933.911 560.738,934.077 559.5,934C 560.056,934.383 560.389,934.883 560.5,935.5C 557.353,935.737 554.353,936.57 551.5,938C 552.973,938.71 553.64,939.876 553.5,941.5C 552.178,941.67 551.011,941.337 550,940.5C 550.476,938.68 550.309,937.013 549.5,935.5C 549.092,934.357 548.425,933.357 547.5,932.5C 545.895,933.587 545.229,932.921 545.5,930.5C 546.912,926.283 547.579,921.95 547.5,917.5C 551.416,916.357 555.249,916.69 559,918.5C 558.937,917.038 558.271,915.705 557,914.5C 556.667,914.833 556.333,915.167 556,915.5C 554.735,913.603 553.069,912.27 551,911.5C 548.098,912.562 545.098,913.229 542,913.5C 537.15,912.745 532.316,911.912 527.5,911C 526.5,910 525.5,909 524.5,908C 524.833,907.833 525.167,907.667 525.5,907.5C 527.51,909.171 529.843,909.838 532.5,909.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1f2d40\",d:\"M 764.5,922.5 C 764.664,925.187 764.497,927.854 764,930.5C 763.667,930.167 763.333,929.833 763,929.5C 762.501,925.848 762.335,922.182 762.5,918.5C 761.5,918.5 760.5,918.5 759.5,918.5C 759.5,920.833 759.5,923.167 759.5,925.5C 759.768,927.099 759.434,928.432 758.5,929.5C 759.169,924 756.835,921.833 751.5,923C 750.934,923.995 750.267,924.828 749.5,925.5C 749.423,924.25 748.756,923.417 747.5,923C 745.421,922.192 743.421,922.359 741.5,923.5C 740.607,926.084 740.274,928.751 740.5,931.5C 743.909,931.751 747.242,931.417 750.5,930.5C 751.524,931.853 752.857,932.52 754.5,932.5C 754.116,934.293 752.95,935.293 751,935.5C 749.454,933.759 747.454,932.759 745,932.5C 742.13,933.019 739.297,933.686 736.5,934.5C 733.266,933.422 730.099,933.422 727,934.5C 725,933.833 723,933.167 721,932.5C 719.993,935.803 717.827,936.97 714.5,936C 709.883,934.515 707.883,931.348 708.5,926.5C 707.753,922.366 709.087,919.199 712.5,917C 712.167,916.667 711.833,916.333 711.5,916C 714.604,915.873 717.604,915.707 720.5,915.5C 728.155,917.901 735.655,919.901 743,921.5C 743.945,921.095 744.612,920.428 745,919.5C 745.519,920.516 746.353,921.182 747.5,921.5C 749.243,919.773 751.076,919.106 753,919.5C 754.081,921.767 755.581,921.934 757.5,920C 756.167,919.333 756.167,918.667 757.5,918C 761.146,915.327 763.146,916.16 763.5,920.5C 766.397,920.125 769.063,920.625 771.5,922C 769.038,921.389 766.704,921.555 764.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c0c8e2\",d:\"M 595.5,919.5 C 596.675,919.281 597.675,919.614 598.5,920.5C 596.948,921.798 595.948,921.465 595.5,919.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0d9e3\",d:\"M 611.5,922.5 C 610.183,925.23 610.183,928.063 611.5,931C 610.906,931.464 610.239,931.631 609.5,931.5C 608.357,928.024 608.19,924.358 609,920.5C 610.813,919.391 611.646,920.058 611.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5e7280\",d:\"M 723.5,919.5 C 724.209,918.596 725.209,918.263 726.5,918.5C 726.5,919.833 726.5,921.167 726.5,922.5C 727.833,922.5 729.167,922.5 730.5,922.5C 730.806,925.385 730.473,928.052 729.5,930.5C 729.808,928.076 729.474,925.743 728.5,923.5C 727.702,923.957 727.369,924.624 727.5,925.5C 726.833,925.5 726.167,925.5 725.5,925.5C 725.672,924.508 725.338,923.842 724.5,923.5C 722.735,922.539 720.735,922.205 718.5,922.5C 718.813,926.042 718.479,929.375 717.5,932.5C 717.5,928.833 717.5,925.167 717.5,921.5C 720.247,921.813 722.914,921.48 725.5,920.5C 725.043,919.702 724.376,919.369 723.5,919.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cbdae2\",d:\"M 731.5,922.5 C 737.575,922.527 740.242,925.527 739.5,931.5C 738.325,931.719 737.325,931.386 736.5,930.5C 735.985,928.775 735.318,927.108 734.5,925.5C 733.833,927.833 733.167,930.167 732.5,932.5C 731.513,929.232 731.18,925.898 731.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8d8e6\",d:\"M 151.5,924.5 C 153.5,924.5 155.5,924.5 157.5,924.5C 157.813,927.247 157.48,929.914 156.5,932.5C 154.886,924.602 153.886,924.602 153.5,932.5C 152.5,932.5 151.5,932.5 150.5,932.5C 150.279,929.721 150.612,927.054 151.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9eef3\",d:\"M 723.5,919.5 C 724.376,919.369 725.043,919.702 725.5,920.5C 722.914,921.48 720.247,921.813 717.5,921.5C 717.5,925.167 717.5,928.833 717.5,932.5C 715.57,928.627 714.903,924.294 715.5,919.5C 718.167,919.5 720.833,919.5 723.5,919.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bcd3dd\",d:\"M 724.5,923.5 C 725.338,923.842 725.672,924.508 725.5,925.5C 725.808,927.924 725.474,930.257 724.5,932.5C 723.914,932.291 723.414,931.957 723,931.5C 722.505,929.527 722.338,927.527 722.5,925.5C 721.448,925.649 720.448,925.483 719.5,925C 721.025,923.991 722.692,923.491 724.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8e4ef\",d:\"M 116.5,924.5 C 117.209,925.404 118.209,925.737 119.5,925.5C 119.5,926.5 119.5,927.5 119.5,928.5C 119.5,929.5 119.5,930.5 119.5,931.5C 114.624,933.514 110.29,932.847 106.5,929.5C 106.433,928.041 106.766,926.708 107.5,925.5C 110.263,923.319 113.263,922.985 116.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#becce2\",d:\"M 317.5,927.5 C 317.5,928.833 317.5,930.167 317.5,931.5C 316.167,931.5 314.833,931.5 313.5,931.5C 313.421,930.07 313.754,928.736 314.5,927.5C 313.675,926.614 312.675,926.281 311.5,926.5C 311.785,928.288 311.452,929.955 310.5,931.5C 309.009,930.652 308.342,929.319 308.5,927.5C 308.64,925.97 309.307,924.97 310.5,924.5C 312.455,923.677 314.455,923.51 316.5,924C 317.337,925.011 317.67,926.178 317.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#607188\",d:\"M 327.5,923.5 C 329.099,923.232 330.432,923.566 331.5,924.5C 330.325,924.281 329.325,924.614 328.5,925.5C 329.645,926.891 329.645,928.224 328.5,929.5C 327.164,927.829 325.831,926.162 324.5,924.5C 325.791,924.737 326.791,924.404 327.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e1f7fc\",d:\"M 729.5,930.5 C 729.44,931.043 729.107,931.376 728.5,931.5C 727.534,929.604 727.201,927.604 727.5,925.5C 727.369,924.624 727.702,923.957 728.5,923.5C 729.474,925.743 729.808,928.076 729.5,930.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#697184\",d:\"M 102.5,924.5 C 103.5,925.833 104.5,925.833 105.5,924.5C 105.842,925.338 106.508,925.672 107.5,925.5C 106.766,926.708 106.433,928.041 106.5,929.5C 105.518,928.859 104.518,928.193 103.5,927.5C 102.614,928.325 102.281,929.325 102.5,930.5C 101.427,928.653 101.427,926.653 102.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#728b9a\",d:\"M 253.5,924.5 C 253.833,924.5 254.167,924.5 254.5,924.5C 255.265,927.096 255.599,929.763 255.5,932.5C 254.833,932.167 254.167,931.833 253.5,931.5C 253.5,929.167 253.5,926.833 253.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#a0acb7\",d:\"M 302.5,924.5 C 303.833,927.167 303.833,929.833 302.5,932.5C 302.657,931.127 302.49,929.793 302,928.5C 300.989,929.337 299.822,929.67 298.5,929.5C 298.5,928.167 298.5,926.833 298.5,925.5C 299.822,925.33 300.989,925.663 302,926.5C 302.464,925.906 302.631,925.239 302.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5c697a\",d:\"M 120.5,920.5 C 121.272,924.452 121.605,928.452 121.5,932.5C 120.833,931.167 120.167,929.833 119.5,928.5C 119.5,927.5 119.5,926.5 119.5,925.5C 118.209,925.737 117.209,925.404 116.5,924.5C 117.5,924.5 118.5,924.5 119.5,924.5C 119.232,922.901 119.566,921.568 120.5,920.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ecf6fd\",d:\"M 120.5,920.5 C 121.5,920.5 122.5,920.5 123.5,920.5C 123.5,921.167 123.5,921.833 123.5,922.5C 123.5,925.833 123.5,929.167 123.5,932.5C 122.833,932.5 122.167,932.5 121.5,932.5C 121.605,928.452 121.272,924.452 120.5,920.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8d99ab\",d:\"M 127.5,925.5 C 127.5,927.833 127.5,930.167 127.5,932.5C 126.167,932.5 124.833,932.5 123.5,932.5C 123.5,929.167 123.5,925.833 123.5,922.5C 124.404,921.791 124.737,920.791 124.5,919.5C 125.5,919.5 126.5,919.5 127.5,919.5C 127.5,921.5 127.5,923.5 127.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d6e6f1\",d:\"M 135.5,923.5 C 137.075,925.114 137.741,927.114 137.5,929.5C 136.626,931.69 134.959,932.69 132.5,932.5C 131.833,932.5 131.167,932.5 130.5,932.5C 128.852,930.544 128.185,928.211 128.5,925.5C 128.611,924.883 128.944,924.383 129.5,924C 131.473,923.505 133.473,923.338 135.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#415464\",d:\"M 132.5,925.5 C 134.256,926.552 134.923,928.219 134.5,930.5C 133.5,930.5 132.5,930.5 131.5,930.5C 131.366,928.708 131.699,927.042 132.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#94a6bb\",d:\"M 140.5,923.5 C 139.778,923.082 139.278,922.416 139,921.5C 139.518,924.223 139.351,926.889 138.5,929.5C 138.167,929.5 137.833,929.5 137.5,929.5C 137.741,927.114 137.075,925.114 135.5,923.5C 137.048,923.179 137.715,922.179 137.5,920.5C 138.5,920.5 139.5,920.5 140.5,920.5C 140.5,921.5 140.5,922.5 140.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c8dce7\",d:\"M 233.5,924.5 C 233.5,927.167 233.5,929.833 233.5,932.5C 232.835,930.631 232.169,928.631 231.5,926.5C 230.038,934.424 228.871,934.424 228,926.5C 227.506,928.134 227.34,929.801 227.5,931.5C 226.5,931.5 225.5,931.5 224.5,931.5C 224.378,927.162 224.045,926.828 223.5,930.5C 221.857,930.52 220.524,929.853 219.5,928.5C 218.571,929.689 218.238,931.022 218.5,932.5C 217.5,932.5 216.5,932.5 215.5,932.5C 215.176,928.445 215.509,924.445 216.5,920.5C 217.791,922.097 219.291,923.43 221,924.5C 222.667,923.167 224.333,921.833 226,920.5C 226.667,921.833 227.333,923.167 228,924.5C 229.997,923.34 231.831,923.34 233.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#627a93\",d:\"M 233.5,924.5 C 234.167,924.5 234.833,924.5 235.5,924.5C 235.5,927.167 235.5,929.833 235.5,932.5C 234.833,932.5 234.167,932.5 233.5,932.5C 233.5,929.833 233.5,927.167 233.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c9dce9\",d:\"M 261.5,925.5 C 262.01,928.388 261.344,930.721 259.5,932.5C 259.819,930.25 259.319,928.25 258,926.5C 257.814,928.9 257.314,931.234 256.5,933.5C 255.893,933.376 255.56,933.043 255.5,932.5C 255.599,929.763 255.265,927.096 254.5,924.5C 257.049,923.35 259.383,923.684 261.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bbcfe0\",d:\"M 263.5,932.5 C 264.15,930.565 264.483,928.565 264.5,926.5C 265.694,925.223 267.36,924.556 269.5,924.5C 275.57,924.271 278.237,927.271 277.5,933.5C 275.549,933.773 274.049,933.107 273,931.5C 270.868,932.78 268.702,932.78 266.5,931.5C 265.787,933.435 264.787,933.768 263.5,932.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cad6e1\",d:\"M 302.5,924.5 C 302.631,925.239 302.464,925.906 302,926.5C 300.989,925.663 299.822,925.33 298.5,925.5C 298.5,926.833 298.5,928.167 298.5,929.5C 299.822,929.67 300.989,929.337 302,928.5C 302.49,929.793 302.657,931.127 302.5,932.5C 300.833,932.5 299.167,932.5 297.5,932.5C 297.785,934.288 297.452,935.955 296.5,937.5C 295.914,937.291 295.414,936.957 295,936.5C 294.667,933.5 294.333,930.5 294,927.5C 293.505,929.473 293.338,931.473 293.5,933.5C 290.077,933.872 287.577,932.539 286,929.5C 285.517,930.448 285.351,931.448 285.5,932.5C 283.234,932.859 281.401,932.192 280,930.5C 279.216,927.24 279.383,924.073 280.5,921C 283.847,919.794 286.18,920.794 287.5,924C 292.668,923.705 297.668,923.872 302.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bfcbd7\",d:\"M 102.5,924.5 C 101.427,926.653 101.427,928.653 102.5,930.5C 103.751,931.472 103.418,932.139 101.5,932.5C 99.1728,931.275 98.0061,929.275 98,926.5C 96.7308,927.905 96.2308,929.571 96.5,931.5C 95.5,931.5 94.5,931.5 93.5,931.5C 93.6602,929.801 93.4935,928.134 93,926.5C 92.5045,928.473 92.3379,930.473 92.5,932.5C 91.5,932.5 90.5,932.5 89.5,932.5C 89.8076,930.076 89.4742,927.743 88.5,925.5C 86.2764,926.081 85.443,927.414 86,929.5C 88.3909,928.398 88.8909,929.064 87.5,931.5C 84.5131,931.534 81.5131,931.868 78.5,932.5C 78.7852,930.712 78.4519,929.045 77.5,927.5C 76.9432,929.332 75.9432,930.665 74.5,931.5C 74.5,927.833 74.5,924.167 74.5,920.5C 76.1992,920.34 77.8659,920.506 79.5,921C 80.6853,922.353 82.0186,923.52 83.5,924.5C 87.4787,923.236 91.4787,923.236 95.5,924.5C 97.1043,924.061 98.6043,923.394 100,922.5C 101.301,922.639 102.134,923.305 102.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9eaf4\",d:\"M 140.5,923.5 C 143.137,924.164 145.803,924.831 148.5,925.5C 150.213,930.774 148.546,932.774 143.5,931.5C 143.351,930.448 143.517,929.448 144,928.5C 144.71,929.973 145.876,930.64 147.5,930.5C 147.5,929.167 147.5,927.833 147.5,926.5C 143.167,926.167 141.167,928.167 141.5,932.5C 140.5,932.5 139.5,932.5 138.5,932.5C 138.5,931.5 138.5,930.5 138.5,929.5C 139.351,926.889 139.518,924.223 139,921.5C 139.278,922.416 139.778,923.082 140.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c0d7e4\",d:\"M 253.5,924.5 C 253.5,926.833 253.5,929.167 253.5,931.5C 251.735,932.461 249.735,932.795 247.5,932.5C 246.508,924.525 245.508,924.525 244.5,932.5C 243.066,931.064 241.9,929.398 241,927.5C 240.798,929.256 240.298,930.922 239.5,932.5C 238.686,930.234 238.186,927.9 238,925.5C 238.03,928.361 237.197,930.695 235.5,932.5C 235.5,929.833 235.5,927.167 235.5,924.5C 238.482,924.896 241.149,924.229 243.5,922.5C 246.556,924.289 249.889,924.956 253.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#496570\",d:\"M 247.5,927.5 C 248.568,926.566 249.901,926.232 251.5,926.5C 251.657,927.873 251.49,929.207 251,930.5C 250.578,928.574 249.411,927.574 247.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#60778b\",d:\"M 261.5,925.5 C 262.391,926.11 263.391,926.443 264.5,926.5C 264.483,928.565 264.15,930.565 263.5,932.5C 262.039,933.686 260.705,933.686 259.5,932.5C 261.344,930.721 262.01,928.388 261.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a4457\",d:\"M 267.5,925.5 C 268.552,925.351 269.552,925.517 270.5,926C 269.328,926.419 268.328,927.085 267.5,928C 269.488,928.18 271.488,928.014 273.5,927.5C 273.5,928.5 273.5,929.5 273.5,930.5C 271.473,930.662 269.473,930.495 267.5,930C 266.272,928.51 266.272,927.01 267.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#485967\",d:\"M 288.5,927.5 C 291.275,927.834 291.941,929.167 290.5,931.5C 288.889,930.68 288.222,929.346 288.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0deee\",d:\"M 324.5,924.5 C 325.831,926.162 327.164,927.829 328.5,929.5C 329.645,928.224 329.645,926.891 328.5,925.5C 329.325,924.614 330.325,924.281 331.5,924.5C 331.5,925.167 331.5,925.833 331.5,926.5C 332.138,928.46 332.138,930.293 331.5,932C 327.509,932.15 323.509,931.983 319.5,931.5C 318.766,930.292 318.433,928.959 318.5,927.5C 318.414,926.504 318.748,925.671 319.5,925C 321.134,924.506 322.801,924.34 324.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1e3045\",d:\"M 321.5,927.5 C 323.346,927.222 324.68,927.889 325.5,929.5C 324.311,930.429 322.978,930.762 321.5,930.5C 321.5,929.5 321.5,928.5 321.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#adb6d0\",d:\"M 611.5,922.5 C 611.328,923.492 611.662,924.158 612.5,924.5C 613.552,924.351 614.552,924.517 615.5,925C 613.152,926.688 612.985,928.522 615,930.5C 616.494,926.696 617.328,927.029 617.5,931.5C 615.393,932.468 613.059,932.802 610.5,932.5C 609.833,932.5 609.5,932.167 609.5,931.5C 610.239,931.631 610.906,931.464 611.5,931C 610.183,928.063 610.183,925.23 611.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cfdae7\",d:\"M 764.5,922.5 C 765.978,922.238 767.311,922.571 768.5,923.5C 768.93,926.036 768.93,928.703 768.5,931.5C 765.904,932.213 763.237,932.213 760.5,931.5C 760.795,929.265 760.461,927.265 759.5,925.5C 759.5,923.167 759.5,920.833 759.5,918.5C 760.5,918.5 761.5,918.5 762.5,918.5C 762.335,922.182 762.501,925.848 763,929.5C 763.333,929.833 763.667,930.167 764,930.5C 764.497,927.854 764.664,925.187 764.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5d7083\",d:\"M 224.5,931.5 C 222.226,931.715 220.059,932.382 218,933.5C 216.93,933.472 216.097,933.139 215.5,932.5C 216.5,932.5 217.5,932.5 218.5,932.5C 218.238,931.022 218.571,929.689 219.5,928.5C 220.524,929.853 221.857,930.52 223.5,930.5C 224.045,926.828 224.378,927.162 224.5,931.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#c5d6e1\",d:\"M 749.5,925.5 C 750.267,924.828 750.934,923.995 751.5,923C 756.835,921.833 759.169,924 758.5,929.5C 759.598,930.397 759.598,931.23 758.5,932C 757.207,932.49 755.873,932.657 754.5,932.5C 752.857,932.52 751.524,931.853 750.5,930.5C 747.242,931.417 743.909,931.751 740.5,931.5C 740.274,928.751 740.607,926.084 741.5,923.5C 743.421,922.359 745.421,922.192 747.5,923C 748.756,923.417 749.423,924.25 749.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6d7e88\",d:\"M 752.5,924.5 C 753.5,924.5 754.5,924.5 755.5,924.5C 755.5,926.167 755.5,927.833 755.5,929.5C 754.325,929.719 753.325,929.386 752.5,928.5C 753.363,927.274 753.363,925.94 752.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1c303f\",d:\"M 749.5,925.5 C 749.241,929.068 747.241,930.401 743.5,929.5C 743.167,924.719 745.167,923.386 749.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#55637f\",d:\"M 310.5,924.5 C 309.307,924.97 308.64,925.97 308.5,927.5C 308.342,929.319 309.009,930.652 310.5,931.5C 311.452,929.955 311.785,928.288 311.5,926.5C 312.675,926.281 313.675,926.614 314.5,927.5C 313.754,928.736 313.421,930.07 313.5,931.5C 314.833,931.5 316.167,931.5 317.5,931.5C 317.5,930.167 317.5,928.833 317.5,927.5C 317.833,927.5 318.167,927.5 318.5,927.5C 318.433,928.959 318.766,930.292 319.5,931.5C 314.733,932.797 310.066,932.797 305.5,931.5C 304.517,927.702 304.183,923.702 304.5,919.5C 306.199,919.34 307.866,919.506 309.5,920C 308.257,921.816 308.59,923.316 310.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#e9f7fd\",d:\"M 305.5,931.5 C 305.177,927.774 305.511,924.107 306.5,920.5C 306.833,922.333 307.167,924.167 307.5,926C 307.453,928.295 306.787,930.129 305.5,931.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3e4d61\",d:\"M 143.5,931.5 C 139.915,934.364 136.248,934.697 132.5,932.5C 134.959,932.69 136.626,931.69 137.5,929.5C 137.833,929.5 138.167,929.5 138.5,929.5C 138.5,930.5 138.5,931.5 138.5,932.5C 139.5,932.5 140.5,932.5 141.5,932.5C 141.167,928.167 143.167,926.167 147.5,926.5C 147.5,927.833 147.5,929.167 147.5,930.5C 145.876,930.64 144.71,929.973 144,928.5C 143.517,929.448 143.351,930.448 143.5,931.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#2a3248\",d:\"M 102.5,930.5 C 102.281,929.325 102.614,928.325 103.5,927.5C 104.518,928.193 105.518,928.859 106.5,929.5C 110.29,932.847 114.624,933.514 119.5,931.5C 119.5,930.5 119.5,929.5 119.5,928.5C 120.167,929.833 120.833,931.167 121.5,932.5C 122.167,932.5 122.833,932.5 123.5,932.5C 124.833,932.5 126.167,932.5 127.5,932.5C 127.5,930.167 127.5,927.833 127.5,925.5C 127.833,925.5 128.167,925.5 128.5,925.5C 128.185,928.211 128.852,930.544 130.5,932.5C 129.739,933.391 128.739,934.058 127.5,934.5C 124.696,934.001 122.196,935.001 120,937.5C 119.333,936.833 118.667,936.167 118,935.5C 116.846,937.957 115.512,937.957 114,935.5C 112.559,936.87 110.892,937.87 109,938.5C 107.235,937.761 105.235,937.761 103,938.5C 102.683,936.699 102.016,936.366 101,937.5C 99.2778,935.305 97.4444,933.972 95.5,933.5C 94.787,935.435 93.787,935.768 92.5,934.5C 88.9472,933.045 85.4472,933.378 82,935.5C 79.5619,933.988 77.0619,932.654 74.5,931.5C 75.9432,930.665 76.9432,929.332 77.5,927.5C 78.4519,929.045 78.7852,930.712 78.5,932.5C 81.5131,931.868 84.5131,931.534 87.5,931.5C 88.8909,929.064 88.3909,928.398 86,929.5C 85.443,927.414 86.2764,926.081 88.5,925.5C 89.4742,927.743 89.8076,930.076 89.5,932.5C 90.5,932.5 91.5,932.5 92.5,932.5C 92.3379,930.473 92.5045,928.473 93,926.5C 93.4935,928.134 93.6602,929.801 93.5,931.5C 94.5,931.5 95.5,931.5 96.5,931.5C 96.2308,929.571 96.7308,927.905 98,926.5C 98.0061,929.275 99.1728,931.275 101.5,932.5C 103.418,932.139 103.751,931.472 102.5,930.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#263341\",d:\"M 110.5,925.5 C 114.676,924.831 116.009,926.331 114.5,930C 112.866,930.494 111.199,930.66 109.5,930.5C 109.366,928.708 109.699,927.042 110.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#22274c\",d:\"M 445.5,929.5 C 445.932,930.71 446.599,931.71 447.5,932.5C 447.23,936.153 448.563,937.486 451.5,936.5C 452.938,936.719 454.271,937.219 455.5,938C 455.108,940.354 455.108,942.854 455.5,945.5C 452.753,945.187 450.086,945.52 447.5,946.5C 511.665,947.167 575.665,947.833 639.5,948.5C 447.333,948.833 255.333,948.5 63.5,947.5C 175.502,947.833 287.502,947.5 399.5,946.5C 330.167,945.833 260.833,945.167 191.5,944.5C 196.467,943.671 201.467,943.171 206.5,943C 208.06,940.341 210.393,939.174 213.5,939.5C 213.5,940.833 213.5,942.167 213.5,943.5C 216.85,943.665 220.183,943.498 223.5,943C 225.037,941.89 225.703,940.39 225.5,938.5C 223.278,938.178 221.444,938.845 220,940.5C 218.5,939.333 217,938.167 215.5,937C 218.894,934.017 222.561,933.851 226.5,936.5C 227.852,935.104 229.519,934.437 231.5,934.5C 233.739,935.636 235.406,935.303 236.5,933.5C 239.925,933.915 243.425,934.915 247,936.5C 249.163,935.332 251.163,934.665 253,934.5C 255.19,937.024 256.524,940.024 257,943.5C 257.667,942.167 258.333,942.167 259,943.5C 259.853,941.875 260.853,941.542 262,942.5C 263.077,940.295 263.743,938.295 264,936.5C 265.46,938.422 267.127,939.089 269,938.5C 270.365,934.828 272.365,934.494 275,937.5C 275.273,939.329 276.107,940.829 277.5,942C 276.833,942.333 276.167,942.667 275.5,943C 278.146,943.497 280.813,943.664 283.5,943.5C 283.52,941.857 282.853,940.524 281.5,939.5C 281.977,938.069 282.643,936.736 283.5,935.5C 288.392,937.214 292.892,939.548 297,942.5C 298.627,942.375 300.127,941.875 301.5,941C 300.5,940.667 299.5,940.333 298.5,940C 300.359,939.316 302.026,938.316 303.5,937C 303.167,936.667 302.833,936.333 302.5,936C 307.655,934.587 310.988,936.42 312.5,941.5C 313.842,939.995 315.508,939.328 317.5,939.5C 317.343,940.873 317.51,942.207 318,943.5C 319.319,941.75 319.819,939.75 319.5,937.5C 322.167,937.5 324.833,937.5 327.5,937.5C 327.594,941.243 329.594,943.243 333.5,943.5C 343.418,942.334 353.085,942.334 362.5,943.5C 366.912,943.909 370.912,942.909 374.5,940.5C 375.086,940.709 375.586,941.043 376,941.5C 376.707,939.919 377.54,938.419 378.5,937C 379.549,936.508 380.549,936.674 381.5,937.5C 382.265,936.388 383.265,935.721 384.5,935.5C 386.136,936.749 387.303,938.416 388,940.5C 388.333,939.833 388.667,939.167 389,938.5C 390.53,939.636 391.863,940.636 393,941.5C 394.022,940.646 394.855,939.646 395.5,938.5C 401.037,938.209 406.204,936.876 411,934.5C 414.509,936.17 417.843,937.504 421,938.5C 421.333,937.833 421.667,937.167 422,936.5C 422.741,937.641 423.575,937.641 424.5,936.5C 425.478,936.977 426.311,937.643 427,938.5C 428.333,938.5 429.667,938.5 431,938.5C 431.483,937.552 431.649,936.552 431.5,935.5C 433.973,935.799 436.14,936.799 438,938.5C 440.637,937.899 441.804,936.233 441.5,933.5C 442.5,933.5 443.5,933.5 444.5,933.5C 444.232,931.901 444.566,930.568 445.5,929.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#242847\",d:\"M 500.5,889.5 C 500.833,889.5 501.167,889.5 501.5,889.5C 500.713,894.63 502.046,898.963 505.5,902.5C 503.491,906.772 501.158,911.105 498.5,915.5C 497.675,916.386 496.675,916.719 495.5,916.5C 494.324,920.196 494.99,923.696 497.5,927C 493.755,926.965 493.088,927.965 495.5,930C 493.984,933.435 491.318,935.435 487.5,936C 490.119,936.151 492.453,936.985 494.5,938.5C 495.731,937.349 495.731,936.183 494.5,935C 495.263,934.056 496.263,933.556 497.5,933.5C 498.575,934.699 499.575,935.866 500.5,937C 504.48,937.718 508.146,938.884 511.5,940.5C 511.5,941.5 511.5,942.5 511.5,943.5C 516.741,943.531 521.741,943.865 526.5,944.5C 531.447,943.717 536.447,943.217 541.5,943C 542.864,939.639 543.697,935.806 544,931.5C 544.006,934.275 545.173,936.275 547.5,937.5C 548.713,937.253 549.38,936.586 549.5,935.5C 550.309,937.013 550.476,938.68 550,940.5C 551.011,941.337 552.178,941.67 553.5,941.5C 553.64,939.876 552.973,938.71 551.5,938C 554.353,936.57 557.353,935.737 560.5,935.5C 562.2,935.374 563.7,934.707 565,933.5C 566.908,934.775 568.741,935.108 570.5,934.5C 572.042,935.301 573.708,935.634 575.5,935.5C 576.678,931.452 576.678,927.452 575.5,923.5C 573.883,919.756 575.217,917.756 579.5,917.5C 579.351,916.448 579.517,915.448 580,914.5C 582.842,915.326 585.842,915.66 589,915.5C 590.438,914.1 591.271,912.433 591.5,910.5C 594.833,910.5 598.167,910.5 601.5,910.5C 601.5,911.5 601.5,912.5 601.5,913.5C 598.753,913.187 596.086,913.52 593.5,914.5C 594.256,916.451 594.589,918.284 594.5,920C 592.833,920.333 591.167,920.667 589.5,921C 590.756,921.417 591.423,922.25 591.5,923.5C 590.178,923.33 589.011,923.663 588,924.5C 587.503,927.146 587.336,929.813 587.5,932.5C 586.833,932.167 586.167,931.833 585.5,931.5C 585.5,929.167 585.5,926.833 585.5,924.5C 583.167,924.5 580.833,924.5 578.5,924.5C 578.5,927.167 578.5,929.833 578.5,932.5C 579.833,932.5 581.167,932.5 582.5,932.5C 579.955,933.451 579.955,934.451 582.5,935.5C 590.239,935.838 597.739,935.171 605,933.5C 607.591,936.34 609.425,936.007 610.5,932.5C 613.059,932.802 615.393,932.468 617.5,931.5C 618.807,929.777 618.807,927.943 617.5,926C 618.997,923.793 620.997,923.126 623.5,924C 622.833,924.333 622.167,924.667 621.5,925C 624.35,928.203 624.684,931.536 622.5,935C 624.061,935.941 625.395,937.108 626.5,938.5C 622.39,938.959 618.723,940.459 615.5,943C 618.226,943.182 620.893,943.682 623.5,944.5C 650.167,945.833 676.833,945.833 703.5,944.5C 711.017,941.947 718.517,941.614 726,943.5C 733.008,942.829 740.342,942.829 748,943.5C 750.7,943.609 753.2,943.109 755.5,942C 752.553,941.888 751.22,940.388 751.5,937.5C 755.348,937.311 759.015,937.311 762.5,937.5C 763.328,936.585 764.328,935.919 765.5,935.5C 767.972,936.992 770.639,937.658 773.5,937.5C 773.261,935.533 773.594,933.699 774.5,932C 784.792,931.212 785.125,932.712 775.5,936.5C 778.167,938.5 778.167,940.5 775.5,942.5C 783.021,944.603 790.688,945.77 798.5,946C 846.822,947.361 895.155,947.861 943.5,947.5C 943.5,947.833 943.5,948.167 943.5,948.5C 842.156,948.375 740.823,948.375 639.5,948.5C 575.665,947.833 511.665,947.167 447.5,946.5C 450.086,945.52 452.753,945.187 455.5,945.5C 455.108,942.854 455.108,940.354 455.5,938C 454.271,937.219 452.938,936.719 451.5,936.5C 448.563,937.486 447.23,936.153 447.5,932.5C 448.735,932.279 449.735,931.612 450.5,930.5C 451.854,932.184 453.521,932.684 455.5,932C 454.151,930.365 454.318,928.865 456,927.5C 456.259,930.587 456.759,933.587 457.5,936.5C 457.56,937.043 457.893,937.376 458.5,937.5C 459.797,935.027 459.797,932.693 458.5,930.5C 458.5,928.5 458.5,926.5 458.5,924.5C 455.5,924.5 452.5,924.5 449.5,924.5C 453.061,922.739 456.728,921.073 460.5,919.5C 461.429,920.689 461.762,922.022 461.5,923.5C 463.484,923.617 465.15,922.95 466.5,921.5C 467.919,922.005 468.585,923.005 468.5,924.5C 468.167,924.5 467.833,924.5 467.5,924.5C 466.835,926.369 466.169,928.369 465.5,930.5C 463.717,928.977 463.051,926.977 463.5,924.5C 462.5,924.5 461.5,924.5 460.5,924.5C 460.232,927.119 460.565,929.619 461.5,932C 466.872,931.545 472.206,931.378 477.5,931.5C 478.919,932.451 480.585,932.784 482.5,932.5C 482.263,931.209 482.596,930.209 483.5,929.5C 483.5,930.5 483.5,931.5 483.5,932.5C 485.167,932.5 486.833,932.5 488.5,932.5C 490.099,932.768 491.432,932.434 492.5,931.5C 492.865,929.412 492.865,927.079 492.5,924.5C 490.473,924.662 488.473,924.495 486.5,924C 485.944,923.617 485.611,923.117 485.5,922.5C 485.265,921.903 484.765,921.57 484,921.5C 479.705,923.299 475.205,923.965 470.5,923.5C 470.423,922.25 469.756,921.417 468.5,921C 471.08,918.762 470.913,916.596 468,914.5C 466.989,915.337 465.822,915.67 464.5,915.5C 464.5,914.5 464.5,913.5 464.5,912.5C 462.5,912.5 460.5,912.5 458.5,912.5C 458.5,913.5 458.5,914.5 458.5,915.5C 462.158,916.249 461.824,916.916 457.5,917.5C 452.157,917.413 451.491,915.913 455.5,913C 448.508,912.5 441.508,912.334 434.5,912.5C 434.617,914.484 433.95,916.15 432.5,917.5C 426.862,918.33 421.196,918.83 415.5,919C 413.22,919.212 411.22,920.045 409.5,921.5C 408.713,920.758 408.047,919.925 407.5,919C 404.47,918.712 401.636,918.545 399,918.5C 398.667,919.167 398.333,919.833 398,920.5C 392.694,915.658 389.528,916.658 388.5,923.5C 389.5,923.5 390.5,923.5 391.5,923.5C 389.393,924.468 387.059,924.802 384.5,924.5C 383.141,923.993 382.141,922.993 381.5,921.5C 380.571,922.689 380.238,924.022 380.5,925.5C 380.167,925.5 379.833,925.5 379.5,925.5C 377.451,924.359 375.451,924.359 373.5,925.5C 372.566,924.432 372.232,923.099 372.5,921.5C 371.209,921.263 370.209,921.596 369.5,922.5C 368.365,924.213 366.698,924.88 364.5,924.5C 364.5,923.5 364.5,922.5 364.5,921.5C 363.209,921.263 362.209,921.596 361.5,922.5C 360.167,925.833 360.167,929.167 361.5,932.5C 361.44,933.043 361.107,933.376 360.5,933.5C 359.34,929.541 359.173,925.541 360,921.5C 360.519,920.484 361.353,919.818 362.5,919.5C 366.928,921.052 368.595,919.386 367.5,914.5C 369.144,914.286 370.644,914.62 372,915.5C 372.64,913.735 372.473,912.068 371.5,910.5C 408.313,911.811 444.98,911.811 481.5,910.5C 484.079,909.772 486.746,909.272 489.5,909C 491.899,907.02 493.899,904.853 495.5,902.5C 499.303,899.107 500.969,894.773 500.5,889.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#7d8da6\",d:\"M 458.5,930.5 C 459.797,932.693 459.797,935.027 458.5,937.5C 457.893,937.376 457.56,937.043 457.5,936.5C 458.461,934.735 458.795,932.735 458.5,930.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3b495d\",d:\"M 559.5,922.5 C 560.167,923.167 560.833,923.833 561.5,924.5C 559.701,926.676 559.368,929.01 560.5,931.5C 561.216,929.518 562.383,927.851 564,926.5C 563.502,928.527 563.669,930.527 564.5,932.5C 565.478,932.023 566.311,931.357 567,930.5C 567.497,928.19 567.663,925.857 567.5,923.5C 568.167,923.833 568.833,924.167 569.5,924.5C 567.882,928.102 568.215,931.435 570.5,934.5C 568.741,935.108 566.908,934.775 565,933.5C 563.7,934.707 562.2,935.374 560.5,935.5C 560.389,934.883 560.056,934.383 559.5,934C 560.738,934.077 561.738,933.911 562.5,933.5C 560.235,932.353 557.902,932.186 555.5,933C 556.696,933.654 556.696,934.154 555.5,934.5C 554.261,934.058 553.261,933.391 552.5,932.5C 553.492,932.672 554.158,932.338 554.5,931.5C 555.833,931.5 557.167,931.5 558.5,931.5C 558.5,930.167 558.5,928.833 558.5,927.5C 559.301,925.958 559.634,924.292 559.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5c667c\",d:\"M 492.5,931.5 C 491.432,932.434 490.099,932.768 488.5,932.5C 487.571,931.685 486.571,930.852 485.5,930C 486,929.833 486.5,929.667 487,929.5C 488.567,930.856 490.4,931.523 492.5,931.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#515e72\",d:\"M 482.5,927.5 C 482.833,927.5 483.167,927.5 483.5,927.5C 483.5,928.167 483.5,928.833 483.5,929.5C 482.596,930.209 482.263,931.209 482.5,932.5C 480.585,932.784 478.919,932.451 477.5,931.5C 478.978,931.762 480.311,931.429 481.5,930.5C 480.609,929.41 479.609,929.41 478.5,930.5C 477.289,929.726 477.289,928.893 478.5,928C 479.793,927.51 481.127,927.343 482.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d0dbeb\",d:\"M 467.5,924.5 C 469.193,929.571 470.526,929.571 471.5,924.5C 472.308,926.423 472.808,928.423 473,930.5C 473.9,929.23 475.066,928.23 476.5,927.5C 476.167,926.833 475.833,926.167 475.5,925.5C 477.743,924.526 480.076,924.192 482.5,924.5C 482.5,925.5 482.5,926.5 482.5,927.5C 481.127,927.343 479.793,927.51 478.5,928C 477.289,928.893 477.289,929.726 478.5,930.5C 479.609,929.41 480.609,929.41 481.5,930.5C 480.311,931.429 478.978,931.762 477.5,931.5C 472.206,931.378 466.872,931.545 461.5,932C 460.565,929.619 460.232,927.119 460.5,924.5C 461.5,924.5 462.5,924.5 463.5,924.5C 463.051,926.977 463.717,928.977 465.5,930.5C 466.169,928.369 466.835,926.369 467.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#6a7282\",d:\"M 361.5,922.5 C 361.183,925.572 361.516,928.572 362.5,931.5C 363.176,930.398 363.842,929.398 364.5,928.5C 364.5,929.833 364.5,931.167 364.5,932.5C 363.5,932.5 362.5,932.5 361.5,932.5C 360.167,929.167 360.167,925.833 361.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d6e3ee\",d:\"M 429.5,924.5 C 430.5,924.5 431.5,924.5 432.5,924.5C 434.144,924.286 435.644,924.62 437,925.5C 437.311,927.556 437.811,929.556 438.5,931.5C 435.572,932.484 432.572,932.817 429.5,932.5C 429.043,929.976 429.043,927.309 429.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ccdeec\",d:\"M 418.5,924.5 C 420.582,924.472 422.416,925.139 424,926.5C 424.717,925.956 425.217,925.289 425.5,924.5C 426.376,924.369 427.043,924.702 427.5,925.5C 426.933,927.982 426.266,930.316 425.5,932.5C 424.053,931.378 423.053,929.878 422.5,928C 421.5,927.5 420.5,927 419.5,926.5C 418.012,928.149 417.012,930.149 416.5,932.5C 414.372,923.308 413.706,923.308 414.5,932.5C 407.74,933.512 405.74,930.846 408.5,924.5C 411.833,924.5 415.167,924.5 418.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d9e8f5\",d:\"M 585.5,931.5 C 583.964,929.975 582.964,927.975 582.5,925.5C 581.28,925.887 580.613,926.72 580.5,928C 581.414,929.406 582.08,930.906 582.5,932.5C 581.167,932.5 579.833,932.5 578.5,932.5C 578.5,929.833 578.5,927.167 578.5,924.5C 580.833,924.5 583.167,924.5 585.5,924.5C 585.5,926.833 585.5,929.167 585.5,931.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#39455a\",d:\"M 431.5,927.5 C 432.209,926.596 433.209,926.263 434.5,926.5C 434.5,927.833 434.5,929.167 434.5,930.5C 430.71,930.992 430.044,930.159 432.5,928C 432.272,927.601 431.938,927.435 431.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d7e8f5\",d:\"M 419.5,928.5 C 421.476,929.427 421.809,930.76 420.5,932.5C 419.571,931.311 419.238,929.978 419.5,928.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#556880\",d:\"M 410.5,926.5 C 412.176,927.183 412.843,928.517 412.5,930.5C 411.325,930.719 410.325,930.386 409.5,929.5C 410.127,928.583 410.461,927.583 410.5,926.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cfe2f0\",d:\"M 601.5,923.5 C 603.722,923.178 605.556,923.845 607,925.5C 607.497,927.81 607.663,930.143 607.5,932.5C 603.671,932.073 600.004,932.073 596.5,932.5C 596.5,929.833 596.5,927.167 596.5,924.5C 598.415,924.784 600.081,924.451 601.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#bbcfe2\",d:\"M 591.5,923.5 C 592.5,923.5 593.5,923.5 594.5,923.5C 594.817,926.572 594.484,929.572 593.5,932.5C 591.976,930.517 590.976,928.184 590.5,925.5C 590.062,928.295 589.062,930.628 587.5,932.5C 587.336,929.813 587.503,927.146 588,924.5C 589.011,923.663 590.178,923.33 591.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#ccdce7\",d:\"M 575.5,923.5 C 576.678,927.452 576.678,931.452 575.5,935.5C 573.708,935.634 572.042,935.301 570.5,934.5C 568.215,931.435 567.882,928.102 569.5,924.5C 571.265,923.539 573.265,923.205 575.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#3b4c5c\",d:\"M 571.5,926.5 C 572.693,926.97 573.36,927.97 573.5,929.5C 573.167,930.5 572.833,931.5 572.5,932.5C 571.534,930.604 571.201,928.604 571.5,926.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8a9ca7\",d:\"M 369.5,922.5 C 370.209,921.596 371.209,921.263 372.5,921.5C 372.232,923.099 372.566,924.432 373.5,925.5C 374.588,927 375.921,928.333 377.5,929.5C 376.757,930.182 376.091,930.849 375.5,931.5C 374.732,930.737 374.232,929.737 374,928.5C 373.51,929.793 373.343,931.127 373.5,932.5C 372.209,932.737 371.209,932.404 370.5,931.5C 371.649,931.209 372.316,930.376 372.5,929C 372.456,926.199 371.456,924.032 369.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#475c6f\",d:\"M 599.5,925.5 C 601.167,925.5 602.833,925.5 604.5,925.5C 605.052,927.331 605.052,928.997 604.5,930.5C 603.784,929.689 602.95,929.022 602,928.5C 600.989,928.892 600.489,929.559 600.5,930.5C 599.548,928.955 599.215,927.288 599.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d4e4ee\",d:\"M 567.5,923.5 C 567.663,925.857 567.497,928.19 567,930.5C 566.311,931.357 565.478,932.023 564.5,932.5C 563.669,930.527 563.502,928.527 564,926.5C 562.383,927.851 561.216,929.518 560.5,931.5C 559.368,929.01 559.701,926.676 561.5,924.5C 563.379,923.659 565.379,923.325 567.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#8d9baa\",d:\"M 558.5,927.5 C 558.5,928.833 558.5,930.167 558.5,931.5C 557.167,931.5 555.833,931.5 554.5,931.5C 554.28,928.6 554.946,925.933 556.5,923.5C 556.833,923.833 557.167,924.167 557.5,924.5C 556.907,926.382 556.24,928.215 555.5,930C 555.833,930.167 556.167,930.333 556.5,930.5C 557.176,929.398 557.842,928.398 558.5,927.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#cddfe8\",d:\"M 379.5,925.5 C 379.5,927.833 379.5,930.167 379.5,932.5C 377.901,932.768 376.568,932.434 375.5,931.5C 376.091,930.849 376.757,930.182 377.5,929.5C 375.921,928.333 374.588,927 373.5,925.5C 375.451,924.359 377.451,924.359 379.5,925.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d1dce6\",d:\"M 559.5,922.5 C 559.634,924.292 559.301,925.958 558.5,927.5C 557.842,928.398 557.176,929.398 556.5,930.5C 556.167,930.333 555.833,930.167 555.5,930C 556.24,928.215 556.907,926.382 557.5,924.5C 557.167,924.167 556.833,923.833 556.5,923.5C 554.946,925.933 554.28,928.6 554.5,931.5C 554.158,932.338 553.492,932.672 552.5,932.5C 552.335,928.818 552.501,925.152 553,921.5C 555.552,919.98 557.718,920.313 559.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d3dcea\",d:\"M 485.5,922.5 C 485.611,923.117 485.944,923.617 486.5,924C 488.473,924.495 490.473,924.662 492.5,924.5C 492.865,927.079 492.865,929.412 492.5,931.5C 490.4,931.523 488.567,930.856 487,929.5C 486.5,929.667 486,929.833 485.5,930C 486.571,930.852 487.571,931.685 488.5,932.5C 486.833,932.5 485.167,932.5 483.5,932.5C 483.5,931.5 483.5,930.5 483.5,929.5C 483.5,928.833 483.5,928.167 483.5,927.5C 484.807,926.198 484.807,924.865 483.5,923.5C 483.957,922.702 484.624,922.369 485.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d8e6ef\",d:\"M 442.5,920.5 C 443.873,920.343 445.207,920.51 446.5,921C 446.974,922.729 447.974,923.895 449.5,924.5C 452.5,924.5 455.5,924.5 458.5,924.5C 458.5,926.5 458.5,928.5 458.5,930.5C 458.795,932.735 458.461,934.735 457.5,936.5C 456.759,933.587 456.259,930.587 456,927.5C 454.318,928.865 454.151,930.365 455.5,932C 453.521,932.684 451.854,932.184 450.5,930.5C 449.735,931.612 448.735,932.279 447.5,932.5C 446.599,931.71 445.932,930.71 445.5,929.5C 445.44,928.957 445.107,928.624 444.5,928.5C 443.833,929.833 443.167,931.167 442.5,932.5C 438.595,928.388 438.595,924.388 442.5,920.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#55667b\",d:\"M 425.5,924.5 C 426.705,923.314 428.039,923.314 429.5,924.5C 429.043,927.309 429.043,929.976 429.5,932.5C 427.965,933.354 426.632,933.354 425.5,932.5C 426.266,930.316 426.933,927.982 427.5,925.5C 427.043,924.702 426.376,924.369 425.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#97a0b2\",d:\"M 485.5,922.5 C 484.624,922.369 483.957,922.702 483.5,923.5C 484.807,924.865 484.807,926.198 483.5,927.5C 483.167,927.5 482.833,927.5 482.5,927.5C 482.5,926.5 482.5,925.5 482.5,924.5C 480.076,924.192 477.743,924.526 475.5,925.5C 475.833,926.167 476.167,926.833 476.5,927.5C 475.066,928.23 473.9,929.23 473,930.5C 472.808,928.423 472.308,926.423 471.5,924.5C 470.526,929.571 469.193,929.571 467.5,924.5C 467.833,924.5 468.167,924.5 468.5,924.5C 469.167,924.167 469.833,923.833 470.5,923.5C 475.205,923.965 479.705,923.299 484,921.5C 484.765,921.57 485.265,921.903 485.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5e686d\",d:\"M 442.5,923.5 C 444.337,923.639 444.67,924.306 443.5,925.5C 442.702,925.043 442.369,924.376 442.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#becfde\",d:\"M 407.5,923.5 C 406.21,926.202 405.21,929.036 404.5,932C 402.138,931.496 399.805,931.663 397.5,932.5C 396.328,932.081 395.328,931.415 394.5,930.5C 393.476,931.853 392.143,932.52 390.5,932.5C 390.167,924.5 389.833,924.5 389.5,932.5C 388.167,932.5 386.833,932.5 385.5,932.5C 385.785,930.712 385.452,929.045 384.5,927.5C 383.999,929.655 382.999,931.322 381.5,932.5C 381.5,930.167 381.5,927.833 381.5,925.5C 382.791,925.737 383.791,925.404 384.5,924.5C 387.059,924.802 389.393,924.468 391.5,923.5C 391.281,922.325 391.614,921.325 392.5,920.5C 393.167,921.833 393.833,923.167 394.5,924.5C 398.765,923.561 403.098,923.228 407.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#d5e3e9\",d:\"M 369.5,922.5 C 371.456,924.032 372.456,926.199 372.5,929C 372.316,930.376 371.649,931.209 370.5,931.5C 369.698,930.048 369.198,928.382 369,926.5C 368.798,928.256 368.298,929.922 367.5,931.5C 366.712,930.23 365.712,929.23 364.5,928.5C 363.842,929.398 363.176,930.398 362.5,931.5C 361.516,928.572 361.183,925.572 361.5,922.5C 362.209,921.596 363.209,921.263 364.5,921.5C 364.5,922.5 364.5,923.5 364.5,924.5C 366.698,924.88 368.365,924.213 369.5,922.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#73869d\",d:\"M 384.5,924.5 C 383.791,925.404 382.791,925.737 381.5,925.5C 381.5,927.833 381.5,930.167 381.5,932.5C 380.532,930.393 380.198,928.059 380.5,925.5C 380.238,924.022 380.571,922.689 381.5,921.5C 382.141,922.993 383.141,923.993 384.5,924.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#1d2349\",d:\"M 470.5,923.5 C 469.833,923.833 469.167,924.167 468.5,924.5C 468.585,923.005 467.919,922.005 466.5,921.5C 465.15,922.95 463.484,923.617 461.5,923.5C 461.762,922.022 461.429,920.689 460.5,919.5C 456.728,921.073 453.061,922.739 449.5,924.5C 447.974,923.895 446.974,922.729 446.5,921C 445.207,920.51 443.873,920.343 442.5,920.5C 441.842,919.602 441.176,918.602 440.5,917.5C 439.614,918.325 439.281,919.325 439.5,920.5C 436.318,920.584 433.985,921.917 432.5,924.5C 431.5,924.5 430.5,924.5 429.5,924.5C 428.039,923.314 426.705,923.314 425.5,924.5C 425.217,925.289 424.717,925.956 424,926.5C 422.416,925.139 420.582,924.472 418.5,924.5C 415.038,923.518 411.371,923.185 407.5,923.5C 403.098,923.228 398.765,923.561 394.5,924.5C 393.833,923.167 393.167,921.833 392.5,920.5C 391.614,921.325 391.281,922.325 391.5,923.5C 390.5,923.5 389.5,923.5 388.5,923.5C 389.528,916.658 392.694,915.658 398,920.5C 398.333,919.833 398.667,919.167 399,918.5C 401.636,918.545 404.47,918.712 407.5,919C 408.047,919.925 408.713,920.758 409.5,921.5C 411.22,920.045 413.22,919.212 415.5,919C 421.196,918.83 426.862,918.33 432.5,917.5C 433.95,916.15 434.617,914.484 434.5,912.5C 441.508,912.334 448.508,912.5 455.5,913C 451.491,915.913 452.157,917.413 457.5,917.5C 461.824,916.916 462.158,916.249 458.5,915.5C 458.5,914.5 458.5,913.5 458.5,912.5C 460.5,912.5 462.5,912.5 464.5,912.5C 464.5,913.5 464.5,914.5 464.5,915.5C 465.822,915.67 466.989,915.337 468,914.5C 470.913,916.596 471.08,918.762 468.5,921C 469.756,921.417 470.423,922.25 470.5,923.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#072b5e\",d:\"M 55.5,947.5 C 58.005,946.503 60.6717,946.503 63.5,947.5C 255.333,948.5 447.333,948.833 639.5,948.5C 740.823,948.375 842.156,948.375 943.5,948.5C 943.5,948.833 943.5,949.167 943.5,949.5C 650.178,950.494 356.844,950.827 63.5,950.5C 60.8203,949.715 58.1536,948.715 55.5,947.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5dadf2\",d:\"M 943.5,949.5 C 939.733,950.795 935.733,951.461 931.5,951.5C 642,951.833 352.666,951.5 63.5,950.5C 356.844,950.827 650.178,950.494 943.5,949.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#4ebcfc\",d:\"M 51.5,946.5 C 52.9587,946.433 54.2921,946.766 55.5,947.5C 58.1536,948.715 60.8203,949.715 63.5,950.5C 352.666,951.5 642,951.833 931.5,951.5C 932.263,952.268 933.263,952.768 934.5,953C 931.7,954.232 928.7,954.899 925.5,955C 916.907,955.275 908.407,955.108 900,954.5C 898.033,954.542 896.199,955.042 894.5,956C 898.039,956.282 901.539,956.782 905,957.5C 915.435,957.112 925.935,956.945 936.5,957C 939.766,957.813 940.266,959.646 938,962.5C 937.25,963.126 936.416,963.626 935.5,964C 649.407,964.267 364.907,964.434 82,964.5C 77.8465,963.279 73.6798,961.612 69.5,959.5C 63.3825,959.502 63.3825,960.835 69.5,963.5C 68.3984,964.176 67.3984,964.842 66.5,965.5C 63.9162,964.952 62.9162,963.285 63.5,960.5C 62.448,960.649 61.448,960.483 60.5,960C 58.5837,957.91 56.5837,956.077 54.5,954.5C 52.9402,952.046 51.9402,949.38 51.5,946.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#5bc8fd\",d:\"M 979.5,921.5 C 980.202,924.202 980.202,926.036 979.5,927C 981.387,927.163 982.887,926.329 984,924.5C 985.762,928.866 988.429,929.533 992,926.5C 993.236,927.399 994.07,928.566 994.5,930C 993.011,932.493 991.177,934.66 989,936.5C 986.978,935.009 985.312,935.342 984,937.5C 983.517,936.552 983.351,935.552 983.5,934.5C 979.162,934.622 978.828,934.955 982.5,935.5C 981.737,938.141 981.57,940.808 982,943.5C 982.333,943.833 982.667,944.167 983,944.5C 983.333,943.5 983.667,942.5 984,941.5C 984.569,944.464 983.902,947.13 982,949.5C 981.692,948.692 981.192,948.025 980.5,947.5C 979.738,948.628 979.071,949.795 978.5,951C 976.117,951.065 975.45,951.898 976.5,953.5C 975.689,954.216 975.022,955.05 974.5,956C 975.287,958.621 976.954,960.454 979.5,961.5C 976.672,962.996 975.006,965.329 974.5,968.5C 971.505,969.664 968.505,970.83 965.5,972C 964.748,972.671 964.414,973.504 964.5,974.5C 962.784,974.629 961.117,974.962 959.5,975.5C 667.833,975.667 376.166,975.5 84.5,975C 77.3567,972.568 71.3567,969.402 66.5,965.5C 67.3984,964.842 68.3984,964.176 69.5,963.5C 63.3825,960.835 63.3825,959.502 69.5,959.5C 73.6798,961.612 77.8465,963.279 82,964.5C 364.907,964.434 649.407,964.267 935.5,964C 936.416,963.626 937.25,963.126 938,962.5C 940.266,959.646 939.766,957.813 936.5,957C 925.935,956.945 915.435,957.112 905,957.5C 901.539,956.782 898.039,956.282 894.5,956C 896.199,955.042 898.033,954.542 900,954.5C 908.407,955.108 916.907,955.275 925.5,955C 928.7,954.899 931.7,954.232 934.5,953C 933.263,952.768 932.263,952.268 931.5,951.5C 935.733,951.461 939.733,950.795 943.5,949.5C 959.694,945.42 971.694,936.087 979.5,921.5 Z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{opacity:1},fill:\"#65c8f4\",d:\"M 54.5,954.5 C 56.5837,956.077 58.5837,957.91 60.5,960C 61.448,960.483 62.448,960.649 63.5,960.5C 62.9162,963.285 63.9162,964.952 66.5,965.5C 71.3567,969.402 77.3567,972.568 84.5,975C 376.166,975.5 667.833,975.667 959.5,975.5C 959.082,976.222 958.416,976.722 957.5,977C 668.167,977.5 378.834,977.667 89.5,977.5C 84.096,976.315 78.7627,974.815 73.5,973C 70.7511,970.577 67.7511,968.577 64.5,967C 60.3169,963.441 56.9835,959.275 54.5,954.5 Z\"})));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgLogo);export default __webpack_public_path__+\"static/media/logo.461bacdf51985f988bf9682a71ae673a.svg\";export{ForwardRef as ReactComponent};","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["Scheduler","require","React","ReactDOM","formatProdErrorMessage","code","url","arguments","length","encodeURIComponent","i","isValidContainer","node","nodeType","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","REACT_CLIENT_REFERENCE","getComponentNameFromType","type","$$typeof","displayName","name","_context","innerType","render","_payload","_init","x","prefix","suffix","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","assign","Object","describeBuiltInComponentFrame","Error","match","stack","trim","indexOf","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","defineProperty","prototype","set","Reflect","control","call","x$0","x$1","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","value","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","fiber","tag","getStackByFiberInDevAndProd","workInProgress","info","return","message","getNearestMountedFiber","nearestMounted","alternate","flags","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","findCurrentHostFiberImpl","child","sibling","isArrayImpl","Array","isArray","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sharedNotPendingObject","pending","data","method","action","valueStack","index","createCursor","defaultValue","current","pop","cursor","push","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","documentElement","namespaceURI","getOwnHostContext","parentNode","tagName","getChildHostContextProd","popHostContainer","pushHostContext","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","hasOwnProperty","scheduleCallback$3","unstable_scheduleCallback","cancelCallback$1","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority$1","unstable_NormalPriority","LowPriority","unstable_LowPriority","IdlePriority","unstable_IdlePriority","log$1","log","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","err","clz32","Math","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","finishedLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","currentTime","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","entanglements","markRootEntangled","rootEntangledLanes","index$8","lanesToEventPriority","resolveUpdatePriority","updatePriority","p","window","event","getEventPriority","randomKey","random","toString","slice","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","canUseDOM","document","createElement","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","setValueForAttribute","attributeName","test","removeAttribute","prefix$10","toLowerCase","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","this","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","ch","charCodeAt","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","options","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","textContent","setTextContent","text","firstChild","lastChild","nodeValue","unitlessNumbers","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","props","a","querySelectorAll","otherNode","form","otherProps","isInsideEventHandler","batchedUpdates$1","b","flushSyncWork$1","getListener","passiveBrowserEventsSupported","addEventListener","removeEventListener","startText","fallbackText","getData","start","end","startValue","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","SyntheticKeyboardEvent","key","String","fromCharCode","location","repeat","locale","which","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","propertyName","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticToggleEvent","newState","oldState","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","listeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$283","isSupported$jscomp$inline_418","element$jscomp$inline_419","oninput","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","objectIs","is","y","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","href","hasSelectionCapabilities","contentEditable","restoreSelection","priorSelectionInformation","curFocusedElem","focusedElem","priorSelectionRange","selectionRange","selectionStart","selectionEnd","min","getSelection","extend","endMarker","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","skipSelectionChangeEvent","activeElementInst","lastSelection","mouseDown","constructSelectEvent","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","animation","transition","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","update","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","parent","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","CapturedStacks","WeakMap","createCapturedValueAtFiber","source","existing","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","memoizedProps","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldClear","shouldSetTextContent","getNextHydratable","resetHydrationState","error","SuspenseException","SuspenseyCommitException","noopSuspenseyCommitThenable","then","isThenableResolved","thenable","status","noop$3","trackUsedThenable","thenableState","reason","workInProgressRoot","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","thenableState$1","thenableIndexCounter$1","unwrapThenable","coerceRef","ref","throwOnInvalidObjectType","returnFiber","newChild","join","resolveLazy","lazyType","init","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","pendingProps","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","createFiberFromText","mode","updateElement","elementType","updateFragment","createFiberFromTypeAndProps","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","readContextDuringReconciliation","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","forEach","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","createFiberImplClass","reconcileChildFibers","mountChildFibers","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","baseLanes","reuseHiddenContextOnStack","popHiddenContext","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","state","revealOrder","AbortControllerLocal","AbortController","signal","aborted","listener","abort","scheduleCallback$2","NormalPriority","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","controller","refCount","releaseCache","cache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","pingEngtangledActionScope","prevOnStartTransitionFinish","S","entangledListeners","requestTransitionLane","resolve","entangleAsyncAction","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","Component","secondArg","nextRenderLanes","updateQueue","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","checkIfContextChanged","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseState","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","readContext","useMemoCache","size","map","array","basicStateReducer","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","pendingQueue","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$54","workInProgressRootRenderLanes","revertLane","hasEagerState","eagerState","workInProgressRootSkippedLanes","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffect","subscribeToStore","bind","pushEffect","updateStoreInstance","destroy","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","nextValue","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","payload","isRenderPhaseUpdate","actionNode","isTransition","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","handleActionReturnValue","onActionError","error$60","nextState","onActionSuccess","notifyActionListeners","last","actionStateReducer","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionQueueHook","actionStateActionEffect","rerenderActionState","create","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","updateEffectImpl","mountEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","refCleanup","updateImperativeHandle","concat","mountDebugValue","updateCallback","callback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","dispatchSetStateInternal","result","thenableWithOverride","chainThenableValue","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$63","enqueueUpdate","createUpdate","entangleTransitions","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","queueLanes","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useCacheRefresh","useFormState","useActionState","useOptimistic","initialArg","identifierPrefix","booleanOrThenable","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","classComponentUpdater","isMounted","component","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","resolveClassComponentProps","baseProps","defaultProps","propName$67","reportGlobalError","reportError","ErrorEvent","dispatchEvent","process","emit","console","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$68","setTimeout","logCaughtError","boundary","onCaughtError","errorBoundary","e$69","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","prepareToReadContext","bailoutOnAlreadyFinishedWork","updateMemoComponent","shouldConstruct","compare","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","nextIsDetached","_pendingVisibility","markRef","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","propagateParentContextChanges","replayFunctionComponent","updateClassComponent","contextType","updater","refs","initializeUpdateQueue","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","processUpdateQueue","suspendIfUpdateReadFromEntangledAsyncAction","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","hasForceUpdate","cloneUpdateQueue","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","id","overflow","fallback","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","renderDidSuspendDelayIfPossible","retryDehydratedSuspenseBoundary","_reactRetry","subtreeFlags","primaryChildren","offscreenProps","createFiberFromOffscreen","scheduleSuspenseWorkOnFiber","propagationRoot","scheduleContextWorkOnParentPath","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","pushProvider","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","propagateContextChanges","isDehydrated","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","rel","crossOrigin","title","src","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","valueCursor","currentlyRenderingFiber","lastContextDependency","providerFiber","popProvider","contexts","forcePropagateEntireTree","list","nextFiber","firstContext","dependency","isInsidePropagationBailout","currentParent","currentDependencies","memoizedValue","readContextForConsumer","consumer","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","executionContext","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","workInProgress$jscomp$0","instance$jscomp$0","lastPendingUpdate","firstPendingUpdate","isHiddenUpdate","callCallback","commitCallbacks","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$112","commitHostMount","autoFocus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$203","propKey$219","propKey$224","propKey$229","setPropOnCustomElement","propKey$234","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","appendChild","_reactRootContainer","insertOrAppendPlacementNode","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","WeakSet","nextEffect","shouldFireAfterActiveInstanceBlur","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$111","commitSuspenseHydrationCallbacks","prevOffscreenSubtreeIsHidden","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","removeChild","prevHostParent","prevHostParentIsContainer","attributes","removeAttributeNode","prevHostParentIsContainer$119","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","_retryCache","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","content","property","httpEquiv","charSet","mountHoistable","acquireResource","nextNode","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","_current","recursivelyTraverseDisappearLayoutEffects","display","retryQueue","parent$jscomp$0","parent$113","parent$115","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","resource","suspendedState","media","matchMedia","matches","loading","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","FiberNode","isReactComponent","resetWorkInProgress","owner","fiberTag","hostContext","itemProp","precedence","onLoad","onError","async","isHostHoistableType","elements","primaryChildInstance","_pendingMarkers","_transitions","detach","attach","pendingChildren","markUpdate","preloadResourceAndSuspendIfNeeded","preloadResource","scheduleRetryEffect","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$131","bubbleProperties","completedWork","didBailout","newChildLanes","child$132","completeWork","pendingContext","queueRecoverableErrors","createElementNS","innerHTML","createTextNode","cache$144","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","DefaultAsyncDispatcher","getCacheForType","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","workInProgressRootDidIncludeRecursiveRenderUpdate","Infinity","workInProgressTransitions","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveEffectsRemainingLanes","pendingPassiveTransitions","suspenseHandler","cancelPendingCommit","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","thrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrent","thrownValue$166","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","wasRootDehydrated","timeoutHandle","scheduleTimeout","commitRootWhenReady","errors","apply","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","clearTimeout","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","expirationTimes","index$6","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$4","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$164","performUnitOfWork","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","previousUpdateLanePriority","renderPriorityLevel","flushPassiveEffects","callbackNode","callbackPriority","remainingLanes","previouslyPendingLanes","index$7","hiddenUpdatesForLane","markRootFinished","priorityLevel","scheduleCallback$1","eventsEnabled","_enabled","selection","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","releaseRootPooledCache","onCommitFiberRoot","onCommitRoot","onRecoverableError","commitRootImpl","root$170","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","cb","processRootScheduleInMicrotask","scheduleMicrotask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$172","performSyncWorkOnRoot","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$5","expirationTime","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","i$jscomp$inline_1439","eventName$jscomp$inline_1440","toUpperCase","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","parentWindow","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","eventType","getNativeBeforeInputChars","char","getFallbackBeforeInputChars","maybeTargetInst","formAction","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","endsWith","hasSrc","hasSrcSet","propValue$186","parentNamespace","dangerouslySetInnerHTML","localPromise","queueMicrotask","handleErrorInNextTick","parentInstance","suspenseInstance","depth","targetInstance","previousSibling","rootContainerInstance","preconnectsSet","getRootNode","previousDispatcher","d","f","previousWasRendering","wasRendering","r","formInst","D","preconnectAs","C","L","as","globalDocument","preloadSelector","imageSrcSet","imageSizes","getScriptKey","getScriptSelectorFromKey","m","X","scripts","adoptPreloadPropsForScript","link","insertStylesheet","M","limitedEscapedHref","currentProps","preloadProps","styles$242","resource$243","integrity","hrefLang","referrerPolicy","rawProps","styleProps","instance$248","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedExplicitHydrationTargets","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1686","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$2","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2165","bundleType","rendererPackageName","currentDispatcherRef","findFiberByHostInstance","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2166","isDisabled","supportsFiber","inject","exports","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","module","ReactNoopUpdateQueue","emptyObject","ComponentDummy","PureComponent","partialState","forceUpdate","pureComponentPrototype","ReactElement","self","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","escape","mapIntoArray","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","nextNamePrefix","resolveThenable","mapChildren","func","lazyInitializer","_status","_result","moduleObject","default","Children","forEachFunc","forEachContext","n","toArray","only","Fragment","Profiler","StrictMode","Suspense","act","cloneElement","config","childArray","createContext","childrenLength","createRef","forwardRef","lazy","memo","scope","unstable_useCacheRefresh","permalink","Context","checkDCE","Internals","getCrossOriginStringAs","input","createPortal","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","prefetchDNS","preinit","fetchPriority","nonce","preinitModule","preloadModule","requestFormReset","unstable_batchedUpdates","useFormStatus","jsxProd","maybeKey","jsx","jsxs","heap","parentIndex","peek","first","halfLength","leftIndex","rightIndex","right","diff","sortIndex","performance","localPerformance","localDate","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","localClearTimeout","localSetImmediate","setImmediate","advanceTimers","timer","startTime","handleTimeout","requestHostCallback","firstTimer","requestHostTimeout","schedulePerformWorkUntilDeadline","isMessageLoopRunning","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_Profiling","task","unstable_continueExecution","unstable_forceFrameRate","fps","floor","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_runWithPriority","delay","timeout","unstable_wrapCallback","parentPriorityLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","chunkId","all","reduce","promises","u","miniCssF","obj","prop","inProgress","dataWebpackPrefix","l","script","needAttach","s","charset","nc","onScriptComplete","doneFns","toStringTag","installedChunks","j","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","_jsx","className","_jsxs","logo","alt","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","App","reportWebVitals"],"sourceRoot":""}